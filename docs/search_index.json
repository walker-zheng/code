{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["1.1.1.","1.1.2.","10","16:15:43","2017","copyright","flaunt","freaki","gitbook最近修改:","it,","it.","mykulou@gmail.com","reserved，pow","right","sexi","walker.zheng","©","吾日三省吾身","子","工作日志","目录","目录1.1.1.","简介"],"SUMMARY.html":["1.2.1.","10","16","17:16:38","2017","code","copyright","cpp","cpp11","cpp14","cpp17","cppcoreguidelin","faq","featur","gif图","git","gitbook最近修改:","google_c++_sytle_guid","guidelin","idiom","iptv","markdown","modern","python速查","reserved，pow","right","sourcetre","summari","summary1.2.1.","tip","usefull_c++_idiom","walker.zheng","work","©","一天学会","图解","工作截图","工具","目录","简介","计划","配置"],"code.html":["!=","\".\";","%","%}","&","'","');","(!(values.size()","(!prefix.empty())","((*elem).is_array())","((*elem).is_boolean())","((*elem).is_number())","((*elem).is_object())","((*elem).is_string())","(auto","(boolean)","(const","(count","(int(*)(int))std::tolower);","(int(*)(int))std::toupper);","(std::getline(ss,","(value.is_object())","+","++elem)","+=","//","0","0;","1","1.3.1.","1.3.1.1.","1.3.2.","1.3.2.1.","1.3.2.2.","1.3.2.3.","1.3.2.4.","1.3.2.5.","1.3.2.6.","1.3.2.7.","10","16:05:16","2))","2017",":","=","==","[","](int","args.push_back(\"false\");","args.push_back(\"true\");","args.push_back(elem.value());","args.push_back(prefix","args.push_back(std::to_string(num));","args;","array\");","auto","boolean","c)","c;","ch","ch)","char","code","const","copyright","count++;","count{","data)","data.end(),","data;","delim)","delim))","elem","elem.key());","elem.value();","elems.push_back(item);","elems;","endraw","from_json(const","from_redi","from_redis(std::vector","from_redis1.3.2.3.","gitbook最近修改:","hmset/hgetall(非数组)","hmset/hgetall(非数组)1.3.2.1.","int64_t","item,","item;","j","j,","j.at(\"address\").get();","j.at(\"age\").get();","j.at(\"name\").get();","join","join(const","join1.3.2.6.","json","json&","json{","keyvalu","keyvalue.end(),","logger.error(u8\"to_redi","namespac","nlohmann::json","nlohmann::json;","ns","num","p)","p.address","p.address},","p.age","p.age}","p.name","p.name},","person&","pref)","pref;","prefix","raw","redi","reserved，pow","return","right","s)","s,","s.end(),","s.rend(),","s.size())","size_t","split","split(const","split1.3.1.","ss(s);","std::back_inserter(args));","std::copy(keyvalue.begin(),","std::find_if(s.rbegin(),","std::find_if_not(s.rbegin(),","std::list","std::string","std::string(s.begin(),","std::string(std::find_if_not(s.begin(),","std::stringstream","std::transform(data.begin(),","std::vector","str","str;","tmp","tmp(data);","tmp.begin(),","tmp;","to_json(json&","to_low","to_lower1.3.2.4.","to_redi","to_redis(*elem,","to_redis(nlohmann::json","to_redis1.3.2.2.","to_upp","to_upper1.3.2.5.","token)","token;","tolower(const","toupper(const","trim","trim(const","trim(s,","trim1.3.2.7.","trimdir(const","us","value,","value.begin();","value.end();","values)","void","walker.zheng","{","{\"address\",","{\"age\",","{\"name\",","{%","{return","}","}),","}).base());","};","©","不支持","代码片段","代码片段1.3.1.1.","例子","例子1.3.2.","转换"],"CPP11.html":["!=","\"\"","\"1.2\"","\"123\"","\"123\"_int;","\"brace","\"error\";","\"fran","\"john","\"no\");","\"nyi\"","\"nyi\");","\"x","&","&&","&b]","'a'","'final'","'foo'","()","(a);","(auto&","(b);","(but","(either","(int","(int&","(local","(non","(p1)","(perform","(see","(which","*","*=","*this;","+","+=","...","...;","//","0","0);","0,","0;","0xff","0xff00,","0xff0000,","0};","1","1);","1,","1.4.1.","1.4.1.1.","1.4.1.2.","1.4.1.2.1.","1.4.1.2.10.","1.4.1.2.11.","1.4.1.2.12.","1.4.1.2.13.","1.4.1.2.14.","1.4.1.2.15.","1.4.1.2.16.","1.4.1.2.17.","1.4.1.2.18.","1.4.1.2.19.","1.4.1.2.2.","1.4.1.2.20.","1.4.1.2.21.","1.4.1.2.22.","1.4.1.2.23.","1.4.1.2.24.","1.4.1.2.25.","1.4.1.2.26.","1.4.1.2.3.","1.4.1.2.4.","1.4.1.2.5.","1.4.1.2.6.","1.4.1.2.7.","1.4.1.2.8.","1.4.1.2.9.","1.4.1.3.","1.4.1.3.1.","1.4.1.3.10.","1.4.1.3.11.","1.4.1.3.12.","1.4.1.3.2.","1.4.1.3.3.","1.4.1.3.4.","1.4.1.3.5.","1.4.1.3.6.","1.4.1.3.7.","1.4.1.3.8.","1.4.1.3.9.","1.4.1.4.","1.4.1.5.","1.4.1.6.","1.4.1.7.","1.5);","1.61;","1.8","10","123","123,","123;","16","16:37:45","1;","2","2);","2,","2.0);","2017","24_celsius;","2;","3","3);","3,","3.0","3.14;","32);","3;","3};","4","4,","4],","5","51","6","6,","75","8,","8],",":","=","==","=>",">",">bar();","[&]","[&]()","[&x]","[=]","[=](int","[=]{","[[","[]","[a,","[rbp","[this]","[x]","]]","__attribute__(...),","__declspec,","_celsius(unsign","_int(const","`a`","`al2`","`al`","`alert`","`ar`","`c`","`color`","`const","`decltype((a))`","`decltype(123)`","`decltype(3.0)`","`decltype(a)`","`decltype(c)`","`decltype(f)","`decltype(x","`double`","`f`","`foo`","`int&&`","`int&`","`int`","`l`","`m`","`noreturn`","`o`","`p1`","`p2`","`playerprofile`","`red`/`green`","`std::size_t`","`std::tuple`.","`t`...","`unsign","`x`","`xl`","`xr2`","`y`","a&","a&&.","a&)","a()","a(1.1);","a(a&&","a(const","a(int","a(int)","a(int,","a(std::initializer_list)","a)","a.","a.end());","a.x","a1","a2","a2{","a3","a::a(int,","a::a(std::initializer_list)","a::bar","a::baz","a::foo","a::oper","a;","abil","abov","accept","accept,","access","accord","achiev","acknowledg","acknowledgements1.4.1.5.","ad","add","add(1,","add(1.5,","add(x","addx","addx(1);","age(0)","age;","age{0};","al","al2","alert","alias","aliases1.4.1.2.10.","alloc","allocations.","allow","also:","ambigu","angl","anoth","another.","anthoni","appropriate,","appropriate.","ar","aren't","arg)","argument","arguments.","ariti","array","array.","assert","assertions1.4.1.2.6.","assign","atom","attribut","attributes1.4.1.2.13.","author","author1.4.1.6.","auto","auto&","auto&&","auto(123);","auto.","auto1.4.1.2.7.","averag","avoid","a{","a{0,","a{};","b","b()","b(0,","b,","b::b","b::baz","b::foo","b::oper","b;","ba","bar()","bar();","bar(p1);","bar(std::shared_ptr","base","baz()","baz(p1);","baz(std::shared_ptr","bb","becom","benchmark","between","bind","block","blue","body.","book!","bool","bool()","bool.","both","brace","bracket","brackets1.4.1.3.","buckets.","built","b{1.1};","b{};","c","c'","c()","c++","c++,","c++11","c++11'","c++11,","c++111.4.1.1.","c++17,","c++17.","c.x","calandra","call","capabl","captur","carri","case","cast","celsiu","certain","chang","char*","char*`","chrono","cit","clang","class","classes:","clean","clocks,","close","code","code:","collect","color","color::red;","come","common","compar","compat","compil","complex","complex(doubl","complexity,","complic","compon","comput","computations...","condit","conflict","consid","const","const.","constant","constexpr","constexpr1.4.1.2.14.","construct","constructor","constructor.","constructor:","constructors.","constructors1.4.1.2.15.","constructors1.4.1.2.23.","contain","container'","containers.","containers1.4.1.3.11.","containers:","content","contributor","contributors1.4.1.7.","control","convers","conversion:","conversions,","convert","copi","copy.","copyable,","copying.","copyright","correct","counter.","cpp","cpp11","cpp11longtypedef;","cpp98longtypedef;","cpprefer","creat","cv","c{};","d","danger","data","data,","deal","declar","declared,","decltyp","decltype((a))","decltype(123)","decltype(a)","decltype(auto)?","decltype(c)","decltype(f)","decltype(x","decltype)","decltype1.4.1.2.9.","decltype:","deduc","deduct","deduction:","default","default,","default;","defin","definit","deleg","delet","delete;","depend","deprec","derefer","deriv","descript","design","destin","destroy","differ","document","doesn't","don't","doubl","double,","double.","due","durations,","dword","d{0,","e","e.g","e;","eas","easier","eax","edi,","effect","effici","elapsed_second","elapsed_seconds.count();","elegant,","element","elements.","empty).","enabl","end","end;","enum","enums1.4.1.2.12.","error","error.","error:","especi","etc.","evalu","even","eventu","exampl","example,","examples.","except","expand","expens","explain","explicit","explicitly,","explor","express","expression.","expressions1.4.1.2.8.","extend","extrem","f","f()","f(*p2);","f(a","f(a{});","f1","f2","f3","factories.","fahrenheit:","featur","features.","features/graphs/contributor","features1.4.1.2.1.","features1.4.1.3.1.","features:","few","final","final;","find","first","firstvers","fix","fix,","flags,","follow","foo","foo()","foo();","foo(0)","foo(char*)","foo(char*);","foo(foo)","foo(int","foo(int);","foo(null);","foo(nullptr);","foo(p1);","foo(std::shared_ptr","foo)","foo.foo;","foo;","foo{}","foo{};","forgetting...","forward","forward(typenam","forwarding,","four","free","from.","function","function,","function.","function_that_throws(),","functions,","functions1.4.1.2.19.","functions1.4.1.2.20.","functions1.4.1.2.24.","futures,","g","g;","gcc'","gener","get","getversion()","getx","getx();","getxref","getxref();","gitbook最近修改:","given","goe","great","green","h","hash","have","heap","held","held,","help","helper","here","here.","heterogen","highli","hold","hold.","however,","https://github.com/anthonycalandra/modern","human","human()","i'm","i(0,","i)","ignor","im(i)","im;","imag()","implement","implicit","implicitli","inabl","includ","including:","indic","inexpens","infer","inform","inherit","inheritance:","initi","initializations.","initializer.","initializers1.4.1.2.26.","inlin","insert,","insid","instanc","instead.","instead:","int","int&","int&&","int&:","int&`","int)","int*","int,","int>::valu","int`","integ","integers,","integr","interfac","introduc","introduct","invoked.","is,","is.","isfirstversion()","it'","it.","iter","itself","j","jason","k","keyword","l","lambda","languag","language/librari","later.","leak","leav","librari","licens","license1.4.1.","lightweight","limit","list","list\"","list)","list.","list;","lists1.4.1.2.5.","lists:","liter","literal,","literal.","literals1.4.1.2.16.","loads/stores,","local","locat","locks,","long","long`","loop","loops1.4.1.2.21.","lvalu","lvalues/rvalu","m","macro.","made","made,","maintain","major","make","manag","mani","manipul","mark","mean","meant","member","memori","memory.","method","meyers'","mit","model","model1.4.1.4.","modern","modifi","more","mostli","mov","movabl","move","move(t&&","moved,","moves.","multipl","mutabl","n","name","namespac","namespace,","namespaces,","namespaces1.4.1.2.25.","narrow","narrowing:","need","new","nice","nielsen\"","nielsen\",","no)","no;","non","noreturn","note","note:","noth","nothing.","notic","now","null","null,","nullptr","nullptr1.4.1.2.11.","number","numer","o)","o;","object","object'","object,","object.","object;","object?","objects.","of,","ok","ok:","old","oldvers","on","on.","on...","on:","one.","oper","operations.","operator.","operator=","operator=(a&&","operator=(const","oppos","optimization:","option","order","origin","out","over","overhead","overrid","overridden","override;","overrides1.4.1.2.17.","overview","overview1.4.1.2.","own","owners.","ownership","p1","p1;","p1{","p2","p3","pack","pages.","pairs...","paramet","parameters)","parameters,","parameters.","parent","parent'","part","pass","perfect","perform","perhap","place","placehold","plain","playername,","playername;","playerprofil","pointer","pointer.","pointers1.4.1.3.6.","pointers:","points.","pollution.","possibl","post","potenti","power","prefer","present","prevent","prior","private:","problem","process","program","promises,","properli","properti","property,","propos","provid","ptr","public:","qualification.","queri","r,","radic","rang","re(r),","re;","read","readability,","real()","reasons:","recommend","red","red,","redund","refer","reference.","references,","references.","references1.4.1.2.3.","relat","remain","remov","remove_reference::type&","remove_reference::type&&","repetit","replac","repres","requir","reserv","reserved，pow","resourc","return","return.","right","rule","rvalu","rvalue)","rvalue):","rvalue,","rvalues:","s","s(\"test\")","s(o.s)","s(std::move(o.s))","s;","sacrific","safe","safe,","safe.","safety.","safety:foo(std::make_shared(),","same","scope","scope.","scott","search,","seconds,","section","section),","see","see:","select","semant","semantics,","semantics.","semantics1.4.1.2.2.","semantics1.4.1.2.22.","semantics;","sequenc","seri","set","shall","share","side","similar","situations.","size","sizeof...(t);","smart","smart(er)","so:","so:foo(std::shared_ptr{","solv","someth","sorting.","sourc","special","specifi","specifier.","specifier1.4.1.2.18.","speed","square(2);","square(int","square2(2);","square2(int","square2(int)","standard","start","start,","start;","statement","static","static_assert(arity::valu","static_assert(arity<>::valu","static_assert(std::is_integral::valu","static_assert(std::is_same::type,","static_assert(std::is_same::valu","static_assert(x","static_cast(arg);","static_cast::type&&>(arg);","std::array","std::array1.4.1.3.10.","std::auto_ptr","std::chrono","std::chrono1.4.1.3.7.","std::chrono::dur","std::chrono::system_clock::now();","std::chrono::time_point","std::cout","std::forward","std::forward(arg)","std::forward.","std::forward1.4.1.3.3.","std::forward:","std::get(playerprofile);","std::get.","std::ignor","std::ignore)","std::initializer_list","std::initializer_list&","std::initializer_list,","std::initializer_list.","std::llround(tempcelsiu","std::make_pair(\"yes\",","std::make_shar","std::make_shared());","std::make_shared,","std::make_shared.","std::make_shared1.4.1.3.12.","std::make_tuple(51,","std::make_tuple(91,","std::make_uniqu","std::make_x","std::map","std::map>>","std::move","std::move(a1);","std::move(a3);","std::move(o.s);","std::move(p1)","std::move(p1);","std::move(p2);","std::move,","std::move1.4.1.3.2.","std::nullptr_t","std::pair","std::shared_ptr","std::shared_ptr,","std::shared_ptr.","std::shared_ptr{","std::size_t)","std::sort(a.begin(),","std::stoi(str);","std::string","std::string.","std::string;","std::tie","std::tie(std::ignore,","std::tie(yes,","std::tie,","std::tie1.4.1.3.9.","std::to_str","std::to_string(1.2);","std::to_string(123);","std::to_string1.4.1.3.4.","std::tupl","std::unique_ptr","std::unique_ptr,","std::unique_ptrs,","std::unique_ptrs:","std::vector","std::vector::const_iter","std::vector;","std::weak_ptr.","stl","str,","string","strongli","struct","structur","style","such","sugar","sum(const","sum(list);","sum({","sum({});","summar","support","suppos","swap,","syntact","syntax","syntax.","s{\"foo\"};","t","t&","t&&","t)","t,","take","tavares\",","tempcelsius)","templat","template.","templates).","templates.","templates1.4.1.2.4.","temporari","term","therefore,","think","those","thread","threads?","throw","time","time.","time:","to)","top","total","total;","trail","trait","traits1.4.1.3.5.","transfer","transit","treat","true,","true;","tupl","tuples...","tuples1.4.1.3.8.","turn","turner'","two","type","type,","type;","typedef","typedef,","typenam","types,","types.","types:","t{}","t{},","unchang","unchanged,","underli","underscor","understand","uniqu","univers","unlik","unnam","unord","unordered_map","unordered_multimap","unordered_multiset","unordered_set","unpack","unsaf","unsign","up","us","user","util","v","v.cbegin();","valu","value,","value.","values.","variabl","variable,","variables,","variables.","variad","varieti","variou","vec","vector","version","version1","version2","versioning.","videos.","virtual","void","vs.","v{};","walker.zheng","way","way.","weekli","whitespace.","within","without","won't","words,","words.","wrapper","wrapper(a);","wrapper(a{});","wrapper(std::move(a));","wrapper(t&&","x","x(...)","x(1);","x(x)","x)","x,","x.","x;","xl","xr","xr2","x{","y","y\");","y)","y)`","y,","y.","y;","yes,","yields.","zero","{","{0,","{2,","{program::getversion()};","{program::isfirstversion()};","{program::version1::getversion()};","{}","{};","}","});","},","};","©"],"CPP14.html":["\"const","\"foo\"","'.","'mutable'","()","(but","(n","(not","(or","(see","*","*p","+","++r;","...,","//","0","0);","0,","0;","0]","0b110","0b1111'1111","1","1);","1.5.1.","1.5.1.1.","1.5.1.2.","1.5.1.2.1.","1.5.1.2.2.","1.5.1.2.3.","1.5.1.2.4.","1.5.1.2.5.","1.5.1.2.6.","1.5.1.2.7.","1.5.1.3.","1.5.1.3.1.","1.5.1.3.2.","1.5.1.3.3.","1.5.1.4.","1.5.1.5.","1.5.1.6.","1.5.1.7.","10","10;","10]","12","123;","1440","16","16:37:45","1;","2","20","2017","24","24h;","255","3","5;","6","=","==",">","[&r","[=]","[](auto","[](auto&","[p","[x","`const","`int`.","`y`","a)","a,","a2t(const","a2t_impl(a,","a2t_impl(const","acknowledg","acknowledgements1.5.1.5.","alloc","allow","anthoni","arbitrari","array","array&","attempt","author","author1.5.1.6.","auto","auto&","auto,","avoid","b","base","basic_string.","below","binari","bodi","body.","book!","built","c","c++","c++11","c++11,","c++14","c++14,","c++141.5.1.1.","calandra","call","captur","chrono","clang","class","closur","code","code!","collect","come","common","compil","const","constexpr","constraint","construct","contain","content","contributor","contributors1.5.1.7.","conveni","convert","copi","copyright","cpp","cpp14","cpprefer","creat","data","day","day.count();","decltype(auto)","decltype(auto)1.5.1.2.6.","decltype(auto)?","deduc","deduct","deduction1.5.1.2.5.","defin","descript","differ","digit","document","does.","due","e","each","effect","empti","enabl","enclos","error:","especi","etc.","evalu","exampl","examples.","except","expand","explain","explor","express","expressions.","expressions1.5.1.2.3.","f","f();","f(const","f(int","f(t&","f(x);","factorial(int","factory(2)]","factory(int","featur","features.","features/graphs/contributor","features1.5.1.2.1.","features1.5.1.3.1.","features:","few","find","first","fix,","follow","foo","forgetting...","forward)","forwarding,","free","function","function_that_throws(),","functions1.5.1.2.7.","g","g(const","g(y);","gcc'","gener","generator();","gitbook最近修改:","given","great","greatli","hand","have","heap","help","helper","here","here.","highli","hold.","however,","https://github.com/anthonycalandra/modern","i'm","i)","i;","ident","identity(\"foo\");","identity(3);","imaginari","importantly,","includ","indices());","inform","initi","initializers1.5.1.2.4.","insid","instanc","int","int&","int&&","int&`.","integ","integers.","introduc","introduct","invoked).","it'","jason","keep","lambda","lambdas,","lambdas.","languag","language/librari","leak","left","librari","licens","license1.5.1.","limit","list","list,","liter","literals,","literals.","literals1.5.1.2.2.","loops,","make","mani","mean","meant","meyers'","mit","modern","modifi","more","move","multipl","mutabl","n","n)","name","namespac","need","ness\",","new","nice","not.","note","note:","now","number","number.","object","object?","of,","ok:","on...","operator.","origin","overview","overview1.5.1.2.","p","p.","pack","pages.","paramet","parsing,","perfect","pi","pointer","polymorph","possibl","possible.","post","prevent","previous","privat","propos","provid","r","reasons:","recommend","refer","referenc","references,","relat","relax","repetit","repres","reserved，pow","resourc","return","returns,","right","rvalu","safety.","safety:foo(std::make_unique(),","scope","scott","section","section),","see","see:","semantics.","separ","sequenc","sequence.","sequences1.5.1.3.3.","set","shall","side","singl","smart","so:foo(std::unique_ptr{","specifi","standard","statement.","statements,","static_assert(std::is_same::valu","std::array&","std::chrono::duration_cast(day).count();","std::chrono_literals;","std::index_sequence_for","std::integer_sequ","std::integer_sequence)","std::make_integer_sequ","std::make_tuple(a[i]...);","std::make_uniqu","std::make_unique());","std::make_unique(1);","std::make_unique,","std::make_unique1.5.1.4.","std::move(p)]","std::move(z);","std::shared_ptr.","std::string","std::unique_ptr","std::unique_ptr{","such","summar","support","suppos","syntax","syntaxes,","t","t(2.7182818284590452353);","t(3.1415926535897932385);","t)","t,","t.","t;","task1","task2","templat","template>","templated:","templates1.5.1.3.","three","time","time.","to):","top:","tuple:","turner'","type","type.","typedefs,","types,","types1.5.1.3.2.","t{}","t{},","underli","understand","us","user","usings,","valu","value.","variabl","variable.","variou","veri","videos.","vs.","walker.zheng","way","weekli","without","words.","x","x)","x++;","x,","x1","x2","x;","y","y1","y1;","y2","y3","y;","you.","z","z1","z2","{","}","});","},","};","©"],"CPP17.html":["\"","\"),","\"buckl","\"empty\"","\"foo\"","\"godzilla\"","\"godzilla\";","\"one\"","\"three\"","\"trim","\"two\"","&&","'a',","'r'};","(...","(auto","(b)","(c++11)","(c++17)","(e","(e.g.","(e1","(foo","(int","(it'","(see","(std::is_integral::value)","(std::lock_guard","(true","(v.empty())","(which","));","*","*thi","+","...","...),",".l_zz4maine2x2:",".long","//","0","0};","1","1,","1.6.1.","1.6.1.1.","1.6.1.2.","1.6.1.2.1.","1.6.1.2.10.","1.6.1.2.11.","1.6.1.2.12.","1.6.1.2.13.","1.6.1.2.2.","1.6.1.2.3.","1.6.1.2.4.","1.6.1.2.5.","1.6.1.2.6.","1.6.1.2.7.","1.6.1.2.8.","1.6.1.2.9.","1.6.1.3.","1.6.1.3.1.","1.6.1.3.2.","1.6.1.3.3.","1.6.1.3.4.","1.6.1.3.5.","1.6.1.3.6.","1.6.1.3.7.","1.6.1.4.","1.6.1.5.","1.6.1.6.","1.6.1.7.","10","10646","10;","12","12.0","12.0;","123","123);","16","16:37:45","1;","1};","2","2)()","2);","2,","2.0f,","2017","3","3);","3,","3.0","321","321;","4,","4;","5","5};","6.0","8","8],",":","=","==","[","[*this]","[.l_zz4maine2x2]","[=]","[]","[n]","[rbp","[this]","[x1]","]","`dst`.","`int`","`int`.","`src`","a::b::c","abstract","acknowledg","acknowledgements1.6.1.5.","add","addone(int","aggreg","allocations/deallocations.","allow","altern","another:","anthoni","appli","args)","args);","argument","argument.","arguments.","arguments:","array);","array[3]","array_v(array,","arrays.","asynchron","author","author1.6.1.6.","auto","auto,","auto.","auto1.6.1.2.3.","automat","available,","b","b)","b2","b2,","b;","bad:","badfoo(s.message());","begin","binari","bind","bindings1.6.1.2.10.","book!","bool","bool&","both.templ","bound","brace","break;","byte","byte{1};","byte{256};","b{0};","c","c(c)","c):","c++","c++17","c++171.6.1.1.","c1{","c2;","c;","calandra","call","callabl","callback","captur","case","chang","char","char.","charact","cheap","clang","class","code","collect","come","common","compil","condit","condition.","const","constexpr","constexpr.","construct","constructors.","contain","container:","content","continu","contributor","contributors1.6.1.7.","coordin","coordinate{0,","copi","copies,","copyright","cpp","cpp17","cpprefer","cppstr{","creat","create(bool","create(false).value_or(\"empty\");","create(true))","create(true).value();","current","c{","d","de","declar","declares).","decltype(auto)","decltype(auto)?","decltype(x2)","decltype(x3)","decltype(x4)","deduc","deduct","definitions.","depend","descript","direct","disassembl","document","done","doubl","dst","dst.insert(src.extract(2));","dst.insert(src.extract(src.find(1)));","dst.merge(src);","dst{","dst{2,","dword","e","e)","e.key()","e1","e2","e2),","eax","eax,","effect","element","element:","elementfactory()","entir","enum","enums1.6.1.3.","environ","equal","error","error:","esi,","especi","exampl","example,","examples.","expens","explain","explicitli","explor","explorer.","expr","expr;","express","expressions1.6.1.2.4.","factori","fail.","false);","false;","featur","features.","features/graphs/contributor","features1.6.1.2.1.","features1.6.1.3.1.","features:","find","fix,","fold","fold.","folding.","folds.","follow","foo","forgetting...","form","forwarding,","function","function.","functions,","functions.","gadget(args);","gadget.status())","gadget.zip();","gcc'","getvaluecopy()","getvalueref()","gitbook最近修改:","given","great","heap","help","here","highli","hold","https://github.com/anthonycalandra/modern","i'm","i.e.","i;","ident","if1.6.1.2.12.","implement","includ","init","initi","initialization,","initializer1.6.1.2.11.","inlin","inline.","insert","instanc","instanti","int","int.","introduct","invalid","invok","isintegral()","iso","it'","jason","keep","key","l","l\"baz\"","l()","lambda","lambda'","lambda1.6.1.2.6.","languag","language/librari","librari","licens","license1.6.1.","lifetime.","list","list1.6.1.2.5.","liter","literals1.6.1.2.13.","lk(mx);","logicaland(args...","logicaland(b,","m","m.extract(2);","m.insert(std::move(e));","make","manag","mani","map","me\"","meant","merg","meyers'","mit","mo.getvaluecopy();","mo.getvalueref();","mo.valu","mo;","modern","more","mov","move","moves,","much","my_integer_sequ","my_integer_sequence();","mycontain","mycontainer()","mycontainer(t","myobj","m{","n","n)","n;","namespac","namespaces1.6.1.2.9.","nest","new","nice","node","non","now","object","object,","object?","of,","ok","ok:","on","only.","op","oper","operator()(args&&...","operator.","operators,","option","origin()","origin();","outliv","over","overhead","overview","overview1.6.1.2.","own","p(1,","pack","pack,","packs,","pages.","paramet","parameters.","parsing).","pass","past","pattern","perfect","perform","point","possibl","post","potenti","present.","previous","previously,","problemat","propos","provid","proxi","proxy(cal","ptr","public:","p{","r","r();","recommend","refer","reference.","references,","regular","relat","remov","repres","requir","reserved，pow","resolut","resourc","respect","return","right","rule","rvalu","s","s.emplace(...);","s.extract(s.begin());","s2.insert(elementfactory());","s;","safe","same","scope","scott","section),","see:","select","semant","semantics.","seq","seq2","set","set:","sets1.6.1.4.","shoe\"","similarli","simplifi","singl","sizeof","specifi","splice","src","src{","src{1,","standard","statement","static_assert(add(1,","static_assert(addone(1)","static_assert(identity(123)","static_assert(isintegral()","std::ani","std::any1.6.1.3.4.","std::any_cast(x)","std::appli","std::apply(add,","std::apply1.6.1.3.7.","std::array,","std::bind","std::forward(args)...);","std::function","std::get(v);","std::initializer_list","std::initializer_list,","std::integer_sequence();","std::invok","std::invoke(c,","std::invoke1.6.1.3.6.","std::lock_guard","std::make_tuple(","std::map","std::option","std::optional1.6.1.3.3.","std::pair,","std::pair;","std::set","std::string","std::string_view","std::string_view1.6.1.3.5.","std::tuple,","std::variant","std::variant1.6.1.3.2.","std::wstring_view","str","str;","string","string.","strings.","struct","structur","structures.","str{","sum(1.0,","sum(args...","summar","support","switch","syntax.","s{123};","s{321};","t","templat","templates1.6.1.2.2.","throw","tight.","time","top","trim","true","true);","true;","tupl","turner'","type","type,","type.","types[*],","u8","u8'x';","unari","understand","unexpand","uniform","union.","unsign","us","usabl","user","utf","v","v.empty())","v.push_back(val);","v.remove_prefix(std::min(v.find_first_not_of(\"","v.size()));","v;","val()","val(val)","val)","val;","valu","value,","value.","value1.6.1.2.7.","value;","valuecopi","valuecopy();","valueless).","valueref","valueref();","value{","variabl","variables1.6.1.2.8.","variou","version","videos.","vs.","v{","walker.zheng","wcstr_v{","weekli","well","whose","wide","without","words.","write","x","x,","x.has_value()","x1","x1:","x1{","x2","x3{","x4{","x;","x{","y","y)","y,","y;","z","{","{'b',","{}","{};","}","}();","},","};","©"],"CppCoreGuidelines.html":["!(a","!=","!=,","!=.","!c","!c1","!c2","!cond3)","!isspace(c)","!q.empty();","!s","!s;","\"","\"!\"","\"\"","\"\")","\"\",","\"\";","\".\"","\".................................\";","\".txt\";","\"0.6\"","\"7\";","\"79\"","\"9\";","\";","\"@acme.com\")","\"\\n\";","\"a","\"absenc","\"accident","\"advanc","\"all","\"alternatives\".","\"anoth","\"anyth","\"asdf\");","\"asdfg\"","\"aspects\"","\"axiom\"","\"b\"","\"bad","\"bad\"","\"bad\").","\"bad.h\"","\"base\"","\"basic_std_lib.h\"","\"behav","\"bi","\"bleed","\"bottom","\"bounds\",","\"bubbl","\"buffer","\"bundles\"","\"c\"","\"c.11\"","\"c.hier\"","\"call","\"caller","\"can","\"cast","\"catch","\"cause\",","\"cheap","\"class","\"classic","\"cleverness\"","\"close/release\"","\"collect","\"common","\"concept\"","\"concepts\"","\"concepts\").","\"concepts\";","\"configur","\"const\"","\"consume\"","\"consume\";","\"cool.\"","\"copying\"","\"crash\"","\"crashing\"","\"customize\"","\"d\"","\"d\")","\"decay\"","\"default\";","\"details.\"","\"deterministic\"","\"disruption\"","\"distribut","\"do","\"doe","\"don't","\"downward\"","\"dynamic\"","\"easier","\"efficiency\"","\"efficiency\");","\"efficiency\",","\"elsewhere\"","\"empty\"","\"empty.\"","\"esoter","\"event","\"everyth","\"evil!\";","\"exceptions\"","\"export","\"exported\"","\"extensions\"","\"external/exported\"","\"far","\"file1.h\"","\"file2.h\"","\"file3.h\"","\"first","\"fit","\"fold","\"follow","\"for","\"forever\"","\"forgot\"","\"form","\"forward\"","\"foundat","\"free","\"friendli","\"from\"","\"functions\"","\"functions\"1.7.10.1.20.","\"fundamental\"","\"garbag","\"generic\"","\"get","\"give","\"good\"","\"ha","\"hamlet\",","\"hamlet\"s,","\"handcraft","\"header","\"hello!\"s;","\"hello,","\"helper","\"helper\"","\"here","\"hidden\"","\"hide","\"hierarchies\"","\"hits\"","\"homebrew\"","\"hook","\"hous","\"i","\"idiom\",","\"if","\"ill","\"immort","\"implement","\"implicit","\"implies\"","\"imported\"","\"in","\"in\"","\"infecting\"","\"inherited\"","\"input","\"instrument\"","\"instrumented\"","\"invisible\"","\"invisible\",","\"iso","\"it","\"it'","\"just","\"just\"","\"keep","\"known\"","\"languag","\"large\"","\"late\"","\"leaked\"","\"leaking\"","\"legaci","\"legacy\"","\"legislate\"","\"legislating\"","\"lifetime\"),","\"lock","\"logging:","\"long\";","\"look","\"magic","\"make","\"marker\"","\"mathemat","\"meaningless\"","\"mechanical\"","\"mechanically\"","\"memori","\"mess","\"messi","\"mi","\"might\"","\"mixin\"","\"modern","\"modernizer\"","\"moon","\"more","\"mysteri","\"mysterious\"","\"nake","\"naked\"","\"name\"","\"natural\"","\"new","\"new\"","\"no","\"no\"","\"non","\"nonvirtually\"","\"not","\"null","\"null\"","\"number\".","\"nygaard\",","\"obscured\"","\"odd\"","\"odd\",","\"ok\"","\"ok\",","\"one","\"oper","\"ophelia\"s,","\"optimized\"","\"ordinari","\"out","\"out\"","\"output","\"overli","\"owning\"","\"p\"","\"package\"","\"parallelism\"","\"parameterized\"","\"paranoia\"","\"performance\"","\"philosophy\")","\"plain","\"plain\"","\"pointer","\"popular\"","\"portabl","\"posit","\"positive\";","\"post","\"profile\"","\"profile\".","\"profiles\").","\"program","\"provid","\"pure","\"qqq\",","\"r\"),","\"r\");","\"r\")}","\"r\")},","\"r\"},","\"random\"","\"raw","\"raw\"","\"read","\"read/write\".","\"refus","\"relat","\"repeat","\"reseat\"","\"return","\"returned\"/leak","\"rh","\"ritchie\"","\"sequenc","\"seriou","\"severity\"","\"shadowing\".","\"silli","\"singleton\"","\"sink\"","\"small","\"smart","\"something\"","\"sometimes,","\"span\"","\"special","\"special\"","\"spell\"","\"stabl","\"standard\"","\"static","\"stop","\"string","\"string\"","\"stroustrup\".","\"structur","\"stuff\"","\"subset","\"suitabl","\"supercalifragilisticexpialidocious\");","\"supercalifragilisticexpialidocious\";","\"surprise\")","\"t","\"tag\"","\"take","\"temporari","\"temporarili","\"the","\"theoretical\",","\"thi","\"things\"","\"this\"","\"this\",","\"thread","\"throw","\"to","\"to\"","\"too","\"total","\"trait\"","\"traits\"","\"treat","\"trivial\",","\"trouble\",","\"twelve.\"","\"two","\"uniform","\"unusu","\"unusual\"","\"unusual\"/non","\"up","\"upward\"","\"use","\"valid","\"vector\"","\"view\"","\"views\"","\"virtual","\"we","\"weird","\"what","\"when","\"whi","\"widget\"","\"will\"","\"will\",","\"wisdom\"","\"world\";","\"wrap","\"write","\"yes\",","\"zero\";","\"}","#100","#defin","#endif","#fmt","#ifdef)","#ifdefs,","#ifndef","#includ","#include\"","#includer'","#pragma","%","%)","%.","%d","%d\\n\",","%s","&","&&","&&,","&&.","&1.7.7.6.5.","&a)","&a[0]","&aa[0];","&aa[1];","&ch","&ch;","&cin;","&fx;","&glob);","&i;","&operator[](size_t);","&p[7];","&pool[n];","&r;","&s);","&v[0];","&v[5];","&v[7];","&v[i])","&va[0];","&x);","&x;","&y;","'.'","'.';","'14","'\\n'","'a':","'b',","'b':","'c'};","'f':","'many')","'sharedptrparam'","'size'","'x';","(","(!(b1","(!c)","(!f)","(!fs.valid())","(!g.valid())","(!g1.valid())","(!g2.valid())","(!head.compare_exchange_weak(h,","(!in)","(!is_valid(d,","(!p)","(!r.err)","(!r.second)","(!valid(i,","(!validate(surface_readings))","(!vs.valid())","(\"a","(\"atomic\")","(\"constructs\")","(\"don't","(\"if","(\"in","(\"live\")","(\"make","(\"narrow","(\"resourc","(\"the","(\"type\",","(\"what","(\"why?\"","(#pro","(&a1[5]","(&v[i]);","((a","((auto","((bounds))","((c","((cin","((double*)","((foundation))","()","()(x.s.size())","(),","(*)(int);","(*)(t);","(*compar)(const","(*p","(*pfi)(int);","(*pft)(t);","(+,","(.,","(...","(...)","(...),","(/*...*/)","(0","(1)","(10)","(15.5.1).","(2","(2)","(2,4,9,16,...):","(2nd","(2ndedition)","(4)","(4th","(5","(:","(;","(;;)","(=)","(==)","(==,","(??)","(???","(???)","(???).","(a","(a.length()","(a.size()","(a.sz","(abs(flag2)","(abstraction),","(abstractions)","(access","(action_needed)","(action_needed.load(memory_order_acquire))","(action_needed.load(memory_order_relaxed))","(addison","(after","(aka","(algorithm),","(all?)","(all_foobar(g1,","(allocate,","(almost","(also)","(altern","(although","(an","(analysi","(and","(and,","(anonymous)","(appropriately).","(array","(asio:","(assert())","(assert)","(assum","(at","(atom","(auto","(auto&","(b","(b1","(back)","(bad)","(bar","(base","(base&","(becaus","(begin","(best","(better,","(bi","(both","(buf","(buffer","(buffer&","(but","(c","(c++11)","(c++11,","(c++11/c++14)","(c++11/c++14)1.7.21.4.","(c++17)","(c++98)","(c.64),","(c/c++","(c1","(cached_x","(call","(called)","(can","(cannot_disconnect())","(cannot_release_a_resource)","(case","(cast","(cast).","(caught):","(char","(char*)","(cheap)","(check","(checking).","(cin.get(c)","(class","(code)","(colloqui","(comments)","(common)","(compil","(complex","(complex)","(concurr","(cond)","(cond2","(condition())","(consist","(consistently).","(const","(const)","(constructed).","(constructors,","(contigu","(could","(count","(current","(d","(d*","(d*)pb;","(dag):","(dangerous)","(debug)","(default","(defin","(deliberately)","(dereferenc","(derived&","(desires,","(differ","(different)","(direction)","(directli","(dis)us","(ditto)","(do","(doubles,","(dynam","(dynamic_cast)","(e","(e.g.","(e.g.,","(e.type)","(early)","(easi","(easili","(easily)","(either","(elimin","(els","(enclosing)","(enforcement,","(erroneous)","(error_code)","(especi","(even","(eventtype)","(ever","(except","(exception&","(exception)","(executed)","(explicit","(explicitli","(f","(f)","(f.21),","(fail","(failur","(file.is_valid())","(flag1","(flag2","(for","(forget","(free","(from","(function","(g1.valid())","(g2.valid())","(gadget_construction_failure)","(gfm):","(go","(goe","(guarante","(guidelin","(guideline,","(h","(hard","(hard)","(hardwar","(have","(heap)","(heap).","(height","(height,","(henc","(here,","(hides)","(homogeneous)","(hope","(hopefulli","(hs:","(human","(i","(i.e.,","(ieee","(if","(ignor","(imagin","(implemented)","(implicitli","(imposs","(in","(in)fam","(incautiously)","(incl.","(includ","(independ","(individu","(inf)","(initial)","(inner)","(inserted)","(instead","(int","(int&","(int)","(int)ch;","(int)d;","(int)lng;","(int)p;","(int*)","(invariant)","(invariants)","(irregular","(is_odd(n))","(it","(j","(jeff)","(juli","(just","(kind)","(languag","(late)","(lead","(leak)","(left","(legitimate)","(length","(less","(let","(librari","(libraries,","(like","(link","(link)","(literals,","(local?)","(lock_guard,","(logic","(long","(long*)&d;","(lower","(made","(mark","(mathematically)","(mayb","(memory_order_seq_cst),","(messag","(mis)","(mistake!)","(mnemonizes)","(moderate)","(modern","(modulo","(more","(most","(most)","(move","(much","(must","(n","(n)","(n++","(name","(name,","(named)","(namespac","(narrowing,","(nasty)","(necessarili","(neither","(new","(no","(non","(none","(not","(notably,","(note","(note:","(now","(null","(o'reilly,","(object","(obviously!)","(obviously)","(obviously),","(obviously).","(occasion","(of","(often","(old)","(on","(only)","(only),","(only).","(only)1.7.10.2.11.","(only)1.7.6.2.16.","(only)1.7.7.10.2.","(oop)","(oop)\")","(oop)1.7.7.10.1.","(operand)","(or","(or,","(other","(over)gener","(oversimplified)","(owned)","(owning))","(p","(p)","(p,","(p.first)","(pass","(pb1","(perfectli","(perform","(pimpl)","(pleas","(point","(pointer","(pointer,","(possibl","(potentially)","(prefer","(preferably)","(prentic","(privat","(pro","(probabl","(probably)","(problem:","(protected)","(ps))","(public).","(public,","(r.name.size()","(race","(raii)","(random","(rare)","(rationales)","(raw)","(readable(i1","(reasonably)","(recompil","(recursively)","(reinterpret","(related)","(reli","(resourc","(result.second)","(return","(rev.","(risk","(round_up)","(run","(s","(s1","(say","(say)","(scary)","(scary)1.7.15.6.3.","(see","(semi)form","(set","(should","(sic!)","(signed)","(similar","(simple)","(simplifi","(simply)","(single)","(size","(size)","(size_t","(slow,","(so","(some","(some_condition)","(somehow)","(somehow,","(something)","(sometim","(sort","(sourc","(source)","(special","(specif","(standard","(static","(std::exception&","(string","(string&","(string_val","(stroustrup05).","(struct","(success)","(such","(syntax","(t","(t&&","(t&)","(t&)*p;).","(t&),","(t)e","(t)express","(t*)","(tag,","(templatized)","(that","(that'","(the","(there","(they","(thi","(think","(third","(though","(through","(throughput","(thu","(time,","(tmp)","(tmp)1.7.15.9.1.","(to","(tri","(true)","(tss)","(twice)","(type","(type.4,","(typeid)","(typic","(undefined)","(unencapsul","(unfortunately,","(unique_ptr","(unit","(unknown)","(unless","(unspecifi","(unstated)","(unstructur","(until","(up","(updat","(upon","(use","(using)","(usual","(v","(v)","(val","(valid()","(valu","(value)","(veri","(via","(virtual","(void*","(vulner","(wait_for_event())","(wait_for_event()).","(what","(what'","(when","(where","(whether","(whi","(which","(while","(who","(widget.cpp)","(widget.h)","(with","(without","(wrongly)","(x","(x&&","(x)","(xor).","(yet)","(yippee)","(you","(yuck!)","(zero","(à",")",")):",");","*","*(thi","**aa[10];","*,","*.","*/","*/;","*/}","*=","*=,","*a.elem","*a.p;","*cach","*const","*if*","*inp;","*new","*p","*p,","*p.","*p1","*p2","*p3","*p;","*p?","*pb1","*pb2","*pi","*pp[7],","*q","*q;","*thi","*this,","*this.","*this;","+","+)","++)","++).","++a;","++dcount;","++events)","++events;","++first)","++i","++i);","++i;","++iter;","++j;","++p)","++p;}","++today;","++x;","+,","+=","+=,",",",".",".),","...","...)","...);","...*/);","...,","....","...;","...onli",".at()",".c",".c,",".cpp",".cpp).",".cpp:",".cxx.",".h",".h,",".h.",".hh,","/","/*","/*...*/","/*...*/;","/*output","/*requires*/","/,","//","//.","//...","/=","/doc","0","0)","0),","0);","0,","0.","0.);","0.0);","0.0001","0.0;","0.8.","0.;","08.","0:","0;","0`;","0b0000'1111'0000'0000;","0b0101'0101;","0b1010'1010;","0x0000ff","0x00ff00","0x00ff00,","0xff0000","0xff0000,","0xff0000;","0}","0},","0};","1","1)","1),","1,","1,000,000","1.","1..10","1..12","1..12,","1.171);","1.7.1.","1.7.10.","1.7.10.1.","1.7.10.1.1.","1.7.10.1.10.","1.7.10.1.11.","1.7.10.1.12.","1.7.10.1.13.","1.7.10.1.14.","1.7.10.1.15.","1.7.10.1.16.","1.7.10.1.17.","1.7.10.1.18.","1.7.10.1.19.","1.7.10.1.2.","1.7.10.1.20.","1.7.10.1.21.","1.7.10.1.22.","1.7.10.1.3.","1.7.10.1.4.","1.7.10.1.5.","1.7.10.1.6.","1.7.10.1.7.","1.7.10.1.8.","1.7.10.1.9.","1.7.10.2.","1.7.10.2.1.","1.7.10.2.10.","1.7.10.2.11.","1.7.10.2.12.","1.7.10.2.13.","1.7.10.2.14.","1.7.10.2.2.","1.7.10.2.3.","1.7.10.2.4.","1.7.10.2.5.","1.7.10.2.6.","1.7.10.2.7.","1.7.10.2.8.","1.7.10.2.9.","1.7.10.3.","1.7.10.3.1.","1.7.10.3.10.","1.7.10.3.11.","1.7.10.3.12.","1.7.10.3.13.","1.7.10.3.14.","1.7.10.3.15.","1.7.10.3.16.","1.7.10.3.17.","1.7.10.3.18.","1.7.10.3.19.","1.7.10.3.2.","1.7.10.3.3.","1.7.10.3.4.","1.7.10.3.5.","1.7.10.3.6.","1.7.10.3.7.","1.7.10.3.8.","1.7.10.3.9.","1.7.10.4.","1.7.10.4.1.","1.7.10.4.2.","1.7.10.4.3.","1.7.10.4.4.","1.7.10.4.5.","1.7.10.4.6.","1.7.10.4.7.","1.7.10.4.8.","1.7.11.","1.7.12.","1.7.12.1.","1.7.12.1.1.","1.7.12.1.10.","1.7.12.1.11.","1.7.12.1.12.","1.7.12.1.13.","1.7.12.1.14.","1.7.12.1.15.","1.7.12.1.2.","1.7.12.1.3.","1.7.12.1.4.","1.7.12.1.5.","1.7.12.1.6.","1.7.12.1.7.","1.7.12.1.8.","1.7.12.1.9.","1.7.12.2.","1.7.12.3.","1.7.12.3.1.","1.7.12.3.2.","1.7.12.4.","1.7.12.5.","1.7.12.5.1.","1.7.12.5.2.","1.7.12.5.3.","1.7.12.5.4.","1.7.12.5.5.","1.7.12.6.","1.7.12.6.1.","1.7.12.6.2.","1.7.13.","1.7.14.","1.7.15.","1.7.15.1.","1.7.15.1.1.","1.7.15.1.2.","1.7.15.1.3.","1.7.15.1.4.","1.7.15.1.5.","1.7.15.10.","1.7.15.10.1.","1.7.15.10.2.","1.7.15.10.3.","1.7.15.10.4.","1.7.15.10.5.","1.7.15.10.6.","1.7.15.2.","1.7.15.3.","1.7.15.3.1.","1.7.15.3.2.","1.7.15.3.3.","1.7.15.3.4.","1.7.15.4.","1.7.15.4.1.","1.7.15.4.2.","1.7.15.4.3.","1.7.15.4.4.","1.7.15.4.5.","1.7.15.4.6.","1.7.15.4.7.","1.7.15.5.","1.7.15.5.1.","1.7.15.5.2.","1.7.15.5.3.","1.7.15.5.4.","1.7.15.5.5.","1.7.15.5.6.","1.7.15.5.7.","1.7.15.5.8.","1.7.15.5.9.","1.7.15.6.","1.7.15.6.1.","1.7.15.6.2.","1.7.15.6.3.","1.7.15.6.4.","1.7.15.6.5.","1.7.15.6.6.","1.7.15.6.7.","1.7.15.6.8.","1.7.15.7.","1.7.15.7.1.","1.7.15.7.2.","1.7.15.7.3.","1.7.15.7.4.","1.7.15.7.5.","1.7.15.8.","1.7.15.8.1.","1.7.15.8.2.","1.7.15.8.3.","1.7.15.8.4.","1.7.15.9.","1.7.15.9.1.","1.7.15.9.2.","1.7.15.9.3.","1.7.15.9.4.","1.7.15.9.5.","1.7.15.9.6.","1.7.16.","1.7.17.","1.7.18.","1.7.18.1.","1.7.18.1.1.","1.7.18.1.2.","1.7.18.1.3.","1.7.18.2.","1.7.18.2.1.","1.7.18.2.2.","1.7.18.2.3.","1.7.18.2.4.","1.7.18.2.5.","1.7.18.2.6.","1.7.18.2.7.","1.7.18.2.8.","1.7.18.3.","1.7.18.3.1.","1.7.18.3.2.","1.7.18.3.3.","1.7.18.3.4.","1.7.18.3.5.","1.7.18.3.6.","1.7.18.4.","1.7.18.5.","1.7.18.6.","1.7.18.6.1.","1.7.19.","1.7.2.","1.7.20.","1.7.21.","1.7.21.1.","1.7.21.2.","1.7.21.3.","1.7.21.4.","1.7.21.5.","1.7.21.6.","1.7.21.7.","1.7.21.8.","1.7.22.","1.7.22.1.","1.7.22.2.","1.7.22.3.","1.7.23.","1.7.23.1.","1.7.23.2.","1.7.23.3.","1.7.23.4.","1.7.23.5.","1.7.23.5.1.","1.7.24.","1.7.25.","1.7.26.","1.7.27.","1.7.28.","1.7.28.1.","1.7.28.1.1.","1.7.28.1.2.","1.7.28.1.3.","1.7.28.1.4.","1.7.28.1.5.","1.7.28.1.6.","1.7.28.1.7.","1.7.28.1.8.","1.7.29.","1.7.3.","1.7.3.1.","1.7.3.2.","1.7.3.2.1.","1.7.3.3.","1.7.3.4.","1.7.3.5.","1.7.3.6.","1.7.30.","1.7.31.","1.7.32.","1.7.4.","1.7.5.","1.7.6.","1.7.6.1.","1.7.6.1.1.","1.7.6.1.2.","1.7.6.1.3.","1.7.6.1.4.","1.7.6.1.5.","1.7.6.1.6.","1.7.6.1.7.","1.7.6.1.8.","1.7.6.1.9.","1.7.6.2.","1.7.6.2.1.","1.7.6.2.10.","1.7.6.2.11.","1.7.6.2.12.","1.7.6.2.13.","1.7.6.2.14.","1.7.6.2.15.","1.7.6.2.16.","1.7.6.2.17.","1.7.6.2.18.","1.7.6.2.19.","1.7.6.2.2.","1.7.6.2.20.","1.7.6.2.21.","1.7.6.2.22.","1.7.6.2.23.","1.7.6.2.24.","1.7.6.2.25.","1.7.6.2.26.","1.7.6.2.3.","1.7.6.2.4.","1.7.6.2.5.","1.7.6.2.6.","1.7.6.2.7.","1.7.6.2.8.","1.7.6.2.9.","1.7.7.","1.7.7.1.","1.7.7.1.1.","1.7.7.1.2.","1.7.7.10.","1.7.7.10.1.","1.7.7.10.2.","1.7.7.10.3.","1.7.7.11.","1.7.7.11.1.","1.7.7.11.10.","1.7.7.11.11.","1.7.7.11.12.","1.7.7.11.13.","1.7.7.11.14.","1.7.7.11.2.","1.7.7.11.3.","1.7.7.11.4.","1.7.7.11.5.","1.7.7.11.6.","1.7.7.11.7.","1.7.7.11.8.","1.7.7.11.9.","1.7.7.12.","1.7.7.13.","1.7.7.13.1.","1.7.7.13.2.","1.7.7.13.3.","1.7.7.13.4.","1.7.7.13.5.","1.7.7.13.6.","1.7.7.13.7.","1.7.7.13.8.","1.7.7.13.9.","1.7.7.14.","1.7.7.14.1.","1.7.7.14.10.","1.7.7.14.2.","1.7.7.14.3.","1.7.7.14.4.","1.7.7.14.5.","1.7.7.14.6.","1.7.7.14.7.","1.7.7.14.8.","1.7.7.14.9.","1.7.7.15.","1.7.7.15.1.","1.7.7.15.2.","1.7.7.15.3.","1.7.7.15.4.","1.7.7.2.","1.7.7.3.","1.7.7.3.1.","1.7.7.3.2.","1.7.7.3.3.","1.7.7.4.","1.7.7.4.1.","1.7.7.4.2.","1.7.7.4.3.","1.7.7.4.4.","1.7.7.4.5.","1.7.7.4.6.","1.7.7.4.7.","1.7.7.5.","1.7.7.5.1.","1.7.7.5.10.","1.7.7.5.11.","1.7.7.5.12.","1.7.7.5.13.","1.7.7.5.2.","1.7.7.5.3.","1.7.7.5.4.","1.7.7.5.5.","1.7.7.5.6.","1.7.7.5.7.","1.7.7.5.8.","1.7.7.5.9.","1.7.7.6.","1.7.7.6.1.","1.7.7.6.2.","1.7.7.6.3.","1.7.7.6.4.","1.7.7.6.5.","1.7.7.6.6.","1.7.7.6.7.","1.7.7.6.8.","1.7.7.7.","1.7.7.7.1.","1.7.7.7.2.","1.7.7.7.3.","1.7.7.7.4.","1.7.7.7.5.","1.7.7.7.6.","1.7.7.7.7.","1.7.7.7.8.","1.7.7.7.9.","1.7.7.8.","1.7.7.9.","1.7.8.","1.7.9.","1.7.9.1.","1.7.9.1.1.","1.7.9.1.2.","1.7.9.1.3.","1.7.9.1.4.","1.7.9.1.5.","1.7.9.1.6.","1.7.9.2.","1.7.9.2.1.","1.7.9.2.10.","1.7.9.2.11.","1.7.9.2.12.","1.7.9.2.13.","1.7.9.2.2.","1.7.9.2.3.","1.7.9.2.4.","1.7.9.2.5.","1.7.9.2.6.","1.7.9.2.7.","1.7.9.2.8.","1.7.9.2.9.","10","10'000","10)","10);","10,","10.78e","10.7;","100","100'000'000);","100);","100,","1000","1000);","100000;","100;","100ms;","101;","1024;","10;","10s);","10x","10};","11,","110","114,","12","123","123'456'7890;","123.456;","123;","12;","13,","13.)","13.1);","13th","14,","140","14882.","14882:2003(e),","15","15.99","16","1683627180","16;","16];","16th","17:18:19","17;","18","1885});","19","1900","1970","1970;","1978","1980","1980s),","1990s),","1992).","1993).","1994).","1996).","1996.","1997).","1997.","1999).","1:","1;","1?","1]","1});","2","2)","2);","2,","2.","2.71828);","20","20);","200","2000).","2001).","2001.","2002).","2003).","2004).","2005.","2009","2009.","2010","2010.","2011.","2012.","2013","2013.","2014","2014.","2015","2015).","2015.","2016","2016),","2016.","2017","2017),","2017).","2017.","207,","20x).","20});","21,","21.","21.12","2100","218.","21st","22(8),","259.","299'792'458;","29;","2:","2;","2]","2d","2k","2rdu00001","2},","2};","3","3).","3,","3.","3.14","3.14);","3.14;","3.14};","3.29048e","31,","321","33;","34,","35","35).","37).","39","39,","3;","3rd","3rdedition)","4","4%","4);","4,","4.","40","40%","40+","42","4294967292","4294967294","4294967294?","42;","42};","43;","45","46).","4611686018427387904","49.1","4;","4th","4},","5","5%","5,","50%","50,","500","51;","52;","53,","55.)","55};","56.","5;","5};","6","6,","6.1),","6.1,","6.1.","60","666","666,","666;","6;","6};","6}};","7","7)","7);","7,","7.","7.9,","7.93","7.9;","73);","75.)","77","77;","79,","7:","7;","7th","7};","8","8)","8,","8;","8};","9","9,","9.00);","9.00};","9.9;","987.654.","987.654;","99.","999","999;","99;","9;","9}","9};",":",":)","::copi","::detail","::size_typ",":act{a}",":b",":cent{c},",":date2{ii,",":d{dd},",":elem{a.elem},",":elem{new",":f{fopen(name.c_str(),",":i{666},",":i{ii}",":i{ii},",":m2{x},",":m_{abs(m)}",":m{a,",":owned{true},",":p(pp)",":p{a.p},",":p{new",":shape{c},",":s{\"default\"},",":s{ss},",":val{x}",":vector0{0}",";",";.","=","=\"r\");","='","=,","==","==).","==,","==.","==;","==nullptr","=>","=default","=default)","=default.","=delet","=delete.","={...}",">",">()",">,",">=",">=),",">=,",">=.",">>",">act(my_data);",">char",">data",">detach();",">draw(*this);",">elem)",">f(i);",">find(x);",">foo();",">func();",">id()",">int",">int.",">int;",">left,",">m(f2());",">name",">post_initialize();",">postinitialize();",">ptr",">right,",">set(x,","?","???","???(bs:","???)","???.","???1.7.15.8.3.","???1.7.9.2.13.","????","???must","???unix","[","[&,this]","[&]","[&](rec&","[&]{","[&message](auto&","[&n](const","[0..4]","[0:5)","[0:max).","[0:n)","[=,this]","[=]","[=].","[=]{","[[expects:","[[fallthrough]]","[[fallthrough]];","[[gsl::suppress(lifetime)]]","[[gsl::suppress(tag)]]","[[implicit]]","[[suppress(bounds)]]","[[suppress(types)]].","[]","[]()","[](auto","[](auto&","[](auto)","[](char);","[](const","[](doubl","[](double)","[](int","[](int)","[](order","[](t","[])","[],","[abrahams01]:","[alexandrescu01]","[alexandrescu01]:","[b:e)","[boost],","[c++03]","[c++03]:","[c++cs]","[c++cs]:","[cargill92]","[cargill92]:","[cline99]","[cline99]:","[dewhurst03]","[dewhurst03]:","[henricson97]","[henricson97]:","[i,","[iter,","[koenig97]","[koenig97]:","[lakos96]","[lakos96]:","[meyers15]:","[meyers96]","[meyers96]:","[meyers97]","[meyers97]:","[murray93]","[murray93]:","[p:p","[p:p+n)","[p:p+n),","[p:q)","[q:q","[q:q+n)","[see","[str15].","[stroustrup00]","[stroustrup00]:","[stroustrup05]:","[stroustrup13]:","[stroustrup14]:","[stroustrup15]:","[stroustrup94]:","[suttalex05]:","[sutter00]","[sutter00]:","[sutter02]","[sutter02]:","[sutter04]","[sutter04]:","[sutthysl04b]","[sutthysl04b]:","[taligent94]","[taligent94].)","[taligent94]:","[this]{","[val,","[value,","[x,","\\n,","]","])","^","_","__.","`!=","`!=0`;","`!=nullptr`,","`*p`","`0`","`==","`arr`","`copy2`","`expect`","`expects(p)`","`i`'","`n`'","`nefarious`","`nullptr`\"","`p","`p`","`s`","`std::terminate`","`std::terminate`.","a&(flag","a'","a()","a)","a);","a+b","a,","a.","a.1:","a.2:","a.4:","a.at(i);","a.character;","a.elem","a.elem;","a.fill(0);","a.i","a.i;","a.id","a.nam","a.numb","a.number;","a.p","a.p;","a.s;","a.subspan(1);","a.swap(b);","a.sz","a.sz,","a.sz;","a.v","a.vr","a.x","a0","a1","a1:","a1;","a1[7];","a1[n];","a2","a2(m);","a2:","a2[9];","a2[m];","a:","a;","a[","a[0];","a[100];","a[10]","a[10];","a[5];","a[7],","a[]","a[i","a[i];","a[n","a[n]","a[po","aa","aa[0]","aa[1]","aba","abandon","abbrevi","abi","abi,","abi.","abi:","abil","abis),","abis.","abomin","abomination.","abort","abort(),","abort();","about)","about,","about.","abov","above)","above).","above.","abrahams.","absenc","absolut","absorb","abstract","abstract1.7.3.","abstract;","abstractbutton","abstraction\"","abstraction,","abstraction.","abstraction:","abstractions,","abstractions.","abstractions:","accent","accept","accept/improve/alter/reject.","acceptable.","access","access,","access.","access:","accessed.","accesses.","accessible,","accessor","accid","accident","accident.","accidents,","accommod","accompani","accord","accordingly:","account.","accu","accumul","accumulate(begin(a),","accumulate(v,","accur","accurately,","achiev","achieve?","acknowledg","acknowledgements1.7.22.","acm","acm,","acquir","acquire/releas","acquisit","acquisition.","acronym","act","act\"","act();","act)","act;","action","action\"","action)","action,","action.","action_mutex;","action_need","action_needed.store(false,","action_needed;","activ","activation).","actual","actually,","ad","adapt","adapt.","add","add(shape*","add_fixup(p);","add_front(link_base*","add_front(new","addabl","added\":","addenda","addison","addit","addition","additionally,","additions,","addr;","address","address:","addressed:","addressed?","adher","adjac","adjust","adl","adl.","adob","adopt","adopt,","adopt_lock);","adoption.","adoption:","advanc","advance(forwarditer","advance(it","advance(randomaccessiter","advantag","advantage.","adve,","advertis","advic","aesthet","aesthetic.","affair","affect","afford","affordable.","afterwards,","again","again,","against","aggreg","aggregation.","agnost","agre","agree,","agree.","agreement","ahead","ahead!\"};","ai","aid","aim","aims1.7.3.2.1.","aims1.7.3.4.","air","aircraft","airplan","aka","aka,","albeit","alert","alex","alexandrescu.","alexandrescu:","algo(const","algo(it","algo(x,","algorithm","algorithm,","algorithm.","algorithm:","algorithm?)","algorithms,","algorithms.","algorithms1.7.15.5.2.","algorithms1.7.6.2.24.","alia","alias","alias,","alias:","aliased,","aliases)","aliases,","aliases1.7.15.5.5.","align","alignment.","aliv","alive.","alive?","all\")","all):","all,","all.","all1.7.7.3.3.","all:","all;","all_cap","alloc","allocate,","allocate.","allocated,","allocation,","allocation.","allocation/dealloc","allocation_error{};","allocations,","allocations.","allocator.","allow","allowed).","allowed,","allowed.","allowed?","alon","along","alreadi","already,","already.","also","also,","also.","also:","also](#rc","also](#ri","altern","alternative)","alternative)1.7.7.7.3.","alternative,","alternative.","alternative1.7.7.13.5.","alternative:","alternatively,","alternatives,","alternatives.","alternatives:","alternatives;","although","altitude_map(const","altitude_map(surface_readings);","alto","altogether.","alway","always)","ambigu","ambiguities.","ambiguities1.7.15.6.8.","ambiguous,","ambit","ambitious:","amen","amount","amount\"","amplifi","an_apple,","analysi","analysis,","analysis.","analyz","analyzed.","analyzer.","anchor","anchors.","ancient","and,","and/or","andrew","annot","annotation:","announc","announced?","announcement:","annoying/danger","annual","anonym","anoth","another),","another.","another_appl","ansi","answer","answer.","anthoni","anti","anticip","antiqu","any)","any,","any.","any:","any_of(inputiter","anyon","anyth","anything\"","anything)","anything,","anything.","anyway)","anyway,","anyway.","anywher","anywhere,","ap;","apart","api","api.","api:","apis,","appar","appear","appendix","appl","apple&","appli","applic","application.","application:","applications.","applies.","apply,","appreci","approach","approach.","approaches,","appropri","appropriate,","appropriate.","appropriate;","appropriately,","appropriately.","approv","approxim","approximation,","approximation.","approximation:","apr,","april","arbitrari","arbitrarili","archetyp","architectur","architecture,","are,","are.","are:","area","area(10'000'000,","area(height,","area(int","area(unsign","area.","areas,","areas:","aren't","arg","arg)","argc,","argh","args&&...","args)","args);","args0,","args1,","args2,","args3,","argument","argument\"","argument,","argument.","argument:","argument_typ","arguments,","arguments.","arguments1.7.10.3.6.","arguments1.7.15.3.2.","arguments1.7.7.","arguments:","argv","argv[])","aris","arithmet","arithmetic\"","arithmetic,","arithmetic.","arithmetic1.7.10.4.1.","arithmetic1.7.10.4.2.","arithmetic1.7.10.4.4.","arithmetic:","around","around,","around.","arr","arr)","arr,","arr;","arr[10];","arr[]","arr[count];","arrang","array","array)","array),","array,","array.","array1.7.18.1.2.","array:","array?","arrays,","arrays.","arrays1.7.10.3.17.","arrays1.7.15.7.3.","arrays:","art","articul","as:","ascii","asic","ask","aspect","assembl","assert","assert(","assert().","assert(0","assert(n","assert(p","assert(s1","assert?","assertion.","assertion:","assertions.","assertions1.7.23.4.","assign","assign(const","assigned,","assignment).","assignment):","assignment,","assignment.","assignment1.7.7.6.4.","assignment1.7.7.6.7.","assignment:","assignments,","assignments?","associ","assuag","assum","assume.","assumed.","assumpt","assumption;","assumptions.","assumptions;","ast","asymmetr","asymptot","async","async()","async(),","async().","async([&]","async([&]{","async(modify1,","async(modify2,","asynchron","at()","at().","at():","at(a,","at(v,","at*","atom","atomic,","atomic_compare_exchange_strong","atomic_shared_ptr","atomicity,","attempt","attent","attention\"","attribut","attribute\"","attributes.","attributes1.7.7.11.12.","august","august,","author","authorit","auto","auto&","auto&&","auto&&).","auto)","auto,","auto.","autom","automat","automatic,","automatically.","av","av)","av);","av.length());","avail","available)","available).","available,","available.","available;","averag","avoid","avoid.","avoidance.","avoided.","awar","away","away,","awkward","awkward.","axel","axiom","axiom(t","axioms.","b","b&","b&)","b'","b's.","b()","b(const","b)","b)),","b));","b),","b);","b){","b*","b+a.","b,","b.","b.data(),","b.end(),","b.id;","b.multiply(10);","b.name","b.number;","b.p","b.p,","b.p;","b.size())","b.sz","b.sz);","b.v;","b.vr;","b.x","b.y;","b1","b1;","b2","b2)","b2))","b2.name","b3","b:","b::create();","b::f1()","b::f3()","b::f;","b::~b","b;","back","backbon","background","backward","bad","bad()","bad();","bad(pun&","bad,","bad.","bad.h","bad:","bad;","bad_alloc","bad_date{};","bad_entri","bad_entry{};","bad_value{p.first};","bad{};","bag","balanc","balance()","ban","ban,","bang","banning:","bar","bar\"};","bar&","bar()","bar());","bar(double)","bar(int","bar(long);","bar,","bar.cpp:","bar;","bare","base","base\"","base&","base&)","base'","base(const","base)","base);","base,","base.","base1.7.7.13.9.","base;","base_flag","base_flag).","based.","bases,","bases.","bases;","basi","basic","basic_std_lib.h:","basics\",","basis,","basis.","batty,","bay","bde","be","be)","be).","be,","be.","be:","be?","be?)","bear","beat","because,","becom","becomes.","been)","been.","befor","begin","beginn","behav","behaved\"","behavior","behavior!","behavior\"","behavior).","behavior,","behavior.","behavior:","behavior?","behavior?)","behaviorless","behind","believ","belong","below","below)","below).","below.","benefici","benefit","benefits,","benefits.","besid","best","best,","bet","better","better)","better,","better.","better:","better;","better?","between","bewar","beware!","beyond","bibliographi","bibliography1.7.1.","big","billion","binari","binary.","binary_search(begin(c),","binary_search(forwarditer","bind","bindings\"","bit","bit.","bit:","bit;","bits.","bitwis","bjarn","blanket","bless","blind","blindli","blink_led(1500ms);","blink_led(2);","blink_led(2s);","blink_led(dur","blink_led(int","blink_led(millisecond","bloat","bloat.","bloated,","bloated.","block","block.","block.)","blocks.","blog","bloomberg:","blue","blue;","bodi","bodies,","bodies.","body)","body).","body,","body.","boehm,","bogu","boilerpl","bonus,","book","book.","bookkeep","bool","bool().","boolean","boost","boost'","boost.intrus","boost?","bore","borrow","both","both.","bottom","bottom_left,","bottom_right);","bottom_right,","bound","bound,","boundary.","bounds).","bounds.","bounds.1:","bounds.2).","bounds.2:","bounds.3:","bounds.4:","bounds:","box","brace","branch","breaches:","break","break1.7.10.2.10.","break;","breed","brew","brief","brief,","briefli","bring","brittl","brittle)","brittle,","brittle.","brittle;","broken.","brows","buck:","buf","buf(1024);","buf,","buf;","buf[128];","buf[max]","buf[max];","buffer","buffer)","buffer.","buffer;","buffer[max];","buffer_s","buffer_size)","bufmax","bufs)","bug","bug)?","bug.","bug:","buggy.","bugs)","bugs,","bugs.","build","builder","builder.","building.","built","bunch","bundl","bundle\",","bundle\";","bundle&","burden","burden.","busi","but:","bypass","byte","byte:","bytes)","b}","c","c\"","c()","c(10,","c)","c++","c++\"","c++\"1.7.21.6.","c++'","c++)","c++,","c++.","c++03","c++11","c++11)","c++11,","c++11.","c++14","c++14\".","c++14)","c++14).","c++14,","c++14.","c++14...","c++14;","c++17","c++17)","c++17).","c++17,","c++17.","c++84,","c++98","c++98'","c++98)","c++98,","c++:","c++;","c,","c.","c.\"","c.100:","c.101:","c.102:","c.103:","c.104:","c.105:","c.109:","c.10:","c.11:","c.120:","c.121:","c.122:","c.126:","c.127:","c.128:","c.129:","c.130.","c.130:","c.131:","c.132:","c.133:","c.134","c.134:","c.135:","c.136:","c.137:","c.138:","c.139:","c.140:","c.145:","c.146","c.146:","c.147,","c.147:","c.148:","c.149:","c.150:","c.151:","c.152:","c.153:","c.160:","c.161:","c.162:","c.163:","c.164:","c.165:","c.166:","c.167:","c.168:","c.170:","c.180:","c.181:","c.182:","c.183:","c.1:","c.20:","c.21:","c.22:","c.2:","c.30:","c.31:","c.32:","c.33:","c.35.","c.35:","c.36:","c.37:","c.3:","c.40:","c.41:","c.42:","c.43:","c.44:","c.45:","c.46:","c.47:","c.48:","c.49:","c.4:","c.50","c.50:","c.51:","c.52:","c.5:","c.60:","c.61:","c.62:","c.63:","c.64)","c.64:","c.65:","c.66:","c.67.","c.67:","c.7","c.7:","c.80:","c.81:","c.82:","c.83:","c.84:","c.85:","c.86:","c.87:","c.89:","c.8:","c.9:","c.con:","c.concrete:","c.copy:","c.ctor:","c.defop:","c.dtor:","c.elem)[]","c.hier","c.hier:","c.hierclass:","c.lambdas:","c.other:","c.over:","c.union:","c/c++","c1","c1,","c11,","c2","c2)","c2),","c2;","c2;)","c3","c89\");","c:","c;","c[sizeof(int)];","cabl","cach","cache,","cache.find(x);","cache.set(x,","cache:","cache;","cached_comput","cached_computation(doubl","cached_result","cached_result;","cached_x","caching,","calcul","calendar","call","call\".","call'","call,","call.","call:","call_f(struct","call_f(y*","call_something(std::forward(t));","call_something(std::forward(x));","call_something(std::move(t));","call_something(std::move(x));","call_something(t);","call_something(x);","callabl","callable,","callback","callback)","callback)1.7.12.1.4.","calle","called,","called.","callee,","callee.","caller","caller'","caller(int","caller,","caller.","caller;","callers'","callers:","calls,","calls.","camelcas","camelcase,","camelcase.","camelcase:","camelcase???","camelcasevari","can't","can't:","can,","can.","can:","canari","candid","candidate.","cannot)","cannot,","canvas)","cap","capabl","capac","capacity)","capacity.","capit","capitalization.","caps.","captur","capture)","capture)1.7.6.2.26.","car","care","careful.","careful:","carefulli","carefully),","carelessli","cargill.","caricature,","carri","case","case).","case);","case,","case.","case.\"","case:","cases)","cases,","cases.","cases.)","cases:","cases?","cast","cast!).","cast)","cast,","cast.","cast1.7.10.3.11.","cast:","cast?","casting.","casting1.7.7.14.","casts)","casts,","casts.","casts.b.","casts.c.","casts1.7.10.3.10.","casts:","casts:a.","cat(const","catch","catch(bufferpool_exhausted)","catch(int","catch(runtime_error)","catchal","categori","categorization:","category,","cater","caught","caus","caution","ccomptr","cd.","ce","ceil(d)","cent","cent;","center","center()","central","centuri","cent{ce},","cern,","cerr","cerr)","cert:","certain","certainli","ch","ch,","ch2;","ch;","chain","chain.","chain:","chaining,","chains)","chains.","challeng","challenging,","challenging.","chanc","chang","change\"","change,","change.","change?","change_speed(2.3);","change_speed(23m","change_speed(doubl","change_speed(spe","changeable;","changed,","changed.","changed/improved.","changes,","changes.","changing.","chaos.","chapter","char","char&);","char*","char*);","char**","char*,","char*.","char*;","char*[maxelem];","char*s;","char;","char[n];","charact","character","character,","character1.7.18.2.5.","character;","characterist","characters\"","characters)","characters),","characters).","characters,","characters.","characters1.7.18.2.4.","characters1.7.18.2.6.","characters;","cheap","cheap,","cheap:","cheaper","cheapest","cheapli","check","check(x);","check,","check.","checkabl","checkable.","checkbox","checked,","checked.","checked:","checker","checkers)","checking,","checking.","checking1.7.10.3.13.","checking:","checks)","checks),","checks,","checks.","choic","choice,","choice.","choice1.7.10.2.2.","choice1.7.10.2.3.","choos","choose,","chosen","chosen.","chrono","chunk","ci)","cin","cin,","cin/cout","circl","circle(point","circle,","circle[10]","circuit.","circular","circumst","circumstances,","claim","claims.","clang","clang'","clarif","clarifi","clariti","clarity.","clash","clash.","clashes,","clashes.","class","class'","class)","class).","class,","class.","class1.7.15.6.4.","class1.7.7.10.3.","class1.7.7.5.13.","class:","class;","classes)","classes),","classes).","classes,","classes.","classes/funct","classes1.7.7.11.13.","classes1.7.7.7.9.","classes:","classic","classif","classifi","claus","clause).","clauses.","clean","clean,","cleaner","cleanest","cleanest,","cleanup","cleanup\"};","cleanup(g1);","cleanup(g2);","cleanup,","cleanup.","cleanup:","clear","clear.","clear:","clearer","clearli","clever","clever\"","clever).","clever.","clients.","cline,","clock","clock.","clock;","clone","clone()","clone().","cloned,","close","close\"","close\".","close,","close/cleanup","close?","close_port(port);","close_port,","closer","clumsi","clumsy,","cm1","cm2;","cm2{ci}","cm3","cm3;","cmp_to_n","cmp_to_n(r.name);","co","code","code\"","code)","code).","code,","code.","code.\"","code/librari","code1.7.15.1.2.","code1.7.15.10.5.","code1.7.28.","code:","code;","code?","codes)","codes,","codes.","coding.","coher","cohes","col","col1","col2","col;","collabor","collect","collect()","collect(istream&","collection\"","collisions,","colloqui","color","color()","color);","color,","col{c}","com","combin","combination,","combination1.7.12.5.3.","combinations.","come","comfort","comfortable,","command","command_line:","comment","comment)","comment.","commenting,","comments)).","comments),","comments).","comments,","comments.","commerci","commit","commit.","committe","committee'","committee,","committee.","committee:","committee?","common","common)","common,","common.","commonli","commonly,","commonmark,","commun","community.","commutative:","commutativity),","comp);","compact","compar","comparable:","compare,","compare_doubl","compare_doubles);","compare_exchange_weak","compare_insensitive(a,","compare_insensitive(const","comparison","comparison),","comparison,","comparisons,","compat","compatible,","compensate.","compil","compilation,","compilation.","compile,","compiled,","compiled.","compiler'","compiler)","compiler).","compiler,","compiler.","compiler/analyz","compiler/languag","compiler:","compilers,","compilers.","complain","complains,","complement","complementari","complementary.","complet","complete),","complete,","completed.","completely.","completeness,","complex","complex(doubl","complex.","complex?","complexity,","complexity.","complexity:","complexity?","compliant","complic","complicated,","complicated?","complicated_algorithm(vector&","complication.","complimentari","compon","components)","components.","components:","compos","composit","compound","comprehens","comprehension.","compress(b);","compressor([&](buffer&","compressor.process(b);","compromis","comput","computation(x);","computation.","computation:","computation_of_zero;","compute()","compute(args)","compute(doubl","compute(int","compute(x);","compute.","compute_string_rep()","compute_string_rep();","computer'","computer,","computer.","computer;","computers,","computers.","con).","con.1:","con.2:","con.3:","con.4:","con.5:","con:","concaten","concatenate(string&,","concentr","concept","concept\".","concept)","concept,","concept.","concept1.7.15.4.3.","concept:","concepts)","concepts).","concepts):","concepts,","concepts.","concepts1.7.15.3.3.","concepts1.7.15.4.","concepts1.7.15.4.4.","concepts1.7.15.5.3.","concepts1.7.15.9.3.","concepts1.7.23.5.1.","concepts1.7.24.","concepts:","conceptu","conceptually,","concern","concerned,","concerns.","concis","concret","concrete/specific/check","concretecommand","concurr","concurrency\",","concurrency.","concurrency/parallel","concurrency1.7.12.1.1.","cond","cond.notify_one();","cond.wait(lck,","cond;","condemn","condit","condition","condition.","condition1.7.12.1.13.","condition:","condition_vari","condition_variable).","condition_variable,","conditional,","conditions,","conditions.","conditions1.7.10.3.","conditions:","confer","confid","config_file;","configur","conform","confus","confusing,","confusing.","confusion.","confusion:","conjectur","connect","connection,","consecut","consensu","consequ","consequenti","consequently,","consid","consider","consider,","consider.","consider:","considered?","consist","consistency,","consistency.","consistent1.7.7.4.","consistently).","consistently,","consistently1.7.28.1.1.","consistently:","const","const\"","const\";","const&","const&,","const&1.7.7.6.2.","const)","const).","const,","const.","const1.7.10.3.12.","const1.7.6.2.3.","const1.7.6.2.4.","const;","const_cast","const_cast(cache).set(x,","const_cast(i)","const_cast(static_cast(*this).get_bar());","const_cast.","const_cast:","const_casts.","const_iter","constant","constant)","constant,","constant.","constant:","constantli","constants\",","constants\";","constants.","constants1.7.10.3.7.","constants:","constants?","constexpr","constexpr,","constexpr.","constexpr1.7.6.1.5.","constrain","constraint","constraint.","constraints),","constraints,","constraints.","constraints1.7.15.4.7.","construct","construct.","constructed,","constructed:","constructed;","constructible.","construction).","construction.","construction1.7.10.3.19.","construction:","constructor","constructor'","constructor)","constructor),","constructor).","constructor,","constructor.","constructor/destructor","constructor1.7.29.","constructor1.7.7.11.2.","constructor1.7.7.5.5.","constructor:","constructor;","constructors)","constructors).","constructors,","constructors.","constructors1.7.7.5.1.","constructors1.7.7.5.11.","constructors:","constructs\").","constructs,","consts,","consult","consum","consuming,","contact","contain","container'","container,","container.","container1.7.12.1.5.","container1.7.12.1.6.","container1.7.18.1.3.","container:","container::first()","container::iter","container?","container_traits::value_typ","container_traits::value_type;","containers,","containers.","containers1.7.18.1.1.","containers:","contains.","content","content.","context","context.","contexts,","contigu","contiguous;","contiguous_it","continu","continue.","contract","contract,","contract.","contracts)","contracts),","contracts/assertions:","contracts:","contradict","contrari","contrast","contrast,","contribut","contribute)","contribute?","contributing.md.","contributor","control","control\"","control,","controls)","conveni","convenience,","convenience.","convenient&);","convenient&,","convenient.","convent","convention","convention,","convention.","convention:","conventional,","conventional,not","conventional.","conventions.","converg","convers","converse.","conversely,","conversely:","conversion)","conversion,","conversion.","conversions.","conversions1.7.10.3.8.","conversions:","convert","converted.","convey","convolut","cooper","coord","coordin","cope","copi","copied,","copied.","copied/mov","copied:","copy\"","copy(/*...","copy(/*...*/);","copy(a.p,","copy(it","copy(span","copy(vi.begin(),","copy(vs.begin(),","copy)","copy),","copy,","copy.","copy/mov","copy/valu","copy1.7.7.6.3.","copy2","copy:","copy?","copy_circle();","copy_helper(first,","copy_helper(in,","copy_helper(it","copy_n(const","copy_n(span","copy_n(t*","copy_trait","copy_trait::tag{})","copyabl","copyable):","copyable,","copyable.","copyable/mov","copyable?","copying,","copying:","copyright","corba)","core","corner","corollary:","corpor","correct","correct)","correct.","correct/saf","correct;","corrections).","correctli","correctly)","correctly,","correctly.","correctness).","correctness,","correctness.","correctness:","correl","correspond","corrupt","corruption,","corruption.","cost","cost).","cost,","cost.","cost:","costli","costly.","costs.","costs1.7.15.2.","couldn't","count","count\"","count)","count).","count.","counter","counterproduct","counts,","coupl","cours","course,","cout","cout_my_class","cout_my_class(const","covari","cover","covered.","covered?","cp.100:","cp.101:","cp.102:","cp.110:","cp.111:","cp.1:","cp.200:","cp.201:","cp.20:","cp.21:","cp.22:","cp.23:","cp.24:","cp.25:","cp.26:","cp.2:","cp.31:","cp.32:","cp.3:","cp.40:","cp.41:","cp.42:","cp.43:","cp.44:","cp.4:","cp.50:","cp.60:","cp.61:","cp.8:","cp.9:","cp.con:","cp.etc:","cp.free:","cp.mess:","cp.par:","cp.vec:","cp:","cpl.1:","cpl.2:","cpl.3:","cpl:","cppcon","cppcorecheck","cppcoreguidelin","cpprefer","cpu","cracker","craft","crash","crash.","crashes,","crashes.","creat","create()","create(),","created,","created.","creation","creation,","creation.","creep:","crisi","crisp","criteria","criteria.","criteria:","critic","critical)","critical,","critical.","cross","crtp","crtp/static?","crucial","cryptic","cryptic.","cstring_span","ctor","ctors,","ctors/dtor","cumbersome,","current","current_element_index","current_vector)","current_year()}","currently,","custom","customiz","cut","cv.notify_one();","cv.wait(lock);","cv;","cycl","cycles\",","cycles,","cycles.","cycles;","cyclic","cyclomat","czstring","c{};","d","d&","d'","d()","d)","d)));","d));","d);","d*","d,","d.","d.clone();","d.data","d.f();","d.f(1)","d.more_data","d.multiply(10);","d1","d1.unit","d1.valu","d2","d2'","d2.unit","d2.valu","d2;","d:","d::","d::clone","d::create();","d::d(int","d::f1()","d::f3()","d;","d[0].i","damag","damian","danger","dangerous,","dangerous.","dangl","dangle.","danish,","data","data\"","data)","data).","data);","data,","data.","data1.7.7.11.9.","data:","data;","data?","data[100];","datarecord","data{","date","date\"","date()","date();","date(int","date)","date);","date.","date2","date2(int","date{month::october,","daunt","day","day&","day()","day::mon","day::sat;","day::sun)","day{++d};","dcount","dd","dd);","dd,","dd}","de","deadlock","deadlock,","deadlock.","deadlock:","deadlocks.","deal","dealloc","deallocate),","deallocated,","deallocation)","deallocation),","deallocation,","deallocation1.7.9.1.1.","deallocations,","dearli","debates.","debug","debuggers.","debugging,","debugging.","debugging:","dec","decad","decades),","decades.","decay","decay)","decay,","decay:","decemb","dechev","dechev,","decid","decide:","decis","declar","declaration,","declaration.","declaration1.7.10.1.7.","declaration1.7.7.5.9.","declaration:","declarations.","declarations1.7.10.1.1.","declare/r","declared.","decltype(t.get_bar())","decorate(b);","decorator([&](buffer&","decorator.process(b);","decreas","decrement","deduc","deduced.","deduced:","deducing:","deduct","deem","deep","deepli","deeply:","default","default\"","default\".","default)","default),","default,","default.","default/empti","default:","default;","default?","defaults.","defend","defens","defer","defi","defin","defined,","defined.","defined;","defining/overrid","definit","definition'","definition,","definition.","definition/implementation.","definition:","definitions1.7.15.6.1.","definitions1.7.6.1.1.","degener","degradation,","delay","deleg","delet","delete(void*);","delete)","delete),","delete).","delete,","delete.","delete1.7.10.3.16.","delete;","delete[]","delete[],","deleted)","deleted,","deleted.","deleter:","deletes,","deletes.","deletion).","deletion,","deletion.","deliber","deliv","delta","delta,","deltas,","delus","demonstr","demonstrated.","denni","denot","departur","depend","dependencies.","dependencies1.7.15.6.2.","dependency:","deploy","depositories,","deprecated.","depriv","depth.\"","derefer","dereferenc","dereference.","deriv","derivation.","derive1","derive2","derived()","derived).","derived1","derived2","derived::g();","derived::g,","derivedi","derived{\"her","describ","descript","descriptor","design","design)","design).","design,","design.","design:","designed,","designed.","designs.","desir","desirable,","desirable.","desired,","desired.","desired1.7.7.7.","despis","destination)","destination.","destroy","destroyed,","destroyed.","destroying,","destruct","destruction).","destruction,","destruction.","destruction1.7.12.1.12.","destruction1.7.7.4.2.","destructor","destructor'","destructor).","destructor,","destructor.","destructor1.7.7.11.3.","destructor1.7.7.4.3.","destructor1.7.7.4.5.","destructor:","destructor;","destructor?\"","destructors,","destructors.","destructors1.7.7.3.","destructors1.7.7.4.1.","destructors1.7.7.7.4.","detach","detach()","detach(),","detach().","detach(p);","detach.","detached().","detached,","detaches.","detail","detail,","detail.","detail::helper(t);.","details)","details);","details,","details.","details.\"","details1.7.15.5.4.","details;","detect","detect.","detected.","detected/prev","detection.","determin","determined,","determinist","detriment","develop","developers,","development,","development.","devic","device.","devis","devised.","devot","dewhurst.","diagnos","diagnost","diagnostic.","diagnostics,","dictat","dictionari","did,","didn't","die","dies\").","differ","differ.","differ;","difference\").","differences.","different.","differenti","differentiator,","difficult","difficulti","digit","digits,","dilemmas.","dir","direct","directli","directly,","directly.","directly:","directori","disabl","disagre","disagrees,","disallow","disambigu","disappear","disappoint","disastr","disciplin","discipline:","disclaim","discourag","discouraged),","discouraged.","discov","discoveri","discrimin","discuss","discussion)","discussion.","discussion1.7.28.1.","discussion:","disguis","disguise.","disguise;","disjunct","disk","dispatch","dispatch,","dispatch?","dispel","dispers","display_error_window();","disposal.","disprov","disrupt","distanc","distance);","distant","distant)","distinct","distinguish","distract","distracting.","distracts.","distribut","distribution.","distrust","div(123456,","div_t","divid","divide(int","divis","do","do,","do.","do.\"","do0();","do1();","do1.7.7.3.2.","do2();","do:","do;","do?","do_bar(int","do_bar(x","do_bar(x);","do_something()","do_something();","do_something(act","do_something(int","do_something(x);","do_something_else();","do_something_with(iter);","do_something_with(result.first);","do_stuff()","do_thi","do_this(foo*","do_this.","document","document,","document/com","document1.7.3.6.","documentation,","documented,","documenting,","documents)","dodg","does)","does,","does.","doesn't","doing\"","doing,","domain","domain,","domain.","domains,","domin","don't","don't,","don't.","don't:","don't;","done","done)","done,","done.","done?","door","doubl","double&","double'","double(int","double[s]},","doubles).","doubles.","doubt","down","down)","downcast","downcast:","downcasts,","downright","dozen","draconian","draft","draft.","dragons!","dramat","draw","draw()","draw(),","draw();","draw(arr,","draw(const","draw(int","draw(point","draw(shape*","draw2()","draw2(arr);","draw2(span(arr));","draw2(span);","draw3(arr);","draw3(span);","draw_line(int,","draw_line(point,","draw_rect(int,","draw_rect(p.x,","draw_rectangle(p,","draw_rectangle(point","drawableuiel","drawback","drop","ds","dtor","dual","duck","dumb","duplic","duplication,","durat","duration,","duration_cast(time_to_blink);","dure","dx","dyn_array","dynam","dynamic)","dynamic:","dynamic_cast","dynamic_cast(item))","dynamic_cast(pb))","dynamic_cast(pb);","dynamic_cast(ps))","dynamic_cast(ps);","dynamic_cast).","dynamic_cast,","dynamic_cast.","dynamically,","dynarray","dynarray?","e","e)","e);","e){","e,","e.","e.12:","e.13:","e.14:","e.15:","e.16:","e.17:","e.18:","e.19:","e.1:","e.25:","e.26:","e.27:","e.28:","e.2:","e.30:","e.31:","e.3:","e.4:","e.5:","e.6:","e.7:","e.8:","e.g.","e.g.,","e.i;","e.s;","e.typ","e.type;","e:","e;","each","earli","earlier","early.","earlyusersend","eas","easi","easier","easier.","easiest","easili","easily)","easy,","easy.","eat","ec","ec;","ecbs).","edg","edge_color;","edinburgh.","edition)","edition).","edition.","editor","editor/maintainer?","editors:","effect","effect,","effect.","effective).","effectively.","effects,","effects.","effects:","effici","efficiency\".","efficiency)","efficiency)1.7.28.1.7.","efficiency.","efficiency:","efficient,","efficient.","efficient.\"","efficient:","efficiently,","efficiently:","efficiently;","effort","effort,","effort;","efforts.","either.","either:","elabor","elaborate.","eleg","elegantli","elem","elem;","elem[s];","elem_max)","elemcount","element","element.","elements)","elements,","elements.","elements:","elements;","elem{new","elem{nullptr},","elimin","elis","else\"","else'","else,","elsewher","elsewhere)","elsewhere.","email","email(first","email,","emb","embed","emerg","emit","emphas","emphasi","emphat","employe","employee(const","employee::employee(const","empti","empty,","emul","enabl","enable_if","enable_if,","enable_if1.7.15.5.9.","encapsul","encapsulated.","encapsulation.","encapsulation:","enclos","encod","encount","encourag","encouraged,","encrypt(b);","encryptor([]","encryptor.process(b);","end","end(a),","end(c));","end(c),","end(sockets),","end(v),","endeavor","endl","endl1.7.18.3.6.","ends).","ends.","enforc","enforce)","enforce,","enforce.","enforce;","enforceability.","enforceable\"","enforceable)","enforceable,","enforced,","enforced.","enforcement,","enforcement.","enforcement1.7.3.5.","engin","english","english.","enhanc","enough","enough,","enqueu","ensur","ensure.","ensures()","ensures(buffer[0]","ensures(r","enter","entir","entiti","entity.","entri","entries.","entry.","enum","enum)","enum.","enum.1:","enum.2:","enum.3:","enum.4:","enum.5:","enum.6:","enum.7:","enum.8:","enum:","enumer","enumeration).","enumeration,","enumeration.","enumerations,","enumerations.","enumerations1.7.9.","enumerations:","enumerators.","enums,","enums.","environ","environment","environment,","environment.","environment:","environments.","eop","ephemeral?","equal","equal(a.p,","equal.","equal?","equal_rang","equal_range(begin(c),","equal_range(forwarditer","equality.","equality_comparable,","equalitycompar","equalitycomparable,","equalitycomparable>,","equival","equivalent)","equivalent.","equivalent1.7.7.14.4.","equivalent1.7.7.14.5.","equivalently,","equivalently.","equivalents)","erased,","erasur","erasure).","erasure1.7.15.6.","err","errata","errno)","errno,","errno.","erron","error","error(\"impossible!\");","error(\"no!\");","error()","error(int","error):","error,","error.","error1.7.7.13.4.","error:","error?","error_cod","error_code)","error_code;","error_code]","error_ind","errors\"","errors).","errors,","errors.","errors1.7.18.2.","errors:","err};","es.10.","es.100:","es.101:","es.102:","es.103:","es.104:","es.105:","es.106:","es.107:","es.10:","es.11:","es.12:","es.1:","es.20:","es.21:","es.22:","es.23:","es.24:","es.25:","es.26:","es.27:","es.28","es.28.","es.28:","es.2:","es.30,","es.30:","es.31,","es.31:","es.32.","es.32:","es.33:","es.34:","es.40:","es.41:","es.42:","es.43),","es.43:","es.44:","es.45:","es.46:","es.47:","es.48:","es.49:","es.50:","es.55:","es.56:","es.5:","es.60:","es.61:","es.62:","es.63:","es.64:","es.65:","es.6:","es.70:","es.71.","es.71:","es.72:","es.73:","es.74:","es.75:","es.76:","es.77:","es.78:","es.79:","es.7:","es.84:","es.85:","es.86:","es.87:","es.8:","es.9:","es.dcl:","es.expr:","es.stmt:","es:","escap","esoter","especi","essenc","essenti","essential,","essential.","establish","estim","etc.","etc.)","etc.).","etc.);","etc.,","etc...","etc.:","evalu","evaluation)","evaluation,","evaluation.","evaluation1.7.10.3.5.","evaluation:","evaluation;","even","event","eventu","eventually).","eventually,","ever,","everybodi","everybody.","everyon","everyth","everything\"","everything).","everything.\"","everywher","evil","evil,","evil.","evolut","evolv","exact","exactli","examin","examined.","exampl","example).","example,","example.","example.)","example:","example;","example?","examples)","examples,","examples.","examples:","examples;","exce","exceedingli","except","exception","exception&","exception).","exception,","exception.","exception1.7.7.5.4.","exception:","exceptional.","exceptional?\"","exceptions).","exceptions,","exceptions.","exceptions:","exceptions?","excess","exclud","exclus","execut","executable:","executed.","execution.","exhaust","exhaustion,","exhaustion.","exhibit","exist","exist,","exist:","existing,","exists,","exists.","exists;","exit","exit.","exit:","exit;","exit?","exiting.","expand","expansion,","expect","expect.","expectations.","expected\"","expected.","expects()","expects(0","expects(b","expects(height","expects(i","expects(p","expects(x","expects)","expects.","expens","expensive.","experi","experienc","experience,","experience.","experiment","experiment).","experimental))","experimentation.","expert","expert.","expertis","experts.","explain","explan","explanation.","explicit","explicit,","explicit.","explicit1.7.7.5.8.","explicit:","explicitli","explicitly)","explicitly,","explicitly.","explicitly1.7.9.1.3.","explicitly:","exploit","expon","exponent);","exponenti","expos","exposur","express","expressed:","expression\"","expression:","expressions).","expressions.","expressions1.7.10.3.1.","expressions1.7.10.3.2.","expressions:","extend","extens","extensible)","extensible,","extensible.","extension)","extension,","extensions\"","extensions,","extensions.","extent","extern","extra","extract","extract_date(const","extract_date(date);","extrem","f","f()","f())","f(),","f();","f(*g_p);","f(*my_widget);","f(*pin);","f(++i,","f(/*t*/)","f(0);","f(0,","f(1,","f(2)","f(2);","f(a,","f(arg);","f(array","f(boost::intrusive_ptr","f(buffer);","f(ccomptr","f(char*","f(char*)","f(char*);","f(complex);","f(const","f(const_cast(p));","f(double);","f(flags);","f(fopen(\"a","f(forward(args)...);","f(fstream&","f(gsl::span","f(i);","f(int","f(int)","f(int);","f(int*","f(int*);","f(int**)","f(int*[])","f(j);","f(make_unique(),","f(my_widget);","f(new","f(not_nul","f(nullptr);","f(p.get());","f(q);","f(shared_ptr&","f(span","f(span)","f(stack_widget);","f(std::vector&","f(string&","f(t","f(t);","f(t*,","f(this);","f(unique_ptr(new","f(v,","f(vector&","f(void)","f(void);","f(widget&","f(x);","f(zstring","f({2*pi,","f)","f);","f,","f.","f.15:","f.16","f.16:","f.17:","f.18","f.18).","f.18.","f.18:","f.19).","f.19.","f.19:","f.1:","f.20,","f.20.","f.20:","f.21:","f.22:","f.23:","f.24","f.24:","f.25","f.25:","f.26:","f.27:","f.2:","f.3:","f.4.","f.42:","f.43.","f.43:","f.44:","f.45:","f.46:","f.47.)","f.47:","f.4:","f.50:","f.51:","f.52:","f.53:","f.54:","f.55:","f.5:","f.60:","f.6:","f.7:","f.8:","f.9:","f.call:","f.def:","f.read(buf,","f1()","f1();","f1(const","f1(czstring","f1(e","f1(int","f1(int)","f1(int);","f1(int*","f1(n::x&","f1(span","f1(std::byte*","f1(zstring","f1a()","f2()","f2())","f2();","f2()}","f2(array","f2(e","f2(int","f2(int)","f2(int*","f2(n::x&","f2(new","f2(string","f2(zstring","f3()","f3();","f3(array","f3(double)","f3(double);","f3(int","f3(int);","f3(int*","f3(make_unique(n),","f3(n::x&","f3(unique_ptr,","f4()","f4();","f4(const","f4(int","f4(span);","f4(span{v});","f4(v);","f4(vector&);","f5(int","f6(int","f7","f7(int","f:","f;","fac().","fac(int","face","facebook:","facet","facil","facilit","facilities)","facilities).","facilities,","facilities.","facilities1.7.15.9.6.","facilities?","facility.","facility:","fact","fact,","facto","factor","factori","factorial:","factory.","fade","fail","fail,","fail.","fail1.7.7.4.7.","fail1.7.7.7.6.","failed!","fails.","fails;","failur","failure,","failure.","failure:","failures)","failures.","fair","fairli","fake","fall","fallthrough","fallthrough.","fals","false)","false.","false;","famili","familiar","famou","faq","faq,","faq.10:","faq.1:","faq.2:","faq.3:","faq.4:","faq.50:","faq.51:","faq.52:","faq.53:","faq.54:","faq.55:","faq.56:","faq.57:","faq.58:","faq.59:","faq.5:","faq.60:","faq.6:","faq.7:","faq.8:","faq.9:","faq:","far","far,","far.","fashion","fashion,","fashion.","fast","fast),","fast.","fast;","faster","faster)","faster):","faster,","faster.","faster/easi","fastest","fat\".","fatal","favor","favorit","fclose(f);","fclose(input);","fclose);","fct();","fct(string&","fear","feasibl","feasible)","feasible)1.7.15.5.6.","feasible,","feasible.","feasible..","featur","feature,","feature.","feature?","features,","features.","features:","features;","features?","feb","feb,","feedback.","feel","fenc","fertil","few","few.","fewer","fib10","field","field.","fighter","figur","file","file\"","file\",","file\"};","file(s)","file)","file*","file,","file.","file.h:","file.init();","file.read();","file1.c","file1.cpp","file1.cpp:","file1.h:","file2.c","file2.cpp","file2.cpp:","file2.h:","file3.h:","file:","file;","file_handl","file_handle::file_handle(const","filename.","files,","files.","files1.7.18.","filesystem","fill","fill();","fill(b,","fill(b.begin(),","fill(package&);","fill,","fill_color;","final","final)","final.","final1.7.7.11.4.","final;","final_act","final_action(a","final_action.","final_action{act};","final_action{f}","finalize(intermediate,","finally()","finally([]{","finally([f]","finally([p]","finally(a","finally(f)","finally.","find","find(begin(v),","find(int","find(it","find(map&","find(node*","find(span","find(t","find({vec.begin(),","find_all(buf,","find_all(const","find_id(const","find_if(v,","find_if(vr.begin(),","find_index(vector&","fine","fine.","finish","finished.","finished:","finished;","finit","fire","fire.","firmer","firmli","first","first()","first();","first(firstname),","first,","first.","first1,","first2,","first;","first?","first_month","first_month;","firstname,","fit","five","five\"","five).","fix","fix.","fix:","flag","flag)","flag1","flag1,","flag1;","flag2)","flag2);","flag;","flagged,","flagged.","flags.","flatli","flavor","flexibility.","flexibl","flexible,","fli","flight","float","flow","flt_radix","fluent","flush()s.","flush.","flush;","fmt)","fn","focu","focus","focus.","folder","folding)","folklore.","follow","follow.","following:","follows:","foo","foo&","foo&).","foo'","foo()","foo()),","foo();","foo(doubl","foo(int","foo(int)","foo(int);","foo(std::round(x));","foo,","foo.","foo.cpp","foo.cpp.","foo.cpp:","foo.h","foo.h:","foo::act","foo::operator=(const","foo::operator=(foo&&","foo_bas","foobar","foobar(int);","foobar.","foobar.h:","foobar_error;","foobar_error};","fool","foolproof","fopen(\"a","fopen()),","fopen(const","fopen(name,","fopen,","fopen/fclose,","for\"","for.","for:","for_each","for_each(par,","for_each(v,","forbid","forbidden","forc","forev","forever.","forget","forgot","forgotten","forgotten.","fork","form","formal","formal,","format","former","forms)","formul","formula","formulation:","fortunately,","forward","forward(x)","forwarder(t&&","forwarding)","forwarding,","forwarding.","forwarditer","forwards.","for~mat~ting.","foster","found","foundat","foundation'","foundation,","foundation;","four","fourth","fprintf(connection,","fragil","fragment","free","free\"","free()","free()1.7.9.1.2.","free(p);","free(p2);","free.","free_slot","free_slots.","freedom","freeli","freely.","freestand","french","frequent","frequent)","frequent,","fri,","friend","friendli","friendly),","friendly).","friendship","from).","from,","from.","from_lin","front","front\".","front()","fruit*","fruits.","fs","fs(\"foo\");","fs,","full","fulli","fun","fun(make_shared(a,","fun(shared_ptr","fun(shared_ptr(new","fun(sp1,","fun.","func","func(zstr","func1(","func1(val);","func1_muon(doubl","func1_muon(val,","func1_tau(","func1_tau:","func2(intermediate);","funct1_tau(doubl","function","function'","function)","function)1.7.6.2.22.","function,","function.","function1.7.10.2.","function1.7.15.6.6.","function1.7.7.7.5.","function:","function;","function?","functionality,","functionality.","functions\"","functions)","functions).","functions,","functions.","functions/typ","functions1.7.10.3.15.","functions1.7.6.1.","functions1.7.6.1.2.","functions1.7.6.1.9.","functions:","functions;","fundament","fundamental,","fundamentally,","further","further,","furthermore,","futur","future).","future,","future.","fwd_iter","fx","f{name};","g","g(&a[0]);","g()","g())","g();","g(a);","g(av.data(),","g(const","g(int","g(int*","g(p.get());","g(shared_ptr);","g(unique_ptr);","g(y);","g);","g,","g.","g1","g1(a);","g1(span","g1_error;","g1_error};","g2","g2(int","g2))","g2;","g2_error;","g2_error};","g3(int","g;","g_p","g_p;","gabriel","gadget","gadget&","gadget(s);","gadget*","gadget:","gadget_construction_error;","gadget{n};","gain","gap","garag","garbage).","gather","gathering,","gcc","gcc.","gear","gener","general)","general),","general,","general.","generality.","generality:","generalization.","generalize.","generally.","generate.","generate_first_string(buffer,","generate_second_string(buffer,","generated)","generic,","genuin","geometr","geometric_attribut","geometric_attributes.","geosoft.no:","get","get()","get().","get(int","get(t&","get(v);","get.","get_bar()","get_bar_impl(*this);","get_bar_impl(t&","get_hardware_memory_location();","get_id()","get_large_vector()","get_large_vector();","get_shape(istream&","get_str()","get_string(cin);","get_string(istream&","get_val()","get_val(int","get_value()","get_value();","get_wheel(size_t","get_x()","get_y()","getc())","getline()","getline(cin,","getline(cin,s);","gets()","gets_s(),","getter","getter/sett","getx","getx()","gfm","girou.","gitbook最近修改:","github","github.","github.com/cplusplus.","github.com/isocpp?","github.com/microsoft/gsl","give","given","glad","glob","glob;","global","global)","globals,","glorifi","glossari","glossary1.7.31.","go","go!\"};","go\"}};","goal","goal,","goe","gone","good","good,","good:","goof","googl","gotcha","goto","goto.","goto1.7.10.2.8.","goto:","gotten","gotw","gp","gplv3","gracefulli","gradual","grammar","grammar,","grammar.","granular","graph","gratuit","great","great,","greater","greater(doubl","greater);","greater_than(7));","greater_than_7(doubl","greater_than_7);","greatest","greatli","greatly.","green","group","grow","grown","growth","gsl","gsl'","gsl)","gsl.","gsl.assert:","gsl.concept:","gsl.owner","gsl.owner:","gsl.ptr:","gsl.util:","gsl.view:","gsl:","gsl::finally()","gsl::joining_thread","gsl::joining_thread.","gsl::narrow","gsl::narrow_cast","gsl::not_nul","gsl::owner),","gsl::owner,","gsl::span","gsl::string_span","gsl::string_span.","gsl?","guarante","guarantee.","guarantees,","guarantees.","guard","guards)","guards.","guard{my_mutex};","guess","guid","guidanc","guide)","guide.","guide?","guide???","guidelin","guideline:","guidelines\"","guidelines,","guidelines.","guidelines1.7.2.","guidelines1.7.21.3.","guidelines?","gval","gx","gx.","gx;","g{n};","h","h()","h();","h(const","h(int&);","h,","h.","h1","h1.get();","h2","h2.get();","h3","h3.get();","h;","habit","hadn't","half","hall,","hamper","hand","hand,","handcod","handi","handl","handle,","handle.","handle1.7.28.1.3.","handle1.7.28.1.4.","handle:","handle;","handled.","handled?","handler","handlers\".","handlers)","handles)","handles).","handles)1.7.28.1.6.","handles,","handles.","handles1.7.7.9.","handling,","handling.","handling1.7.14.","handling???.","handwritten","handwritten).","happen","happen.","happening,","happens)","happens.","hard","hard,","hard.","hard:","harder","harder.","hardest","hardwar","hardware\",","hardware).","hardware,","hardware.","hardware/compil","harm","harm\"","harm.","has.","has_divide;","has_equ","has_minu","has_multipli","has_not_equ","has_not_equal;","has_plu","has_plus;","hash","hash.","hash_tbl","hashes.","have","have)","have.","haven't","hazard","hazard.","head","head,","head.load();","head;","header","header)","header,","header.","header:","header[16];","headers.","heap","heap),","heap,","heap.","hear","heard","heart'","heartbeat","heartbeat();","heartbeat,","heat","heavili","heed","height","height*width;","height,","height;","height_width);","held","held.","hello","help","help!","help!\"","help,","help:","helper","helper(first,","helper(i);","helper(t)","helpful,","helpful.","henc","hence,","henricson","herb","here","here'","here).","here,","here.","here;","here?","here?)","herein","heurist","heuristic.","heuristic:","heuristics,","heuristics.","hidden","hidden/abstracted.","hide","hiding.","hiding:","hier:","hierarch","hierarchi","hierarchies,","hierarchies.","hierarchies1.7.7.1.","hierarchies1.7.7.1.2.","hierarchies:","hierarchies;","hierarchies?","hierarchy,","hierarchy.","hierarchy1.7.15.7.2.","hierarchy1.7.7.13.1.","hierarchy:","hierarchy:1.7.7.11.1.","high","high\")","higher","highest","highli","hinder","hinder).","hint","hint);","histor","history.","hnd","hnd;","hnd?","hoc","hoc.","hoisting,","hold","holds,","holds.","home","homogen","hope","hopefulli","horrendous.","horribl","horror!","host","how.","how/when","how:","how?","however,","however;","hpl","html","http://www.open","huge","human","human,","humans.","humans;","hundr","hungarian","hurry,","hurry.","hyslop.","i'm","i)","i);","i){","i++;","i,","i.10:","i.11:","i.12:","i.13:","i.1:","i.22:","i.23:","i.24:","i.25.","i.25:","i.26:","i.27:","i.2:","i.30:","i.3:","i.4:","i.5","i.5:","i.6:","i.7","i.7:","i.8:","i.9:","i.??.","i/o","i/o,","i/o.","i/o1.7.18.3.4.","i0","i1","i1;","i2","i:","i;","i_give_up{information};","id","id()","id();","id++;","id,","id.","id;","idea","idea.","idea:","idea;","ideal","ideal:","ideally,","ideals):","ideals.","ideas)","ideas,","ideas1.7.20.","ideas:","ident","identifi","identifier:","identifiers:","identitycast)","idiom","idiom,","idiom.","idiom:","idiom?","idiomat","idioms,","ids.","ieee","if\")","if(strcmp(p1,","if,","if/when","if_you_must_pun(int&","ifstream","ifstream)","ifstream{argv[2]};","ifstream{p}}","ignor","ignorance.","ignored),","ignored.","ii","ii)","ii,","ill","illustr","im","imag","imagin","imit","immedi","immediate,","immediately,","immensely.","immort","immortal*","immortal{};","immut","immutability1.7.15.","immutable,","immutable_str","immutable_string(const","impact","impacted.","imperfectli","impl","impl(int","impl::circl","impl::shap","impl::smiley","impl;","implement","implement,","implement.","implementation(s).","implementation,","implementation.","implementation:","implementations).","implementations,","implementations.","implementations;","implemented.","implementers.","implementor","impli","implic","implicit","implicit,","implicit;","implicitli","implicitly)","implicitly.","implied).","import","important)","important,","important.","importantli","importantly,","impos","imposs","impossible)","impossible.","impoverish","improv","improve).","improve.","improved.","improvement,","improvement.","improvements.","im};","in.","in.0:","in.aims:","in.force:","in.not:","in.sec:","in.struct:","in.target:","in/out","in/with","in2","in2,","in:","inabl","inaccurate,","inadvert","inappropri","inbuf)","includ","include:","including:","inclus","inclusion.","incomplet","incomplet,","incomplete,","incomplete.","inconclusive.","inconsist","inconsistent,","incorpor","incorrect","incorrectli","incorrekt,","increas","increment","increment1()","increment1(int*","increment2(a);","increment2(span","increment2({a,","incremented\"","incur","inde","indent","independ","independently,","indetermin","index","index(const","index)","index2(const","index;","indexing.","indic","indicates)","indicates,","indicator.","indicator:","indicator?","indices,","indices.","indirect","indirection.","indirections)","indirections.","indirectli","indirectly)","individu","induct","industri","ineffici","inefficient,","inefficient.","inefficient:","inevitable.","inexplicit,","inf)","infeas","infeasible,","infeasible.","infinit","infinite,","inflex","influenc","influential.","inform","informal,","informal/non","information\").","information,","information.","information1.7.6.2.2.","information:","infrequ","inher","inherit","inheritance.","inheritance1.7.7.11.5.","inheritance:","inhibit","init","init()","init();","init);","init.first;","init.second;","init.size()","initi","initialization\"","initialization\")","initialization\").","initialization)","initialization,","initialization.","initialization1.7.12.5.5.","initialization1.7.7.5.12.","initialization1.7.7.6.","initialization:","initialization;","initialize(systemparam","initialize,","initialize.","initialize:","initialized.","initialized:","initialized;","initializer.","initializer;","initializer_list","initializer_list.","initializers).","initializers.","initializers1.7.7.5.10.","initially,","inject","inlin","inline.","inline1.7.6.1.6.","inline:","inner","innoc","innocent.","innocent_bystand","innocu","inp","inp;","input","input)","input,","input.","input1.7.18.3.3.","input:","input_it","input_iter","inputiter","inputiterator1","inputiterator2","inputrange2","inp{new","inquiri","ins.","insensit","insert","insert(position)","inserted]","insid","insidi","insight","insight.","insist","inspir","inspiration.","instanc","instant","instanti","instantiation.","instantiations.","instead","instead)","instead,","instead.","instead1.7.7.11.6.","instead1.7.7.5.7.","instead:","instead?","instruct","instrument","insuffici","insul","int","int&","int(ch);","int(d);","int(lng);","int(p);","int)","int);","int*","int*)","int,","int.","int.\"","int32),","int32_t.","int64","int64_t","int:","int[10];","int[12];","int[700];","int[initial_size];","int[n]);","int[n],","int[n];","integ","integer.","integer:","integers,","integers.","integr","intellig","intend","intended.","intended?","intent","intent,","intent.","intention","inter","interact","interaction,","interchang","interest","interfac","interface)","interface)),","interface,","interface.","interface/declar","interface1.7.15.8.","interface:","interface;","interfaces)","interfaces,","interfaces.","interfaces1.7.15.5.1.","interfaces1.7.6.","interfaces1.7.7.11.11.","interfer","interleav","interleaved.","intermedi","intermediate);","intermediate;","intermingl","intern","internal/nonexport","interoperability.","interpret","interrelated.","intersect(t*","interv","interven","into\"","introduc","introduce.","introduct","introduction1.7.3.1.","intrus","intrusive_ptr","intrusive_ref_counter).","ints,","ints.","ints?","int{7};","int{ch};","int{d};","int{lng};","int{p};","invalid","invalid_data{};","invalidation.","invari","invariable.","invariant)","invariant).","invariant,","invariant.","invariant1.7.7.5.2.","invariant:","invariant;","invariants)","invariants,","invariants.","invent","invis","invisible,","invoc","invok","invoke(f","invoked,","invoked.","invoked;","involv","involved,","involved.","involves:","ios_base::sync_with_stdio(false)","ios_base::sync_with_stdio(false)1.7.18.3.5.","ios_base::sync_with_stdio(false);","iostream","iostream1.7.18.3.1.","iostreams:","irregular","is)","is);","is,","is.","is:","is_contigu","is_contiguous::value;","is_sign","is_valid()","isn't","isn't.","iso","iso.org.","iso/iec","iso:","isocpp","isocpp.org","isol","isolation.","isolation.)","isolation:","isorc","issu","issue.","issues,","istream","istream&","istream'","istream()","istream(zstr","istream*","istream,","istringstream{argv[2]};","istringstream{p}}","it!","it'","it)","it),","it).","it):","it,","it.","it1.7.10.1.11.","it;","item","item'","item)","items.","iter","iter)","iter++;","iter,","iter;","iteration.","iteration:","iterator)","iterator.","iterator:","iterator;","iterators,","iterators/point","iterators;","itself","itself)","itself,","itself.","itself:","itself;","i{1}","i{ii}","j","j();","j)","j,","j.","j;","j]","jack","jan","januari","java","java).","jet","jiangang","jj","job","job.","join","join()","join;","joining_thread","joins,","joins.","joint","journal,","jsf++.","jsf++:","juhl","jul,","jump","jun,","j{jj}","k","k&r","kb","kb)","kcircle:","keep","kept","key","keyboard).","keynot","keynote,","keynote.","keyword","keyword.","kilometers,","kind","km","knew","know","knowledg","knowledge.","known","known.","koenig","ktriangle:","l0))","l1","l1);","l2","l2);","la","label","labels.","lack","laden","lakos.","lambda","lambda\")","lambda();","lambda)","lambda,","lambda.","lambda1.7.7.15.","lambda2","lambdas).","lambdas,","lambdas.)","lambdas1.7.7.10.","lane","languag","language\")?","language)","language).","language):","language,","language.","language:","languages,","languages.","larg","large):","large,","large.","large.\"","larger","largest","last","last(lastname),","last)","last,","last.","last1,","last2,","last;","last_month","lastname)","lastname);","last{elem}","late","latenc","latency),","latency.","latent:","later","later)","later).","later,","later.","latter","latter,","latter.","lattic","lavavej","law","layout","layout.","lazily:","lck","lck(mtx);","lck(my_lock);","lck1(m1);","lck1(m1,","lck2(m2);","lck2(m2,","lcsd05.","lead","leak","leak(int","leak)","leak,","leak.","leak:","leaked.","leaks)","leaks),","leaks).","leaks,","leaks.","learn.","leav","led","left","left)","leftmost","legaci","legal","legal)","legal,","length","length()","length(const","length(not_nul","length(nullptr)","length(nullptr);","length(p)","length(record*","length(s)","length(zstr","length);","length_of_string(const","less","less)","lesst","let","letter","letter,","level","level):","level,","level.","level1.7.7.11.10.","level:","levels.","li;","liabl","liber","liberating.\"","librari","libraries)","libraries,","libraries.","libraries1.7.27.","libraries:","library\")","library)","library)?","library,","library.","library1.7.15.10.","library1.7.18.1.","library1.7.18.6.1.","library1.7.23.1.","library:","library_foobar_h","licens","license.","lie","life","lifecycl","lifetim","lifetime.","lifetime.1:","lifetime:","lifetimes.","light","lightweight","like","like\"","like.","likelihood","likely)","likely,","likely.","limit","limited.","line","line,","line.","linear","linear)","lines.","lingo","link","link(data,","link*","link*;","link_bas","link_base*","linkag","linker","linker.","linker:","linking.","links)","links.","link{e});","list","list\"","list\".","list,","list.","list2","list_bas","list_base_hook","lists1.7.15.9.","liter","literal:","literals.","literatur","literature1.7.12.5.4.","litter","littering!.","littl","live","llvm.","lng)","load","load[2024","load_record(const","load_record(name);","local","local)","local,","local.","local;","locales.","locally,","locally.","locals.","locat","lock","lock()","lock()/unlock()","lock()/unlock()1.7.12.1.2.","lock():","lock(action_mutex);","lock(m1,","lock(m2,","lock(mx);","lock,","lock/unlock,","lock_guard","lock_guard,","locked,","locked.","locking,","locking1.7.12.6.","locks,","locks.","lock{mx};","log","log(sqrt(d","log_call(typeid(f));","logic","logic)","logic.","logical,","logically,","lomow,","long","long).","long*)&d;","longer","longer,","longer1.7.10.1.4.","longish","longish,","longjmp","longjmpand","longstand","look","looking.","lookup","lookup.","lookups,","loop","loop\"","loop,","loop.","loop:","loophol","loops,","loops.","loops1.7.10.2.14.","loops1.7.10.2.9.","lose","loss","lossi","lost","lot","lots_of_work();","love","low","lower","lower(zstr","lower_bound","lower_bound(forwarditer","lowest","ls;","lsp","lst","lst1;","lst2;","lst;","lurk","lvalu","lvalue.","lvalue:","lvalues),","lvalues.","lvalues:","m","m(f1(),","m)","m));","m);","m,","m.","m.insert_or_assign(k,","m.lock();","m.unlock()","m/s2","m1","m1);","m1.swap(rhs.m1);","m1;","m1{++x}","m2","m2);","m2;","m2{i},","m3","m3.","m3;","m;","m[mt]","m_;","machin","machine\".","machine'","machine)","machine,","machine.","macintosh","macintosh:","macro","macro,","macro.","macros!","macros,","macros.","made","made,","magic","magnet","magnitud","magnitude*unit;","magnitude;","main","main()","main()1.7.6.2.20.","main(int","main),","maintain","maintain.","maintainability.","maintainable,","maintained,","maintained:","maintainers,","maintainers.","mainten","maintenance).","maintenance,","maintenance.","major","make","make()","make();","make_gadget(17);","make_gadget(int","make_gadget(n);","make_pair(\"tokyo\",","make_pair(\"tokyo\"s,","make_related_widgets(bool","make_related_widgets(cond);","make_shar","make_shared()","make_shared();","make_shared(2);","make_shared(7);","make_shared(c,","make_shared.","make_t","make_tuple(1,","make_tuple(status,","make_uniqu","make_unique()","make_unique();","make_unique(1,","make_unique(12);","make_unique(7);","make_unique(9);","make_unique(99);","make_unique(d);","make_unique(heartbeat);","make_unique(is);","make_unique(n);","make_unique(s);","make_unique.","make_unique?","make_vector()","malloc","malloc()","malloc(),","malloc(1,","malloc(10","malloc(l1","malloc(sizeof(int)","malloc,","man","manag","manageable.","management)","management,","management.","management1.7.9.1.","manager'","mandatori","mani","manipul","manipulate(record&","manipulation.","manipulation1.7.10.1.19.","manipulation1.7.10.4.3.","manipulation1.7.15.1.5.","manner","manner.","manual","manual.","manually.","manuals1.7.21.7.","many,","many.","many?","map","map&","map.","mar,","mark","markdown","marshal","marvel","master(istream&","mat::matrix&);","match","match.","materi","material,","material.","materials1.7.21.8.","mathemat","matrix","matrix&","matrix[rows][cols];","matter,","matters.","matters:","maul()","maul(aa);","maul(fruit*","maul2(&va[0]);","maul2()","maul2(fruit*","maul2(va);","max","max(int","max);","max_exp","max_slots;","maxelem,","maximum","maxstring,","may,","may_share(const","mayb","maybe,","maybe:","maze","mean","mean?","mean_time_between_failur","meaning","meaning,","meaning.","meaning1.7.7.14.9.","meaning;","meaningful.","meaningful/correct","meaningful/us","meaningful:","meaningfulli","meaningfully,","meaningfully.","meaningless","meaningless.","means.","means:","meant","measur","measure!","measure()","measure(obj1);","measure(obj2);","measure(obj3);","measure(obj4);","measure.","measuring;","mechan","mechanically,","mechanism,","mechanism.","mechanisms,","mechanisms.","meet","mem(int","member","member)","member,","member.","member;","members'","members)","members).","members,","members.","members:","members;","membership","memcmp","memcmp(a.data(),","memmov","memoization,","memoized.","memor","memori","memorized.","memory)","memory,","memory.","memory1.7.12.6.2.","memory1.7.7.15.2.","memory;","memory?","memory_order_release);","memset()","memset().","memset(a.data(),","memset(buffer,","mention","mention:","mentioned,","mentioning.","mere","merg","merge()","merge(in1","merge(inputiterator1","merge(inputrange1","mergeable{in1,","merging:","mess","mess.","messag","message)","message,","message;","message{m}","messi","messier","messier,","messy,","messy.","messy:","met","met,","meta","metaprogram","metaprogram.","mete","meter","meters()","meters,","method","methods.","meyers.","meyers01","meyers05","meyers15","meyers96","meyers97","meyers:","microbenchmark","microsoft","microsoft'","microsoft,","microsoft.","middl","middle,","middleware),","mill?","millimeters,","million","millisecond","milliseconds?","milliseconds_to_blink","mimic","min(int","mind","mind:","mine","minim","minimal&);","minimal&,","minimal,","minimum","minimum,","minor","minu","mirror","misguided.","mislead","mismatch","misread","miss","missing,","missing.","mission","misspel","mistak","mistake)","mistake.","mistake:","mistake?).","mistakenli","mistakes.","mistakes.\"","mistakes:","misunderstand","misunderstood","misus","misuse)","misuse.","misused),","misused,","misused.","mit","mitig","mix","mixes.","mixin","mixtur","mixtures,","mm","mm)","mm,","mode","mode)","mode);","mode.c_str())}","model","model\",","model.","models).","models:","moder","modern","modern,","modernizing/rejuvenating/upgrading.","mode};","modif","modifi","modification,","modified,","modified.","modify();","modify,","modify.","modify1","modify1(string);","modify2","modify2(shared_ptr);","modul","module,","module/system","modules.","modulo","moment.","mon,","money,","monitor","monitor.","monolith","month","month()","month();","month)","months,","moo.","moonphase_error{};","more","more)","more.","more_data;","morgan","most,","mostli","motion,","movabl","move","move()","move(f());","move(local_variable);,","move(point","move(s1);","move(x)","move)","move,","move.","move1.7.7.6.1.","move:","move_own","move_owner(q)","moved,","moved.","mover(x&&","mozilla","mtbf","mtx.lock();","mtx.unlock(),","mtx.unlock();","mtx;","mt{","much","much)","multi","multipl","multiplex","multipli","multiply(int","multiply(int,","multiply.","munge(const","murray.","mutabl","mutable.","mutable:","mutat","mutated,","mutex","mutex),","mutex,","mutex.lock","mutex.unlock","mutexes,","mutexes.","mutexes1.7.12.1.3.","mx","mx;","my_bar","my_bar;","my_class","my_class&","my_class()","my_code()","my_code();","my_contain","my_func(base&","my_func(derived1&","my_improved_widget","my_interfac","my_lock.lock();","my_lock.unlock();","my_map","my_mutex","my_mutex.","my_mutex.lock();","my_mutex.unlock();","my_mutex;","my_object;","my_once_flag;","my_polici","my_set,","my_set.insert(\"hello\");","my_typ","my_type;","my_vector&","my_widget","my_x","my_x;","mychar","mychar*/","myclass","mymap","mymap.insert(value);","mymap;","mysteri","myth","myths.","myths1.7.21.","myx","myx()","m{mm}","m{mm},","m});","n","n&","n(n)","n)","n):","n);","n+1","n,","n.size())","n:","n::","n::operator==()","n::swap","n::x","n::x&","n;","naiv","nake","name","name)","name);","name,","name.","name1.7.10.2.12.","name;","named)","named.","named_map","names)","names,","names.","names1.7.10.1.21.","names1.7.10.1.22.","names1.7.10.1.5.","names1.7.10.1.6.","names1.7.10.1.8.","names1.7.15.5.8.","names:","namespac","namespace\")","namespace).","namespace):","namespace,","namespace.","namespace;","namespaces,","name};","naming,","nan,","nan.","narrow","narrow(d);","narrow(x)","narrow_cast","narrow_cast(d);","narrow_cast(x)","narrowing.","narrowing:","narrowing;","narrowing_error","nasti","nasty.","natur","naturally)","naturally,","naturally.","naumann","navig","nb:","ne","ne,","ne:","near","nearest","nearli","necessari","necessarili","necessary)","necessary).","necessary,","necessary.","necessary:","necessit","need","need\"","need)","need,","need.","need/us","need?","needed,","needed.","needed1.7.6.2.13.","needed1.7.6.2.18.","needed1.7.7.11.","needed:","needed;","needed?","needless","needlessli","needs.","nefari","nefarious'","nefarious()","nefarious:","neg","negat","negation:","negatives;","neil","ness","ness.","nest","network","network.","neuter","neutral","neutral.","never","nevertheless,","new","new!\"","new(&s)","new(&s)(e.s);","new(nothrow)","new(size_t","new)","new,","new.","new/delete.","new1.7.7.13.6.","new:","new[].","news\".","next","next();","next.","next_weekday(date);","nh","nh));","nice","nicola","nightmar","nl.10:","nl.11:","nl.15:","nl.16:","nl.17:","nl.18:","nl.19:","nl.1:","nl.20:","nl.21:","nl.25:","nl.26:","nl.2:","nl.3:","nl.4:","nl.5:","nl.7:","nl.8:","nl.9:","nl:","nm2","nm:","nm;","no,","no.","no_leak(int","no_leak_simplified(int","nobodi","node","node*","node,","noexcept","noexcept(false)","noexcept,","noexcept.","noexcept1.7.6.1.7.","noexcept1.7.7.5.","noexcept1.7.7.6.8.","noexcept1.7.7.7.7.","noexcept1.7.7.7.8.","noexcept1.7.7.8.","noexcept;","noisi","non","non_pod_tag","non_pod_tag)","non_pod_tag;","none","none):","none.","none/one/some/al","nongener","nonloc","nonlocal,","nonlocally,","nonmemb","nonneg","nonnegative.","nonpriv","nonpubl","nonreus","nonvirtu","nonvirtual.","nonvirtual1.7.7.4.6.","nonvirtual:","nonvirtual;","normal","normal.","normally,","normally.","not)","not,","not.","not;","not?","not_","not_nul","not_null.","not_null>)","not_null?","notabl","notat","notation","notation.","notation1.7.15.10.4.","notations,","note","note,","note:","notes:","noth","nothrow","notic","notices.","notif","notification,","notion","notion,","notions,","nov,","novic","novices.","now","now,","now?","nowher","nr.1:","nr.2:","nr.3:","nr.4:","nr.5:","nr.6:","nr.7:","nr:","nread)","nuisanc","null","null1.7.10.3.9.","null;","nullptr","nullptr)","nullptr);","nullptr);.","nullptr,","nullptr.","nullptr:","nullptr;","nullptr?","nullptr]]","nullptr]].","nullptr_error{}\"","nullptr_error{};","nullptr`,","nullptr}","nullptr};","num,","number","number\",","number()","number,","number:","number;","numbered,","numbers:","numer","numeric_limits::max();","nutshell,","nvi","nw,","nyquist.","n},","n};","o","o'reilli","o(1)).","o(k)","o(log","o(n)","o);","o0","o1","obey","object","object\"","object'","object)","object),","object,","object.","object.\"","object/handl","object1.7.10.1.10.","object1.7.6.2.17.","object1.7.6.2.9.","object1.7.7.5.3.","object1.7.9.1.4.","object:","object;","object?","objects\"","objects)","objects),","objects).","objects,","objects.","objects:","objects;","obscur","observ","observer_ptr","observer_ptr?","obsolete;","obstacl","obtain","obviou","obvious","obvious:","obviously,","occasion","occasionally,","occupi","occur","occur.","occurr","oct","oct,","octob","odd","of\"","of.","of:","off","off\"","off:","offer","offici","ofstream","often,","often.","ok","ok,","ok:","ok?","ol","old","old)","old.","older","older,","older/differ","on","on,","on.","on1.7.10.1.15.","onc","once\"","once,","once.","onclick()","one)","one,","one.","one;","ones.","only\"","only\",","only).","only):","only*/","only,","only.","only1.7.15.10.3.","only:","onward","oo","oo01ll","oop","oops,","oopsla'09.","open","open\"","open(const","open(gate&","open,","open:","open;","open_gate(gate&","open_port(destination);","oper","operand","operand,","operands.","operands1.7.7.14.10.","operation),","operation,","operation.","operation1.7.6.1.3.","operation:","operation;","operations)","operations,","operations.","operations/algorithm","operations1.7.18.2.7.","operations1.7.28.1.8.","operations1.7.7.3.1.","operations:","operations;","operator\"","operator&()","operator()","operator)","operator*();","operator*(const","operator*)","operator*,","operator+(const","operator+(x","operator++(day&","operator,","operator.","operator:","operator=","operator=(const","operator=(foo&&","operator=(vector&&","operator=(vector2&&","operator=(widget&&);","operator=(x&&)","operator=.","operator==()","operator==();","operator==()s;","operator==(const","operator==(date,","operator==(point","operator==(s,","operator==(t1,","operator>>(istream&","operator[](int","operator[](int)","operator[](size_t);","operators,","operators.","operators1.7.6.2.21.","operators1.7.7.14.1.","operators1.7.7.14.3.","operators1.7.7.14.6.","operators:","opinion","opinion,","opinions.","opportun","opportunities)","opportunities.","oppos","opposit","ops.","opt","opt)","optim","optimal:","optimiz","optimization)","optimization).","optimization,","optimization.","optimizations,","optimizations.","optimize.","optimized.","optimizer.","option","option.","option1.7.6.2.15.","option:","optional.","options.","options:","or:","order","order.","ordered,","ordered.","ordered.\"","ordered>;","ordered_contain","ordering.","ordinari","organ","organization'","organization.","organizations,","organizations.","orient","oriented,","origin","original.","ornate).","orthogonal.","os","os,","ostream","ostream),","other","other)","other).","other,","other.","other.ptr","other.ptr;","other/futur","other:","other;","others.","otherwis","otherwise,","otherwise.","ought","ourselv","ourselves)","out","out\"","out)","out,","out?","outbuf)","outdat","outer","outermost","outlin","outline;","outliv","output","output()","output,","output.","output:","output_data","output_data)","output_path;","outputiter","outsid","outweigh","out}","over","overabstract","overabstract.","overal","overconstrain","overdo","overflow","overflow\"","overflow,","overflow.","overflow1.7.10.4.5.","overflow:","overgeneralize;","overhead","overhead)","overhead,","overhead.","overkil","overli","overload","overload,","overload:","overload;","overloading,","overloading.","overloading1.7.6.2.23.","overlook","overlooked)","overrid","overridden","override,","override.","override:","override;","overrider.","overrider1.7.7.13.","overus","overused.","overview","overwrit","owens,","own","own.","owned;","owned_shapes.emplace_back(item);","owner","owner!","owner,","owner.","owner1.7.9.2.11.","owner:","owners.","ownership","ownership\"","ownership)","ownership).","ownership,","ownership.","ownership1.7.6.2.14.","ownership1.7.9.2.2.","ownership1.7.9.2.3.","ownership:","ownership;","owning).","owning,","owning.","owning1.7.7.4.4.","owns,","p","p'","p)","p);","p,","p.10:","p.11:","p.12:","p.13:","p.1:","p.2.","p.2:","p.3:","p.4:","p.50:","p.5:","p.6:","p.7:","p.8:","p.9:","p.first;","p.second","p.second;","p.y,","p1","p1)","p1,","p1.p","p1.p.","p11","p12","p1;","p2","p2)","p2))","p2,","p2.p","p21","p21.clone();","p22","p3","p3);","p4","p5","p:","p;","p?","p[0]","p[0]..p[n","p[10]","p[1]","p[1].x","p[2]","p[]","p[count++]","p[l1","p[l1]","p[n","p[p.size()","pack","packag","pad","pad,","padding)","page","page.","pages)","pain","pain.","pair","pair)","pair),","pair*","pair,","pair.","pairs.","pairs1.7.9.2.","palo","panacea;","panic!","panic!1.7.3.3.","paper","paper.","paper?","par","paradigm","paradigm:","paragraph","paragraph).","parallel","parallel.","parallelism,","parallelism.","parallelism1.7.12.1.","parallelism1.7.12.3.","parallelize),","parallelize,","param)","paramet","parameter","parameter).","parameter,","parameter.","parameter1.7.6.2.5.","parameter1.7.6.2.6.","parameter1.7.9.1.6.","parameter:","parameterize:","parameters,","parameters.","parameters.\"","parameters1.7.6.2.7.","parameters:","paranoid","pardo","parent","parenthes","parentheses.","parenthesize1.7.10.3.3.","parser","part","part,","part.","parti","partial","particip","particular","particular,","particularli","partli","parts,","parts:","pass","pass(void*","passed,","passed.","passing,","passing.","passing1.7.12.3.1.","passing1.7.6.2.1.","passing:","passion","passthrough","past,","paste)","paste,","pat)","pat);","patch","path","path.","paths,","paths.","pattern","pattern,","pattern.","pattern:","patterns),","patterns,","patterns.","patterns.1.7.15.4.5.","paus","pay","pb","pb)","pb1","pb2","pb;","pc","pd","pd0","pd1","pd2","pd3","pd4","pear","pear?","pear{};","peculiar","pedant","pend","peopl","people'","people),","people,","per","per.1","per.10:","per.11:","per.12:","per.13:","per.14:","per.15:","per.16:","per.17:","per.18:","per.19:","per.1:","per.2.)","per.2:","per.30:","per.3:","per.4:","per.5:","per.6:","per.7:","per:","perenni","perfect","perfect).","perfect.","perfectli","perform","performance)","performance).","performance,","performance.","performance1.7.12.","performant.","perhap","period,","perman","persist","persist.","person","perspect","perspective.","pervas","pessimization.","pessimization;","peter","pfi2","pft2","phase","philosoph","philosophi","philosophy.","philosophy1.7.5.","phrase","physic","pi","pi2","pi3","pick","pick.","piec","pimpl","pimpl.","pimpl;","pimpl{std::make_unique(n)}","pin","pipelin","pipeline.","pirkelbauer,","pitfal","pitfall:","place","place,","place.","placehold","placement","places.","plain","plain/nak","plan","plane","platform","platforms.","plausible,","pldi","pleas","please_use_this(&vl);","plenti","plu","plug","plus(x,","plus(xx,","po","poco","pod","pod>","pod_tag","pod_tag)","pod_tag;","point","point&","point'","point(int","point);","point,","point.","point.)","point1","point1.7.15.7.","point2","point:","pointed/ref","pointer","pointer\"","pointer\",","pointer\".","pointer)","pointer,","pointer.","pointer.\"","pointer/iter","pointer/refer","pointer1.7.10.","pointer1.7.10.4.","pointer1.7.12.1.9.","pointer1.7.9.2.12.","pointer:","pointer;","pointer?","pointers\"","pointers\"?","pointers)","pointers,","pointers.","pointers1.7.10.1.14.","pointers1.7.23.3.","pointers1.7.6.1.8.","pointers1.7.9.2.1.","pointers:","pointlessli","points)","points,","points.","points1.7.7.14.7.","point{10,","poison","polici","polymorph","polymorphically,","polymorphisms?","pool","pool*","pool,","pool?","poor","popl","popular","popular),","popular,","port","port&","port&)","port(const","port(cstring_span","port;","port?","portability.","portabl","portable.","porthandl","porthandle()","portion","ports,","port{destination};","port{open_port(destination)}","pos)","posit","positive(int","positive,","positive.","positives)","positives).","positives,","positives.","positives;","possibility.","possibility.com:","possibl","possible,","possible.","possible1.7.12.2.","possible:","possible?","possibly,","post","post,","post_initialize()","postcondit","postcondition.","postcondition:","postconditions).","postconditions,","postconditions.","postiniti","postinitialize()","postinitialize.","postpon","pos};","potent","potenti","pow(flt_radix,","pow(pi,","pow(t","power","power/exponenti","pp","pp)","pp,","pp.","pp1","pp2","pp216","pp3","pp4","ppp","pr.","practic","practical).","practice,","practice.","practices,","pre","pre;","preced","precedence,","precis","precision.","preclud","precomputation.","precondit","precondition)","precondition).","precondition:","preconditions,","preconditions.","pred);","predic","predicate(*p)","predicate>","predicates)","predicates.","predicate}","predict","predictable.","predictor","prefer","prefer:","prefetch","prefix","prematur","preparation:","preprocess","preprocessor","prescriptive.","presenc","present","preserv","preserved).","pressur","pressures.","presum","presumably,","pretenti","pretti","pretty\"","pretty,","preval","prevent","prevention.","previou","previous","primari","primarili","primit","primitives,","principl","principle)","principles.","print","print()","print(auto&","print(const","print(cout,","print(int","print(int);","print(ostream&","print(product_info","print(zstring);","print_based(int","print_color(int","print_color(product_info::blue);","print_color(product_info::red);","print_color(webby);","print_int(1);","print_int(int","print_int(x);","print_string(const","printer","printf","printf'","printf()","printf().","printf()?","printf(const","printf.","printf_s()","printi","prints?","privat","private).","private,","private:","pro.bounds:","pro.lifetime:","pro.safety:","pro.type:","pro:","probabl","probably,","problem","problem)","problem).","problem,","problem.","problem:","problem;","problemat","problematic,","problems,","problems.","problems:","proc.","proce","procedur","process","process()","process(local);","process,","process.","process_readings(const","processing,","processor,","produc","produced?","product","product_info","product_info::red:","productinfo.h","productivity,","professionalism,","profil","profile)","profile.","profile1.7.22.2.","profile1.7.22.3.","profile1.7.23.","profiles,","profiles.","profiles1.7.22.1.","program","program)","program,","program.","program:","program;","programm","programmer'","programmer,","programmer.","programmers\";","programmers).","programmers,","programmers.","programmers:","programming)","programming,","programming.","programming1.7.12.5.1.","programming1.7.15.1.","programming1.7.15.1.1.","programming1.7.17.","programming:","programming;","programs,","programs.","progress","prohibit","prohibited),","project","project(s)","project,","projects.","promin","promis","promot","promotions/convers","prone","prone).","prone,","prone.","prone:","proof","proof.","propag","proper","properli","properly,","properly.","properti","properties.","property,","proport","propos","proposal)","proposal,","proposal;","protect","protected,","protected:","proto","protocol","prototyp","provable,","prove","proven","provid","provide.","providing/us","ps","ps.","pseudo","pt)","pt.getx();","ptr","ptr(x*","ptr.","ptr;","ptr{this};","public","public\"),","public)","public),","public,","public.","public:","publications.","publicli","publish","pun","punctuation,","punning.","punning1.7.8.","pure","pure.","pure:","pure;","purpl","purple,","purpos","purpose.","purposes,","purposes1.7.10.1.16.","purveyor;","push_back,","pushbutton","pushes,","put","put(const","put(t&&","put(t&)","put_front(const","pv","pv;","p{a.p}","q","q)","q);","q,","q.front();","q.get());","q.pop_front();","q.push_back(val);","q2","q;","q;)","q?","qqq","qsort","qsort(data,","quad_word","qualif","qualifi","qualiti","quantifi","quarter\"","quarter\"};","question","question),","question.","questions1.7.26.","queue","queue,","quick_exit(),","quickli","quiet_nan();","quit","quotient,","q}","r","r)","r);","r,","r.","r.10:","r.11:","r.12:","r.13:","r.14:","r.15:","r.1:","r.20:","r.21:","r.22:","r.23:","r.24:","r.2:","r.30).","r.30.","r.30:","r.31:","r.32:","r.33:","r.34:","r.35:","r.36:","r.37:","r.3:","r.4.","r.4:","r.5:","r.6:","r.alloc:","r.first();","r.first;","r.second(),","r.smart:","r.val;","r.x;","r1","r1,","r2","r2);","r2,","r3}};","r:","r;","ra_it","race","race,","race.","races).","races,","races.","races:","rad;","radiu","radius()","rad{r}","rad{r},","raii","raii).","raii,","raii.","raii.\"","raii:","rais","random","random_access>","randomli","rang","range\"","range:","range?","ranges1.7.15.1.4.","rare","rare)","rare,","rare.","rarely,","rarer","rat'","ratio","rational","rationale,","rationale.","rationale:","rationales)","raw","raw_find()","raw_find(char*","re","reach","read","read!","read\",","read\".","read()","read();","read(a);","read(a,","read(cin);","read(int*","read(istream&","read(span","read,","read.","read1(istream&","read2(istream&","read:","read_and_print()","read_and_print(istream&","read_and_print.","read_date(cin);","read_date(istream&","read_header(is);","read_image(somewhere)","read_until(const","read_until(p);","read_until(s);","read_until(ss);","read_until(string_span","read_until(string_view","read_vec(fs,","readability,","readability.","readability:","readabl","readable,","reader","reader.","readers,","readership","readership1.7.3.2.","readi","readily.","reading,","reads,","real","realist","realistically,","reality,","realli","realloc","realloc(p,","really,","reappears.","reason","reason,","reason.","reason1.7.18.4.","reason1.7.7.11.8.","reasoning,","reasons)","reasons),","reasons,","reasons.","reasons:","reassign","rec","rec&","rec(const","rec(int","rec2","rec2(const","rec2{","rec::rec;","recal","receiv","recogn","recogniz","recognize?)","recognized.","recommend","recommend.","recommend:","recommendations,","recommendations.","recommended,","recompil","recompilation.","recompiled.","record","record*","record,","record;","records)","recov","recover","recoveri","recovering,","recurs","recursion,","recursion.","recursion:","recursive_mutex","recursive_mutex.","recycl","red","red,","redefin","redraw()","redraw();","reduc","reduct","reduction,","redund","redundant,","redundant.","redundant;","reestablish","ref","refactor","refactor:","refactored.","refactoring.","refcount","refer","referenc","reference\".","reference\";","reference)","reference),","reference).","reference,","reference.","reference.\"","reference:","reference;","references)","references,","references.","references1.7.21.1.","references1.7.7.13.2.","references1.7.7.14.8.","references:","refin","refined).","refinement).","reflect","reformat.","refus","regard","regex","regex1.7.18.5.","region","regist","regressions.","regular","regular\").","regular,","regular1.7.7.2.","regular:","regularfunct","regularli","rei","reimplement","reimplementation.","reinterpret","reinterpret_cast","reinterpret_cast(&x);","reinterpret_cast(0x800);","reinterpret_cast(pb);","reinterpret_cast.","reinterpret_cast;","reis'","reis:","rel","relat","related,","relationship","relax","releas","release,","released!","released\"","released\")","released,","relev","reli","reliability,","reliabl","reliable,","relianc","reluct","remain","remaind","remedi","remedies.","remedy.","rememb","remember:","remind","remot","remov","removed.","render","render()","renov","reorder","rep;","repeat","repeatedli","repeatedly;","repetit","repetition.","repetition:","repetitive.","repetitive;","replac","replacement,","replic","replication.","report","report.","reporting,","repositori","repres","represent","representation,","representation.","republish","request","requir","required.","requirement,","requirement.","requirement:","requirements,","requirements.","requirements:","requires(i","requires(node*","requires(t","requires.","res(10000);","res.push_back(s);","res;","research","reseat","reseat(shared_ptr&);","reseat(unique_ptr&);","resembl","reserve(128)","reserved，pow","reset","reset()","resili","resizable,","resolut","resolution,","resolv","resolved.","resort","resort,","resort.","resourc","resource\"","resource),","resource,","resource.","resource1.7.28.1.2.","resource:","resource;","resources\",","resources,","resources.","respect","respect\"","respectively.","respond","respons","responsibility.\"","rest","rest.","restart.","restrain,","restrict","restrictions)","restrictions,","restrictions.","restrictive)","restrictive.","result","result),","result);","result,","result.","result.second)","result;","result;\"","result_typ","results,","results.","resumpt","retain","retention.","rethink","retir","retrofit","retry.","retryable.","return","return,","return.","return:","return;","returned,","returned.","returned;","returning.","reus","reusability,","reusability.","reusabl","reusable,","reusable.","reuse,","reuse.","reuse1.7.15.10.2.","reused,","reused.","rev","revers","review","review,","review:","review?","reviewed,","revis","rewrit","rewrite,","rewritten","rewritten.","rf.books:","rf.c++:","rf.core:","rf.man:","rf.rules:","rf.web:","rf:","rhs)","rhs.m2);","right","right)","right,","right.","right;","right?","rigor","risk","risk.","risks.","ritchi","robust","robust,","rollback","rollback,","room","root","rotate(int)","rotate(int);","rough","roughli","round(7.2)","round(doubl","rounding:","rouquette,","routin","rs.video:","rtti","rtti,","rtti.","rtti:","rule","rule)","rule).","rule,","rule.","rule:","rules!","rules\"","rules).","rules,","rules.","rules1.7.12.6.1.","rules1.7.15.10.1.","rules1.7.15.3.","rules1.7.15.4.1.","rules1.7.15.8.1.","rules1.7.21.2.","rules1.7.25.","rules1.7.32.","rules1.7.7.7.1.","rules:","rules:1.7.15.7.1.","rules;","rumin","rumor","run","run_list","run_list.push_back(new","runs?).","runtime_error","runtime_error{\"could","runtime_error{\"file_handle:","runtime_error{\"moon","russian.","rvalu","rvalue,","rvalue:","rvalues)","rvalues,","rvalues.","rvo","rvo,","s","s&","s&&","s'","s(int","s)","s)))","s);","s,","s.","s.c.1:","s.reserve(128);","s.~string();","s1","s1'","s1,","s1;","s1{\"hello,","s2","s2)","s2).c_str();","s2,","s2;","s3","s::f(int","s::operator!(","s;","s;)","safe","safe)","safe,","safe.","safe:","safely,","safely.","safer","safer,","safer.","safest","safeti","safety)","safety,","safety.","safety.\"","safety;","same","same(const","same,","same;","sampl","sanit","sarkar,","sat,","satisfact","satisfactori","save","say","say,","says:","scalabl","scalbn(","scalbn(doubl","scale","scale)","scanf()","scanf_s(),","scenario","scenarios?","scheme","scheme.","scope","scope)","scope).","scope);","scope,","scope.","scope1.7.10.1.3.","scope1.7.10.3.14.","scope:","scope;","scoped_lock","scopes.","scopes1.7.10.1.9.","scott","scrambl","scratch","scream","screen","screen\"","screen).","screen.\"","screen?","se,","sean","search","second","seconds?","section","section,","section.","section1.7.12.1.14.","section:","sections)","sections.","sections1.7.4.","sections:","sections;","secur","see","see,","see.","see:","seem","seen","seen.","sees.","sei","select","selected.","selection.","selection/loop","self","semant","semantics)","semantics,","semantics.","semantics.1.7.15.4.6.","semantics1.7.15.4.2.","semantics1.7.7.7.2.","semantics1.7.9.2.7.","semantics:","semantics;","semi","semicolon.","semiregular","semiregular.","semiregular1.7.15.5.7.","semiregular:","send","send(port,","send(unique_ptr","send(x*","send_packets(buffers&","sens","sense,","sense.","sense:","sensibl","sensit","sentinel","sep,","separ","separately,","sequenc","sequence,","sequence.","sequence1.7.6.2.11.","sequence:","sequences)","sequences.","sequences1.7.18.2.2.","sequences1.7.18.2.3.","sequenti","sergey","seri","serially,","seriou","serious","serv","server","servic","set","set\"","set(&var);","set(int","set.","set2(3.14);","set_number(int","set_text(const","set_unit(doubl","set_x(int","set_y(int","setjmp","setjmp/longjmp","setjmp/longjmp1.7.19.","sets.","setter","setters1.7.7.11.7.","setting.","settl","sever","severity)","severity);","severity,","sewell,","sf.10:","sf.1:","sf.20:","sf.21:","sf.22:","sf.2:","sf.3:","sf.4:","sf.5:","sf.6:","sf.7:","sf.8:","sf.9:","sf:","shadow","shadowing/hid","shall","shallow","shape","shape();","shape(point","shape,","shape.","shape::move()","shape_own","share","share(shared_ptr);","shared","shared,","shared.","shared_futur","shared_lock),","shared_ptr","shared_ptr&","shared_ptr&);","shared_ptr&.","shared_ptr'","shared_ptr(new","shared_ptr)","shared_ptr,","shared_ptr.","shared_ptr.)","shared_ptr1.7.12.1.10.","shared_ptr:","shared_ptrs,","shared_ptrs1.7.7.13.8.","shared_ptrs1.7.9.2.4.","shared_ptrs1.7.9.2.6.","sharedptrparam","sharing,","shini","ship","short","short)","short,","short.","short.\"","shorten","shorter","shorter,","shortest","shorthand","should)","should,","shouldn't","show","shown","shown),","shown,","shutdown","shutdown.","side","sidestep","sign","sign(t","signal","signals1.7.13.","signed.","signed/unsign","signed;","signedintegr","signifi","signific","significant,","significant.","significantli","signify?","silent","silli","silly&","silly(const","similar","similarli","similarly,","simpl","simple!\")","simple!.","simple\"","simple)","simple,","simple.","simple1.7.6.1.4.","simple_func(doubl","simple_func:","simple_numb","simpler","simpler,","simplest","simplest,","simplest.","simpli","simplic","simplicity.","simplif","simplifi","simply.","simul","simultan","simultaneously,","simultaneously.","singl","singleton","singleton)","singleton.","singletons,","singular","sink","sink()","sink(std::move(w));","sink(std::move(x));","sink(std::unique_ptr","sink(unique_ptr","sink(unique_ptr);","sink(vector&&","sink(w);","sink(x&&","sink(x);","site","site.","site:","situat","situation,","situation.","situations.","six","six\",","size","size()","size(),","size(strlen(str))","size)","size),","size,","size.","size_t","size_t;","sizeof(apple)","sizeof(double)","sizeof(double));","sizeof(double),","sizeof(int)","sizeof(int))","sizeof(int)));","sizeof(int)).","sizeof(int));","sizeof(int).","sizeof(pear)","sizes.","sizes:","size{10,","size{1000};","skip","sl.1:","sl.2:","sl.3:","sl.4:","sl.c.1:","sl.c:","sl.chrono:","sl.con.1:","sl.con.2:","sl.con.3:","sl.con:","sl.io.10:","sl.io.1:","sl.io.2:","sl.io.3:","sl.io.50:","sl.io:","sl.regex:","sl.str.10:","sl.str.11:","sl.str.12:","sl.str.1:","sl.str.2:","sl.str.3:","sl.str.4:","sl.str.5:","sl.str:","sl:","sleep,","slice","slice,","slice1.7.10.3.18.","sliced.","slicing,","slicing.","slide","slides.","slightli","slow","slow,","slow.","slowdown","slower","slower:","slowli","sm","small","small\"","small1.7.10.1.2.","smaller","smaller,","smaller.","smallest","smart","smart_ptr","smart_ptr2","smart_ptr3","smiley","smiley,","smoothli","snag","so,","so.","so:","social","societi","socket","socket\"","socket)","socket),","socket.send(message);","sockets,","softwar","software)","software),","software.","software:","solut","solution,","solution.","solution:","solv","some,","some_condit","some_fct(int*","some_fct.","some_ints);","some_ints,","some_ints_length);","somebodi","somehow","somelargetyp","someon","someothertyp","someth","something());","something();","something)","something,","something.","sometim","sometimes,","sometyp","somewhat","somewher","somewhere,","sommerlad:","soon","soon.","sooner","sort","sort()","sort();","sort(a,","sort(c&","sort(data,","sort(it","sort(ordered_container&","sort(par,","sort(s&","sort(sortable&","sort(sortable&);","sort(t&);","sort(v,","sort)","sort?","sortabl","sortable\"","sortable\":","sortable:","sourc","source,","source.","sources,","sp1(new","sp1,","sp2);","space","space)","space.","space;","space{elem","span","span):","span,","span.","span:","span_p","spans.","spans:","sparingli","sparingly.","sparingly1.7.7.12.","sparse;","spawn","speak","speak.","special","special.","specialists.","specialization)","specialization,","specializations).","specialized,","specif","specifi","specific,","specifically,","specification)","specification,","specification.","specification:","specifications.","specified)","specul","speed","speed.","speed?)","spell","spend","spent","spinlock","spite","split","splonk","splunk","spot","spot.","spots.","spread","sprinkl","spuriou","sqrt","sqrt(","sqrt()","sqrt()?","sqrt(*first);","sqrt(2);","sqrt(doubl","sqrt(double);","sqrt(intermediate);","sqrt(x);","squar","square(a,","square(t","ss","ss)","ss,","ss;","ss_number","st;","stabil","stabl","stable,","stable.","stable_sort(sortable&","stack","stack.","stack1.7.10.1.17.","stack;","stack_array","stack_widget;","stage","stand","standalone.","standard","standard'","standard,","standard.","standard:","standard;","standardization,","standardization.","standardized).","standardized.","standards,","standards.","standards:","stanley,","start","start,","starters,","starts.","startup:","starvat","state","state\"","state)","state,","state.","state1.7.7.6.6.","state:","state?","stated.","statement","statement,","statement.","statement1.7.10.2.6.","statement1.7.9.1.5.","statements,","statements.","statements1.7.10.1.","statements1.7.10.2.1.","statements1.7.10.2.7.","static","static:","static_assert","static_assert(copyable);","static_assert(default_constructible);","static_assert(sizeof(int)","static_assert1.7.16.","static_assert:","static_cast","static_cast(malloc(10","static_cast(malloc(n,","static_cast(malloc(sizeof(record)));","static_cast(pb);","static_cast(pb1);","static_cast(static_cast(d)+1);","static_cast(x)","static_cast)","static_cast*>(first).val;","static_cast.","statically,","statics?","statist","statu","status;","std","std),","std,","std.","std.org/jtc1/sc22/wg21/docs/papers/2015/n4477.pdf.","std1.7.9.2.8.","std::","std::accumul","std::addressof()","std::array","std::array)","std::array,","std::array.","std::array<>::fill()","std::async","std::async\"","std::atom","std::bind,","std::byte","std::call_onc","std::call_once(my_once_flag,","std::call_once.","std::cerr","std::chrono)","std::chrono::dur","std::condition_vari","std::copi","std::copy,","std::cout","std::enable_shared_from_thi","std::except","std::fill()","std::find.","std::for_each(begin(sockets),","std::forward","std::forward.","std::forward?","std::free(),","std::function)","std::function.","std::greater<>());","std::greater<>);","std::ifstream:","std::literals::*_literals)?","std::lock","std::lock()","std::lock_guard","std::make_shared(args);","std::map","std::max(x,","std::move","std::move()","std::move()'s.","std::move(a.s);","std::move(f())","std::move(local_variable);","std::move(make_vector());","std::move(p)","std::move(result);","std::move(v)","std::move(x)","std::move(x);","std::move(y);","std::move.","std::move?","std::mutex","std::mutex.","std::once_flag","std::operator>>()","std::optional,","std::out_of_rang","std::pair","std::pair.","std::remove_if(users.begin(),","std::scoped_lock","std::shared_ptr","std::shared_ptr'","std::shared_ptr)","std::sort(begin(c),","std::sort(begin(v),","std::string","std::string'","std::string,","std::string_view","std::strlen()","std::swap","std::swap()","std::swap(*this,","std::swap(a,","std::swap(m2,","std::swap;","std::termin","std::terminate(!)","std::terminate()","std::thread","std::thread1.7.12.1.7.","std::thread:","std::thread?","std::unary_function.","std::unique_lock","std::unique_ptr","std::unique_ptr)","std::variant","std::vector","std::vector)","std::vector):","std::vector,","std::vector:","std::vector::.","std::vector::iterator;","std::weak_ptr","std;","std_in:","stdlib","stdlib)","steadili","steal","steal([&]","steal(t","stem","step","stepanov","stephen","stick","stifl","still","still,","still:","stl","stl.","stl:","storag","store","store)","store).","store,","store.","store_somewhere()","store_somewhere(std::move(v));","stored.","story.","str)","straight","straightforward","straightforward1.7.10.3.4.","strang","strategi","strategically,","strategy)","stray","strcpy(p","strcpy(p,","strdup)","stream","stream.","streamabl","streams),","strength","strengths,","strict","strict.","stricter","strike","string","string&","string&);","string(czstr","string(int);","string)","string).","string*","string,","string,double}","string.","string1.7.18.2.1.","string1.7.18.2.8.","string1.7.6.2.12.","string:","string;","string_ptr;","string_ref()","string_span","string_span.","string_val","string_val;","string_view","string_view,","string_view.","string_view?","strings,","strings.","strings1.7.18.3.","strings:","string{p};","string{ss};","string{};","strive","strlen(p);","strlen(s1);","strlen(s2);","strong","stronger","strongli","stroustrup","stroustrup'","stroustrup,","stroustrup.","stroustrup05","stroustrup13","stroustrup14","stroustrup94.","stroustrup:","struct","struct1.7.6.2.8.","struct:","structur","structure,","structure.","structures,","structures.","struggl","studi","stuff","stuff,","style","style\"","style\",","style)","style,","style.","style:","style;","sub","subclass","subexpress","subexpressions,","subject","suboperations.","subrang","subscript","subscripts.","subscripts1.7.11.","subsect","subsections:","subsequ","subset","substant","substantiated.","substitut","substitution.","subtl","subtle.","subtleties.","subtli","subtract","subtract(t","subtyp","subtype:","suc;","succe","succeed","succeed.","succeeded,","success","success)","success.","success;","successfulli","succinctly:","such","such,","such.","suffer","suffices.","suffici","sufficient,","suffix","suffix);","suggest","suggestion)","suggestions,","suggestions:","suit","suitabl","suited,","sum","sum(...)","sum(3,","sum(3.14159,","sum(args...","sum(vector&","sum1","sum1(vector&","sum2(vector&","sum2.","summar","summari","summary,","summary:","sun","sun.\"","superior","superset","superset\"","superstit","supertype:","suppli","supplier","supply,","support","support\"","support)","support,","support.","support:","supported,","supportive)","suppos","supposedli","suppress","suppressed.","sure","surfac","surface_read","surface_readings)","surface_readings.","surpris","surprise!","surprise();","surprise:","surprised.","surprised?","surprises,","surprises.","surprises:","surprising.","surprising:","surprisingli","surround","surviv","susmit","suspect","suspect,","suspect.","suspens","suspici","suspicion,","suspicion.","suspicious,","suspicious.","suspicious:","suttalex05","sutter","sutter'","sutter,","sutter.","sutter/alexandrescu)","sutter:","sutton","sutton'","sw","sw,","swap","swap()","swap(a,","swap(foo&","swap(my_vector&","swap(temp);","swap(x&,","swap),","swap).","swap,","swap.","swap:","swapped,","sweep","switch","switch.","switch`stat","switching1.7.12.1.11.","symbol","symmetr","symmetri","symposium.","symptom","sync","sync_queu","sync_queue::get(t&","sync_queue::put(const","synchron","synchronization),","synchronization.","synchronization:","synchronized.","synchronized_valu","syntact","syntax","syntax,","syntax.","syntax1.7.10.1.13.","syntax1.7.15.5.","synthes","system","system\",","system)","system,","system.","system:","system_error","systemat","systematic,","systematic.","systematically.","systemparam","systems,","systems.","sz","sz)","sz);","sz,","sz;","sz{0}{}","sz{a.sz}","sz{s}","s{\"qqq\"}","s{ss}","s{ss},","s};","t","t&","t&&","t&&1.7.6.2.19.","t&)","t&,","t&.","t'","t(e)","t(expression)","t(heartbeat);","t(u);","t)","t*","t*)","t*,","t*.","t*s,","t,","t.","t.100:","t.101:","t.102:","t.103:","t.10:","t.11:","t.120:","t.121:","t.122:","t.123:","t.124:","t.125:","t.12:","t.13:","t.140:","t.141:","t.142:","t.142?:","t.143:","t.144:","t.150:","t.1:","t.20:","t.21:","t.22:","t.23:","t.24.","t.24:","t.25:","t.26:","t.2:","t.30:","t.31:","t.3:","t.40:","t.41:","t.42:","t.43:","t.44:","t.46:","t.47:","t.48:","t.49:","t.4:","t.5:","t.60:","t.61.","t.61:","t.62:","t.64:","t.65:","t.67:","t.68:","t.69","t.69:","t.80:","t.81:","t.82:","t.83:","t.84:","t.??:","t.con","t.concepts.def:","t.concepts:","t.def:","t.detach();","t.f();","t.future();","t.gp:","t.meta:","t.temp","t.var:","t0","t0(f,","t0.detach();","t1","t1(f,","t1.detach();","t2","t2(f,","t2)","t2.detach();","t3","t3(f,","t3.detach();","t:","t::operator=(const","t;","t[0],","t[a.sz]},","t[n]},","tabl","tactic","tag","tag::number)","tag::number:","tag::number;","tag::text","tag::text)","tag::text:","tag::text;","tail)","take","take_action();","take_the_default_action();","taken","taken,","taligent'","talk","talk,","tangl","target","target.","target_stream,","task","task,","task.","task1.7.12.3.2.","task1.7.12.4.","tasknum","tasks,","tasks.","taste.","taxonomi","tc","tc++pl4","tc++pl4,","tc++pl4:","teach","technic","technically,","techniqu","technique,","technique.","techniques\"","techniques,","techniques.","techniques;","technology.","tediou","tedious,","tedious.","tell","tell,","temp","temp;","temperature_gradiants(const","temperature_gradiants(surface_readings);","templat","template'","template)","template,","template.","template1.7.15.8.4.","template:","template<>","templates)","templates.","templates1.7.15.10.6.","templates1.7.15.6.5.","templates:","temporari","temporaries?","temporarili","temporary.","tempt","temptat","ten","tend","tendenc","tendencies.","term","term,","termin","terminate()","terminate();","terminate)","terminate.","terminated)","terminated,","terminated.","terminates).","terminates.","terminator)","terminator);","terminator;","test","test()","test(string&","test,","test.","test1(t","test2(t","test3(t","test_traits::f(t);","test_traits<>","tested.","testing)","testing,","testing.","testing:","tests,","tests.","text","text()","textbook","textual","than:","thank","that!\"","that'","that,","that.","that:","thee","them)","them).","them,","them.","them:","theme","themselv","themselves;","then,","then.","there!","there\",","there'","there'd","there,","there.","thereafter.","therebi","therefor","therefore,","thewidget","thewidget1.7.9.2.10.","they'r","thing","thing.","things\"","things,","things.","thing{2},","thing{monkey}},","think","think:","thinko(const","third","this\"","this,","this.","this:","this]{","thorough","thoroughli","those","those).","those,","those.","though","though).","though,","though.","thought","thought)","thought:","thread","thread(f&&","thread(worker,","thread,","thread.","thread1","thread1'","thread1()","thread1.7.12.1.8.","thread1.7.6.2.25.","thread2","thread2()","thread:","thread_loc","thread_pool.queue_work([&]{","thread_pool.queue_work([=]{","threads!","threads\"","threads)","threads,","threads.","threads:","threads?","threads?)","three","threw","through","through,","through.","through.\"","throw","throw().","throw(x,","throw,","throw.","throw:","throw;","throwing),","throwing.","throwing1.7.7.5.6.","thrown","thrown,","thrown.","throws,","throws.","throws?","thu","thu,","thumb","thus,","ti","tick_tock","tidi","tie","tie():","tie(i,","tie(iter,","tie(val,","tight","tighten","tightli","time","time)","time).","time,","time.","time1.7.15.9.4.","time1.7.15.9.5.","time1.7.18.6.","time:","time?","time_point","time_points.","time_to_blink","time_to_blink)","timeout;","times.","tini","tire","tjark","tmp","tmp);","tmp,","tmp.","tmp;","to)","to);","to,","to.","to/from","to1.7.12.5.2.","to1.7.15.9.2.","to1.7.18.3.2.","to1.7.28.1.5.","to:","to;","to?)","today","today,","today.","todo","toe","togeth","together.","token","tomorrow","tomorrow.","ton","too,","too.","tool","tool.","toolchains.","tools)","tools,","tools.","tools1.7.30.","tools:","top","top_left,","top_right,","topic","topic.","total","total.","totallyord","touch","touch(p);","tough,","toupper(c);","tour","tour++:","toward","tp","tp&&","tr","tr,","tr.","trace","tracer","tracer(const","tracer2","tracer2(const","track","track.","trade","tradeoff.","tradit","train","trait","trait)","trait.","traits!\"","traits.","transact","transaction:","transfer","transfer.","transfer.\"","transform","transformation.","transient","transit","transition)","transition,","transitive.","translat","transmit","trap.","travers","treat","treatment","tree","tree.","tree:","trees,","tri","triangl","triangle(point","triangle?","tricki","tricky(thread*","tricky,","tricky.","trigger","trim(x.s);","trim_tail","trim_tail(s);","tripl","trisym","trivia","trivial","trivial,","trivial.","troubl","trouble,","trouble.","true","true,","true.","true;","true`","truli","truncating)","truncation:","trust","try/catch","try/catch(...)","try/catch,","try/catch.","try_lock()","ts","ts)","ts),","ts).","ts,","ts.","ts...","ts:","ts::operator()...;","tsan","tsan)","tt","tt()?","tt(s);","tt?","tue,","tune","tupl","tuple,","tuple.","ture","turn","tutori","twice","two","two.","two?","type","type\"","type)","type),","type).","type,","type.","type.1:","type.2:","type.3:","type.4:","type.5:","type.6:","type.7:","type.8:","type:","type;","type?","type_check","typedef","typedef.","typeid","typenam","types)","types,","types.","types1.7.15.1.3.","types1.7.15.6.7.","types1.7.15.8.2.","types1.7.7.1.1.","types:","types;","typic","typically,","typo","typo\",","typo,","t{e}","t{e}.","t{e}not","u","u)","u.","u.x","u1","u2","u2;","u;","ub","ubiquitous.","ugh","ugh;","ugli","ugly,","ultim","umbrella","unabl","unaccept","unacceptable.","unalias","unalloc","unambiguous,","unanticip","unari","unary_funct","unauthor","unavoid","unavoidable1.7.7.13.3.","unbeat","unblock","unbound","uncaught","uncertainti","unchanged).","uncheck","unchecked/unsaf","unclassifi","unclear","uncom","uncomfort","uncommon","uncommon,","uncommon.","uncompromis","uncondition","unconstrain","unconvent","unconvention","undecid","undeclared.","undefin","undefined)","undefined.","undefined;","under","underflow","underflow1.7.10.4.6.","underli","underscor","underscore):","underscores:","understand","understand)","understand,","understand.","understand:","understanding.","underus","undesir","undesirable1.7.15.7.4.","undisciplin","undone.","unenforceable,","unenforceable.","unenforced.","unexpect","unexpected)","unexpectedli","unexpectedly.","unfinish","unformat","unfortun","unfortunately,","unheard","unicode,","unifi","uniform","uniform,","uniformity:","unimpl","uninit","uninit;","uniniti","uninitialized,","uninitialized.","uninitialized:","unintend","unintent","unintention","union","union)","union,","union:","unions,","unions.","unions1.7.7.15.1.","unions1.7.7.15.3.","unions1.7.7.15.4.","uniqu","unique_lock","unique_lock(m1);","unique_lock,","unique_locks.","unique_locks1.7.12.1.15.","unique_ownership,","unique_ptr","unique_ptr&","unique_ptr&)","unique_ptr&);","unique_ptr()","unique_ptr(const","unique_ptr(point","unique_ptr(unique_ptr&&","unique_ptr)","unique_ptr),","unique_ptr).","unique_ptr,","unique_ptr.","unique_ptrs1.7.7.13.7.","unique_ptrs1.7.9.2.5.","unit","unit.","unit:","unit;","unit]","units.","unittest","univers","universally,","unix","unknown","unless","unlik","unlikely,","unlink","unlock","unlock().","unlock,","unmanag","unmanageable.","unmodifi","unnam","unnamed1.7.6.2.","unnecessari","unnecessarili","unnecessary.","unoptim","unordered_map","unpleas","unpredict","unprincipl","unqualifi","unrealistic.","unreason","unreasonably)","unrecognized)","unrel","unrelated)","unreleas","unreliable.","unsaf","unsafe,","unsatisfied.","unsign","unsigned1.7.10.4.8.","unsigned:","unsigned;","unspecifi","unspecified\"","unspecified.","unspecified;","unstable:","unstat","unsuit","unsupport","unsurpris","unsystemat","untend","untest","until","unus","unusu","unwind","up","up\"","up.","up.\"","upcast(b*","updat","update(record&","update,","update_status_bar();","updates,","upgrad","upon","upper","upward","urgent","us","usabl","usable.","usable/compos","usag","usage1.7.7.14.2.","use()","use()'","use().","use(*w);","use(42);","use(43);","use(a);","use(b","use(b*);","use(bool","use(char","use(const","use(d);","use(i);","use(i,","use(int","use(int*","use(param.f());","use(param.g());","use(result.first);","use(smart_ptr","use(smart_ptr2","use(smart_ptr3","use(vector&","use(w);","use(x);","use)","use).","use,","use.","use1","use1(const","use1.7.15.3.1.","use2()","use2(int","use2(span","use3()","use3(int","use:","use;","use?","used,","used.","used:","used;","used?","useful,","useful.","useful/necessari","useful:","useless.","user","user'","user(&b);","user()","user(b*","user(foo&","user(t&","user(zstr","user.cpp","user1(const","user1(d.to_string());","user2(&b);","user2()","user2(b*","user2(t&","user3(&b);","user3(b*","users\"","users'","users,","users.","users.end(),","uses(widget*);","uses)","uses).","uses,","uses.","uses:","using,","using1.7.7.11.14.","using:","usual","usually,","utf","util","utilities1.7.23.5.","utility1();","utility2();","v","v'","v(10).","v(10);","v(100)","v(100000);","v(12);","v(7);","v(700);","v(n);","v)","v);","v,","v.at(0)","v.at(7)","v.begin(),v.begin()+i","v.begin(),v.end()","v.begin();","v.d","v.front();","v.push_back(99);","v.push_back(s);","v.push_back(x);","v.push_back(z);","v.reserve(100);","v.resize(900);","v.size()","v.size();","v.x","v1","v1(10);","v1(x);","v1,","v1{10};","v2","v2(","v2(v.size());","v2{count{10}};","v3","v3(10);","v3{count{10}};","v;","v[0]","v[7]","v[i]","v[j]","v[k];","v[size];","v[v.size()]","va","va_arg","va_arg(ap,","va_arg(list,","va_arg.","va_list","va_list,","va_start(ap,","va_start,","vagu","vague,","val","val();","val(int&);","val)","val);","val,","val;","val>","valid","valid\"","valid()","valid):","valid.","valid:","valid;","valid?","validate(const","validated,","valid{false}","valu","valuabl","value\"","value&","value&);","value(const","value)","value).","value);","value,","value.","value.\"","value1.7.6.2.10.","value:","value::number()","value::operator=(const","value::set_number(int","value::set_text(const","value::text()","value::~value()","value;","value_to_be_returned;","value_typ","value_types.","values)","values).","values):","values,","values.","values.\"","values:","values;","values?","var","var;","vararg","vararg.","varargs)","varargs.","varargs:","vari","variabl","variable\"","variable'","variable,","variable.","variable1.7.10.2.4.","variable1.7.10.2.5.","variable:","variable?","variables'","variables)","variables,","variables.","variables1.7.10.1.18.","variables1.7.15.3.4.","variables:","variables;","variad","variant","variant,","variant.","varieti","variou","vary).","vd1","vd1(1000);","vd2(1000,","vec","vec(10);","vec,","vec.end()},","vec::vector","vec::vector&,","vec;","vector","vector&","vector&);","vector&,","vector()","vector(count","vector(initializer_list","vector(int","vector(std::initializer_list);","vector(vector&&","vector)","vector,","vector.","vector0","vector0()","vector0(int","vector1","vector1()","vector1(int","vector1{}","vector2","vector2&","vector2(vector2&&","vector:","vector::iter","vector::operator=(const","vector::sort()","vector::sort().","vector;","vector>","vectorization.","vectorization1.7.12.5.","vectorized?\"","vehicl","vendor","vendor.","verbos","verbose,","verbose.","verbose:","veri","verifi","version","version,","version.","version?","versions,","vertic","vi","vi,","vi.clear();","vi.end(),","vi1","vi2","vi2,","vi2.begin());","vi;","via","video","videos).","view","view,","view.","view_of_evens.emplace_back(even);","view_of_trisyms.emplace_back(trisym);","views,","views.","views1.7.23.2.","vigor","violat","violation,","violation.","violations).","violations,","violations.","violations:","virtual","virtual,","virtual.","virtual1.7.15.7.5.","virtual:","virtual;","virtuality.","virtually,","virtually?","visibl","visible,","visible.","visible1.7.10.2.13.","visit","visitors,","vl;","vlas)","void","void*","void*));","void*).","void*,","void*s),","void>","volatil","volatile*","volume;","volunt","vote","vr","vr,","vr.end(),","vr;","vs","vs(100);","vs)","vs,","vs.","vs.end(),","vs/and","vs2)","vs2.begin());","vs;","vtbl","vulner","vv","vv;","vx)","vx;","w","w(initial_size);","w)","w,","w1","w2","w3","w4","w;","wait","wait,","wait_for_event();","waiting.","wake","wakeup","walker.zheng","want","want,","want.","wanted.","wanted:","warn","warn.","warned:","warning):","warning:","warnings.","warrant","wasn't","wast","waste\";","waste(const","waste.","wasted.","wasteful.","watch","water","way","way).","way,","way.","way:","ways,","ways.","wchar_t,","we'd","we'll","we'r","we'v","weak","weak_ptr","weaker","weakest","weakli","weakness:","web","web_color","web_color::blue;","webbi","webcolors.h","weber,","websit","websites1.7.21.5.","wed,","week","weigh","welcome,","welcome.","well","well)","well.","well:","went","weren't","wesley","wesley,","wg21","wg21,","what'","what?","whatev","whatever).","wheel&","wheel.","when/how","whenev","where,","wherea","wherev","whether","which.","whichev","while.","whitespac","whoever","whole","whole.","whose","wide","widely,","wider","wider?","widespread","widget","widget&","widget&)","widget&.","widget'","widget(a,","widget(c,","widget(const","widget(int);","widget(widget&&)","widget*,","widget,","widget1.7.9.2.9.","widget:","widget::draw()","widget::impl","widget::operator=(widget&&)","widget::widget(int","widget::~widget()","width","width)","width;","wild.","will","will,","williams:","wind","winded.","window","windows,","wisdom\"","wisdom.","wish","with\"","with\")","with,","with1.7.10.1.12.","within","without","won't","wonder","word","word:","words)","words,","words.","work","work)","work).","work,","work.","work.get();","work.put(m);","work;","work?\"","workaround","workaround.","workarounds.","worker","worker()","worker(messag","workers()","workload","workshop","world","worry,","wors","worse,","worse.","worst","worth","worthwhil","worthwhile.","wouldn't","wrap","wraparound","wrapper","wrapper\"","wrapper(f","writabl","write","write(span","write).","write.","write/dis","write:","write_event_log();","write_to_file()","write_to_file(buffer);","writer","writing,","written","written),","written.","wrong","wrong!),","wrong,","wrong.","wrong.)","wrongli","x","x&","x&&","x&)","x&);","x&,","x'","x()","x();","x(1);","x(const","x(int","x(int);","x(x&&","x(x&&)","x)","x));","x).","x);","x){","x*","x++","x+x;","x,","x,i","x.","x.bar(1);","x.do_bar(2);","x.empty()","x.i","x.is_empty()","x.m1","x.m2","x.modify();","x.rank()","x.s.size();","x.scale(0.5).rotate(45).set_color(color::red);","x.size()","x0();","x1","x1()","x1(1);","x11","x1;","x2","x2&","x2()","x2();","x2(const","x2(int","x2,","x22","x3","x3(const","x3(int","x4","x:","x::x(const","x::x(x&&","x::~x()","x;","x?","x[n];","xmax","xs","xwith","xx","xx()","xx)","xx,","xx;","x{1};","x{2}","x{xx},","x{{},","x{}","x{});","x{};","y","y)","y))","y);","y*,","y,","y.","y0","y1","y2","y2);","y3","y4","y;","y]","ye","year","year.","years'","years,","years.","yellow","yellow,","yes,","yes.","yet.","yield","york\";","you'd","you'r","you'v","you,","you.","you:","your","your_code()","yourself","yourself.","yuck!","yy","yy)","yy);","yy,","yy;","yyyi","yyyy);","y{current_year()}","y{yy}","z","z);","z,","z1","z2","z3","z4","z:","z;","zcorp_char","zero","zero\".","zero,","zero1.7.10.4.7.","zero;","zero_terminated_array_of_char[])","zhuang,","zstring","zstring()","zstring,","zstring.","zstring/czstr","zstring_to_string(zstr","zubkov","zubkov:","zz","z{","{","{\"a","{\"b\"};","{\"bar\"};","{\"d\"};","{\"default\"};","{\"foo","{\"foo\",","{\"foobar\"};","{\"heraclides\"};","{\"my_file\",","{\"qqq\"};","{\"tokyo\",","{\"tokyo\"s,","{\"troubl","{\"zeno\"};","{'a',","{...}","{0,","{0};","{1,","{10}","{10};","{12};","{1};","{3,","{3};","{5,","{666};","{7,","{7.9};","{7};","{a","{arg};","{arr,","{buf};","{c","{co}","{c};","{d,","{extent{size}}","{f(99)};","{f1(),","{f3(),","{fn};","{initializers}","{is,","{m2};","{make()};","{mtx};","{mx};","{my_mutex};","{m};","{name};","{new","{new{7}};","{nm};","{nullptr,","{nullptr};","{p,","{p11};","{pi};","{r1,","{res,","{shade,","{sm.copy_circle()};","{sm};","{some_float};","{some_int32};","{std::string,double}","{s};","{v},","{worker};","{x};","{yy,","{{0,","{{1,","{{thing{1},","{}","{});","{},","{}.","{};","{}};","|","||","}","}();","});","};","};)","~5.85987","~base","~base()","~base(),","~base();","~c;","~connection()","~d()","~d(),","~derived()","~final_action()","~foo()","~immortal()","~itream()","~m2()","~my_interface()","~my_policy();","~nefarious()","~pb","~point2();","~port()","~quad_word;","~smart_ptr2()","~smart_ptr3()","~value();","~vector()","~widget();","~x()","~x();","~x2()","~x;","§10.3.5,","§10.4,","§11,","§12.4.2,","§13,","§14,","§14.4.7,","§15.2(3)","§15.2(3),","§15.4.3,","§16,","§17.4.4.8(3)","§17.4.4.8(3),","§18","§2.1.3,","§21.06,","§22.03","§27,","§3,","§30.01","§4,","§46,","§47","§5.5,","§52","§75,","§8,","§e.2","©","—"],"faq.html":["\"c:\\\\\";","\"upf","#pragma","&addrlen);","&isendsize,","(","(*.*)|*.*\";","(*.upf)|*.upf|al","(__stdcall","(char*)(void*)system::runtime::interopservices::marshal::stringtohglobalansi(str1);","(sfullpath","(sockaddr*)&servaddr,",")","*)cfgdevcheck[i].ex.linkip);","*ipaddr,","*pmk_notify_cb)(char","*puserdata);","*uploadmsg,","+","//","//system::string^转换为char*","//将char*转换为system::string^","1.","1.8.1.","1.8.1.1.","1.8.1.2.","1.8.1.3.","1.8.1.4.","1.8.1.5.","1.8.2.","1.8.2.1.","10","16:05:16","1;","2.","2017","3.","4.","5.","=","=0;","==",">^",">add(\"*addr\");",">add(\"*ip\");",">add(newrow);",">add(strtmpdev);",">cells[0]",">clear();",">column",">currentrow",">datagridview1",">datagridview2",">datasourc",">datatable2",">datatable2;",">equals(\".upf\"))",">filename;",">filter",">filterindex",">getbytes(sfullpath)",">initialdirectori",">lastindexof(\".\"))",">listdevad",">listdevadded)",">newrow();",">replace(l\"\\\\\",",">restoredirectori",">row",">showdialog()",">substring(sfullpath",">tostring();",">valu","^","addrlen","addrlen);","af_inet;","array(2);","array^","c++","c++/cli","c++/cli1.8.1.1.","cfgdevcheck[i].base.addr);","ch2","char*","char*1.8.1.2.","checkforillegalcrossthreadcal","copyright","datagridview2;","datarow^","datatable1;","datatable2;","decl","deleg","devinfo","devinfo[0];","devinfo[1];","each(array^","false;","faq","file","fp","fp;","fp_up","gch","gch;","gchandl","gchandle::alloc(fp);","gcnew","getnofiydelegate(char","getnofiydelegate(getnotifymsg);","getnofiydelegate^","getupgradedelegate(getupgrademsg);","gitbook最近修改:","htonl(inaddr_broadcast);","htons(5555);","iconnectret","iheaderlen,","init","int","intptr","ip","l\"\\\\\\\\\");","listdevadded;","listdevsearched;","m_cb","m_cb;","m_csocket_devsearch.socket_bind((sockaddr*)&servaddr,sizeof(servaddr));","m_csocket_devsearch.socket_create(af_inet,sock_dgram,ipproto_udp);","m_csocket_devsearch.socket_open();","m_csocket_devsearch.socket_recvfrom(recvbuf,","m_csocket_devsearch.socket_sendto(&searchdevicemsg[0],","m_csocket_devsearch.socket_setblocking();","m_csocket_devsearch.socket_setsockopt(sol_socket,so_broadcast,(char*)&optval,sizeof(bool));","manag","marshal::getfunctionpointerfordelegate(fp);","msgtype,","native回调转托管","native回调转托管1.8.1.3.","net_msg_noteinfo","net_msg_notetype_","newrow","newrow[0]","newrow[1]","nullptr;","openfiledialog1","openfiledialog;","openfiledialog^","pmk_notify_cb","po","private:","public","reserved，pow","right","servaddr.sin_addr.s_un.s_addr","servaddr.sin_famili","servaddr.sin_port","servaddr;","sfullpath","size_t","sizeof(recvbuf),","sizeof(servaddr);","sockaddr_in","socket","socket1.8.2.1.","static","static_cast(ip.topointer());","str1=","string","string(\"\"","string((char","string^","strtmpdev","strtmpdev[0]","strtmpdev[1]","system::collections::generic::list^","system::data::datat","system::runtime::interopservices::marshal::ptrtostringansi((intptr)ch1);","system::text::encoding::default","system::windows::forms::datagridview^","system::windows::forms::dialogresult::ok","true;","typedef","unmanag","void","walker.zheng","while()","{","}","©","与","广播搜索","广播搜索1.8.1.","打开文件","打开文件1.8.1.5.","绑定数据显示","绑定数据显示1.8.2.","编码转换","编码转换1.8.1.4.","获取"],"Gif图.html":["1.9.1.","10","16:05:16","2017","copyright","gif","gif图","gitbook最近修改:","reserved，pow","right","walker.zheng","©","测试","测试1.9.1."],"git-tips.html":["\"v1.0","#回到删除文件","#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可","#回退至上个版本，它将重置head到另外一个commit,并且重置暂存区以便和head相匹配，但是也到此为止。工作区不会被更改。","#彻底回退到指定commit","#得到","#默认就是","$","&&","'","'^\\*\\|","(appl","(全局)","(当前目录)",".","1","1.10.1.","1.10.1.1.","1.10.1.10.","1.10.1.11.","1.10.1.12.","1.10.1.13.","1.10.1.14.","1.10.1.15.","1.10.1.16.","1.10.1.17.","1.10.1.18.","1.10.1.19.","1.10.1.2.","1.10.1.20.","1.10.1.21.","1.10.1.22.","1.10.1.23.","1.10.1.24.","1.10.1.25.","1.10.1.26.","1.10.1.27.","1.10.1.28.","1.10.1.29.","1.10.1.3.","1.10.1.30.","1.10.1.31.","1.10.1.32.","1.10.1.33.","1.10.1.34.","1.10.1.35.","1.10.1.36.","1.10.1.37.","1.10.1.38.","1.10.1.39.","1.10.1.4.","1.10.1.40.","1.10.1.41.","1.10.1.42.","1.10.1.43.","1.10.1.44.","1.10.1.45.","1.10.1.46.","1.10.1.47.","1.10.1.48.","1.10.1.49.","1.10.1.5.","1.10.1.50.","1.10.1.51.","1.10.1.52.","1.10.1.53.","1.10.1.54.","1.10.1.55.","1.10.1.56.","1.10.1.57.","1.10.1.58.","1.10.1.59.","1.10.1.6.","1.10.1.60.","1.10.1.61.","1.10.1.62.","1.10.1.63.","1.10.1.64.","1.10.1.65.","1.10.1.66.","1.10.1.67.","1.10.1.68.","1.10.1.69.","1.10.1.7.","1.10.1.70.","1.10.1.71.","1.10.1.72.","1.10.1.73.","1.10.1.74.","1.10.1.8.","1.10.1.9.","10","16","16:14:55","2.7.4","2017","66)下测试通过",":",":refs/tags/","^","^branch2","abbrev=0","add","ago'","alias.","alias.st","amend","appli","assum","author='author","autostash","a参数相当于：al","b","blame","blame的意思为‘责怪’，你懂的。","branch","branch1","branch_nam","bundl","cach","checkout","cherri","clean","clean后，删除的文件无法找回","clear","clone","clone下来指定的单一分支","clone下来指定的单一分支1.10.1.68.","commit","committerd","commit历史中显示branch1有的，但是branch2没有commit","commit历史中显示branch1有的，但是branch2没有commit1.10.1.63.","config","config分为：当前目录（local）和全局（golbal）的config，默认为当前目录的config","copyright","core.filemod","creat","create命令导出的内容","d","decor","delet","deleting_commit","describ","df","diff","each","exclud","f","fals","fetch","file","format='%(refname:short)'","g","git","gitbook最近修改:","git常用命令集合，fork于tips项目","git是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。","git的奇技淫巧:see_no_evil:","git的奇技淫巧:see_no_evil:1.10.1.1.","global","graph","grep","grep=''","hard","head","head^","head~3","help","https://github.com/user/repo.git","id","id之后的所有commit","id版本的内容","id的状态，暂存区和工作区也会变为指定commit","id：输出命令：git","ignor","index","list","local","log","log中显示gpg签名","log中显示gpg签名1.10.1.64.","log中查找相关内容","log中查找相关内容1.10.1.72.","log，最上面那行commit","ls","m","master","master'","merg","mix","mixed参数。","n","name","origin","origin/","origin/mast","origin/mybranch","orphan","other","path/to/fil","pick","pick命令，参考","pop","pretty=onelin","pull//head:","push","push，不需要指定远程仓库了。","r","rebas","ref","reflog","refs/heads/","remot","repo.bundl","reserved，pow","reset","rev","revert","right","r参数相当于：remot","set","show","signatur","since='2","singl","sort=","standard","stash","statu","st，这样可以简化命令","t","tag","tag_nam","text：所需要查找的字段","tip","track","u","unchang","unset","untracked文件：新建的文件","updat","url","u参数","v","version","vv","vv就可以展示关联的远程分支名了，同时推送到远程仓库直接：git","walker.zheng","week","whatchang","word","x","xarg","xxxxxx，后面的字符串就是commit","|","©","–hard","–mix","–soft","⬆","一定要先测试命令的效果后，再用于工作环境中，以防造成不能弥补的后果！到时候别拿着砍刀来找我","一次性推送所有标签，同步到远程仓库：","一般上线之前都会打tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：","下面的内容就是列举了常用的git命令和一些小技巧，可以通过\"页面内查找\"的方式进行快速查询：ctrl/command+f。","不会影响tracked的文件的改动，只会删除untracked的文件","不再将文件的权限变化视作改动","不添加参数，默认是","之前的状态","也就是把所有的改动都重新放回工作区，并清空所有的commit，这样就可以重新提交第一个commit了","从stash中拿出某个文件的修改","从stash中拿出某个文件的修改1.10.1.48.","从包中导入分支","从包中导入分支1.10.1.56.","从远程仓库根据id，拉下某一状态，到本地分支","从远程仓库根据id，拉下某一状态，到本地分支1.10.1.58.","以最后提交的顺序列出所有git分支","以最后提交的顺序列出所有git分支1.10.1.71.","保存当前状态，包括untracked的文件","保存当前状态，包括untracked的文件1.10.1.43.","修改上一个commit的描述","修改上一个commit的描述1.10.1.31.","修改作者名","修改作者名1.10.1.35.","修改远程仓库的url","修改远程仓库的url1.10.1.36.","关联之后，git","关联远程分支","关联远程分支1.10.1.13.","关闭","切回到某个标签","切回到某个标签1.10.1.26.","列出所有远程仓库","列出所有远程仓库1.10.1.38.","列出所有远程分支","列出所有远程分支1.10.1.14.","列出本地和远程分支","列出本地和远程分支1.10.1.15.","创建并切换到本地分支","创建并切换到本地分支1.10.1.16.","创建并切换到远程分支","创建并切换到远程分支1.10.1.17.","删除全局设置","删除全局设置1.10.1.65.","删除已经合并到master的分支","删除已经合并到master的分支1.10.1.11.","删除所有的stash","删除所有的stash1.10.1.47.","删除本地分支","删除本地分支1.10.1.18.","删除本地标签","删除本地标签1.10.1.24.","删除远程分支","删除远程分支1.10.1.19.","删除远程标签","删除远程标签1.10.1.25.","删除远程标签需要先删除本地标签，再执行下面的命令：","博客园：削微寒","发布(描述)\"","可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的untracked文件。clean命令，注意两点：","可以用来删除新建的目录，注意:这个命令也可以用来删除untracked的文件。详情见上一条","和revert的区别：reset命令会抹去某个commit","和本地最近的版本(commit)的different(不同)。","回到最后一个stash的状态，并删除这个stash","回到最后一个stash的状态，并删除这个stash1.10.1.46.","回到某一个commit的状态，并重新增添一个commit","回到某一个commit的状态，并重新增添一个commit1.10.1.29.","回到某个commit的状态，并删除后面的commit","回到某个commit的状态，并删除后面的commit1.10.1.30.","回到某个stash的状态","回到某个stash的状态1.10.1.45.","回到远程仓库的状态","回到远程仓库的状态1.10.1.5.","在commit","增加远程仓库","增加远程仓库1.10.1.37.","如果之前未使用过git，可以学习git小白教程入门","如果喜欢这个项目，欢迎star、提交pr、反馈问题&#x1f60a;","存储当前的修改，但不用提交commit","存储当前的修改，但不用提交commit1.10.1.42.","将不会在记录这个文件的改动","就像shell的history一样","展示任意分支某一文件的内容","展示任意分支某一文件的内容1.10.1.67.","展示工作区和暂存区的不同","展示工作区和暂存区的不同1.10.1.7.","展示帮助信息","展示帮助信息1.10.1.4.","展示当前分支的最近的tag","展示忽略的文件","展示忽略的文件1.10.1.62.","展示所有alias和config","展示所有alias和configs1.10.1.61.","展示所有stash","展示所有stashes1.10.1.44.","展示所有tracked的文件","展示所有tracked的文件1.10.1.49.","展示所有untracked的文件","展示所有untracked的文件1.10.1.50.","展示所有忽略的文件","展示所有忽略的文件1.10.1.51.","展示暂存区、工作区和最近版本的不同","展示暂存区、工作区和最近版本的不同1.10.1.9.","展示暂存区和最近版本的不同","展示暂存区和最近版本的不同1.10.1.8.","展示本地分支关联远程仓库的情况","展示本地分支关联远程仓库的情况1.10.1.12.","展示简化的commit历史","展示简化的commit历史1.10.1.54.","工作区：改动（增删文件和内容）","开卷必读","开卷必读1.10.1.2.","强制删除untracked的文件","强制删除untracked的文件1.10.1.52.","强制删除untracked的目录","强制删除untracked的目录1.10.1.53.","强制推送","强制推送1.10.1.74.","快速切换分支","快速切换分支1.10.1.10.","忽略文件的权限变化","忽略文件的权限变化1.10.1.70.","忽略某个文件的改动","忽略某个文件的改动1.10.1.69.","恢复","恢复删除的文件","恢复删除的文件1.10.1.28.","或者","或者在push时加上","或者直接提pr，issu","所有的命令都在git","执行rebase之前自动stash","执行rebase之前自动stash1.10.1.57.","把a分支的某一个commit，放到b分支上","把a分支的某一个commit，放到b分支上1.10.1.40.","把暂存区的指定file放到工作区中","把暂存区的指定file放到工作区中1.10.1.73.","把某一个分支到导出成一个文件","把某一个分支到导出成一个文件1.10.1.55.","抛弃本地所有的修改，回到远程仓库的状态。","指定文件的改动","指定文件的改动，也就是","推送标签到远程仓库","推送标签到远程仓库1.10.1.23.","改动的文件名，此次改动就放到了‘暂存区’","改成","放弃工作区的修改","放弃工作区的修改1.10.1.27.","放弃所有修改：","新建一个分支，分支内容就是上面git","新建并切换到新分支上，同时这个分支没有任何commit","新建并切换到新分支上，同时这个分支没有任何commit1.10.1.66.","显示本地执行过git命令","显示本地执行过git命令1.10.1.34.","暂存区：输入命令：git","最新的放在最上面","本地仓库(简称：本地)：输入命令：git","本地创建标签","本地创建标签1.10.1.22.","查看commit历史","查看commit历史1.10.1.32.","查看两个星期内的改动","查看两个星期内的改动1.10.1.39.","查看某段代码是谁写的","查看某段代码是谁写的1.10.1.33.","查看标签","查看标签1.10.1.21.","此次修改的描述，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。","比如：git","注意：","清除.gitignore文件中记录的文件","清除gitignore文件中记录的文件","清除gitignore文件中记录的文件1.10.1.60.","目录","目录1.10.1.3.","相当于保存修改，但是重写commit历史","简化命令","给git命令起别名","给git命令起别名1.10.1.41.","统一概念：","联系我","联系我1.10.1.","详细展示一行中的修改","详细展示一行中的修改1.10.1.59.","详解可以参考廖雪峰老师的git教程","输出工作区、暂存区","输出工作区和暂存区的different(不同)。","输出暂存区和本地最近的版本(commit)的different(不同)。","返回顶部","还可以展示本地仓库中任意两个commit之间的文件变动：","这个过程需要cherri","远程仓库(简称：远程)：输入命令：git","远程仓库，此次改动就放到了‘远程仓库’（github等)","通过grep查找，given","重命名本地分支","重命名本地分支1.10.1.20.","重设第一个commit","重设第一个commit1.10.1.6.","首先要保证本地创建好了标签才可以推送标签到远程仓库：","默认tag是打在最近的一次commit上，如果需要指定commit打tag："],"git.html":["!=","\"subtre","#","#git","#note:","#查看补丁是否能够干净顺利地应用到当前分支中","$","&","(commitid)","(tree","./btoa/","/path/to/main.git","/path/to/util.git","0001","0002","1.","1.11.1.","1.11.2.","1.11.3.","1.11.3.1.","1.11.3.2.","1.7+","10","12408a149bfa78a4c2d4011f884aa2adb04f0934","16:05:16","2.","2017","2153518409d218609af40babededec6e8ef51616","3.","3进行三方合并","4.","62ae6cc3f9280418bdb0fcf6c1e678905b1fe690","911b1af2e0c95a2fc1306b8dea707064d5386c2",">","\\","add","am会给出提示，git","appli","apue.2","b","bare","boost_test","branch","btoa","cat","charact","check","checkout","clean","cleanup,","clone","commit","contain","copyright","creat","desir","diff","diff标准补丁","diff标准补丁1.11.3.2.","dir=/path/to/main.git","dir=/path/to/util.git","echo","fbb71ef","fetch","file","fix1.patch","format","git","gitbook最近修改:","gitflow","github","git子树合并和拆分","git子树合并和拆分1.11.2.","git补丁","git补丁git","graph","head","id","id)","id。","init","lead","lib","link","log","m","mail文件","master","merg","merge\"","mkdir","mod","m选项表示这个patch要和那个分支比对，每次提交生成一个patch。","new","old","origin","out","p","parents。","pars","patch","popd","prefix=lib","prepar","pretty=onelin","pull","push","pushd","read","remot","repo","repo.patch","reserved，pow","reset","rev","rf","right","rm","s","skull@walker:boost_test(master)","split","subtre","subtree目录拆分","subtree目录拆分1.11.3.","trail","tree","u","util","util/mast","v","walker.zheng","wherev","wiki","write","xsubtree=lib","|","©","。","不仅有diff的信息，还有提交者，时间等等，直接可以发送的","以revid为parents，对树","使用subtree合并策略","依次对每个提交执行下面的操作：","准备库","利用子树合并跟踪上游改动","反向过程异常复杂,子树拆分的大致过程是：","合并为子目录","命令","子树拆分","子目录方式合并外部版本库","对该","引入外部版本库","执行","执行提交","找出提交中导出目录对应的","找到要导出的目录的提交历史，并反向排序。","显示parent","更新index，检出到子目录(工作区)，保存index(暂存区)","本地检出","检出为分支","注册远程版本库，&fetch","获取远程版本库改动","补丁","补丁1.11.3.1.","要保持提交信息还要重新设置提交的","重置为master"],"google_C++_Sytle_Guide.html":["!=","!iter","!mmapdata(mmap_chunk_bytes,","!y)","\"","\"#endif\"","\"#if\"","\"*\"","\",","\"2\"}};","\"=","\"\\n\",","\"\\xef\\xbb\\xbf\",","\"_\".","\"a.h\"","\"abbreviate\"","\"adjective\"","\"at","\"b\"};","\"b.h\"","\"bar\"};","\"base/basictypes.h\"","\"base/commandlineflags.h\"","\"base/logging.h\"","\"base/port.h\"","\"be","\"big\",","\"camel","\"can't","\"commit\"","\"d\"","\"d\"1.12.9.","\"destroy","\"dns\"","\"dummi","\"element\"","\"first","\"foo/public/fooserver.h\"","\"foo/server/bar.h\"","\"foo/server/fooserver.h\"","\"forward","\"functional\"","\"generated\"","\"i","\"invalid\"","\"just","\"k\"","\"last","\"leav","\"noun\"","\"num\"","\"o\"","\"o\"1.12.12.1.","\"one\"},","\"out","\"ownership\"","\"pascal","\"pc\".","\"perfect","\"post\"","\"pre\"","\"return","\"second","\"simple\"","\"smart\"","\"some","\"subject\"","\"thi","\"u\"","\"u\"1.12.11.","\"verb\"","\"veri","\"x\"","\"x\"1.12.10.","\"x\"1.12.12.","\"z\"","\"z\"1.12.5.","#","##","#defin","#endif","#if","#ifdef","#ifndef","#includ","#pragma","#undef","%","%\"","%30\"","%30u\\n\",","%d","%lld","%llu,","%llx","%lx","%p","%qd,","%qu,","%td","%u","%zu","&","&&","&&,","&.","&=","&foo","&in,","&str;","&sum](int","&text);","&val).","&x;","'/'))","'\\0'","'borrowing'","'new'","'optional'","'required'","'this'","(","(!isalreadyprocessed(element))","(\"=","(\"fix","(\"open","(\"remov","(&)","(),","(*pval)++.","(++),","(++i","(++i)","(...)","(1,300","(2gib),","([&])","([=])","(\\","(_)","(`std::unique_ptr`","(a","(a.k.a.","(address","(adj_list_serialize.hpp)","(all","(allowed)","(also","(and","(array","(b)","(becaus","(bgl)","(boost/graph/parallel/*","(boost/property_map/parallel/*).","(but","(call","(cleanup),","(comma)","(comma),","(compil","(condition)","(condition){","(const","(const)","(currently)","(decrement)","(decrement).","(describ","(e.g.","(e.g.,","(encouraged)","(except","(except,","(flush","(for","(get","(https://google.github.io/styleguide/cppguide.html#implicit_conversions).","(i)","(i++),","(i.e.","(i.e.,","(if","(in","(includ","(int","(int)\"hello\").","(int).","(int)3.5)","(int)x","(intern","(introduc","(iter","(lack","(lead","(less","(like","(lopsided_score)","(mmap_budget","(more","(mutex)","(no","(non","(not","(note","(often","(or","(other","(perhap","(pod):","(pre","(prefer","(probabl","(raw_siz","(registerer),","(rtti)","(rtti)![](./googl","(rtti).","(see","(semi","(sinc","(some","(some_long_condit","(special","(such","(test)","(that","(the","(thi","(this_one_th","(typeid(*data)","(unless","(unless,","(unsign","(use","(value);","(var)","(websearch::index,","(websearch::index::frobber_intern","(when","(whether","(which","(x","(x)","({",")","),",").","*","*)","*/","*c;","*foo","*out);","*p;","*pval).","*text,","*y;","+","++x;","+=",",",".","..","...","...;","...code",".cc",".cc.",".first",".h",".h,",".h.",".inc",".second","/","/*","/*completion_callback=*/nullptr);","/*radians*/)","//","/fi","/usr/include,","0","0\")","0,","0.0","0:","0;","0x123456789ll;","1","1)","1);","1,","1.","1.12.1.","1.12.10.","1.12.11.","1.12.12.","1.12.12.1.","1.12.12.1.1.","1.12.12.1.2.","1.12.12.1.3.","1.12.12.1.4.","1.12.12.1.5.","1.12.13.","1.12.13.1.","1.12.13.1.1.","1.12.13.1.2.","1.12.13.1.3.","1.12.13.1.4.","1.12.13.1.5.","1.12.13.1.6.","1.12.13.1.7.","1.12.13.1.8.","1.12.13.1.9.","1.12.13.2.","1.12.13.2.1.","1.12.13.2.10.","1.12.13.2.11.","1.12.13.2.12.","1.12.13.2.13.","1.12.13.2.14.","1.12.13.2.15.","1.12.13.2.16.","1.12.13.2.17.","1.12.13.2.18.","1.12.13.2.19.","1.12.13.2.2.","1.12.13.2.3.","1.12.13.2.4.","1.12.13.2.5.","1.12.13.2.6.","1.12.13.2.7.","1.12.13.2.8.","1.12.13.2.9.","1.12.13.3.","1.12.13.3.1.","1.12.13.3.2.","1.12.13.4.","1.12.2.","1.12.2.1.","1.12.2.1.1.","1.12.2.2.","1.12.2.2.1.","1.12.2.2.2.","1.12.2.2.3.","1.12.2.2.4.","1.12.2.2.5.","1.12.2.3.","1.12.2.3.1.","1.12.2.3.2.","1.12.2.3.3.","1.12.2.3.4.","1.12.2.3.5.","1.12.2.4.","1.12.2.4.1.","1.12.2.4.10.","1.12.2.4.2.","1.12.2.4.3.","1.12.2.4.4.","1.12.2.4.5.","1.12.2.4.6.","1.12.2.4.7.","1.12.2.4.8.","1.12.2.4.9.","1.12.2.5.","1.12.2.5.1.","1.12.2.5.2.","1.12.2.5.3.","1.12.2.5.4.","1.12.2.5.5.","1.12.2.5.6.","1.12.2.6.","1.12.2.6.1.","1.12.2.6.2.","1.12.2.7.","1.12.2.7.1.","1.12.2.7.10.","1.12.2.7.11.","1.12.2.7.2.","1.12.2.7.3.","1.12.2.7.4.","1.12.2.7.5.","1.12.2.7.6.","1.12.2.7.7.","1.12.2.7.8.","1.12.2.7.9.","1.12.3.","1.12.4.","1.12.5.","1.12.6.","1.12.7.","1.12.8.","1.12.9.","10","100","100+","100,","12.4","12345):","16","17:19:50","1960","1:","1;","1s.","1};","2","2,","2.0,","20%","2005\")","2009,","2014,","2017","2^31","2^n.","2};","2};).","3","3,","3.","3.0","3.14});","32","32/64","3;","3rd","3ull","3x3","3})","3}),","3});","3};","4","4,","40","5,","5;","64","6;","7,","7.1","7;","7};","8","8,","8.","80","800","9,","9};",":","::foo::bar::baz;","::foo::bar;","::pipeline_diagnostics::sidetable;",";","=","=,","==","==,",">",">=",">>",">done();",">key(),",">length());",">newiterator();",">next())",">schedule([&]",">schedule([&foo]",">seek(\"\");",">seek(\"foo\");",">value());",">y;","[","[&](int","[&blacklist](int","[&x](int","[](int","[]).","[auto](https://google.github.io/styleguide/cppguide.html#auto).","[googl","[implicit","[std::forward](http://en.cppreference.com/w/cpp/utility/forward),","[weight,","\\uxxxx","_________h_.","__attribute__((packed)).","__attribute__,","__builtin_prefetch,","__counter__,","__declspec(align()).","__declspec(dllexport)","__declspec(dllimport)","__declspec,","__pretty_function__,","__pris_prefix","__pris_prefix1.12.7.","_atl_no_except","_lp64","_lp641.12.4.","_regtest","_unittest","`#include`","`class`,","`foo`","`frobnicate`","`goto`","`indices`","`int_max`","`lookup_table`","`lookup_table`.","`open()`","`pos`","`struct`","`sum`","`typedef`","`weight`","a\"","a,","a...","a?:b","a_class_data_member_.","a_fourth_th","a_local_variable,","a_struct_data_member,","a_third_th","abbrevi","abbreviation.","abi","abov","above,","absenc","absolut","abstract","abstractions,","abstractions.","abuse,","accept","acceptable,","accepted,","access","access/set","accesses.","accessing/set","accessor","accident","accommod","accompani","accord","account","achiev","acquir","acronym","act","action","activ","actual","ad","add","add(t","add.","addit","addition","additionally,","address","address,","addtableentry()","adher","adjac","adjust","adopt","advanc","advantag","advantages.","advic","advis","affect","after.","again","again,","against","aggreg","agre","aid","algorithm","algorithms,","algorithms.","alia","alias","alias,","alias.","aliases,","aliasing,","align","alignment.","alignments,","allevi","alloc","alloca(),","allow","allowed,","allowed.","allowed;","alone,","along","alphabetically.","alreadi","already,","also,","alter","altern","alternateurltableerror","alternateurltableerrors),","alternative.","although","alway","always,","ambigu","ambiguity.","ambiguous.","amount","ampersand","analog","analogu","analysi","analyze(const","ancestor","and,","and/or","angl","annot","annotation.","anonym","anoth","another.","another_condition);","any.","anyon","anyth","anyway,","anyway.","anywher","apach","api","api'","api,","api.","apis,","apis.","apis:","appar","appear","appeared.","append().","append(i);","appendint()","appendstring(),","appli","applic","apply.","approach","appropri","appropriate)","appropriate,","appropriate.","appropriately.","approv","arbitrari","arbitrary,","architecture.","architectures.","are,","are.","are:","area","area,","aren't","argu","arguabl","argument","argument,","argument.","argument1,","argument2,","argument3);","argument3,","argument4);","arguments,","arguments.","arguments1.12.2.5.4.","arguments1.12.2.5.6.","arguments?","arithmet","around","array","arrays/struct","arrow","arrow.","as:","ascii","ascii.","ask","aspect","assembly,","assert","assert(false);","assert:","assertions,","assertions.","assign","assignment,","associ","assum","assumpt","assumptions?","ast","asterisk","at_quick_exit().","atexit().","atl","atl,","atl/wtl","attacks.","attent","attribut","attributes,","audience:","august","author","authors,","auto","auto&","autom","automat","automatically,","automatically.","automation:","avail","available.","averag","avoid","avoid.","awar","away.","awesom","b","b)","b.h:","back","background","background1.12.2.1.1.","backtonormal();","bad","bad!","bad,","bad.","bad:","badli","bake","ban","bar","bar(&x);","bar(),","bar();","bar(char","bar*","bar.h","bar.h,","bar.h.","bar.h:","bar;","bar});","bar};","base","base,","base.","base/basictypes.h),","base/basictypes_test.cc","base::equal(base*","basenam","bases[x],","bases[x];","basic","basically,","baz","baz_","baz_(b)","be","be),","be.","bear","becom","befor","begin","begin,","behav","behavior","behavior,","behavior.","believ","belong","below","below)","below.","bend","benefit","benefit,","best","better","between","bewar","beyond","big,","bigopen()","bigpo","bimap","binari","binary,","bind","binders.","bit","bits,","bits.","bitwis","blacklist","blacklist.end();","blacklist.find(i)","blank","bloat","block","block,","blocks.","bodi","body,","boil","boilerpl","boilerplate.","bookkeep","bookkeeping,","bool","bool()).","bool().","boolean","boost","boost,","boost.spirit","boost/array.hpp:","boost/bimap","boost/call_traits.hpp","boost/compressed_pair.hpp","boost/container/flat_map,","boost/container/flat_set","boost/graph,","boost/graph/distributed/*).","boost/heap","boost/intrusive.","boost/iter","boost/math/distribut","boost/math/special_funct","boost/multi_index","boost/polygon/voronoi_builder.hpp,","boost/polygon/voronoi_diagram.hpp,","boost/polygon/voronoi_geometry_type.hpp","boost/preprocessor.","boost/property_map,","boost/ptr_container:","boost/sort","both","both.","bound","boundari","box","box\",","brace","brace,","brace.","braced_initializer_list_format","braces,","braces.","bracket","brain","break","break,","break.","break;","breaks.\",","brief","briefli","bring","broader","broadli","broken","brows","bsd,","buffer","bug","bugs,","bugs.","build","build,","built","burden","burden.","byte","c","c'","c)","c++","c++'","c++,","c++.","c++03","c++03,","c++11","c++11'","c++11)","c++11),","c++11,","c++11:","c++:","c,","c.","c/c++","c99","c;","cache.","calcul","calculateproduct(values,","call","call,","call.","callabl","callback","called,","called.","caller","callers.","calls!","calls.","calls1.12.13.2.7.","callsit","callsites.","can't","cannot,","capit","caps,","caps.","captur","capture.","capture:","captures,","captures.","care","care,","carefulli","carelessli","carri","case","case\"","case\").","case).","case,","case.","case:","case;","cases,","cases.","cast","cast.","casting1.12.2.7.6.","casts.","casual","catch","catches,","category,","category:","caus","caveat:","cc","certain","chain","chanc","chang","change,","change.","changes.","char","char*","char*.","char16_t","char32_t","charact","character,","characters.","characters1.12.13.2.3.","chars,","chars.","cheap,","cheaper","cheapli","check","checking,","checking;","child,","choic","choos","chose","circl","circle::rotate(doubl","circle::rotate(double)","clarifi","clariti","clarity,","class","class'","class).","class,","class.","class.cc","class/structur","classes),","classes,","classes.","classes/structs)","classes1.12.2.4.1.","classes1.12.2.4.5.","classname::functionname(typ","classname::reallylongfunctionname(typ","claus","clause.","clauses,","clean","cleaner","cleanli","cleanup","clear","clear();","clear,","clear.","clearer","clearli","clever","clever.","client","client'","clients.","clone()","clone(),","close","clutter.","code","code,","code.","code1.12.13.3.2.","code1.12.13.4.","code:","code;","codebas","codebase'","codebase,","codebase.","coder","codes.","collapsing,","collect","collection.","collid","collide,","collis","collisions).","colon","column","columns.","com","combin","come","comma","command","comment","comment,","comment.","comment:","commented.","comments,","comments.","comments1.12.13.1.1.","comments1.12.13.1.3.","comments1.12.13.1.4.","comments1.12.13.1.5.","comments1.12.13.1.6.","comments1.12.13.1.7.","comments1.12.13.1.9.","comments1.12.13.2.","commit","commit).","common","common.","commonli","commonly,","commun","community,","compar","comparison","comparison.","comparisons,","compat","compil","compilation/link","compile,","compile.","compiler,","compiler.","compilers,","compilers.","compl.","complet","complex","complex,","complex.","complexifi","complexity,","complexity.","complic","complicated.","compon","composit","composition.","compound","compress","compromis","comput","computation,","concaten","concatenation,","conced","conceivably,","concentr","concept","concern","concerned.","concis","concise,","concise.","concret","condit","condition","condition,","conditionals1.12.13.2.9.","configur","configurations.","confin","conflict","conform","confus","confusing,","confusing.","confusion.","conjunct","consequence,","consequently,","consid","consider","consider:","considerations,","consist","consistency,","consistent\"","consistent,","consistent.","consistent:","consistently.","consol","const","const).","const,","const.","const1.12.2.7.9.","const:","const;","const_cast","const_cast).","constant","constant,","constants).","constants,","constants.","constexpr","constexpr.","constexpr1.12.2.7.10.","constexpr:","constrain","constraint","construct","construction.","constructor","constructor)","constructor,","constructor.","constructors)","constructors,","constructors.","constructors1.12.2.4.2.","constructs,","constructs:","consult","consum","contact","contain","contained.","container.","container:","containers,","content","context","contexts,","continu","continue,","continue.","contract.","contract:","contrast,","contraven","contribut","contributor","control","control1.12.2.4.10.","controversial,","controversial.","conveni","convenience.","convenient.","convent","convention).","convention,","convention.","conventions,","convers","converse,","conversely,","conversion,","conversion.","conversions,","conversions.","conversions1.12.2.4.3.","conversions]","convert","convinc","coordin","copi","copied,","copied.","copied;","copies,","copy,","copy/mov","copyabl","copyable,","copyfrom()","copyfrom(),","copying,","copying.","copying/mov","copyright","core","correct","correct,","correct.","correct:","correctli","correctly).","correctly,","correctness.","correspond","cost","costli","costly.","costs,","costs.","count","count()","count).","count,","counter++);.)","counters.","coupl","course,","cover","cpplint","cpplint.pi","cpplint1.12.2.7.","crash","creat","created,","creation","crew","critic","critical,","cstmr_id;","ctor","cumbersome,","cumbersome.","curli","curly,","current","currently,","cursori","custom","cut","cyclic","d","d,","danger","dangl","dash","data","data,","data.","data;","data_size_","datapoint","datapointcomparator>","datapointcomparator>;","date","db.h.","deal","debug","debug,","debugging,","debugstring()","decent","decid","decimalnumb","decis","decl","declar","declaration\"","declaration,","declaration.","declaration:","declarations,","declarations.","declarations1.12.2.2.4.","declared.","declares,","declares.","decltype(declval()","decltype(t","declval())","decorations.","decreas","decrease.","decrement","decrement)","deduc","deep","deepli","default","default'","default.","default:","defaults.","defin","define_flag(bool,","defined.","defines.","defining.","definit","definition,","definition.","definition:","definition;","definitions![](./googl","definitions,","definitions.","definitions/declar","degre","delet","delete;","deleted.","deleteurl()","delimiters.","demonstr","dens","depend","dependencies.","dependencies:","dependency,","deprec","deprecated,","deprecated.","deriv","derived*","derived::equal(base*","descend","describ","describing.","descript","descriptive;","design","design,","destin","destroy","destroyed,","destroyed.","destruction.","destructor","destructor).","destructor,","destructors,","detail","detail.)","details)","details,","details.","detect","determin","develop","developed,","developers.","diagnose.","diagnostics),","diagnostics.","diagram","didn't","differ","different,","different.","differently.","difficult","difficult,","difficult.","difficulties.","digit","digits.end());","digits.end(),","digits.erase(std::remove_if(digits.begin(),","dir/foo.cc","dir/foo_test.cc","dir/foo_test.cc,","dir2/foo2.h","dir2/foo2.h,","dir2/foo2.h.","direct","directions,","directives1.12.13.2.15.","directli","directori","directory)","directory).","disabl","disallow","disaster_pend","discontinu","discourag","discouraged.","discrimin","discuss","disguis","disk","disk.","dispatch","distinct","distinct,","distinguish","distribut","diverg","diverge.","divid","dllexport,","dllimport","do","do,","do.","do:","document","document.","document?","documentation.","documentation;","documented.","documenting,","documenting.","does,","does.","doesn't","doesn't.","doesn’t","doing,","domain.","don't","done","don’t","dosomething(","dosomething();","dosomething(argument1,","dosomething(averyveryveryverylongargument1,","dosomething(my_heuristic,","dosomething(scores[x]","dosomethingelse();","dosomethingelsethatislonger();","dothat();","dothis();","doubl","double,","double{1.23};","doubli","doubt","doubt,","down","downgraded.","download","downsid","dozen","dramat","drastic","drawback","dropeverything();","dtor","due","duplic","durat","duration,","duration](http://en.cppreference.com/w/cpp/language/storage_dur","dword,","dynam","dynamic_cast","dynamic_cast(other);","dynamic_cast.","d{1.23};","e","e.g.","e.g.,","e.g.:","each","each.","earlier.","eas","easi","easier","easili","easily.","easy.","edit","edition,","editor","effect","effectively.","effici","efficient,","efficient.","effort","eg","either.","element","element);","element.","element...","elements.","elig","elimin","elision.","else.","else1.12.6.","else:","elsewhere.","emacs.","emerg","emit","empti","empty.","empty:","enabl","encapsul","enclos","encod","encourag","encouraged,","encouraged:","end","end.","endif","endif1.12.8.","enforc","engin","engineers,","english","english,","english.","enhanc","enorm","enough","ensur","enter","entir","entiti","entities:","entity.","entity;","entrant.","entri","entries.","enum","enum_name.","enumer","enums)","enums,","environ","equal","equals(),","equip","equival","error","error.","error:","errors,","errors.","escap","especi","establish","etc.","etc.,","evalu","evaluated.","even","event","everyon","everyone'","everyth","exactli","examin","exampl","example),","example,","example:","examples.","exce","except","exception,","exceptions,","exceptions.","exceptions1.12.2.7.4.","excess","exclus","execut","execute,","executed).","executor","exemplifi","exist","exist.","exit()","exit().","expand","expand_public_wombat_api(foo)","expand_wombat_comparisons(foo,","expansion.","expect","expect).","expect.","expectation,","expected,","expens","expensive.","experi","experienc","experience.","expertis","experts,","experts.","explain","explan","explanatori","explicit","explicit,","explicit.","explicitli","explicitly.","exploit","export","expos","expr;","expr;.","express","expression,","expression.","expressions![](./googl","expressions.","expressions1.12.13.2.12.","expressions1.12.13.2.6.","expressions:","extend","extend,","extens","extensible.","extension.","extensions,","extensions.","extensively).","extensively.","extern","extra","extrem","f","f()","f();","f(b*)","f(b*);","f(bool","f(int","f(string&&","f(void*).","f(void*);","f(x);","f);","f;","face","face,","facil","facility,","fact","fact,","factori","factors.","fail","fail.","failed,","fails,","fails.","failur","fairli","fall","fals","false,","false.","false;","famili","familiar","far","far.","fast","faster","favor","feasibl","featur","feature.","features,","features.","features1.12.2.7.1.","feel","few","few,","fewer.","field","field_(other.field)","field_;","figur","file","file\")","file\");","file).","file,","file.","filenam","files),","files).","files,","files.","files1.12.2.2.1.","files:","fill","final","final,","finally,","find","find,","find.","fine","fine,","fine.","first","first,","first.","fit","fit.","fits.","five","fix","fixtur","flag","flag\");","flat","flawed,","flawed.","flexibl","float","floats,","flood","flow","focu","focus","folk","follow","follow,","followed,","following.","follows:","foo","foo&","foo&);","foo()","foo();","foo(const","foo(foo&&","foo(foo&&);","foo(int","foo).","foo.","foo.cc","foo.h","foo.h'","foo.length()","foo/src/bar/baz.h","foo::bar::bar*;","foo;","foo_bar","foo_bar.cc,","foo_bar.h","foo_bar_baz_h_","foobar","foobar.","foobuild","fooconsumer(std::unique_ptr","foofactory();","fool","for,","for.","forbid","forbidden","forbidden).","forbidden:","forc","fore,","foreign","forget","forgot","form","form,","form.","formal,","format","format,","format1.12.13.2.16.","format1.12.13.2.8.","format:","formatting.","formatting1.12.13.2.1.","formatting1.12.13.2.18.","former","former,","forth)","forward","forwarding\".)","forwarding.","four","fragments.","frameworks.","free","free,","free.","freed),","freedom","freeli","frequent","frequently)","friend","friendly.","friends1.12.2.7.3.","frobber.h)","frobnic","frobnicate(foo);","frustrat","full","fulli","fun!","func(foo","func({42,","function","function!","function'","function)","function,","function.","function/class/vari","function1();","function2();","functioncall({foo,","functions![](./googl","functions)","functions,","functions.","functions1.12.2.2.5.","functions1.12.2.5.1.","functions1.12.2.5.3.","functions:","functor","fundament","further","further,","futur","future.","g","g()","g();","gain","gap","gargantuant","gargantuantable.","gargantuantableiter","gargantuantableiterator*","gcc","gcc'","gcc,","gener","general,","general.","generalized,","generally,","get","getenv(),","getiterator()","getpid())","gflag","gitbook最近修改:","give","given","given.","glance.","global","global.","globals,","globals.","go","goal","goal.","goe","gone","good","good_user.cc:","googl","google'","google_c++_sytle_guid","googler","govern","gpl).","grammar","grammar![](./googl","grammar.","grammar;","graph","graph,","great","greater","grep.","ground","grounds,","group","guarante","guarantee,","guarantee.","guard","guard1.12.2.2.3.","guard:","guards,","guards.","guid","guidanc","guide,","guide.","guide1.12.2.","guide1.12.2.2.","guide_files/link.png)","guidelin","guidelines.","h","h(),","half","half.","hamper","hand","hand;","handi","handl","handle,","handled).","handler","happen","happen\"","happi","hard","hardening.","harder","harder.","harm","has.","hash","hash_map","hash_map)","hash_map;","hasher","hasher,","have","have,","have.","hazard","hazardous,","hazardous.","header","header'","header)","header,","header.","headers).","headers,","headers1.12.2.2.2.","headers;","heap","heavi","help","helper","henc","hence,","here","here,","here.","hesit","heuristic.","hex","hidden","hide","hidebound","hierarchi","hierarchy.","high","higher","higher,","highlight","hint","histor","histori","hit","hoc,","hold","holds.","homegrown","hope","horizont","however,","however:","http_server_logs.h","huge","human","hundr","hungarian","i)","i++)","i.e.","i.e.,","i/o","i;","id,","idea","ident","identifi","idiom","idiomat","if(condition)","if(condition){","if,","if.","ifdef","ignor","ignored,","imbue(),","immedi","immut","impact","imper","impl","implement","implementation,","implementation.","implementation:","implementation;","implementations,","implementations.","implements,","implic","implicit","implicit,","implicit.","implicitli","implicitly,","implied.","import","important)","important,","important.","importantly,","imposs","impract","improv","improvement.","improvements.","includ","includes).","includes,","includes.","includes1.12.2.3.","inclus","inclusion.","incorrect","incorrect,","incorrect.","incorrectli","increas","increment","increment.","increment?","incur","indent","indent!","indent.","indent:","indentation.","indented.","independ","independent.","indetermin","indeterminate,","index","index_","indic","indices.end(),","individu","ineffici","infeas","inferior","inform","inher","inherit","inheritance).","inheritance,","inheritance.","inheritance1.12.2.4.6.","inheritance1.12.2.4.7.","inheritance;","inherited.","init","init()","init_list)","initi","initialization![](./googl","initialization.","initialize(),","initialized.","inl.h);","inlin","inline.","inlined.","inlining.","inner","innoc","inordin","input","input.","input/output","inputs,","insert","insid","inspection.","instanc","instance).","instance,","instance.","instance:","instanti","instead","instead),","instead,","instead.","instruct","insuffici","int","int(x)","int*","int,","int.","int16_t,","int16_t.","int64","int64_t","int64_t,","int64_t.","int64_t/uint64_t","int64{1}","int64{x}).","int;","integ","integer.","integers,","integr","integral,","intend","intended)","intended.","intent","intent.","interact","interchangeable.","interest,","interesting,","interesting.","interfac","interface,","interface.","interfaces,","interfaces.","interfaces1.12.2.4.8.","interfer","interior,","interiorwrappinglist2}};","intermedi","intern","internal,","internationalization,","interoper","interpret","intimid","intptr_t","intrins","introduc","introduce.","introduct","intrus","ints,","inttypes.h","inttypes.h):","intuit","inum).","invalid","invari","investig","invis","invit","invoc","invocations.","invok","involv","is,","is1.12.13.1.","is:","isn't","isok();","isol","issu","issue,","issues,","issues.","istablefull();","isvalid()","it\";","it'","it)","it,","it.","it?","item","item\",","item\"};","item.first;","item.second;","iter","iter;","iteration.","iterator*","iterator,","itself","itself,","itself.","j","januari","java","java,","job","job,","job.","judgement.","judgment,","judici","judiciously.","justifi","kbar)","kdaysinaweek","keep","kenumnam","kerrormalformedinput,","kerroroutofmemory,","key","key.","keys,","keytype&","keyword","keyword,","keywords.","kfoo)","kind","know","known","known,","knows,","knumtestcas","kok","label","lack","lambda","lambda'","lambda,","lambda.","lambdas)","lambdas,","lang_cxx11","lang_cxx11.","languag","language,","language.","languages.","larg","larger","last","last_one)","later","later,","later.","latter","latter.","layout","lead","leads.","learned,","leav","left","legaci","legal","legitim","length","length,","length.","length1.12.13.2.2.","lengthen","less","let","letter","letters.","level","level.","lgpl,","librari","librarian","libraries'","libraries.","library,","library.","licens","lifetim","lifetime,","like,","like.","like:","likewise,","limit","limit.","line","line\"};","line,","line.","line:","lines).","lines,","lines.","lines:","link","linkag","linux","list","list,","list.","list:","listed,","lists.","lists1.12.13.2.17.","list{","list},","liter","literal.","literals.","literals;","littl","ll","local","local,","localization,","localized)","localized.","location.","locations,","lock","log","logged.","logic","logic.","logs,","logs.h.","long","long,","long.","long/clutteri","longclassname::reallyreallyreallylongfunctionname(","longer","longer.","longlong_max","look","lookup","lookup_t","lookup_table[a]","loop","loop:","loops.","loss.","lot","low","lower","lowercas","lowercase,","lowercase.","lpctstr.","luckily,","m","machineri","macro","macro,","macros,","macros.","macros:","macros;","made","made,","made.","magic","magic1.12.2.6.1.","magic](https://google.github.io/styleguide/cppguide.html","mail","main","main()","mainframes;","mainli","maintain","maintain,","maintain.","maintainability.","maintaining,","mainten","major","make","makes,","malformed_input","manag","mandatory.","mani","manifest","manifest,","manipul","manual","many.","map","margin.","mark","match","matrix.","matter","matur","max(0,","maxim","maximum","maximum.","mayb","mean","meaning","meaning.","meaningfully.","meaningless.","means.","meant","measur","measurements.","mechan","mechanism.","mechanism;","mechanisms,","meet","member","member,","member.","members)","members).","members,","members.","membership","memori","memory,","memset(&data,","mention","merge,","messag","messages:","met.","metafunct","metaprogram","metaprogramming,","metaprogramming.","method","method(s)","method).","method,","method.","methods,","methods.","microsoft","middl","migrat","million","mind","mind.","minim","minimum","minut","mislead","mismatch","misnomer,","misread.","miss","miss.","mistak","mistakes.","mix","mixtur","mlock))","mmap","mmap_budget","mocks.","model.","modern","modif","modifi","modulo","month","moral","more","moreover,","mostli","movabl","movable).","movable.","move","moves.","msvc","much","muddi","multi","multipl","multipli","multithread","must.","must_use_result","mutability,","mutabl","mutat","mutators,","mutators.","my_heurist","my_inline_function()","my_macro_that_scares_small_children.","my_map;","my_mask","my_useful_class.cc","my_valu","my_widget.transform(x1,","myclass","myclass&","myclass&)","myclass();","myclass(const","myclass(int","myclass::foo()","myclass::myclass(int","myexcitingclass,","myexcitingenum.","myinthash.","mynamespac","myothertyp","myothertype(int,","myothertype(string);","myproject","myproject/foo_bar.h,","mytyp","mytype&","mytype(std::initializer_list","myusefulclass.cc","myusefulclass_test.cc","m{\"b\"};","m{2,","n","n)","n;","n_comp_conns;","name","name\");","name\";","name\"};","name(\"som","name),","name,","name.","name:","name;","names)","names,","names.","names1.12.12.1.3.","names1.12.12.1.4.","names1.12.12.1.5.","names1.12.13.","names:","namespac","namespace,","namespace.","namespace:","namespace;","namespaces).","namespaces,","namespaces.","namespaces1.12.2.3.2.","name{\"som","naming.","naming1.12.12.1.1.","narr","narrow","narrowest","natur","naturally,","navig","near","nearby.","nearli","necessari","necessary,","necessary.","need","need.","needed)","needed,","needed.","needlessli","needn't","needs.","neg","negative.","negatives,","nerr;","nest","never","new","new;","newiterator()","newli","next","noexcept,","noisy,","nolint","nolintnextlin","non","none","nonempti","nonmemb","nonmember,","nonobvi","nonobvious,","nonsensical,","nonstandard","normal","normally.","not,","not.","notat","note","note:","noth","notic","notifi","notifyclient();","novemb","now","now,","now.","now;","null","null)","null,","nullptr","nullptr);","nullptr.","nullptr/nul","num_dns_connections;","num_entries;","num_errors;","num_events_;),","num_total_entries_;","number","number,","numer","obfusc","object","object\"","object)","object,","object.","object;","objects,","objects.","oblig","obscur","obviou","obvious","obvious);","obvious,","obvious.","obvious:","occasion","occur","of\"","of:","offer","offici","often,","ok","ok,","ok.","okay","old","older","omit","omitted:","on","on.","onc","once.","once;","one,","one.","ones.","onto","opaqu","open","openfileordie()","oper","operation.","operation;","operations,","operations.","operator\"\",","operator'","operator,","operator.","operator=(const","operator=(foo&&);","operator=(std::initializer_list","operator=.","operators,","operators.","optim","option","option.","optional.","options,","options.set_precision_decimals(7);","options.set_use_cache(productoptions::kdontusecache);","options;","or,","order","order,","order.","order1.12.2.5.","order:","ordering,","ordering1.12.2.5.2.","ordinari","ordinarily,","organ","origin","other","other)","other,","other_namespace::foo;","otherclass","otherwis","otherwise\"","otherwise,","otherwise.","out","out,","out_of_memori","output","output,","outputs.","outright","outsid","outweigh","over","overcom","overestimated,","overflow","overli","overload","overloading,","overloading.","overloading1.12.2.4.9.","overloading1.12.2.5.5.","overloads.","overrid","overridden","override,","override.","override;","overrides,","overus","overview","own)","own,","own.","own;","owner","ownership","ownership),","ownership,","ownership.","p","pack","pack()","packages.","padding.","page","pages),","paid","pain","pair","pairs.","par_name1,","par_name2)","par_name2,","par_name3)","parallel/distribut","paramet","parameter.","parameter:","parameters)","parameters,","parameters.","paren","paren:","parent","parenthes","parentheses.","parentheses:","parenthesi","parenthesis,","parenthesis.","pars","part","parti","partial","particular","particular,","particularli","pass","passiv","past","past,","path","path.","pattern","pattern.","pay","pc_reader;","peer","peopl","people,","perceiv","perfect","perfect,","perfect.","perfectli","perform","performance.","perhap","period","permit","permitted,","permitted:","persist","persistent,","person","pervas","phase.","philosoph","physic","pi","pi(3.14);","pi_round","pick","piec","pieces.","pipe.","pitfal","pitfalls.","pi{3.14};","place","place.","places.)","plain","plain).","plainer","plan","platform.","pleas","pod","pod.","point","point,","point.","pointer","pointer'","pointer)","pointer,","pointer.","pointers),","pointers,","pointers.","pointers1.12.2.6.2.","points.","policy.","pollut","polygon","polygon:","polymorph","pool*","pool;","pool_;","poor","popular","portability1.12.3.","portabl","portable,","portable.","portably.","portion","posit","possibl","possible).","possible,","possible.","possible:","post","postincr","potenti","power","practic","practice,","practices.","pre","preced","preceding.","precis","precisely,","precision,","precompil","precompile.cc),","precompile.h.","predecessor","predecr","predecrement1.12.2.7.8.","predic","predict","prefer","preferably,","preference,","preference.","prefix","prefix.","preincrement","prematur","prepar","preprocessor","prerequisites.","presenc","present","present,","present.","pressure.","pretti","prevail.","preval","prevent","previou","pri*","price_count_reader;","prid","prid64","primarili","primit","principl","principle:","principles,","print","printf","printf(\"%\"","printf(\"x","printf()","printf,","printing,","printto().","prio","prior","priorit","priu","priu64","privat","private,","private.","private:","private:.","prix","prix64","probabl","problem","problem,","problem.","problemat","problems.","proceed.","process","process(element);","process(it","processed.","processor","produc","produced,","product","productively.","productopt","program","program,","program.","programm","programmat","programmers.","programming.","programs.","prohibit","prohibition.","project","project'","project,","project.","project/src/base/logging.h","project/src/foo/internal/fooserver.cc","project1::foo","project2::foo","projects,","projects.","promot","prone","prone.","propag","proper","proper.","properli","properly,","properly.","properti","propertiesmap","propertiesmap;","propon","protect","protected.","protected:,","prototyp","prove","provid","provided,","pthread_once().","ptr);","ptrdiff_t","ptrdiff_t.","public","public,","public.","public:","public:,","pull","pun","punctuat","punctuation,","punctuation.","pure","pure).","purpos","put","python,","p{foo,","qualifi","qualiti","quality,","queri","question","question,","question.","quick_exit()","quick_exit(),","quietli","quit","r","r.y;","radians)","radic","raii","rang","rare","rare,","rare.","rare;","rarely.","ration","rationale:","raw","re","read","read,","readability,","readability.","readability—for","readabl","readable,","readable.","reader","reader\"","reader,","reader.","readers,","readers.","reading,","real","realist","realli","reals,","reals.","reason","reason.","reason;","reasons,","recapitul","recogn","recommend","recompil","recompilation.","records.size();","recov","recruit","recurs","redesign","reduc","redund","ref","ref).","refactor","refer","referenc","reference,","reference.","references),","references,","references1.12.2.7.2.","regardless","region,","regist","register_callback().","registr","regress","regular","reinterpret_cast","reiter","rel","relat","related.","relations.","relationship","releas","relev","reli","reliabl","reliably.","reluct","remain","remedies:","rememb","remember:","remov","repeat","repeatedli","repetit","replac","repres","represent","request","request.","requir","required,","required.","requirements)","requirements.","requirements:","reserved，pow","reset()","reset(),","resist","resiz","resolution,","resolv","resort,","resourc","resource.h","resources).","respectively.","respons","response.","responses.\").","rest","restor","restrict","restriction.","restrictions!","restrictions,","result","result,","result.","result;","retain","return","return(result);","return;","returns,","returns.","returntyp","reusable,","revers","review","reviewed,","rewritten.","rhythm","right","risk","robust","robust,","roll","room","rotate(doubl","round(x)","rtti","rude","rule","rule,","rule.","rule:","rules,","rules.","rules1.12.12.1.2.","rules1.12.13.3.1.","run","runtim","runtime.","rvalu","s);","safe","safer","safer,","safest","safeti","said,","same","same,","satisfi","save","say","say,","saying,","scalar","scale","scatter","scheme","scheme.","scope","scope,","scope.","scopes,","scopes.","scoping1.12.2.3.1.","score","scores[x]","scratch.","screen","screen,","search","second","second,","section","section,","section.","section:","sections.","secur","see","seek","seek.","seem","sees.","segments.","seldom","select","self","semant","semantics,","semantics.","semicolon","semicolon,","semicolon.","sens","sense,","sense.","sensibl","sentenc","sentinel","separ","separately.","sequenc","serial","serv","serve.","serving,","set","set_count(int","set_some_var(int","sever","sfina","shape","share","shared,","shell","short","short,","short.","shortcut","shorten","shorter","shorthand","should,","shouldn't","show","shown","side","side,","sides!","sidet","sign","signal","signatur","signature.","signific","significant,","significantli","silent","similar","similar)","simpl","simple,","simpler","simpler,","simpli","simplif","simplifi","simply,","simul","singl","single,","singleton","site","site).","site,","site.","situat","situation,","situations,","situations.","size","size();","size);","size,","size.","size_t","size_t,","sizeof","sizeof(0).","sizeof(data));","sizeof(int).","sizeof(null)","sizeof(struct));","sizeof(type)","sizeof(type).","sizeof(varname)","sizeof(void","skeptic","skip","slicing,","slicing.","slightli","slightly)","slow","slower","slower.","slowest","small","small,","small.","smaller","smart","snippet","snippet,","so,","so.","so:","softwar","sole","solution,","solution.","solv","some,","some_map)","some_other_function_parameter);","some_other_var_(var","some_other_var_;","some_var()","some_var_","some_var_(var)","some_var_(var),","some_var_;","someflag,","somefunction(","somefunction();","somefunctionthatdoesnothing()","somehow","someinternalfunction();","someon","someothertype{","someothertype{\"slightli","someth","something\"","sometim","sometimes,","sometyp","somewhat","soon","sort","sought","sourc","source,","source.","sources,","space","space.","spaces,","spaces.","spaces:","span","sparingly,","sparingly.","sparse_hash_map","special","special,","specialize.","specif","specifi","specific.","specific_magic)","specific_magic)1.12.2.1.","specifically,","specified,","specified.","specifier.","specifiers,","specifiers.","spell","spelling,","spent","split","spread","stake","stand","standard","standard,","standard.","star","start","startrpc()).","startrpc(),","state","state),","state,","statement","statement.","statements,","statements1.12.13.2.10.","static","static,","static.","static_cast","static_cast(double_value),","static_cast(x);","statist","stay","std","std,","std::","std::array","std::auto_ptr.","std::bind","std::cerr,","std::cin,","std::clog.","std::cout,","std::exception_ptr,","std::find(v.begin(),","std::for_each(v.begin(),","std::function,","std::function.","std::hash","std::hash.","std::hash;","std::initializer_list","std::initializer_list,","std::initializer_list.","std::map","std::move","std::nested_exception.","std::pair","std::pair).","std::set","std::set,","std::shared_ptr","std::shared_ptr).","std::shared_ptr.","std::sort(indices.begin(),","std::sort(v.begin(),","std::tuple,","std::unique_ptr","std::unique_ptr.","std::unordered_map","std::unordered_set,","std::unordered_set;","std::vector","std::vector,","stdafx.h","step","steps,","stick","still","stl","stl,","stls,","stop","storag","storage_duration)","store","str","str;","straight","strchr(str,","stream","stream,","stream.","streams'","streams,","streams.","streams1.12.2.7.7.","strictli","string","string\",","string&","string(s)","string);","string,","string.","stringifying,","strings.","strong","strongli","stroustrup,","struct","structs)","structs,","structur","structure:","stuff","style","style,","style.","style1.12.13.1.2.","style1.12.13.1.8.","style1.12.13.2.11.","style1.12.13.2.14.","style1.12.13.2.5.","style1.12.2.3.3.","style1.12.2.3.4.","style1.12.2.7.5.","style:","sub","subclass","subclass,","subclass.","subclassed,","subclasses.","subdirectori","subdivid","subject","submit","subsequ","subset","substanti","substitut","subtl","such","such;","suffer","suffic","suffici","sufficient.","suffix","suffix.","sum","superclass","superclass,","superclasses,","superior","superlongvariablename1,","superlongvariablename2,","supersed","support","support,","sure","surpris","surround","swap(),","swap().","switch","symbol","synchron","synonym","syntact","syntax","syntax,","syntax.","syntax1.12.2.6.","syntax:","syntax;","synthesi","system","system.","systems.","t","t&","t&)","t&,","t&.","t*","t*),","t,","tab","tabl","table.","table_name;","table_name_;","tableinfo","tablename;","tablename_;","tabs1.12.13.2.4.","tacitli","tag","tags.","take","target","task.","tast","tchar","teach,","team","team.","technic","technicalities.","techniqu","techniques,","techniques.","techniques;","tell","templat","template,","template.","templates,","temporari","temporary,","tempt","temptat","tend","term","termin","terminate!","terminates,","test","test()","test(d*","test).","test,","test.","test_function()","testfunction2(std::vector","testfunction2({1,","tests.","text","text,","text.","textbook","textlen);","textual","that'","that.","that:","them),","them,","them.","them:","them;","themselv","there'","therefor","thereof).","they'll","they'r","they'v","thing","thing,","things.","think","third","this,","this.","this:","this_other_th","those","though","thousand","thread","thread.","threads,","through","through,","throughout","throw","throwback","thrown.","thu","thumb","thumb:","thus,","ti","time","time,","time.","time:","timeseri","timeseries;","to,","to.","to:","todo","todo(bug","todo(kl@gmail.com):","todo(zeke)","todo.","togeth","together,","tolerant,","too.","too:","tool","tool.","tooling.","tools.","top","total","touch","trace","track.","tradit","trail","trait","traits.","transfer","transfer.","transform","transit","transpar","treat","tree","tree.","tri","trick","tricki","trickier","tricky,","trivial","trivial,","true","ture","turn","tutorial:","tweak","twice","two","two,","two.","type","type'","type)","type).","type,","type.","type:","typedef","typedef,","typeid","typeid(d1))","typeid(d2))","typeid(d3))","types)","types,","types.","types1.12.2.4.4.","types1.12.2.7.11.","types;","typic","u","u)","u);","u8","u8\"\\ufeff\",","ugli","uint","uint32_t,","uint64_t","uint64_t.","ull","unaffect","unambigu","unambiguous.","unari","unawar","unbalanc","unclear","unclear)","undefin","underli","underscor","underscore.","underscores.","underscores:","understand","understand,","understand.","understood","understood.","undesirable,","undisciplin","unexpect","unfamiliar","unfamiliar.","unfortunately,","unicod","uniform","uniformli","unimport","unintend","uniqu","unique.","unique_ptr.","uniqueness,","unit","unittest","unittests,","univers","unix","unknown.","unless","unlik","unnam","unnecessari","unnecessarili","unordered_set,","unreadable,","unrel","unsaf","unscop","unsign","unsure,","unsurpris","unsurprising,","until","untrust","unus","unusu","unusual)","up","up.","up:","updat","upon","upon,","upper","url","urltabl","urltableerror","urltableproperti","urltabletest","us","usabl","usag","usage,","usages.","use,","use.","use:","use;","used,","used.","used:","useful.","useful:","user","user'","user,","users.","uses.","using,","usual","usual,","usually,","utf","util","v","v(100,","v)","v.end())","v.end(),","v.push_back(1);","v.push_back(2);","v1","v2(std::move(v1))","v;","valid","validate().","valtype&","valu","valuabl","value).","value,","value.","values),","values,","values1.12.13.2.13.","values},","values}};","vanishingli","var","var)","var);","var;","vari","variabl","variable'","variable)","variable,","variable.","variables![](./googl","variables,","variables.","variables1.12.2.3.5.","variables1.12.2.4.","variable{","variant","variou","vector","vector.","vector{\"foo\",","verbos","veri","verifi","versa.","version","versions.","versu","versus:","vertic","via","viabl","vice","view.","viral:","virtual","virtual,","virtual.","visibl","visible.","visitor","visitors\"","visitors.","visual","vital","vocabulari","vocabulary.","void","voronoi","vs.","vulnerabilities,","v{\"foo\",","v{100,","w","w*x","waiv","waiver","walker.zheng","want","wari","warn","warnings,","waters,","way","way,","way.","wchar_t","we'd","we'v","websearch::index_util)","websearch::util.","weight","weight(x)","welcom","well","well,","well.","wgc_connections;","what'","whatev","whenev","where,","where.","wherea","wherev","wherever.","whether","whi","whitespac","whitespace.","whitespace1.12.13.2.19.","whitespace1.12.13.3.","whole;","whose","wide","widen","wider","widespread","widget","width","width,","window","windows.","windows:","with.","within","without","wombat_type(foo)","won't","word","word,","word.","words.","words1.12.1.","work","work.","workaround","workaround.","world.","worri","worth","wouldn't","wrap","wrap.","wrapper","write","write,","write.","write:","writer","written","written:","wrong","wrong!","wrong,","wrong.","x","x(3);","x)","x),","x).","x);","x,","x.add_foo();","x2,","x3,","x::foo()","x::y::foo()","x;","x[]","x_plus_n","xalloc(),","xml","x{3};","y","y)","y);","y,","y.find(key);","y/z;","y1,","y2,","y3,","y;","year","yet_anoth","yield","you!","you'r","you'v","you,","you.","you?","yourself","yourself,","yourself.)","z);","z1,","z2,","z3);","z;","zero","{","{\"assum","{\"foo\",","{\"},","{.","{...}","{.field","{0};","{1,","{1.23};","{2,","{3,","{7,","{foo,","{interiorwrappinglist,","{short,","{{1,","{}","{}\"","{}.","{};","|","||,","}","})","}),","});","};","};).","~,","~myclass()","©","—"]},"length":12},"tokenStore":{"root":{"0":{"0":{"0":{"1":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}},"2":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"docs":{}},"docs":{}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001369513554156205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"x":{"0":{"0":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"docs":{}},"docs":{}}}},"docs":{}},"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"f":{"docs":{},"f":{"0":{"0":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"]":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"b":{"0":{"0":{"0":{"0":{"docs":{},"'":{"1":{"1":{"1":{"1":{"docs":{},"'":{"0":{"0":{"0":{"0":{"docs":{},"'":{"0":{"0":{"0":{"0":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"1":{"0":{"1":{"docs":{},"'":{"0":{"1":{"0":{"1":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"1":{"0":{"docs":{},"'":{"1":{"0":{"1":{"0":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"1":{"0":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"1":{"1":{"docs":{},"'":{"1":{"1":{"1":{"1":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},".":{"0":{"0":{"0":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"`":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"1":{"0":{"0":{"0":{"0":{"0":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"'":{"0":{"0":{"0":{"docs":{},"'":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"m":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"+":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"1":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"4":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},"6":{"4":{"6":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.07407407407407407},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"Gif图.html":{"ref":"Gif图.html","tf":0.125},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"]":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"'":{"0":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"7":{"8":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"3":{"4":{"5":{"docs":{},")":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"'":{"4":{"5":{"6":{"docs":{},"'":{"7":{"8":{"9":{"0":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},".":{"4":{"5":{"6":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}}},"4":{"0":{"8":{"docs":{},"a":{"1":{"4":{"9":{"docs":{},"b":{"docs":{},"f":{"docs":{},"a":{"7":{"8":{"docs":{},"a":{"4":{"docs":{},"c":{"2":{"docs":{},"d":{"4":{"0":{"1":{"1":{"docs":{},"f":{"8":{"8":{"4":{"docs":{},"a":{"docs":{},"a":{"2":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"0":{"4":{"docs":{},"f":{"0":{"9":{"3":{"4":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"0":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"0":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"docs":{}},"8":{"8":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"2":{"0":{"0":{"3":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"9":{"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}}},"6":{"8":{"3":{"6":{"2":{"7":{"1":{"8":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},":":{"0":{"5":{"docs":{},":":{"1":{"6":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"docs":{}},"docs":{}}},"docs":{}},"1":{"4":{"docs":{},":":{"5":{"5":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}},"docs":{}}},"5":{"docs":{},":":{"4":{"3":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}},"docs":{}},"docs":{}}},"docs":{}},"3":{"7":{"docs":{},":":{"4":{"5":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{},":":{"1":{"6":{"docs":{},":":{"3":{"8":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}},"docs":{}},"docs":{}}},"8":{"docs":{},":":{"1":{"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}}},"9":{"docs":{},":":{"5":{"0":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"8":{"5":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"9":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"6":{"0":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"7":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"8":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"9":{"0":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"6":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"7":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}}},"2":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"2":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"7":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},".":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}},"2":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.07407407407407407}}}},"docs":{}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"docs":{}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"2":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"3":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"4":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"5":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"6":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"7":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"3":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"2":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"3":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"4":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"5":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"6":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"7":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"2":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"3":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"4":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"5":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"6":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"7":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"6":{"1":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"8":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"9":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"+":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"8":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"2":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"3":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"4":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"5":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"9":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"Gif图.html":{"ref":"Gif图.html","tf":0.0625}}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"faq.html":{"ref":"faq.html","tf":0.013651877133105802},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"0":{"0":{"0":{"docs":{},",":{"0":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0033200531208499337},"CPP17.html":{"ref":"CPP17.html","tf":0.006147540983606557},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0033200531208499337},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"2":{"0":{"0":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"1":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"\"":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{"./":{"ref":"./","tf":0.07407407407407407},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.045454545454545456},"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"Gif图.html":{"ref":"Gif图.html","tf":0.125},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},"7":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"%":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"1":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"5":{"3":{"5":{"1":{"8":{"4":{"0":{"9":{"docs":{},"d":{"2":{"1":{"8":{"6":{"0":{"9":{"docs":{},"a":{"docs":{},"f":{"4":{"0":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"6":{"docs":{},"e":{"8":{"docs":{},"e":{"docs":{},"f":{"5":{"1":{"6":{"1":{"6":{"docs":{"git.html":{"ref":"git.html","tf":0.012861736334405145}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"1":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},"(":{"8":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"4":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},"_":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"h":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"5":{"5":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"9":{"9":{"docs":{},"'":{"7":{"9":{"2":{"docs":{},"'":{"4":{"5":{"8":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0033200531208499337},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"f":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"1":{"8":{"2":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},".":{"4":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"git.html":{"ref":"git.html","tf":0.003215434083601286}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"d":{"docs":{},"u":{"0":{"0":{"0":{"0":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"^":{"3":{"1":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"3":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"1":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"/":{"6":{"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{}}},"3":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"0":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"1":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}},"2":{"9":{"0":{"4":{"8":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"三":{"docs":{},"方":{"docs":{},"合":{"docs":{},"并":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"x":{"3":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}}},"4":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"%":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"+":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"9":{"4":{"9":{"6":{"7":{"2":{"9":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"6":{"1":{"1":{"6":{"8":{"6":{"0":{"1":{"8":{"4":{"2":{"7":{"3":{"8":{"7":{"9":{"0":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"9":{"docs":{},".":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"]":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"%":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"5":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"%":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"%":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}},"6":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{},"a":{"docs":{},"e":{"6":{"docs":{},"c":{"docs":{},"c":{"3":{"docs":{},"f":{"9":{"2":{"8":{"0":{"4":{"1":{"8":{"docs":{},"b":{"docs":{},"d":{"docs":{},"b":{"0":{"docs":{},"f":{"docs":{},"c":{"docs":{},"f":{"6":{"docs":{},"c":{"1":{"docs":{},"e":{"6":{"7":{"8":{"9":{"0":{"5":{"docs":{},"b":{"1":{"docs":{},"f":{"docs":{},"e":{"6":{"9":{"0":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}}},"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}}},"6":{"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},")":{"docs":{},"下":{"docs":{},"测":{"docs":{},"试":{"docs":{},"通":{"docs":{},"过":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"0":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"1":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"docs":{}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"7":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"5":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"1":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"9":{"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"8":{"0":{"0":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"]":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"9":{"1":{"1":{"docs":{},"b":{"1":{"docs":{},"a":{"docs":{},"f":{"2":{"docs":{},"e":{"0":{"docs":{},"c":{"9":{"5":{"docs":{},"a":{"2":{"docs":{},"f":{"docs":{},"c":{"1":{"3":{"0":{"6":{"docs":{},"b":{"8":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"7":{"0":{"7":{"0":{"6":{"4":{"docs":{},"d":{"5":{"3":{"8":{"6":{"docs":{},"c":{"2":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}},"docs":{}}},"docs":{}},"8":{"7":{"docs":{},".":{"6":{"5":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"9":{"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"9":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{},"c":{"1":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"8":{"9":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"9":{"9":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00398406374501992},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017991648652640343},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"p":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},"/":{"docs":{},"*":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"*":{"docs":{},"/":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"i":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"{":{"docs":{},"}":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00398406374501992},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0021885363659555042},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0019943192119417415}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"d":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":10},"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.005048402905516992},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.010213331721762253}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"!":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.013157894736842105},"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.003329797661085675},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0035656010152897806}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000590770552773265},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004648074369189907},"CPP14.html":{"ref":"CPP14.html","tf":0.008791208791208791},"CPP17.html":{"ref":"CPP17.html","tf":0.007513661202185792},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007116099840223419},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001262100726379248},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"o":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"5":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002107976745122786},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0029612618601559193}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"2":{"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"4":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"&":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"i":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0014366465715168035},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001631715718861425}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"l":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"m":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"分":{"docs":{},"为":{"docs":{},"：":{"docs":{},"当":{"docs":{},"前":{"docs":{},"目":{"docs":{},"录":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"）":{"docs":{},"和":{"docs":{},"全":{"docs":{},"局":{"docs":{},"（":{"docs":{},"g":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"）":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015037795888774017},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0017525835498881973}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"o":{"docs":{},"l":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006041971562453846},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0016921496343748111}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006981833805502222},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"p":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"4":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0021348299520670255},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"4":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"9":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"3":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006713301736059829}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}},"{":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},";":{"docs":{},".":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077}},"_":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"{":{"docs":{},"c":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008861558291598974},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.005378618480691364}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"r":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"git-tips.html":{"ref":"git-tips.html","tf":0.005398110661268556},"git.html":{"ref":"git.html","tf":0.00964630225080386},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"e":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"r":{"docs":{},"d":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"历":{"docs":{},"史":{"docs":{},"中":{"docs":{},"显":{"docs":{},"示":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"1":{"docs":{},"有":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"2":{"docs":{},"没":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"i":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CPP14.html":{"ref":"CPP14.html","tf":0.01098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0020945501416506666},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002296488789508672}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"f":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"r":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"{":{"0":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"p":{"docs":{},"p":{"1":{"1":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP11.html":{"ref":"CPP11.html","tf":10}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}},"4":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP14.html":{"ref":"CPP14.html","tf":10}}},"7":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP17.html":{"ref":"CPP17.html","tf":10}}},"docs":{}},"9":{"8":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}},"docs":{}},"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":10.000013426603472}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}},".":{"1":{"0":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"l":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"h":{"2":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},"a":{"docs":{},"r":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"*":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"n":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009532888465204957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"2":{"3":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}}},"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017320318479034358},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.01349527665317139},"git.html":{"ref":"git.html","tf":0.01607717041800643}}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"(":{"1":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"+":{"docs":{},"+":{"0":{"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"1":{"1":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004648074369189907},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.00989010989010989},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"8":{"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"9":{"8":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0024973482458142565},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.004955581072097661}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"\"":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},".":{"1":{"0":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"3":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"7":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"8":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}},"p":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"p":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},"[":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0073041168658698535},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0027793069187287693},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0033238653532362363}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"y":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00398406374501992},"CPP14.html":{"ref":"CPP14.html","tf":0.00989010989010989},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"e":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"y":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"g":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0013963667611004444},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0019338852964283556}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009130090361041367},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"!":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"b":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},"?":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.00964630225080386}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007653163979108205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"h":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"{":{"docs":{},"c":{"docs":{},"e":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"5":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.008794425274238377},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.008219012509820512}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"(":{"docs":{},"g":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"docs":{}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git.html":{"ref":"git.html","tf":0.003215434083601286}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"后":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"无":{"docs":{},"法":{"docs":{},"找":{"docs":{},"回":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"r":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.006430868167202572}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"下":{"docs":{},"来":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"单":{"docs":{},"一":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"命":{"docs":{},"令":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"p":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"t":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}}},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"c":{"docs":{},"i":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"m":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}}},"f":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"1":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"3":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"4":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"docs":{},"v":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"5":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"6":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}}},"g":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.003222384833308718},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"w":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"o":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}}},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"p":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"q":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":10}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},"]":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"(":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"9":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"i":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"7":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"/":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"t":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008995824326320171},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},"p":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"_":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"a":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"{":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"/":{"docs":{},"*":{"docs":{},"t":{"docs":{},"*":{"docs":{},"/":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"*":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"j":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"y":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"q":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"{":{"2":{"docs":{},"*":{"docs":{},"p":{"docs":{},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"docs":{},"]":{"docs":{},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006579035701338632},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"{":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007518897944387009},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"b":{"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{}},"docs":{}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011144080881859315},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"git.html":{"ref":"git.html","tf":0.00964630225080386},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.004169940170423642}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"b":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},"(":{"0":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"&":{"docs":{},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"p":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"{":{"docs":{},"}":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{},"c":{"docs":{},"c":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},"_":{"docs":{},"h":{"docs":{},"_":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"\"":{"docs":{},".":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}},")":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"m":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002236054873995286}},"=":{"docs":{},"'":{"docs":{},"%":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},"'":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}}}},"h":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"~":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"~":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"u":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"f":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"c":{"1":{"docs":{},"(":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"(":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"t":{"1":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"5":{"docs":{},".":{"6":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.008300132802124834},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.008915264705487452},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.012570254426784312}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"2":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"/":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"{":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"(":{"docs":{},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"{":{"4":{"2":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"p":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"1":{"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"m":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"p":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"w":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"{":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"b":{"docs":{},"b":{"7":{"1":{"docs":{},"e":{"docs":{},"f":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"docs":{}},"docs":{}}}},"g":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"t":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.045454545454545456},"git-tips.html":{"ref":"git-tips.html","tf":5.12280701754386},"git.html":{"ref":"git.html","tf":10.131832797427652}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"最":{"docs":{},"近":{"docs":{},"修":{"docs":{},"改":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git.html":{"ref":"git.html","tf":0.003215434083601286}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"s":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"命":{"docs":{},"令":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"于":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"项":{"docs":{},"目":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"“":{"docs":{},"分":{"docs":{},"布":{"docs":{},"式":{"docs":{},"版":{"docs":{},"本":{"docs":{},"管":{"docs":{},"理":{"docs":{},"工":{"docs":{},"具":{"docs":{},"”":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"版":{"docs":{},"本":{"docs":{},"管":{"docs":{},"理":{"docs":{},"工":{"docs":{},"具":{"docs":{},"：":{"docs":{},"大":{"docs":{},"家":{"docs":{},"在":{"docs":{},"写":{"docs":{},"东":{"docs":{},"西":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"用":{"docs":{},"过":{"docs":{},"“":{"docs":{},"回":{"docs":{},"撤":{"docs":{},"”":{"docs":{},"这":{"docs":{},"个":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"回":{"docs":{},"撤":{"docs":{},"只":{"docs":{},"能":{"docs":{},"回":{"docs":{},"撤":{"docs":{},"几":{"docs":{},"步":{"docs":{},"，":{"docs":{},"假":{"docs":{},"如":{"docs":{},"想":{"docs":{},"要":{"docs":{},"找":{"docs":{},"回":{"docs":{},"我":{"docs":{},"三":{"docs":{},"天":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"光":{"docs":{},"用":{"docs":{},"“":{"docs":{},"回":{"docs":{},"撤":{"docs":{},"”":{"docs":{},"是":{"docs":{},"找":{"docs":{},"不":{"docs":{},"回":{"docs":{},"来":{"docs":{},"的":{"docs":{},"。":{"docs":{},"而":{"docs":{},"“":{"docs":{},"版":{"docs":{},"本":{"docs":{},"管":{"docs":{},"理":{"docs":{},"工":{"docs":{},"具":{"docs":{},"”":{"docs":{},"能":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"次":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"版":{"docs":{},"本":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"找":{"docs":{},"到":{"docs":{},"之":{"docs":{},"前":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"（":{"docs":{},"文":{"docs":{},"本":{"docs":{},"状":{"docs":{},"态":{"docs":{},"）":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"奇":{"docs":{},"技":{"docs":{},"淫":{"docs":{},"巧":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"子":{"docs":{},"树":{"docs":{},"合":{"docs":{},"并":{"docs":{},"和":{"docs":{},"拆":{"docs":{},"分":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}},"补":{"docs":{},"丁":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}},"f":{"docs":{"Gif图.html":{"ref":"Gif图.html","tf":0.125}},"图":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"Gif图.html":{"ref":"Gif图.html","tf":10}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"_":{"docs":{},"s":{"docs":{},"y":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":10}}}}}}}}}}}}}}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0014769263819331623},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"!":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"\"":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001141261295130171},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"?":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"d":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"{":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"c":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"h":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},"f":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"faq.html":{"ref":"faq.html","tf":0.020477815699658702}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002081123538178547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967}}}}}}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"x":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"7":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"_":{"7":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},"p":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"=":{"docs":{},"'":{"docs":{},"'":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"&":{"docs":{},"a":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{},"n":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"o":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"git-tips.html":{"ref":"git-tips.html","tf":0.005398110661268556},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"v":{"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"docs":{},"n":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}}},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}}}}},"s":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"和":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"也":{"docs":{},"会":{"docs":{},"变":{"docs":{},"为":{"docs":{},"指":{"docs":{},"定":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"输":{"docs":{},"出":{"docs":{},"命":{"docs":{},"令":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}},")":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"。":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"p":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"t":{"docs":{},"v":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}}},"n":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"t":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}},"3":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"6":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"_":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}}}}}}},"{":{"1":{"docs":{},"}":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},"x":{"docs":{},"}":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"docs":{}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.012087912087912088},"CPP17.html":{"ref":"CPP17.html","tf":0.006147540983606557},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.006243370614535641},"faq.html":{"ref":"faq.html","tf":0.013651877133105802},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0033238653532362363}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"*":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},">":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"e":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002510774849286376},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0019943192119417415}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"2":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"7":{"0":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"7":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"docs":{},"c":{"docs":{},"h":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.007692307692307693},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.003142563606696078}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"k":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"2":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"x":{"2":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007116099840223419},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004967843284684274},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"i":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"git.html":{"ref":"git.html","tf":0.00964630225080386},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0027793069187287693},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0033842992687496223}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"5":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002115187042968514}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},".":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"5":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006176237597175043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"(":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"l":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"u":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"docs":{}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}}}}},"/":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"{":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"'":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"(":{"0":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0028061601256730087},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"l":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"b":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}},"o":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453}},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"/":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"{":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"v":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}}}},"p":{"docs":{},"}":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},"e":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"?":{"docs":{},"?":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"_":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"v":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}}}},"p":{"docs":{},"}":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"/":{"docs":{},"o":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"{":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"{":{"1":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"i":{"docs":{},"i":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}},"m":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"{":{"docs":{},"+":{"docs":{},"+":{"docs":{},"x":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"{":{"docs":{},"i":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"y":{"docs":{},"k":{"docs":{},"u":{"docs":{},"l":{"docs":{},"o":{"docs":{},"u":{"docs":{},"@":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"1":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"x":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}}}}}}}}}}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"h":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"*":{"docs":{},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006176237597175043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0019943192119417415}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"s":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}},"(":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"文":{"docs":{},"件":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"k":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0032895178506693163},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.004895147156584275}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"_":{"docs":{},"g":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"1":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"y":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"d":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"(":{"1":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"9":{"9":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"r":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015843392097101196},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"4":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"i":{"docs":{},"c":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"]":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"*":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"l":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.012861736334405145}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"'":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"l":{"2":{"docs":{},"(":{"docs":{},"&":{"docs":{},"v":{"docs":{},"a":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"v":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"r":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"(":{"0":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"u":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"z":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"d":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"z":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"u":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"y":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002792733522200889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0052577506496645915}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.010624169986719787},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017723116583197949},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"q":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"z":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008055962083271795},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004967843284684274},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0033200531208499337},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.003249238040252957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"&":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"0":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"1":{"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"9":{"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}}},"r":{"docs":{},"g":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.006430868167202572}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"{":{"docs":{},"i":{"docs":{},"n":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}}}}},"\"":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"m":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"{":{"docs":{},"m":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"p":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0016921496343748111}},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"c":{"docs":{},"h":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"docs":{}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"{":{"2":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"m":{"docs":{},"m":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"(":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"/":{"docs":{},"s":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}}},"[":{"docs":{},"m":{"docs":{},"t":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"b":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"*":{"docs":{},")":{"docs":{},"&":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"f":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"d":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"&":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{},"s":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{},")":{"docs":{},"&":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}},"t":{"docs":{},"b":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}},"v":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"选":{"docs":{},"项":{"docs":{},"表":{"docs":{},"示":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"要":{"docs":{},"和":{"docs":{},"那":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"比":{"docs":{},"对":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"提":{"docs":{},"交":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"。":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"r":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"(":{"1":{"2":{"8":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00236308221109306},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"(":{"1":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"z":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009532888465204957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},"i":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.021052631578947368},"CPP11.html":{"ref":"CPP11.html","tf":0.010292164674634794},"CPP14.html":{"ref":"CPP14.html","tf":0.02857142857142857},"CPP17.html":{"ref":"CPP17.html","tf":0.01639344262295082},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00326343143772285}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"a":{"docs":{},"d":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"—":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"(":{"docs":{},"f":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"h":{"docs":{},"i":{"docs":{},"p":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006847567770781025},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.006954980598557983},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"s":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"c":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.00989010989010989},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0029612618601559193}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"4":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}},"o":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"/":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"x":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"git.html":{"ref":"git.html","tf":0.00964630225080386}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007787430013829401},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"o":{"docs":{"git.html":{"ref":"git.html","tf":0.00964630225080386}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001920004296513111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018734513809149694}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"e":{"docs":{},"x":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"0":{"docs":{},"x":{"8":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"&":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"s":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.006430868167202572}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"w":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"{":{"docs":{},"r":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009532888465204957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004081687455524376},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0035051670997763946}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"3":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001020421863881094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"?":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"{":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0036520584329349268},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"e":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"f":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"h":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{},"m":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"7":{"docs":{},".":{"2":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"x":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"参":{"docs":{},"数":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"：":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"m":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"s":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"{":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009667154499926154},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002242242779843983},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009532888465204957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"i":{"docs":{},"c":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"4":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"q":{"2":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"g":{"docs":{},"e":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"t":{"2":{"docs":{},"(":{"3":{"docs":{},".":{"1":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0018662978826246325},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"s":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"(":{"docs":{},"&":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"j":{"docs":{},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"j":{"docs":{},"m":{"docs":{},"p":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"x":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011546878986022906},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"{":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008324494152714188},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"_":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"=":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{},"e":{"docs":{},"t":{"1":{"docs":{},".":{"8":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"m":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"y":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006847567770781025}}}}}}},"(":{"1":{"docs":{},".":{"0":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"1":{"4":{"1":{"5":{"9":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0025376280562306153},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0038073366773433252}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0014232199680446838},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}},"e":{"docs":{},"目":{"docs":{},"录":{"docs":{},"拆":{"docs":{},"分":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"i":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"v":{"docs":{},"i":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"n":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"0":{"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317}},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"code.html":{"ref":"code.html","tf":0.010526315789473684},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}},"c":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"~":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"_":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"f":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"v":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},")":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"1":{"0":{"0":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}}},"d":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"l":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011144080881859315},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011144080881859315},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"e":{"docs":{},"=":{"docs":{},"'":{"2":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}}}}},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"y":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"1":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}},"c":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}}}}},"o":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007787430013829401},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009935686569368548},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007384631909665812},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},")":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.004230374085937028}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},":":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"v":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"_":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"code.html":{"ref":"code.html","tf":0.04736842105263158},"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"docs":{},".":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"docs":{}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},"e":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"&":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"<":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}}},"y":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}},"y":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}}}}}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"e":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},"e":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"docs":{},"c":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"y":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"5":{"1":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"9":{"1":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967}},"e":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},">":{"docs":{},">":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"x":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},"a":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"p":{"1":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"]":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"z":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"'":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"v":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"{":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847}},"a":{"docs":{},"l":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"j":{"docs":{},"t":{"docs":{},"c":{"1":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"2":{"2":{"docs":{},"/":{"docs":{},"w":{"docs":{},"g":{"2":{"1":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"2":{"0":{"1":{"5":{"docs":{},"/":{"docs":{},"n":{"4":{"4":{"7":{"7":{"docs":{},".":{"docs":{},"p":{"docs":{},"d":{"docs":{},"f":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"f":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"1":{"docs":{},"=":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0022153895728997436},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001631715718861425}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"(":{"docs":{},"c":{"docs":{},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"\"":{"docs":{},"\"":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}},"s":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"{":{"docs":{},"p":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"s":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.010238907849829351}}},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"0":{"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"1":{"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"9":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001288953933323487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"u":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"h":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"[":{"0":{"docs":{},"]":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"1":{"docs":{},"]":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0024570684353978976},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0016921496343748111}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"p":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"p":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000980142053464735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"9":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010875548812416924},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010741282777695727},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"<":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"1":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"b":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{},">":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"*":{"docs":{},">":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},"s":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834}}}},"k":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"y":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"7":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015977658131822393},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0030821296911826917}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"f":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"u":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"f":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"化":{"docs":{},"命":{"docs":{},"令":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007116099840223419}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"f":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008055962083271795},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006579035701338632},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001369513554156205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"3":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009935686569368548},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}},"t":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"r":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"b":{"docs":{},"n":{"docs":{},"(":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009264356395762564},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001020421863881094}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"9":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008055962083271795},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"2":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"docs":{},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"x":{"docs":{},"&":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"`":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"x":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"c":{"docs":{},"h":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"k":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"{":{"1":{"2":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"docs":{}},"docs":{}},"3":{"2":{"1":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"docs":{}},"docs":{}},"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"q":{"docs":{},"q":{"docs":{},"q":{"docs":{},"\"":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"s":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"c":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"{":{"1":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{},"(":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"f":{"docs":{},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"faq.html":{"ref":"faq.html","tf":0.010238907849829351}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"@":{"docs":{},"w":{"docs":{},"a":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"l":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},"c":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"o":{"docs":{},"n":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"i":{"docs":{},"o":{"docs":{},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"d":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"y":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},"{":{"0":{"docs":{},"}":{"docs":{},"{":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"z":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"s":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"z":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.07407407407407407},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"y":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010875548812416924},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001631715718861425}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"u":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010875548812416924},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010338484673532136},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"e":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008727292256877778},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018734513809149694}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"l":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},"'":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}}}}}}}},"h":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}}},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012486741229071282},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"g":{"docs":{},"e":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"*":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"~":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"i":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"{":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001920004296513111},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"v":{"docs":{},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"g":{"2":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"*":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"©":{"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"Gif图.html":{"ref":"Gif图.html","tf":0.0625},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"吾":{"docs":{},"日":{"docs":{},"三":{"docs":{},"省":{"docs":{},"吾":{"docs":{},"身":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}}}}}},"子":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}},"树":{"docs":{},"拆":{"docs":{},"分":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"目":{"docs":{},"录":{"docs":{},"方":{"docs":{},"式":{"docs":{},"合":{"docs":{},"并":{"docs":{},"外":{"docs":{},"部":{"docs":{},"版":{"docs":{},"本":{"docs":{},"库":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"日":{"docs":{},"志":{"docs":{"./":{"ref":"./","tf":0.07407407407407407}}}},"截":{"docs":{},"图":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"区":{"docs":{},"：":{"docs":{},"改":{"docs":{},"动":{"docs":{},"（":{"docs":{},"增":{"docs":{},"删":{"docs":{},"文":{"docs":{},"件":{"docs":{},"和":{"docs":{},"内":{"docs":{},"容":{"docs":{},"）":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}},"具":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"目":{"docs":{},"录":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"1":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.037037037037037035}}}},"docs":{}}},"docs":{}}},"docs":{"./":{"ref":"./","tf":0.037037037037037035},"SUMMARY.html":{"ref":"SUMMARY.html","tf":10.022727272727273},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"简":{"docs":{},"介":{"docs":{"./":{"ref":"./","tf":10},"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}},"化":{"docs":{},"命":{"docs":{},"令":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"p":{"1":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"3":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001691752037487077},"git.html":{"ref":"git.html","tf":0.01929260450160772},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"速":{"docs":{},"查":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111}}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"}":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"}":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"}":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"&":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011949677090186495},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"e":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"f":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},"i":{"docs":{},"x":{"docs":{"code.html":{"ref":"code.html","tf":0.010526315789473684},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"=":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0022690959867882224},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002538224451562217}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"r":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"l":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"h":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"=":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"b":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"\"":{"docs":{},"%":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"d":{"6":{"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"u":{"6":{"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"x":{"6":{"4":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008593026222156581},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"a":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002000563917345829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006579035701338632},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"y":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012218209159628889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"h":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"1":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"2":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008324494152714188},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"s":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"g":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.00546448087431694},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015843392097101196},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002538224451562217}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{},"m":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"z":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"s":{"docs":{},"。":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012218209159628889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},")":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"2":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"3":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"docs":{}}}}}}},"s":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002524201452758496},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"4":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git.html":{"ref":"git.html","tf":0.01607717041800643}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"l":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"c":{"docs":{},"!":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"&":{"docs":{},"v":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"1":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"9":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0049800796812749},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004900710267323675},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0029008279446425334}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"/":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"{":{"1":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"m":{"docs":{},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012218209159628889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"p":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"(":{"docs":{},"x":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001060701674297453},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012086783102677222}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017723116583197949},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"v":{"docs":{},"e":{"docs":{},"y":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.010796221322537112},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"了":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}},"d":{"docs":{"git.html":{"ref":"git.html","tf":0.00964630225080386}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"/":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},":":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}},"i":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"命":{"docs":{},"令":{"docs":{},"，":{"docs":{},"参":{"docs":{},"考":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"e":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"(":{"3":{"docs":{},".":{"1":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}},"docs":{}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"{":{"3":{"docs":{},".":{"1":{"4":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}},"docs":{}}},"(":{"1":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},".":{"docs":{},"p":{"docs":{},"[":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"1":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"d":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"f":{"docs":{},"i":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"t":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"1":{"6":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"b":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}},"t":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008861558291598974},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"p":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728},"git-tips.html":{"ref":"git-tips.html","tf":5}}},"m":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"9":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0018931510895688717},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"p":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.010526315789473684},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"_":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"s":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"docs":{},"*":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"g":{"docs":{},"h":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"+":{"docs":{},"+":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},":":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"/":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"k":{"docs":{},"l":{"docs":{},"@":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"k":{"docs":{},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008593026222156581},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008593026222156581},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"m":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}},"s":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"!":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"r":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"p":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"git.html":{"ref":"git.html","tf":0.02572347266881029},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006981833805502222},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"&":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"s":{"docs":{},"k":{"1":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"_":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"x":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00597609561752988},"CPP14.html":{"ref":"CPP14.html","tf":0.008791208791208791},"CPP17.html":{"ref":"CPP17.html","tf":0.015027322404371584},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004739591025658239},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002538224451562217}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"8":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},">":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"d":{"docs":{},":":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"<":{"docs":{},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"s":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000590770552773265},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"d":{"docs":{},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"<":{"docs":{},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"{":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"：":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"b":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"o":{"docs":{},"f":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"y":{"docs":{},"'":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},"l":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"{":{"2":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"}":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"]":{"docs":{},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004967843284684274},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017723116583197949},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},"?":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"f":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"=":{"docs":{},"]":{"docs":{},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001369513554156205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"!":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},":":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"r":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010741282777695727},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.012948207171314742},"CPP14.html":{"ref":"CPP14.html","tf":0.01978021978021978},"CPP17.html":{"ref":"CPP17.html","tf":0.00819672131147541},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.005827145906899932},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.01118027436997643}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"5":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"6":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"8":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"docs":{},"*":{"docs":{},"]":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"d":{"1":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"}":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"e":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"(":{"2":{"docs":{},".":{"7":{"1":{"8":{"2":{"8":{"1":{"8":{"2":{"8":{"4":{"5":{"9":{"0":{"4":{"5":{"2":{"3":{"5":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"3":{"docs":{},".":{"1":{"4":{"1":{"5":{"9":{"2":{"6":{"5":{"3":{"5":{"8":{"9":{"7":{"9":{"3":{"2":{"3":{"8":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"u":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"1":{"0":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"8":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"?":{"docs":{},"?":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"g":{"docs":{},"p":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001020421863881094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"z":{"docs":{},"]":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"+":{"docs":{},"+":{"docs":{},"p":{"docs":{},"l":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"j":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"\"":{"docs":{},"\\":{"docs":{},"u":{"docs":{},"f":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.01195219123505976},"CPP14.html":{"ref":"CPP14.html","tf":0.013186813186813187},"CPP17.html":{"ref":"CPP17.html","tf":0.010245901639344262},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.019938506156097692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.02453616969843476}},"e":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"1":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"&":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"3":{"docs":{},"(":{"docs":{},"&":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011009814847138118},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0021756209584819003}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"(":{"docs":{},"&":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"b":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"*":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"(":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"s":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008190228117992991},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006041971562453846},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"(":{"docs":{},"m":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008995824326320171}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"9":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007116099840223419},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}},"e":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"e":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"文":{"docs":{},"件":{"docs":{},"：":{"docs":{},"新":{"docs":{},"建":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"git.html":{"ref":"git.html","tf":0.028938906752411574},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}},"y":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}},"f":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"m":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"l":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"docs":{}},"6":{"4":{"docs":{},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"一":{"docs":{},"天":{"docs":{},"学":{"docs":{},"会":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}}},"定":{"docs":{},"要":{"docs":{},"先":{"docs":{},"测":{"docs":{},"试":{"docs":{},"命":{"docs":{},"令":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"用":{"docs":{},"于":{"docs":{},"工":{"docs":{},"作":{"docs":{},"环":{"docs":{},"境":{"docs":{},"中":{"docs":{},"，":{"docs":{},"以":{"docs":{},"防":{"docs":{},"造":{"docs":{},"成":{"docs":{},"不":{"docs":{},"能":{"docs":{},"弥":{"docs":{},"补":{"docs":{},"的":{"docs":{},"后":{"docs":{},"果":{"docs":{},"！":{"docs":{},"到":{"docs":{},"时":{"docs":{},"候":{"docs":{},"别":{"docs":{},"拿":{"docs":{},"着":{"docs":{},"砍":{"docs":{},"刀":{"docs":{},"来":{"docs":{},"找":{"docs":{},"我":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"性":{"docs":{},"推":{"docs":{},"送":{"docs":{},"所":{"docs":{},"有":{"docs":{},"标":{"docs":{},"签":{"docs":{},"，":{"docs":{},"同":{"docs":{},"步":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}},"般":{"docs":{},"上":{"docs":{},"线":{"docs":{},"之":{"docs":{},"前":{"docs":{},"都":{"docs":{},"会":{"docs":{},"打":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"上":{"docs":{},"线":{"docs":{},"后":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"快":{"docs":{},"速":{"docs":{},"回":{"docs":{},"退":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"命":{"docs":{},"令":{"docs":{},"是":{"docs":{},"回":{"docs":{},"到":{"docs":{},"某":{"docs":{},"一":{"docs":{},"标":{"docs":{},"签":{"docs":{},"下":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"解":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"计":{"docs":{},"划":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"配":{"docs":{},"置":{"docs":{"SUMMARY.html":{"ref":"SUMMARY.html","tf":0.022727272727272728}}}},"!":{"docs":{},"=":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006041971562453846},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"o":{"docs":{},"n":{"docs":{},"d":{"3":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"q":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"\"":{"0":{"docs":{},".":{"6":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"1":{"2":{"3":{"docs":{},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"docs":{}},"docs":{},".":{"2":{"docs":{},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"2":{"docs":{},"\"":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"7":{"9":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"9":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"x":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"r":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"l":{"docs":{},"!":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"e":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"/":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"\"":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"n":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},"i":{"docs":{},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}},"g":{"docs":{},"a":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"\"":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"1":{"1":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"'":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},":":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"\"":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},")":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"g":{"docs":{},"o":{"docs":{},"d":{"docs":{},"z":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873}},"}":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"w":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"\"":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847}}}},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873}}}},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"!":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"@":{"docs":{},"a":{"docs":{},"c":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"x":{"docs":{},"e":{"docs":{},"f":{"docs":{},"\\":{"docs":{},"x":{"docs":{},"b":{"docs":{},"b":{"docs":{},"\\":{"docs":{},"x":{"docs":{},"b":{"docs":{},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},"d":{"docs":{},"f":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"x":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},"\"":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"w":{"docs":{},"n":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"h":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"!":{"docs":{},"\"":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"s":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"l":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"p":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"a":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"\"":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"q":{"docs":{},"q":{"docs":{},"q":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"/":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"k":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"\"":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"v":{"1":{"docs":{},".":{"0":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"b":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}},"w":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"l":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"y":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"\"":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"#":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"f":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"*":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"=":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"\"":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"%":{"3":{"0":{"docs":{},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"u":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"docs":{}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"}":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"l":{"docs":{},"l":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"u":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"q":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"z":{"docs":{},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"&":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.03684210526315789},"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006041971562453846},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"b":{"docs":{},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"a":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"[":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},"a":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"1":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"f":{"docs":{},"x":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"i":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}},"n":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"v":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"5":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"l":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"y":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"=":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"'":{"1":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"a":{"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}},"o":{"docs":{},"o":{"docs":{},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"'":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"'":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"'":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"'":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"\\":{"0":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"docs":{},"n":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"c":{"docs":{},"'":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"x":{"docs":{},"'":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"^":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"|":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"(":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"1":{"0":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},",":{"3":{"0":{"0":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},",":{"4":{"docs":{},",":{"9":{"docs":{},",":{"1":{"6":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"4":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"5":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"!":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"g":{"1":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"(":{"docs":{},"h":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"(":{"docs":{},"*":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"*":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}}}}}}}}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"k":{"docs":{},".":{"docs":{},"a":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"2":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"j":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"g":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"w":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"l":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"*":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"g":{"docs":{},"l":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}},"a":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}}}}},"+":{"docs":{},"+":{"1":{"1":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"4":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},"docs":{}}}}}},"7":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{}},"9":{"8":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},".":{"6":{"4":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"*":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"(":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"3":{"docs":{},".":{"5":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"*":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},")":{"docs":{},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"u":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"'":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"0":{"5":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"m":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"c":{"docs":{},"!":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008995824326320171}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"z":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"*":{"docs":{},")":{"docs":{},"&":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"y":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"i":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"e":{"1":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},".":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015440593992937606},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{},"_":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"*":{"docs":{},")":{"docs":{},"&":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"k":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"n":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"+":{"docs":{},"+":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"1":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},")":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"l":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"l":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{},"y":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"o":{"docs":{},"p":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"o":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"2":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"docs":{}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"e":{"docs":{},"e":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"*":{"docs":{},"p":{"docs":{},";":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},")":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"*":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"a":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"p":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},"s":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},".":{"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"*":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"\"":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"w":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{},"?":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"=":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"#":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"&":{"docs":{},"a":{"1":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"v":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"f":{"docs":{},"i":{"docs":{},")":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},"+":{"docs":{},"+":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},".":{"docs":{},"*":{"docs":{},")":{"docs":{},"|":{"docs":{},"*":{"docs":{},".":{"docs":{},"*":{"docs":{},"\"":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"f":{"docs":{},")":{"docs":{},"|":{"docs":{},"*":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"f":{"docs":{},"|":{"docs":{},"a":{"docs":{},"l":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"+":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"+":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"/":{"docs":{},"*":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"*":{"docs":{},"/":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"=":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"=":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"?":{"docs":{},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},"p":{"docs":{},"b":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"g":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"s":{"docs":{},")":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"g":{"1":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"m":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"m":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"y":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"_":{"docs":{},"c":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"!":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"l":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"i":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"w":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"!":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"à":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"全":{"docs":{},"局":{"docs":{},")":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"当":{"docs":{},"前":{"docs":{},"目":{"docs":{},"录":{"docs":{},")":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"=":{"docs":{},"]":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"\\":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"`":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"+":{"docs":{"code.html":{"ref":"code.html","tf":0.015789473684210527},"CPP11.html":{"ref":"CPP11.html","tf":0.0033200531208499337},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001060701674297453},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"+":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"j":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"x":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"=":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"/":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP11.html":{"ref":"CPP11.html","tf":0.03950863213811421},"CPP14.html":{"ref":"CPP14.html","tf":0.03076923076923077},"CPP17.html":{"ref":"CPP17.html","tf":0.03825136612021858},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.024664670578283813},"faq.html":{"ref":"faq.html","tf":0.010238907849829351},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.014081102314618964}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"^":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001141261295130171},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"*":{"docs":{},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"*":{"docs":{},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"*":{"docs":{},"/":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"*":{"docs":{},"/":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"=":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},":":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.0069721115537848604},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0013829401576283247},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"{":{"docs":{},"a":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"{":{"docs":{},"c":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"2":{"docs":{},"{":{"docs":{},"i":{"docs":{},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{}}}},"{":{"docs":{},"d":{"docs":{},"d":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"{":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"f":{"docs":{},"{":{"docs":{},"f":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"{":{"6":{"6":{"6":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"i":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},"m":{"2":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{},"_":{"docs":{},"{":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"{":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"{":{"docs":{},"c":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"{":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"0":{"docs":{},"{":{"0":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"=":{"0":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{"code.html":{"ref":"code.html","tf":0.03684210526315789},"CPP11.html":{"ref":"CPP11.html","tf":0.028220451527224435},"CPP14.html":{"ref":"CPP14.html","tf":0.041758241758241756},"CPP17.html":{"ref":"CPP17.html","tf":0.020491803278688523},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.011587158796439265},"faq.html":{"ref":"faq.html","tf":0.09215017064846416},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0060433915513386114}},"=":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP11.html":{"ref":"CPP11.html","tf":0.008632138114209827},"CPP14.html":{"ref":"CPP14.html","tf":0.013186813186813187},"CPP17.html":{"ref":"CPP17.html","tf":0.01912568306010929},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0018528712791525128},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},">":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"\"":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"{":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"4":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},":":{"5":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"&":{"docs":{},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"x":{"docs":{},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"=":{"docs":{},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"[":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"]":{"docs":{},"]":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"a":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"h":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"0":{"1":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"0":{"1":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"]":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"9":{"4":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}},"x":{"1":{"docs":{},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198}},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},":":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"+":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"q":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},".":{"docs":{},"l":{"docs":{},"_":{"docs":{},"z":{"docs":{},"z":{"4":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"2":{"docs":{},"x":{"2":{"docs":{},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}}}},"n":{"docs":{},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"b":{"docs":{},":":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"0":{"3":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},"c":{"docs":{},"s":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"9":{"2":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"9":{"9":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}},"d":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"0":{"3":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"9":{"7":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}}},"i":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"k":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"g":{"9":{"7":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}},"l":{"docs":{},"a":{"docs":{},"k":{"docs":{},"o":{"docs":{},"s":{"9":{"6":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}},"m":{"docs":{},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"1":{"5":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"9":{"6":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"7":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"9":{"3":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}},"q":{"docs":{},":":{"docs":{},"q":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"+":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"r":{"1":{"5":{"docs":{},"]":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"0":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"5":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"1":{"3":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"5":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"9":{"4":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"]":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"0":{"5":{"docs":{},"]":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}},"e":{"docs":{},"r":{"0":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"4":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}},"h":{"docs":{},"y":{"docs":{},"s":{"docs":{},"l":{"0":{"4":{"docs":{},"b":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"docs":{}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263}}}}}},"]":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"1":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"7":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"2":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"{":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"9":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"3":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0023093757972045812},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0035656010152897806}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00118154110554653},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},"&":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"[":{"3":{"docs":{},"]":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"_":{"docs":{},"v":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"1":{"0":{"docs":{},"'":{"0":{"0":{"0":{"docs":{},"'":{"0":{"0":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"c":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.013157894736842105},"CPP11.html":{"ref":"CPP11.html","tf":0.0076361221779548474},"CPP14.html":{"ref":"CPP14.html","tf":0.024175824175824177},"CPP17.html":{"ref":"CPP17.html","tf":0.01980874316939891},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002282522590260342},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"=":{"docs":{},"'":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"g":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}},"&":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"(":{"1":{"docs":{},".":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"&":{"docs":{},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},":":{"docs":{},"a":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"z":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},"b":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"o":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"r":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}}}},"=":{"0":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}}}}},"r":{"docs":{},"a":{"docs":{},"h":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001369513554156205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"2":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.00964630225080386},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"(":{"1":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}},".":{"5":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"o":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"g":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"{":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},"'":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"l":{"2":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0012691122257811084}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"g":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"o":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00118154110554653},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006041971562453846},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0030216957756693057}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"]":{"docs":{},"(":{"docs":{},"#":{"docs":{},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011278346916580512},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"g":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"?":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008324494152714188},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"d":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"会":{"docs":{},"给":{"docs":{},"出":{"docs":{},"提":{"docs":{},"示":{"docs":{},"，":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008055962083271795},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005504907423569059},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}}},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"c":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}}},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"e":{"docs":{},".":{"2":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"docs":{}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"2":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"(":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001611192416654359},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001060701674297453},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"w":{"docs":{},"t":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.003329797661085675},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0023569227050220585}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}}}}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"+":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"1":{"0":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"docs":{}},"5":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"7":{"docs":{},"]":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"p":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"[":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"!":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"k":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"k":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"(":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"参":{"docs":{},"数":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"：":{"docs":{},"a":{"docs":{},"l":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{},":":{"docs":{},"b":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001060701674297453},"git-tips.html":{"ref":"git-tips.html","tf":0.006747638326585695},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"&":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"!":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"*":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"d":{"docs":{},"y":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"t":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"h":{"docs":{},"m":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"(":{"0":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},":":{"docs":{},"b":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"a":{"docs":{},"z":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},"o":{"docs":{},"o":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"~":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}}},"a":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"p":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"&":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"git.html":{"ref":"git.html","tf":0.006430868167202572}}},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"s":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002470495038870017},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018734513809149694}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"z":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"p":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}},"_":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0031149720055317605},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001409793364572564},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},"u":{"docs":{},"n":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"{":{"docs":{},"p":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"k":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"b":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006176237597175043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007518897944387009},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0014232199680446838},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010069952604089744},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0016921496343748111}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"p":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"e":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"为":{"docs":{},"‘":{"docs":{},"责":{"docs":{},"怪":{"docs":{},"’":{"docs":{},"，":{"docs":{},"你":{"docs":{},"懂":{"docs":{},"的":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"k":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"1":{"5":{"0":{"0":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"docs":{}},"docs":{}},"docs":{}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002779960113615761}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"1":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git-tips.html":{"ref":"git-tips.html","tf":0.01349527665317139},"git.html":{"ref":"git.html","tf":0.022508038585209004}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"i":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"w":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"(":{"1":{"0":{"2":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"1":{"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"_":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},")":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"g":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"{":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"1":{"docs":{},".":{"1":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"{":{"1":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"2":{"5":{"6":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"docs":{}},"docs":{}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"+":{"docs":{},"a":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"h":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"j":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}}}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"s":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"d":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006981833805502222},"git-tips.html":{"ref":"git-tips.html","tf":0.005398110661268556},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"a":{"docs":{},"t":{"docs":{},"a":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0024436418319257777},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002115187042968514}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"[":{"1":{"0":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"w":{"docs":{},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"2":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"2":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}},"e":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004967843284684274},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}}}}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"{":{"docs":{},"+":{"docs":{},"+":{"docs":{},"d":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"e":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0013023805367956068},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"[":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"l":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002389935418037299},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.005076448903124434}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"/":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"5":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}},"e":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}},"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"a":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.00989010989010989},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"?":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},"c":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"f":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"x":{"2":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"3":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"4":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.007692307692307693},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002524201452758496},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002054753127455128}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0030075591777548034},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.005922523720311839}},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008995824326320171},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001631715718861425}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006847567770781025},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0015037795888774017},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"d":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"*":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001262100726379248},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"o":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017588850548476752},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"7":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"u":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{},":":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"1":{"docs":{},"]":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}}}}}},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"h":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834},"git.html":{"ref":"git.html","tf":0.003215434083601286}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012218209159628889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018734513809149694}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"标":{"docs":{},"准":{"docs":{},"补":{"docs":{},"丁":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"2":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"docs":{}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"y":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"=":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"j":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"a":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"(":{"1":{"2":{"3":{"4":{"5":{"6":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"_":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"o":{"0":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"’":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004430779145799487},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"’":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010875548812416924},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"[":{"docs":{},"s":{"docs":{},"]":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"1":{"docs":{},".":{"2":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}},"docs":{}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"w":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"w":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}}}},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}},"1":{"docs":{},".":{"2":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}},"docs":{}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}},"{":{"2":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"w":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},".":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"i":{"docs":{},"c":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"p":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"f":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"e":{"1":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"2":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},")":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.013157894736842105}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0012218209159628889},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},"[":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"{":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"e":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"f":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"5":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00045650451805206836},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.006028544958981727},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},".":{"1":{"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}},"i":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"c":{"docs":{},"h":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"i":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"n":{"docs":{},"b":{"docs":{},"u":{"docs":{},"r":{"docs":{},"g":{"docs":{},"h":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"r":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"o":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004648074369189907},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0035580499201117092},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006579035701338632},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"(":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006847567770781025},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"o":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}}}}}},"i":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},".":{"1":{"0":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"4":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}},"5":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"8":{"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000980142053464735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.006565609097866513},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002900146349977846},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002296488789508672}}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005639173458290256},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}},"c":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"p":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002913572953449966},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0029612618601559193}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"_":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"(":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011681145020744103},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},"l":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00046993112152418805},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"o":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00298804780876494},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0019871373138737095},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0019338852964283556}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"6":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"r":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},">":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"h":{"docs":{},"o":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"o":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"h":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"h":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"非":{"docs":{},"数":{"docs":{},"组":{"docs":{},")":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"v":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"n":{"docs":{},"d":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00196028410692947},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"?":{"docs":{},"?":{"docs":{},"?":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001020421863881094},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"z":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417},"git.html":{"ref":"git.html","tf":0.006430868167202572}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"[":{"1":{"6":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"^":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"~":{"3":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"v":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"t":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"l":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"e":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"*":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"_":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"l":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008593026222156581},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"7":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000590770552773265},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008995824326320171},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"p":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"r":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"5":{"5":{"5":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"p":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"y":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"j":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.013157894736842105}},"&":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}},"{":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}},"f":{"docs":{},"+":{"docs":{},"+":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"v":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"j":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"h":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}},"{":{"docs":{},"j":{"docs":{},"j":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"y":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"p":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}}},"p":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009532888465204957},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"u":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"l":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"o":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"git-tips.html":{"ref":"git-tips.html","tf":0.006747638326585695},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"8":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}},"docs":{}}}}}}}}}},"d":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006176237597175043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"b":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"显":{"docs":{},"示":{"docs":{},"g":{"docs":{},"p":{"docs":{},"g":{"docs":{},"签":{"docs":{},"名":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"相":{"docs":{},"关":{"docs":{},"内":{"docs":{},"容":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"，":{"docs":{},"最":{"docs":{},"上":{"docs":{},"面":{"docs":{},"那":{"docs":{},"行":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{},"h":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"[":{"2":{"0":{"2":{"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017051786409591966},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008727292256877778},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}}},"m":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"_":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"m":{"docs":{},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"n":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013295461412944946}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},")":{"docs":{},"&":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"j":{"docs":{},"m":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011144080881859315},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008861558291598974},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"[":{"docs":{},"a":{"docs":{},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP14.html":{"ref":"CPP14.html","tf":0.013186813186813187},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007787430013829401},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001571281803348039}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"'":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011949677090186495},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"_":{"docs":{},"c":{"docs":{},"x":{"docs":{},"x":{"1":{"1":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"y":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"k":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"e":{"docs":{},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"s":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"{":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"j":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"z":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}},"v":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004162247076357094},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008458760187435385},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"n":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"f":{"docs":{},"t":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"e":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007653163979108205},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009065087327007917}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"b":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CPP14.html":{"ref":"CPP14.html","tf":0.008791208791208791},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002671894090951812},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"a":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"8":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"t":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007787430013829401},"git-tips.html":{"ref":"git-tips.html","tf":0.005398110661268556},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002236054873995286}},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.00989010989010989},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"f":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000590770552773265},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"n":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.003867770592856711}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"g":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"docs":{},"e":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"v":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0036520584329349268},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"\\":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"k":{"docs":{},"(":{"docs":{},"m":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}}},"c":{"docs":{},"k":{"1":{"docs":{},"(":{"docs":{},"m":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"docs":{}}}},"2":{"docs":{},"(":{"docs":{},"m":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"docs":{}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"m":{"docs":{},"t":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"y":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"s":{"docs":{},"d":{"0":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"v":{"docs":{},"m":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.004048582995951417}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"t":{"1":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"r":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"g":{"docs":{},"p":{"docs":{},"l":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"p":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.0032967032967032967},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002940426160394205},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.008037710763280352}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"5":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.00546448087431694},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010338484673532136},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.005680788058258295}},"e":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"2":{"5":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}}},"\"":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"{":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"r":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"k":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}}}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"回":{"docs":{},"调":{"docs":{},"转":{"docs":{},"托":{"docs":{},"管":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"o":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}}}}}}},".":{"1":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"0":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"8":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"9":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"s":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},"u":{"docs":{},"m":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0009130090361041367},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},";":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"p":{"docs":{},"t":{"docs":{},"r":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"]":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"{":{"docs":{},"}":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"`":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004001127834691658},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0034447331842630082}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"d":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.005312084993359893},"CPP14.html":{"ref":"CPP14.html","tf":0.012087912087912088},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0014232199680446838},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0024777905360488304}},"!":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"(":{"docs":{},"&":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"docs":{},"]":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"[":{"0":{"docs":{},"]":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"1":{"docs":{},"]":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"\"":{"docs":{},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"b":{"docs":{},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}}}},"y":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"_":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011144080881859315},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001148244394754336}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"\"":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"o":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0028464399360893676},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0024173566205354445}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"r":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},"a":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"v":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"t":{"docs":{},"e":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0058539991138441706},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"h":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325}},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},">":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.004395604395604396},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"d":{"docs":{},"e":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"7":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006176237597175043}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"v":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},")":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006444769666617435},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"+":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"=":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"b":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"m":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},".":{"1":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"2":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"3":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"4":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"6":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"7":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"docs":{}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"v":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"w":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"v":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"{":{"1":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"v":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}}}}}}}}}}}}},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"{":{"1":{"0":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"docs":{}}}}}}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"{":{"1":{"0":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0047814207650273225},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0032358114367808375},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002296488789508672}},"e":{"1":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"}":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"~":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}}},")":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"{":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.006593406593406593},"CPP17.html":{"ref":"CPP17.html","tf":0.0034153005464480873},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.002403362021509419},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00513688281863782}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"s":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"3":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"!":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},".":{"docs":{},"/":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"{":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}}}}},"o":{"docs":{},"u":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"g":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.004648074369189907},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00665959532217135},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002054753127455128}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074}},"e":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"t":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"a":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"y":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},".":{"docs":{},"c":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"9":{"9":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"z":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"9":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},")":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"7":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"v":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"c":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"t":{"docs":{},"o":{"docs":{},"r":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"2":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"e":{"docs":{},"d":{"docs":{},"?":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"{":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"&":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"2":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004430779145799487},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"a":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"s":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006579035701338632},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0014504139723212667}},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"b":{"docs":{},"o":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"i":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"d":{"docs":{},"e":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"7":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0029269995569220853},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0013899800568078805}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"b":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"o":{"docs":{},"r":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"c":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"2":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"docs":{}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"{":{"1":{"0":{"0":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}},"docs":{}},"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"1":{"0":{"0":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"7":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"[":{"0":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"j":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"k":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"v":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"d":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"2":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"l":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"l":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"展":{"docs":{},"示":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"远":{"docs":{},"程":{"docs":{},"分":{"docs":{},"支":{"docs":{},"名":{"docs":{},"了":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"推":{"docs":{},"送":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"直":{"docs":{},"接":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"{":{"0":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"1":{"0":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"2":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},".":{"2":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}},"docs":{}}},"2":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"5":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"6":{"6":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}},"7":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"9":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}},"docs":{"code.html":{"ref":"code.html","tf":0.06842105263157895},"CPP11.html":{"ref":"CPP11.html","tf":0.02357237715803453},"CPP14.html":{"ref":"CPP14.html","tf":0.016483516483516484},"CPP17.html":{"ref":"CPP17.html","tf":0.03961748633879782},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.013896534593643846},"faq.html":{"ref":"faq.html","tf":0.013651877133105802},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.006466428959932314}},"\"":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}}}},"b":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"d":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"q":{"docs":{},"q":{"docs":{},"q":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"y":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"}":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"%":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}},"r":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"code.html":{"ref":"code.html","tf":0.007894736842105263}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"p":{"1":{"1":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"i":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"}":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0049800796812749},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00042965131110782903},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{},".":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"r":{"docs":{},"g":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"o":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"{":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"}":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{},"(":{"9":{"9":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}},"docs":{}},"n":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"m":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"t":{"docs":{},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"{":{"7":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"docs":{}}}},"m":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"v":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}}}}}},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"y":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"{":{"0":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"{":{"1":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}}},"}":{"docs":{"code.html":{"ref":"code.html","tf":0.06315789473684211},"CPP11.html":{"ref":"CPP11.html","tf":0.011620185922974768},"CPP14.html":{"ref":"CPP14.html","tf":0.007692307692307693},"CPP17.html":{"ref":"CPP17.html","tf":0.022540983606557378},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.008364773963130546},"faq.html":{"ref":"faq.html","tf":0.013651877133105802},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.003988638423883483}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},",":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},";":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842},"CPP11.html":{"ref":"CPP11.html","tf":0.013944223107569721},"CPP14.html":{"ref":"CPP14.html","tf":0.007692307692307693},"CPP17.html":{"ref":"CPP17.html","tf":0.02185792349726776},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004296513111078291},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0010878104792409501}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.00546448087431694}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"docs":{},"，":{"docs":{},"只":{"docs":{},"会":{"docs":{},"删":{"docs":{},"除":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"将":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"权":{"docs":{},"限":{"docs":{},"变":{"docs":{},"化":{"docs":{},"视":{"docs":{},"作":{"docs":{},"改":{"docs":{},"动":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"仅":{"docs":{},"有":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"提":{"docs":{},"交":{"docs":{},"者":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"等":{"docs":{},"等":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"片":{"docs":{},"段":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}}}},"例":{"docs":{},"子":{"1":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"docs":{}}},"docs":{}}},"docs":{"code.html":{"ref":"code.html","tf":0.002631578947368421}}}},"转":{"docs":{},"换":{"docs":{"code.html":{"ref":"code.html","tf":0.005263157894736842}}}},"*":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000510210931940547},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"=":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"s":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"p":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"m":{"docs":{},"k":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"_":{"docs":{},"c":{"docs":{},"b":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"*":{"docs":{},"a":{"docs":{},"a":{"docs":{},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.001060701674297453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"p":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"i":{"docs":{},"f":{"docs":{},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"n":{"docs":{},"p":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"q":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"c":{"docs":{},"f":{"docs":{},"g":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"y":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.009170370171457727},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0025986583670756028}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},",":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},"/":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"l":{"docs":{},"_":{"docs":{},"z":{"docs":{},"z":{"4":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"2":{"docs":{},"x":{"2":{"docs":{},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"p":{"docs":{},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"x":{"docs":{},"x":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002819586729145128},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0008460748171874056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"h":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"/":{"docs":{},"b":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"/":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},">":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}},"=":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},">":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004833577249963077},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"*":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.010238907849829351}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"faq.html":{"ref":"faq.html","tf":0.010238907849829351}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"1":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"2":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}},"docs":{}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"2":{"docs":{"faq.html":{"ref":"faq.html","tf":0.020477815699658702}},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"f":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},".":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"d":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}},"m":{"docs":{},"(":{"docs":{},"f":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"docs":{}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"w":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"\"":{"docs":{},"\\":{"docs":{},"\\":{"docs":{},"\"":{"docs":{},",":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"y":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"_":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"d":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"h":{"docs":{},"_":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"_":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007856409016740195}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"l":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"l":{"docs":{},"p":{"6":{"4":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"docs":{}},"docs":{}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"`":{"0":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"a":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"l":{"2":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"r":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"r":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"c":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},"p":{"docs":{},"y":{"2":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"`":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"3":{"docs":{},")":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}},"docs":{}},"3":{"docs":{},".":{"0":{"docs":{},")":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"docs":{}}},"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}},"a":{"docs":{},")":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"c":{"docs":{},")":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"f":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"x":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}},"s":{"docs":{},"t":{"docs":{},"`":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}}}},"f":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"o":{"docs":{},"o":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}}}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"`":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}},"m":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}},"`":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"`":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"o":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"p":{"1":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0016600265604249668}}}},"2":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}}},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"o":{"docs":{},"s":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"`":{"docs":{},"/":{"docs":{},"`":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"`":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"r":{"docs":{},"c":{"docs":{},"`":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}}}}},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"m":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{},"`":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}}}}}}},"x":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498}}},"l":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"r":{"2":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"y":{"docs":{},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"!":{"docs":{},"=":{"0":{"docs":{},"`":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"`":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"*":{"docs":{},"p":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"=":{"docs":{},"=":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},"`":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"`":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"o":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"5":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.005644090305444887},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.004739591025658239},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0029612618601559193}},"'":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"e":{"docs":{},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}}}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}}}}}}},"f":{"docs":{},"u":{"docs":{},"s":{"docs":{},"c":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"f":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00037594489721935043},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"k":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005236375354126667}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00032223848333087177},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"a":{"docs":{},"y":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00038937150069147006},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0019737107104015896},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.003202997522209464}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}}},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"e":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"l":{"docs":{},"y":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"*":{"docs":{},"/":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"c":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"t":{"docs":{},"o":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"p":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705}},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0035177701096953504},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.004109506254910256}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"8":{"docs":{},".":{"2":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"8":{"docs":{},".":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},"=":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"a":{"docs":{},"&":{"docs":{},"&":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"2":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"=":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"t":{"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"\"":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"&":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"*":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"+":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"+":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},">":{"docs":{},">":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}},"'":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"n":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"4":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"1":{"docs":{"faq.html":{"ref":"faq.html","tf":0.023890784982935155}}},"docs":{},";":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}},"^":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"i":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007384631909665812},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"i":{"docs":{},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"e":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"r":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"o":{"docs":{},"n":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"k":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018130174654015835}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},">":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726},"git-tips.html":{"ref":"git-tips.html","tf":0.010796221322537112},"git.html":{"ref":"git.html","tf":0.006430868167202572},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"/":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"u":{"docs":{},"t":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0011009814847138118},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.001027376563727564}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589}}},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002953852763866325},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0002551054659702735},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004230374085937028}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007384631909665812},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0007252069861606333}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0023240371845949536},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00040279810416358976},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006043391551338611}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"e":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"1":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"m":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"d":{"docs":{},"o":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0010338484673532136},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.002779960113615761}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"5":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"s":{"docs":{},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}}},"o":{"docs":{},"k":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"u":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008861558291598974}},"e":{"docs":{},"r":{"1":{"docs":{},".":{"7":{"docs":{},".":{"9":{"docs":{},".":{"2":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007921696048550598},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"h":{"docs":{},"i":{"docs":{},"p":{"1":{"docs":{},".":{"7":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"9":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0008055962083271795},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0018734513809149694}},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"i":{"docs":{},"n":{"docs":{},"g":{"1":{"docs":{},".":{"7":{"docs":{},".":{"7":{"docs":{},".":{"4":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"(":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{},"k":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},"n":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}},"d":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"o":{"0":{"1":{"docs":{},"l":{"docs":{},"l":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},"p":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},"l":{"docs":{},"a":{"docs":{},"'":{"0":{"9":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00017454584513755555},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"e":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"\"":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"q":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00021482565555391451}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"y":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00016111924166543589},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"s":{"1":{"docs":{},".":{"7":{"docs":{},".":{"2":{"6":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"u":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"l":{"docs":{},"i":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"q":{"docs":{},"q":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"x":{"0":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"1":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}},":":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}}},"2":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"{":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0076361221779548474},"CPP14.html":{"ref":"CPP14.html","tf":0.007692307692307693},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0029672793673384446},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0009669426482141778}},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}},"x":{"docs":{},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867}}},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0013280212483399733},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0005773439493011453},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00022825225902603418},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.004098360655737705},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00033566508680299146},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}},"d":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},"_":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"m":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},".":{"5":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"4":{"5":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.004316069057104913},"CPP14.html":{"ref":"CPP14.html","tf":0.005494505494505495},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000631050363189624},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00030216957756693056}}},"l":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"r":{"2":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},"{":{"1":{"docs":{},"}":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"2":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"3":{"docs":{},"}":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0006640106241699867},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235}},"x":{"docs":{},"x":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"{":{"docs":{},"}":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}},"+":{"docs":{},"+":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099}}}},"x":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00018797244860967521}},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"*":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{},"x":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"~":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}},"]":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"l":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"s":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"=":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"就":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"y":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"1":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},";":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.0026560424966799467},"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0004967843284684274},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0006647730706472473}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}},")":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00199203187250996},"CPP17.html":{"ref":"CPP17.html","tf":0.0020491803278688526},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"`":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}}}},";":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00099601593625498},"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CPP17.html":{"ref":"CPP17.html","tf":0.00273224043715847},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0003490916902751111},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"s":{"docs":{},",":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00014769263819331625},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"s":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"t":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00012083943124907692},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"s":{"docs":{},".":{"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334}}}}}}}},"o":{"docs":{},"u":{"docs":{},".":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"'":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"!":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}},"?":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"r":{"docs":{},"k":{"docs":{},"\"":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"*":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"]":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"!":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"y":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},"i":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}},"{":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}},"y":{"docs":{},"y":{"docs":{},"}":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00005370641388847863}}}}}},"/":{"docs":{},"z":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}},"z":{"1":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"2":{"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.001098901098901099},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},")":{"docs":{},";":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}},"4":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{"CPP14.html":{"ref":"CPP14.html","tf":0.002197802197802198},"CPP17.html":{"ref":"CPP17.html","tf":0.001366120218579235},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00013426603472119659}},"e":{"docs":{},"r":{"docs":{},"o":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"0":{"docs":{},".":{"4":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"CPP11.html":{"ref":"CPP11.html","tf":0.00033200531208499334},"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00036251829374723074},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}},"\"":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00020139905208179488}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"/":{"docs":{},"c":{"docs":{},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"z":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"k":{"docs":{},"o":{"docs":{},"v":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"z":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}}},"{":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00030881187985875214},"faq.html":{"ref":"faq.html","tf":0.0034129692832764505},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},")":{"docs":{},";":{"docs":{"CPP17.html":{"ref":"CPP17.html","tf":0.0006830601092896175}}},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},".":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"#":{"1":{"0":{"0":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{"git.html":{"ref":"git.html","tf":0.07717041800643087},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00024167886249815384},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0005439052396204751}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00024173566205354445}}}}}}},"f":{"docs":{},"m":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"i":{"docs":{},"f":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"s":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.0007250365874944615},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0015108478878346529}},"e":{"docs":{},"\"":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"r":{"docs":{},"'":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"faq.html":{"ref":"faq.html","tf":0.006825938566552901},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}},"回":{"docs":{},"到":{"docs":{},"删":{"docs":{},"除":{"docs":{},"文":{"docs":{},"件":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"退":{"docs":{},"至":{"docs":{},"三":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"只":{"docs":{},"回":{"docs":{},"退":{"docs":{},"了":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"和":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"与":{"docs":{},"回":{"docs":{},"退":{"docs":{},"之":{"docs":{},"前":{"docs":{},"保":{"docs":{},"持":{"docs":{},"一":{"docs":{},"致":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"要":{"docs":{},"提":{"docs":{},"交":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"即":{"docs":{},"可":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"它":{"docs":{},"将":{"docs":{},"重":{"docs":{},"置":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"到":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},",":{"docs":{},"并":{"docs":{},"且":{"docs":{},"重":{"docs":{},"置":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"以":{"docs":{},"便":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"相":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"到":{"docs":{},"此":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"更":{"docs":{},"改":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"彻":{"docs":{},"底":{"docs":{},"回":{"docs":{},"退":{"docs":{},"到":{"docs":{},"指":{"docs":{},"定":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"默":{"docs":{},"认":{"docs":{},"就":{"docs":{},"是":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}},"查":{"docs":{},"看":{"docs":{},"补":{"docs":{},"丁":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"够":{"docs":{},"干":{"docs":{},"净":{"docs":{},"顺":{"docs":{},"利":{"docs":{},"地":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"分":{"docs":{},"支":{"docs":{},"中":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}},"#":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00018130174654015834}}}}}}}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00026853206944239317},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0004834713241070889}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00010741282777695726}},"?":{"docs":{},"?":{"1":{"docs":{},".":{"7":{"docs":{},".":{"1":{"5":{"docs":{},".":{"8":{"docs":{},".":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"docs":{}},"9":{"docs":{},".":{"2":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.003719169161777145}},"(":{"docs":{},"b":{"docs":{},"s":{"docs":{},":":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00009398622430483761}}},"?":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794}}},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"x":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"\\":{"docs":{"git.html":{"ref":"git.html","tf":0.00964630225080386}},"n":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"u":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}},"^":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00008055962083271794},"faq.html":{"ref":"faq.html","tf":0.010238907849829351},"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"2":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"docs":{}}}}}}}},"|":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897},"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278},"git.html":{"ref":"git.html","tf":0.003215434083601286},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}},"|":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00004027981041635897}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00012086783102677222}}}}},"~":{"5":{"docs":{},".":{"8":{"5":{"9":{"8":{"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}},"c":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"m":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}}},"p":{"docs":{},"b":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}},"docs":{}}}},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}}}}}}}},"x":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{},"(":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.00006713301736059829}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}}},";":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},",":{"docs":{"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.00006043391551338611}}}},"§":{"1":{"0":{"docs":{},".":{"3":{"docs":{},".":{"5":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"1":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"2":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},".":{"4":{"docs":{},".":{"7":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},".":{"2":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"4":{"docs":{},".":{"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"6":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{},".":{"4":{"docs":{},".":{"4":{"docs":{},".":{"8":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}},"docs":{}},"2":{"1":{"docs":{},".":{"0":{"6":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"docs":{}}},"2":{"docs":{},".":{"0":{"3":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}}},"7":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"docs":{}}},"3":{"0":{"docs":{},".":{"0":{"1":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}},"docs":{}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"4":{"6":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"7":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000026853206944239314}}}},"5":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{},".":{"5":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}}},"7":{"5":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{}},"8":{"docs":{},",":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}}},"docs":{},"e":{"docs":{},".":{"2":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657}}},"docs":{}}}},"—":{"docs":{"CppCoreGuidelines.html":{"ref":"CppCoreGuidelines.html","tf":0.000013426603472119657},"google_C++_Sytle_Guide.html":{"ref":"google_C++_Sytle_Guide.html","tf":0.0003626034930803167}}},"与":{"docs":{"faq.html":{"ref":"faq.html","tf":0.006825938566552901}}},"广":{"docs":{},"播":{"docs":{},"搜":{"docs":{},"索":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"打":{"docs":{},"开":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"绑":{"docs":{},"定":{"docs":{},"数":{"docs":{},"据":{"docs":{},"显":{"docs":{},"示":{"1":{"docs":{},".":{"8":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}}}},"编":{"docs":{},"码":{"docs":{},"转":{"docs":{},"换":{"1":{"docs":{},".":{"8":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}}}}}},"获":{"docs":{},"取":{"docs":{"faq.html":{"ref":"faq.html","tf":0.0034129692832764505}},"远":{"docs":{},"程":{"docs":{},"版":{"docs":{},"本":{"docs":{},"库":{"docs":{},"改":{"docs":{},"动":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}},"测":{"docs":{},"试":{"1":{"docs":{},".":{"9":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"Gif图.html":{"ref":"Gif图.html","tf":0.0625}}}},"docs":{}}},"docs":{}}},"docs":{"Gif图.html":{"ref":"Gif图.html","tf":0.0625}}}},"$":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139},"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"–":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"⬆":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"就":{"docs":{},"是":{"docs":{},"列":{"docs":{},"举":{"docs":{},"了":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"命":{"docs":{},"令":{"docs":{},"和":{"docs":{},"一":{"docs":{},"些":{"docs":{},"小":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"\"":{"docs":{},"页":{"docs":{},"面":{"docs":{},"内":{"docs":{},"查":{"docs":{},"找":{"docs":{},"\"":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"快":{"docs":{},"速":{"docs":{},"查":{"docs":{},"询":{"docs":{},"：":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"+":{"docs":{},"f":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"docs":{},"都":{"docs":{},"重":{"docs":{},"新":{"docs":{},"放":{"docs":{},"回":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"，":{"docs":{},"并":{"docs":{},"清":{"docs":{},"空":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"重":{"docs":{},"新":{"docs":{},"提":{"docs":{},"交":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"了":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"出":{"docs":{},"某":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}},"包":{"docs":{},"中":{"docs":{},"导":{"docs":{},"入":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"根":{"docs":{},"据":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"拉":{"docs":{},"下":{"docs":{},"某":{"docs":{},"一":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"到":{"docs":{},"本":{"docs":{},"地":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"列":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"为":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"，":{"docs":{},"对":{"docs":{},"树":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"作":{"docs":{},"者":{"docs":{},"名":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"的":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"关":{"docs":{},"联":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}},"远":{"docs":{},"程":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}},"闭":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"切":{"docs":{},"回":{"docs":{},"到":{"docs":{},"某":{"docs":{},"个":{"docs":{},"标":{"docs":{},"签":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"列":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"本":{"docs":{},"地":{"docs":{},"和":{"docs":{},"远":{"docs":{},"程":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"并":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{},"本":{"docs":{},"地":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"远":{"docs":{},"程":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"全":{"docs":{},"局":{"docs":{},"设":{"docs":{},"置":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"已":{"docs":{},"经":{"docs":{},"合":{"docs":{},"并":{"docs":{},"到":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}},"标":{"docs":{},"签":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"远":{"docs":{},"程":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}},"标":{"docs":{},"签":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"删":{"docs":{},"除":{"docs":{},"本":{"docs":{},"地":{"docs":{},"标":{"docs":{},"签":{"docs":{},"，":{"docs":{},"再":{"docs":{},"执":{"docs":{},"行":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"命":{"docs":{},"令":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}},"博":{"docs":{},"客":{"docs":{},"园":{"docs":{},"：":{"docs":{},"削":{"docs":{},"微":{"docs":{},"寒":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"发":{"docs":{},"布":{"docs":{},"(":{"docs":{},"描":{"docs":{},"述":{"docs":{},")":{"docs":{},"\"":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"删":{"docs":{},"除":{"docs":{},"新":{"docs":{},"建":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"指":{"docs":{},"定":{"docs":{},"文":{"docs":{},"件":{"docs":{},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{},"，":{"docs":{},"则":{"docs":{},"清":{"docs":{},"空":{"docs":{},"所":{"docs":{},"有":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"命":{"docs":{},"令":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"两":{"docs":{},"点":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},":":{"docs":{},"这":{"docs":{},"个":{"docs":{},"命":{"docs":{},"令":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"删":{"docs":{},"除":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"详":{"docs":{},"情":{"docs":{},"见":{"docs":{},"上":{"docs":{},"一":{"docs":{},"条":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"：":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"命":{"docs":{},"令":{"docs":{},"会":{"docs":{},"抹":{"docs":{},"去":{"docs":{},"某":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},"的":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"不":{"docs":{},"同":{"docs":{},")":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"这":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"并":{"docs":{},"重":{"docs":{},"新":{"docs":{},"增":{"docs":{},"添":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"并":{"docs":{},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.008097165991902834}}}}}}}}},"增":{"docs":{},"加":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"如":{"docs":{},"果":{"docs":{},"之":{"docs":{},"前":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"过":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"学":{"docs":{},"习":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"小":{"docs":{},"白":{"docs":{},"教":{"docs":{},"程":{"docs":{},"入":{"docs":{},"门":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}},"喜":{"docs":{},"欢":{"docs":{},"这":{"docs":{},"个":{"docs":{},"项":{"docs":{},"目":{"docs":{},"，":{"docs":{},"欢":{"docs":{},"迎":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"、":{"docs":{},"提":{"docs":{},"交":{"docs":{},"p":{"docs":{},"r":{"docs":{},"、":{"docs":{},"反":{"docs":{},"馈":{"docs":{},"问":{"docs":{},"题":{"docs":{},"&":{"docs":{},"#":{"docs":{},"x":{"1":{"docs":{},"f":{"6":{"0":{"docs":{},"a":{"docs":{},";":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"用":{"docs":{},"提":{"docs":{},"交":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"在":{"docs":{},"记":{"docs":{},"录":{"docs":{},"这":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}},"就":{"docs":{},"像":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"一":{"docs":{},"样":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}},"展":{"docs":{},"示":{"docs":{},"任":{"docs":{},"意":{"docs":{},"分":{"docs":{},"支":{"docs":{},"某":{"docs":{},"一":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"和":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"帮":{"docs":{},"助":{"docs":{},"信":{"docs":{},"息":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"当":{"docs":{},"前":{"docs":{},"分":{"docs":{},"支":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"忽":{"docs":{},"略":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}},"所":{"docs":{},"有":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},"s":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}},"e":{"docs":{},"s":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"忽":{"docs":{},"略":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"、":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"和":{"docs":{},"最":{"docs":{},"近":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}},"和":{"docs":{},"最":{"docs":{},"近":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"分":{"docs":{},"支":{"docs":{},"关":{"docs":{},"联":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}},"简":{"docs":{},"化":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"历":{"docs":{},"史":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}},"开":{"docs":{},"卷":{"docs":{},"必":{"docs":{},"读":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"强":{"docs":{},"制":{"docs":{},"删":{"docs":{},"除":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}},"目":{"docs":{},"录":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}},"推":{"docs":{},"送":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"快":{"docs":{},"速":{"docs":{},"切":{"docs":{},"换":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"忽":{"docs":{},"略":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"权":{"docs":{},"限":{"docs":{},"变":{"docs":{},"化":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"恢":{"docs":{},"复":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"8":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}},"或":{"docs":{},"者":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"在":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"时":{"docs":{},"加":{"docs":{},"上":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"提":{"docs":{},"p":{"docs":{},"r":{"docs":{},"，":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"命":{"docs":{},"令":{"docs":{},"都":{"docs":{},"在":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{"git.html":{"ref":"git.html","tf":0.006430868167202572}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"之":{"docs":{},"前":{"docs":{},"自":{"docs":{},"动":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}},"提":{"docs":{},"交":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"把":{"docs":{},"a":{"docs":{},"分":{"docs":{},"支":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"放":{"docs":{},"到":{"docs":{},"b":{"docs":{},"分":{"docs":{},"支":{"docs":{},"上":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"的":{"docs":{},"指":{"docs":{},"定":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"放":{"docs":{},"到":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"中":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"7":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"到":{"docs":{},"导":{"docs":{},"出":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"5":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}},"抛":{"docs":{},"弃":{"docs":{},"本":{"docs":{},"地":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"回":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}},"推":{"docs":{},"送":{"docs":{},"标":{"docs":{},"签":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"改":{"docs":{},"动":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"名":{"docs":{},"，":{"docs":{},"此":{"docs":{},"次":{"docs":{},"改":{"docs":{},"动":{"docs":{},"就":{"docs":{},"放":{"docs":{},"到":{"docs":{},"了":{"docs":{},"‘":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"’":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"放":{"docs":{},"弃":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"7":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"所":{"docs":{},"有":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"分":{"docs":{},"支":{"docs":{},"内":{"docs":{},"容":{"docs":{},"就":{"docs":{},"是":{"docs":{},"上":{"docs":{},"面":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}},"并":{"docs":{},"切":{"docs":{},"换":{"docs":{},"到":{"docs":{},"新":{"docs":{},"分":{"docs":{},"支":{"docs":{},"上":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"这":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"没":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"显":{"docs":{},"示":{"docs":{},"本":{"docs":{},"地":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"命":{"docs":{},"令":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"4":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"：":{"docs":{},"输":{"docs":{},"入":{"docs":{},"命":{"docs":{},"令":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}},"最":{"docs":{},"新":{"docs":{},"的":{"docs":{},"放":{"docs":{},"在":{"docs":{},"最":{"docs":{},"上":{"docs":{},"面":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}},"本":{"docs":{},"地":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"(":{"docs":{},"简":{"docs":{},"称":{"docs":{},"：":{"docs":{},"本":{"docs":{},"地":{"docs":{},")":{"docs":{},"：":{"docs":{},"输":{"docs":{},"入":{"docs":{},"命":{"docs":{},"令":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"标":{"docs":{},"签":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"检":{"docs":{},"出":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}},"查":{"docs":{},"看":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"历":{"docs":{},"史":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"2":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"星":{"docs":{},"期":{"docs":{},"内":{"docs":{},"的":{"docs":{},"改":{"docs":{},"动":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}},"某":{"docs":{},"段":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"谁":{"docs":{},"写":{"docs":{},"的":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"3":{"3":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}},"标":{"docs":{},"签":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}},"此":{"docs":{},"次":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{},"，":{"docs":{},"此":{"docs":{},"次":{"docs":{},"改":{"docs":{},"动":{"docs":{},"就":{"docs":{},"放":{"docs":{},"到":{"docs":{},"了":{"docs":{},"’":{"docs":{},"本":{"docs":{},"地":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"’":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"我":{"docs":{},"叫":{"docs":{},"它":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"‘":{"docs":{},"版":{"docs":{},"本":{"docs":{},"’":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"如":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"册":{"docs":{},"远":{"docs":{},"程":{"docs":{},"版":{"docs":{},"本":{"docs":{},"库":{"docs":{},"，":{"docs":{},"&":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}},"清":{"docs":{},"除":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"保":{"docs":{},"存":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"重":{"docs":{},"写":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"历":{"docs":{},"史":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"命":{"docs":{},"令":{"docs":{},"起":{"docs":{},"别":{"docs":{},"名":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"4":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"统":{"docs":{},"一":{"docs":{},"概":{"docs":{},"念":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}},"联":{"docs":{},"系":{"docs":{},"我":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}},"详":{"docs":{},"细":{"docs":{},"展":{"docs":{},"示":{"docs":{},"一":{"docs":{},"行":{"docs":{},"中":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"5":{"9":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}},"解":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"廖":{"docs":{},"雪":{"docs":{},"峰":{"docs":{},"老":{"docs":{},"师":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"教":{"docs":{},"程":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},"、":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"和":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"的":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"不":{"docs":{},"同":{"docs":{},")":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},"和":{"docs":{},"本":{"docs":{},"地":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},"的":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"不":{"docs":{},"同":{"docs":{},")":{"docs":{},"。":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"顶":{"docs":{},"部":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"展":{"docs":{},"示":{"docs":{},"本":{"docs":{},"地":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"变":{"docs":{},"动":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"(":{"docs":{},"简":{"docs":{},"称":{"docs":{},"：":{"docs":{},"远":{"docs":{},"程":{"docs":{},")":{"docs":{},"：":{"docs":{},"输":{"docs":{},"入":{"docs":{},"命":{"docs":{},"令":{"docs":{},"：":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}},"，":{"docs":{},"此":{"docs":{},"次":{"docs":{},"改":{"docs":{},"动":{"docs":{},"就":{"docs":{},"放":{"docs":{},"到":{"docs":{},"了":{"docs":{},"‘":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"’":{"docs":{},"（":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"等":{"docs":{},")":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}},"重":{"docs":{},"命":{"docs":{},"名":{"docs":{},"本":{"docs":{},"地":{"docs":{},"分":{"docs":{},"支":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"2":{"0":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}},"设":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"1":{"docs":{},".":{"1":{"0":{"docs":{},".":{"1":{"docs":{},".":{"6":{"docs":{},".":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.002699055330634278}}}}}}}}}}}},"置":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"本":{"docs":{},"地":{"docs":{},"创":{"docs":{},"建":{"docs":{},"好":{"docs":{},"了":{"docs":{},"标":{"docs":{},"签":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"送":{"docs":{},"标":{"docs":{},"签":{"docs":{},"到":{"docs":{},"远":{"docs":{},"程":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"是":{"docs":{},"打":{"docs":{},"在":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"次":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"上":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"打":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"：":{"docs":{"git-tips.html":{"ref":"git-tips.html","tf":0.001349527665317139}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"合":{"docs":{},"并":{"docs":{},"策":{"docs":{},"略":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}},"依":{"docs":{},"次":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"提":{"docs":{},"交":{"docs":{},"执":{"docs":{},"行":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}},"准":{"docs":{},"备":{"docs":{},"库":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}},"利":{"docs":{},"用":{"docs":{},"子":{"docs":{},"树":{"docs":{},"合":{"docs":{},"并":{"docs":{},"跟":{"docs":{},"踪":{"docs":{},"上":{"docs":{},"游":{"docs":{},"改":{"docs":{},"动":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}},"反":{"docs":{},"向":{"docs":{},"过":{"docs":{},"程":{"docs":{},"异":{"docs":{},"常":{"docs":{},"复":{"docs":{},"杂":{"docs":{},",":{"docs":{},"子":{"docs":{},"树":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"的":{"docs":{},"大":{"docs":{},"致":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"：":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"为":{"docs":{},"子":{"docs":{},"目":{"docs":{},"录":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}},"命":{"docs":{},"令":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"对":{"docs":{},"该":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"引":{"docs":{},"入":{"docs":{},"外":{"docs":{},"部":{"docs":{},"版":{"docs":{},"本":{"docs":{},"库":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"提":{"docs":{},"交":{"docs":{},"中":{"docs":{},"导":{"docs":{},"出":{"docs":{},"目":{"docs":{},"录":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}},"到":{"docs":{},"要":{"docs":{},"导":{"docs":{},"出":{"docs":{},"的":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{},"提":{"docs":{},"交":{"docs":{},"历":{"docs":{},"史":{"docs":{},"，":{"docs":{},"并":{"docs":{},"反":{"docs":{},"向":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}},"更":{"docs":{},"新":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"，":{"docs":{},"检":{"docs":{},"出":{"docs":{},"到":{"docs":{},"子":{"docs":{},"目":{"docs":{},"录":{"docs":{},"(":{"docs":{},"工":{"docs":{},"作":{"docs":{},"区":{"docs":{},")":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"暂":{"docs":{},"存":{"docs":{},"区":{"docs":{},")":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"检":{"docs":{},"出":{"docs":{},"为":{"docs":{},"分":{"docs":{},"支":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}},"补":{"docs":{},"丁":{"1":{"docs":{},".":{"1":{"1":{"docs":{},".":{"3":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}},"要":{"docs":{},"保":{"docs":{},"持":{"docs":{},"提":{"docs":{},"交":{"docs":{},"信":{"docs":{},"息":{"docs":{},"还":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"设":{"docs":{},"置":{"docs":{},"提":{"docs":{},"交":{"docs":{},"的":{"docs":{"git.html":{"ref":"git.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}},"length":19748},"corpusTokens":["!(a","!=","!=,","!=.","!c","!c1","!c2","!cond3)","!isspace(c)","!iter","!mmapdata(mmap_chunk_bytes,","!q.empty();","!s","!s;","!y)","\"","\"!\"","\"\"","\"\")","\"\",","\"\";","\"#endif\"","\"#if\"","\"),","\"*\"","\",","\".\"","\".\";","\".................................\";","\".txt\";","\"0.6\"","\"1.2\"","\"123\"","\"123\"_int;","\"2\"}};","\"7\";","\"79\"","\"9\";","\";","\"=","\"@acme.com\")","\"\\n\",","\"\\n\";","\"\\xef\\xbb\\xbf\",","\"_\".","\"a","\"a.h\"","\"abbreviate\"","\"absenc","\"accident","\"adjective\"","\"advanc","\"all","\"alternatives\".","\"anoth","\"anyth","\"asdf\");","\"asdfg\"","\"aspects\"","\"at","\"axiom\"","\"b\"","\"b\"};","\"b.h\"","\"bad","\"bad\"","\"bad\").","\"bad.h\"","\"bar\"};","\"base\"","\"base/basictypes.h\"","\"base/commandlineflags.h\"","\"base/logging.h\"","\"base/port.h\"","\"basic_std_lib.h\"","\"be","\"behav","\"bi","\"big\",","\"bleed","\"bottom","\"bounds\",","\"brace","\"bubbl","\"buckl","\"buffer","\"bundles\"","\"c\"","\"c.11\"","\"c.hier\"","\"c:\\\\\";","\"call","\"caller","\"camel","\"can","\"can't","\"cast","\"catch","\"cause\",","\"cheap","\"class","\"classic","\"cleverness\"","\"close/release\"","\"collect","\"commit\"","\"common","\"concept\"","\"concepts\"","\"concepts\").","\"concepts\";","\"configur","\"const","\"const\"","\"consume\"","\"consume\";","\"cool.\"","\"copying\"","\"crash\"","\"crashing\"","\"customize\"","\"d\"","\"d\")","\"d\"1.12.9.","\"decay\"","\"default\";","\"destroy","\"details.\"","\"deterministic\"","\"disruption\"","\"distribut","\"dns\"","\"do","\"doe","\"don't","\"downward\"","\"dummi","\"dynamic\"","\"easier","\"efficiency\"","\"efficiency\");","\"efficiency\",","\"element\"","\"elsewhere\"","\"empty\"","\"empty.\"","\"error\";","\"esoter","\"event","\"everyth","\"evil!\";","\"exceptions\"","\"export","\"exported\"","\"extensions\"","\"external/exported\"","\"far","\"file1.h\"","\"file2.h\"","\"file3.h\"","\"first","\"fit","\"fold","\"follow","\"foo\"","\"foo/public/fooserver.h\"","\"foo/server/bar.h\"","\"foo/server/fooserver.h\"","\"for","\"forever\"","\"forgot\"","\"form","\"forward","\"forward\"","\"foundat","\"fran","\"free","\"friendli","\"from\"","\"functional\"","\"functions\"","\"functions\"1.7.10.1.20.","\"fundamental\"","\"garbag","\"generated\"","\"generic\"","\"get","\"give","\"godzilla\"","\"godzilla\";","\"good\"","\"ha","\"hamlet\",","\"hamlet\"s,","\"handcraft","\"header","\"hello!\"s;","\"hello,","\"helper","\"helper\"","\"here","\"hidden\"","\"hide","\"hierarchies\"","\"hits\"","\"homebrew\"","\"hook","\"hous","\"i","\"idiom\",","\"if","\"ill","\"immort","\"implement","\"implicit","\"implies\"","\"imported\"","\"in","\"in\"","\"infecting\"","\"inherited\"","\"input","\"instrument\"","\"instrumented\"","\"invalid\"","\"invisible\"","\"invisible\",","\"iso","\"it","\"it'","\"john","\"just","\"just\"","\"k\"","\"keep","\"known\"","\"languag","\"large\"","\"last","\"late\"","\"leaked\"","\"leaking\"","\"leav","\"legaci","\"legacy\"","\"legislate\"","\"legislating\"","\"lifetime\"),","\"lock","\"logging:","\"long\";","\"look","\"magic","\"make","\"marker\"","\"mathemat","\"meaningless\"","\"mechanical\"","\"mechanically\"","\"memori","\"mess","\"messi","\"mi","\"might\"","\"mixin\"","\"modern","\"modernizer\"","\"moon","\"more","\"mysteri","\"mysterious\"","\"nake","\"naked\"","\"name\"","\"natural\"","\"new","\"new\"","\"no","\"no\"","\"no\");","\"non","\"nonvirtually\"","\"not","\"noun\"","\"null","\"null\"","\"num\"","\"number\".","\"nygaard\",","\"nyi\"","\"nyi\");","\"o\"","\"o\"1.12.12.1.","\"obscured\"","\"odd\"","\"odd\",","\"ok\"","\"ok\",","\"one","\"one\"","\"one\"},","\"oper","\"ophelia\"s,","\"optimized\"","\"ordinari","\"out","\"out\"","\"output","\"overli","\"ownership\"","\"owning\"","\"p\"","\"package\"","\"parallelism\"","\"parameterized\"","\"paranoia\"","\"pascal","\"pc\".","\"perfect","\"performance\"","\"philosophy\")","\"plain","\"plain\"","\"pointer","\"popular\"","\"portabl","\"posit","\"positive\";","\"post","\"post\"","\"pre\"","\"profile\"","\"profile\".","\"profiles\").","\"program","\"provid","\"pure","\"qqq\",","\"r\"),","\"r\");","\"r\")}","\"r\")},","\"r\"},","\"random\"","\"raw","\"raw\"","\"read","\"read/write\".","\"refus","\"relat","\"repeat","\"reseat\"","\"return","\"returned\"/leak","\"rh","\"ritchie\"","\"second","\"sequenc","\"seriou","\"severity\"","\"shadowing\".","\"silli","\"simple\"","\"singleton\"","\"sink\"","\"small","\"smart","\"smart\"","\"some","\"something\"","\"sometimes,","\"span\"","\"special","\"special\"","\"spell\"","\"stabl","\"standard\"","\"static","\"stop","\"string","\"string\"","\"stroustrup\".","\"structur","\"stuff\"","\"subject\"","\"subset","\"subtre","\"suitabl","\"supercalifragilisticexpialidocious\");","\"supercalifragilisticexpialidocious\";","\"surprise\")","\"t","\"tag\"","\"take","\"temporari","\"temporarili","\"the","\"theoretical\",","\"thi","\"things\"","\"this\"","\"this\",","\"thread","\"three\"","\"throw","\"to","\"to\"","\"too","\"total","\"trait\"","\"traits\"","\"treat","\"trim","\"trivial\",","\"trouble\",","\"twelve.\"","\"two","\"two\"","\"u\"","\"u\"1.12.11.","\"uniform","\"unusu","\"unusual\"","\"unusual\"/non","\"up","\"upf","\"upward\"","\"use","\"v1.0","\"valid","\"vector\"","\"verb\"","\"veri","\"view\"","\"views\"","\"virtual","\"we","\"weird","\"what","\"when","\"whi","\"widget\"","\"will\"","\"will\",","\"wisdom\"","\"world\";","\"wrap","\"write","\"x","\"x\"","\"x\"1.12.10.","\"x\"1.12.12.","\"yes\",","\"z\"","\"z\"1.12.5.","\"zero\";","\"}","#","##","#100","#defin","#endif","#fmt","#git","#if","#ifdef","#ifdef)","#ifdefs,","#ifndef","#includ","#include\"","#includer'","#note:","#pragma","#undef","#回到删除文件","#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可","#回退至上个版本，它将重置head到另外一个commit,并且重置暂存区以便和head相匹配，但是也到此为止。工作区不会被更改。","#彻底回退到指定commit","#得到","#查看补丁是否能够干净顺利地应用到当前分支中","#默认就是","$","%","%\"","%)","%.","%30\"","%30u\\n\",","%d","%d\\n\",","%lld","%llu,","%llx","%lx","%p","%qd,","%qu,","%s","%td","%u","%zu","%}","&","&&","&&,","&&.","&.","&1.7.7.6.5.","&=","&a)","&a[0]","&aa[0];","&aa[1];","&addrlen);","&b]","&ch","&ch;","&cin;","&foo","&fx;","&glob);","&i;","&in,","&isendsize,","&operator[](size_t);","&p[7];","&pool[n];","&r;","&s);","&str;","&sum](int","&text);","&v[0];","&v[5];","&v[7];","&v[i])","&va[0];","&val).","&x);","&x;","&y;","'","');","'.","'.'","'.';","'/'))","'14","'\\0'","'\\n'","'^\\*\\|","'a'","'a',","'a':","'b',","'b':","'borrowing'","'c'};","'f':","'final'","'foo'","'many')","'mutable'","'new'","'optional'","'r'};","'required'","'sharedptrparam'","'size'","'this'","'x';","(","(!(b1","(!(values.size()","(!c)","(!f)","(!fs.valid())","(!g.valid())","(!g1.valid())","(!g2.valid())","(!head.compare_exchange_weak(h,","(!in)","(!is_valid(d,","(!isalreadyprocessed(element))","(!p)","(!prefix.empty())","(!r.err)","(!r.second)","(!valid(i,","(!validate(surface_readings))","(!vs.valid())","(\"=","(\"a","(\"atomic\")","(\"constructs\")","(\"don't","(\"fix","(\"if","(\"in","(\"live\")","(\"make","(\"narrow","(\"open","(\"remov","(\"resourc","(\"the","(\"type\",","(\"what","(\"why?\"","(#pro","(&)","(&a1[5]","(&v[i]);","((*elem).is_array())","((*elem).is_boolean())","((*elem).is_number())","((*elem).is_object())","((*elem).is_string())","((a","((auto","((bounds))","((c","((cin","((double*)","((foundation))","()","()(x.s.size())","(),","(*)(int);","(*)(t);","(*.*)|*.*\";","(*.upf)|*.upf|al","(*compar)(const","(*p","(*pfi)(int);","(*pft)(t);","(*pval)++.","(++),","(++i","(++i)","(+,","(.,","(...","(...)","(...),","(/*...*/)","(0","(1)","(1,300","(10)","(15.5.1).","(2","(2)","(2,4,9,16,...):","(2gib),","(2nd","(2ndedition)","(4)","(4th","(5","(:","(;","(;;)","(=)","(==)","(==,","(??)","(???","(???)","(???).","([&])","([=])","(\\","(_)","(__stdcall","(`std::unique_ptr`","(a","(a);","(a.k.a.","(a.length()","(a.size()","(a.sz","(abs(flag2)","(abstraction),","(abstractions)","(access","(action_needed)","(action_needed.load(memory_order_acquire))","(action_needed.load(memory_order_relaxed))","(addison","(address","(adj_list_serialize.hpp)","(after","(aka","(algorithm),","(all","(all?)","(all_foobar(g1,","(allocate,","(allowed)","(almost","(also","(also)","(altern","(although","(an","(analysi","(and","(and,","(anonymous)","(appl","(appropriately).","(array","(asio:","(assert())","(assert)","(assum","(at","(atom","(auto","(auto&","(b","(b)","(b);","(b1","(back)","(bad)","(bar","(base","(base&","(becaus","(begin","(best","(better,","(bgl)","(bi","(boolean)","(boost/graph/parallel/*","(boost/property_map/parallel/*).","(both","(buf","(buffer","(buffer&","(but","(c","(c++11)","(c++11,","(c++11/c++14)","(c++11/c++14)1.7.21.4.","(c++17)","(c++98)","(c.64),","(c/c++","(c1","(cached_x","(call","(called)","(can","(cannot_disconnect())","(cannot_release_a_resource)","(case","(cast","(cast).","(caught):","(char","(char*)","(char*)(void*)system::runtime::interopservices::marshal::stringtohglobalansi(str1);","(cheap)","(check","(checking).","(cin.get(c)","(class","(cleanup),","(code)","(colloqui","(comma)","(comma),","(comments)","(commitid)","(common)","(compil","(complex","(complex)","(concurr","(cond)","(cond2","(condition())","(condition)","(condition){","(consist","(consistently).","(const","(const)","(constructed).","(constructors,","(contigu","(could","(count","(current","(currently)","(d","(d*","(d*)pb;","(dag):","(dangerous)","(debug)","(decrement)","(decrement).","(default","(defin","(deliberately)","(dereferenc","(derived&","(describ","(desires,","(differ","(different)","(direction)","(directli","(dis)us","(ditto)","(do","(doubles,","(dynam","(dynamic_cast)","(e","(e.g.","(e.g.,","(e.type)","(e1","(early)","(easi","(easili","(easily)","(either","(elimin","(els","(enclosing)","(encouraged)","(enforcement,","(erroneous)","(error_code)","(especi","(even","(eventtype)","(ever","(except","(except,","(exception&","(exception)","(executed)","(explicit","(explicitli","(f","(f)","(f.21),","(fail","(failur","(file.is_valid())","(flag1","(flag2","(flush","(foo","(for","(forget","(free","(from","(function","(g1.valid())","(g2.valid())","(gadget_construction_failure)","(get","(gfm):","(go","(goe","(guarante","(guidelin","(guideline,","(h","(hard","(hard)","(hardwar","(have","(heap)","(heap).","(height","(height,","(henc","(here,","(hides)","(homogeneous)","(hope","(hopefulli","(hs:","(https://google.github.io/styleguide/cppguide.html#implicit_conversions).","(human","(i","(i)","(i++),","(i.e.","(i.e.,","(ieee","(if","(ignor","(imagin","(implemented)","(implicitli","(imposs","(in","(in)fam","(incautiously)","(incl.","(includ","(independ","(individu","(inf)","(initial)","(inner)","(inserted)","(instead","(int","(int&","(int(*)(int))std::tolower);","(int(*)(int))std::toupper);","(int)","(int)\"hello\").","(int).","(int)3.5)","(int)ch;","(int)d;","(int)lng;","(int)p;","(int)x","(int*)","(intern","(introduc","(invariant)","(invariants)","(irregular","(is_odd(n))","(it","(it'","(iter","(j","(jeff)","(juli","(just","(kind)","(lack","(languag","(late)","(lead","(leak)","(left","(legitimate)","(length","(less","(let","(librari","(libraries,","(like","(link","(link)","(literals,","(local","(local?)","(lock_guard,","(logic","(long","(long*)&d;","(lopsided_score)","(lower","(made","(mark","(mathematically)","(mayb","(memory_order_seq_cst),","(messag","(mis)","(mistake!)","(mmap_budget","(mnemonizes)","(moderate)","(modern","(modulo","(more","(most","(most)","(move","(much","(must","(mutex)","(n","(n)","(n++","(name","(name,","(named)","(namespac","(narrowing,","(nasty)","(necessarili","(neither","(new","(no","(non","(none","(not","(notably,","(note","(note:","(now","(null","(o'reilly,","(object","(obviously!)","(obviously)","(obviously),","(obviously).","(occasion","(of","(often","(old)","(on","(only)","(only),","(only).","(only)1.7.10.2.11.","(only)1.7.6.2.16.","(only)1.7.7.10.2.","(oop)","(oop)\")","(oop)1.7.7.10.1.","(operand)","(or","(or,","(other","(over)gener","(oversimplified)","(owned)","(owning))","(p","(p)","(p,","(p.first)","(p1)","(pass","(pb1","(perfectli","(perform","(perhap","(pimpl)","(pleas","(pod):","(point","(pointer","(pointer,","(possibl","(potentially)","(pre","(prefer","(preferably)","(prentic","(privat","(pro","(probabl","(probably)","(problem:","(protected)","(ps))","(public).","(public,","(r.name.size()","(race","(raii)","(random","(rare)","(rationales)","(raw)","(raw_siz","(readable(i1","(reasonably)","(recompil","(recursively)","(registerer),","(reinterpret","(related)","(reli","(resourc","(result.second)","(return","(rev.","(risk","(round_up)","(rtti)","(rtti)![](./googl","(rtti).","(run","(s","(s1","(say","(say)","(scary)","(scary)1.7.15.6.3.","(see","(semi","(semi)form","(set","(sfullpath","(should","(sic!)","(signed)","(similar","(simple)","(simplifi","(simply)","(sinc","(single)","(size","(size)","(size_t","(slow,","(so","(sockaddr*)&servaddr,","(some","(some_condition)","(some_long_condit","(somehow)","(somehow,","(something)","(sometim","(sort","(sourc","(source)","(special","(specif","(standard","(static","(std::exception&","(std::getline(ss,","(std::is_integral::value)","(std::lock_guard","(string","(string&","(string_val","(stroustrup05).","(struct","(success)","(such","(syntax","(t","(t&&","(t&)","(t&)*p;).","(t&),","(t)e","(t)express","(t*)","(tag,","(templatized)","(test)","(that","(that'","(the","(there","(they","(thi","(think","(third","(this_one_th","(though","(through","(throughput","(thu","(time,","(tmp)","(tmp)1.7.15.9.1.","(to","(tree","(tri","(true","(true)","(tss)","(twice)","(type","(type.4,","(typeid(*data)","(typeid)","(typic","(undefined)","(unencapsul","(unfortunately,","(unique_ptr","(unit","(unknown)","(unless","(unless,","(unsign","(unspecifi","(unstated)","(unstructur","(until","(up","(updat","(upon","(use","(using)","(usual","(v","(v)","(v.empty())","(val","(valid()","(valu","(value)","(value);","(value.is_object())","(var)","(veri","(via","(virtual","(void*","(vulner","(wait_for_event())","(wait_for_event()).","(websearch::index,","(websearch::index::frobber_intern","(what","(what'","(when","(where","(whether","(whi","(which","(while","(who","(widget.cpp)","(widget.h)","(with","(without","(wrongly)","(x","(x&&","(x)","(xor).","(yet)","(yippee)","(you","(yuck!)","(zero","({","(à","(全局)","(当前目录)",")",")):","));","),",").",");","*","*(thi","*)","*)cfgdevcheck[i].ex.linkip);","**aa[10];","*,","*.","*/","*/;","*/}","*=","*=,","*a.elem","*a.p;","*c;","*cach","*const","*foo","*if*","*inp;","*ipaddr,","*new","*out);","*p","*p,","*p.","*p1","*p2","*p3","*p;","*p?","*pb1","*pb2","*pi","*pmk_notify_cb)(char","*pp[7],","*puserdata);","*pval).","*q","*q;","*text,","*thi","*this,","*this.","*this;","*uploadmsg,","*y;","+","+)","++)","++).","++a;","++dcount;","++elem)","++events)","++events;","++first)","++i","++i);","++i;","++iter;","++j;","++p)","++p;}","++r;","++today;","++x;","+,","+=","+=,",",",".",".),","..","...","...)","...),","...);","...*/);","...,","....","...;","...code","...onli","./btoa/",".at()",".c",".c,",".cc",".cc.",".cpp",".cpp).",".cpp:",".cxx.",".first",".h",".h,",".h.",".hh,",".inc",".l_zz4maine2x2:",".long",".second","/","/*","/*...*/","/*...*/;","/*completion_callback=*/nullptr);","/*output","/*radians*/)","/*requires*/","/,","//","//.","//...","//system::string^转换为char*","//将char*转换为system::string^","/=","/doc","/fi","/path/to/main.git","/path/to/util.git","/usr/include,","0","0\")","0)","0),","0);","0,","0.","0.);","0.0","0.0);","0.0001","0.0;","0.8.","0.;","0001","0002","08.","0:","0;","0]","0`;","0b0000'1111'0000'0000;","0b0101'0101;","0b1010'1010;","0b110","0b1111'1111","0x0000ff","0x00ff00","0x00ff00,","0x123456789ll;","0xff","0xff00,","0xff0000","0xff0000,","0xff0000;","0}","0},","0};","1","1)","1),","1);","1,","1,000,000","1.","1..10","1..12","1..12,","1.1.1.","1.1.2.","1.10.1.","1.10.1.1.","1.10.1.10.","1.10.1.11.","1.10.1.12.","1.10.1.13.","1.10.1.14.","1.10.1.15.","1.10.1.16.","1.10.1.17.","1.10.1.18.","1.10.1.19.","1.10.1.2.","1.10.1.20.","1.10.1.21.","1.10.1.22.","1.10.1.23.","1.10.1.24.","1.10.1.25.","1.10.1.26.","1.10.1.27.","1.10.1.28.","1.10.1.29.","1.10.1.3.","1.10.1.30.","1.10.1.31.","1.10.1.32.","1.10.1.33.","1.10.1.34.","1.10.1.35.","1.10.1.36.","1.10.1.37.","1.10.1.38.","1.10.1.39.","1.10.1.4.","1.10.1.40.","1.10.1.41.","1.10.1.42.","1.10.1.43.","1.10.1.44.","1.10.1.45.","1.10.1.46.","1.10.1.47.","1.10.1.48.","1.10.1.49.","1.10.1.5.","1.10.1.50.","1.10.1.51.","1.10.1.52.","1.10.1.53.","1.10.1.54.","1.10.1.55.","1.10.1.56.","1.10.1.57.","1.10.1.58.","1.10.1.59.","1.10.1.6.","1.10.1.60.","1.10.1.61.","1.10.1.62.","1.10.1.63.","1.10.1.64.","1.10.1.65.","1.10.1.66.","1.10.1.67.","1.10.1.68.","1.10.1.69.","1.10.1.7.","1.10.1.70.","1.10.1.71.","1.10.1.72.","1.10.1.73.","1.10.1.74.","1.10.1.8.","1.10.1.9.","1.11.1.","1.11.2.","1.11.3.","1.11.3.1.","1.11.3.2.","1.12.1.","1.12.10.","1.12.11.","1.12.12.","1.12.12.1.","1.12.12.1.1.","1.12.12.1.2.","1.12.12.1.3.","1.12.12.1.4.","1.12.12.1.5.","1.12.13.","1.12.13.1.","1.12.13.1.1.","1.12.13.1.2.","1.12.13.1.3.","1.12.13.1.4.","1.12.13.1.5.","1.12.13.1.6.","1.12.13.1.7.","1.12.13.1.8.","1.12.13.1.9.","1.12.13.2.","1.12.13.2.1.","1.12.13.2.10.","1.12.13.2.11.","1.12.13.2.12.","1.12.13.2.13.","1.12.13.2.14.","1.12.13.2.15.","1.12.13.2.16.","1.12.13.2.17.","1.12.13.2.18.","1.12.13.2.19.","1.12.13.2.2.","1.12.13.2.3.","1.12.13.2.4.","1.12.13.2.5.","1.12.13.2.6.","1.12.13.2.7.","1.12.13.2.8.","1.12.13.2.9.","1.12.13.3.","1.12.13.3.1.","1.12.13.3.2.","1.12.13.4.","1.12.2.","1.12.2.1.","1.12.2.1.1.","1.12.2.2.","1.12.2.2.1.","1.12.2.2.2.","1.12.2.2.3.","1.12.2.2.4.","1.12.2.2.5.","1.12.2.3.","1.12.2.3.1.","1.12.2.3.2.","1.12.2.3.3.","1.12.2.3.4.","1.12.2.3.5.","1.12.2.4.","1.12.2.4.1.","1.12.2.4.10.","1.12.2.4.2.","1.12.2.4.3.","1.12.2.4.4.","1.12.2.4.5.","1.12.2.4.6.","1.12.2.4.7.","1.12.2.4.8.","1.12.2.4.9.","1.12.2.5.","1.12.2.5.1.","1.12.2.5.2.","1.12.2.5.3.","1.12.2.5.4.","1.12.2.5.5.","1.12.2.5.6.","1.12.2.6.","1.12.2.6.1.","1.12.2.6.2.","1.12.2.7.","1.12.2.7.1.","1.12.2.7.10.","1.12.2.7.11.","1.12.2.7.2.","1.12.2.7.3.","1.12.2.7.4.","1.12.2.7.5.","1.12.2.7.6.","1.12.2.7.7.","1.12.2.7.8.","1.12.2.7.9.","1.12.3.","1.12.4.","1.12.5.","1.12.6.","1.12.7.","1.12.8.","1.12.9.","1.171);","1.2.1.","1.3.1.","1.3.1.1.","1.3.2.","1.3.2.1.","1.3.2.2.","1.3.2.3.","1.3.2.4.","1.3.2.5.","1.3.2.6.","1.3.2.7.","1.4.1.","1.4.1.1.","1.4.1.2.","1.4.1.2.1.","1.4.1.2.10.","1.4.1.2.11.","1.4.1.2.12.","1.4.1.2.13.","1.4.1.2.14.","1.4.1.2.15.","1.4.1.2.16.","1.4.1.2.17.","1.4.1.2.18.","1.4.1.2.19.","1.4.1.2.2.","1.4.1.2.20.","1.4.1.2.21.","1.4.1.2.22.","1.4.1.2.23.","1.4.1.2.24.","1.4.1.2.25.","1.4.1.2.26.","1.4.1.2.3.","1.4.1.2.4.","1.4.1.2.5.","1.4.1.2.6.","1.4.1.2.7.","1.4.1.2.8.","1.4.1.2.9.","1.4.1.3.","1.4.1.3.1.","1.4.1.3.10.","1.4.1.3.11.","1.4.1.3.12.","1.4.1.3.2.","1.4.1.3.3.","1.4.1.3.4.","1.4.1.3.5.","1.4.1.3.6.","1.4.1.3.7.","1.4.1.3.8.","1.4.1.3.9.","1.4.1.4.","1.4.1.5.","1.4.1.6.","1.4.1.7.","1.5);","1.5.1.","1.5.1.1.","1.5.1.2.","1.5.1.2.1.","1.5.1.2.2.","1.5.1.2.3.","1.5.1.2.4.","1.5.1.2.5.","1.5.1.2.6.","1.5.1.2.7.","1.5.1.3.","1.5.1.3.1.","1.5.1.3.2.","1.5.1.3.3.","1.5.1.4.","1.5.1.5.","1.5.1.6.","1.5.1.7.","1.6.1.","1.6.1.1.","1.6.1.2.","1.6.1.2.1.","1.6.1.2.10.","1.6.1.2.11.","1.6.1.2.12.","1.6.1.2.13.","1.6.1.2.2.","1.6.1.2.3.","1.6.1.2.4.","1.6.1.2.5.","1.6.1.2.6.","1.6.1.2.7.","1.6.1.2.8.","1.6.1.2.9.","1.6.1.3.","1.6.1.3.1.","1.6.1.3.2.","1.6.1.3.3.","1.6.1.3.4.","1.6.1.3.5.","1.6.1.3.6.","1.6.1.3.7.","1.6.1.4.","1.6.1.5.","1.6.1.6.","1.6.1.7.","1.61;","1.7+","1.7.1.","1.7.10.","1.7.10.1.","1.7.10.1.1.","1.7.10.1.10.","1.7.10.1.11.","1.7.10.1.12.","1.7.10.1.13.","1.7.10.1.14.","1.7.10.1.15.","1.7.10.1.16.","1.7.10.1.17.","1.7.10.1.18.","1.7.10.1.19.","1.7.10.1.2.","1.7.10.1.20.","1.7.10.1.21.","1.7.10.1.22.","1.7.10.1.3.","1.7.10.1.4.","1.7.10.1.5.","1.7.10.1.6.","1.7.10.1.7.","1.7.10.1.8.","1.7.10.1.9.","1.7.10.2.","1.7.10.2.1.","1.7.10.2.10.","1.7.10.2.11.","1.7.10.2.12.","1.7.10.2.13.","1.7.10.2.14.","1.7.10.2.2.","1.7.10.2.3.","1.7.10.2.4.","1.7.10.2.5.","1.7.10.2.6.","1.7.10.2.7.","1.7.10.2.8.","1.7.10.2.9.","1.7.10.3.","1.7.10.3.1.","1.7.10.3.10.","1.7.10.3.11.","1.7.10.3.12.","1.7.10.3.13.","1.7.10.3.14.","1.7.10.3.15.","1.7.10.3.16.","1.7.10.3.17.","1.7.10.3.18.","1.7.10.3.19.","1.7.10.3.2.","1.7.10.3.3.","1.7.10.3.4.","1.7.10.3.5.","1.7.10.3.6.","1.7.10.3.7.","1.7.10.3.8.","1.7.10.3.9.","1.7.10.4.","1.7.10.4.1.","1.7.10.4.2.","1.7.10.4.3.","1.7.10.4.4.","1.7.10.4.5.","1.7.10.4.6.","1.7.10.4.7.","1.7.10.4.8.","1.7.11.","1.7.12.","1.7.12.1.","1.7.12.1.1.","1.7.12.1.10.","1.7.12.1.11.","1.7.12.1.12.","1.7.12.1.13.","1.7.12.1.14.","1.7.12.1.15.","1.7.12.1.2.","1.7.12.1.3.","1.7.12.1.4.","1.7.12.1.5.","1.7.12.1.6.","1.7.12.1.7.","1.7.12.1.8.","1.7.12.1.9.","1.7.12.2.","1.7.12.3.","1.7.12.3.1.","1.7.12.3.2.","1.7.12.4.","1.7.12.5.","1.7.12.5.1.","1.7.12.5.2.","1.7.12.5.3.","1.7.12.5.4.","1.7.12.5.5.","1.7.12.6.","1.7.12.6.1.","1.7.12.6.2.","1.7.13.","1.7.14.","1.7.15.","1.7.15.1.","1.7.15.1.1.","1.7.15.1.2.","1.7.15.1.3.","1.7.15.1.4.","1.7.15.1.5.","1.7.15.10.","1.7.15.10.1.","1.7.15.10.2.","1.7.15.10.3.","1.7.15.10.4.","1.7.15.10.5.","1.7.15.10.6.","1.7.15.2.","1.7.15.3.","1.7.15.3.1.","1.7.15.3.2.","1.7.15.3.3.","1.7.15.3.4.","1.7.15.4.","1.7.15.4.1.","1.7.15.4.2.","1.7.15.4.3.","1.7.15.4.4.","1.7.15.4.5.","1.7.15.4.6.","1.7.15.4.7.","1.7.15.5.","1.7.15.5.1.","1.7.15.5.2.","1.7.15.5.3.","1.7.15.5.4.","1.7.15.5.5.","1.7.15.5.6.","1.7.15.5.7.","1.7.15.5.8.","1.7.15.5.9.","1.7.15.6.","1.7.15.6.1.","1.7.15.6.2.","1.7.15.6.3.","1.7.15.6.4.","1.7.15.6.5.","1.7.15.6.6.","1.7.15.6.7.","1.7.15.6.8.","1.7.15.7.","1.7.15.7.1.","1.7.15.7.2.","1.7.15.7.3.","1.7.15.7.4.","1.7.15.7.5.","1.7.15.8.","1.7.15.8.1.","1.7.15.8.2.","1.7.15.8.3.","1.7.15.8.4.","1.7.15.9.","1.7.15.9.1.","1.7.15.9.2.","1.7.15.9.3.","1.7.15.9.4.","1.7.15.9.5.","1.7.15.9.6.","1.7.16.","1.7.17.","1.7.18.","1.7.18.1.","1.7.18.1.1.","1.7.18.1.2.","1.7.18.1.3.","1.7.18.2.","1.7.18.2.1.","1.7.18.2.2.","1.7.18.2.3.","1.7.18.2.4.","1.7.18.2.5.","1.7.18.2.6.","1.7.18.2.7.","1.7.18.2.8.","1.7.18.3.","1.7.18.3.1.","1.7.18.3.2.","1.7.18.3.3.","1.7.18.3.4.","1.7.18.3.5.","1.7.18.3.6.","1.7.18.4.","1.7.18.5.","1.7.18.6.","1.7.18.6.1.","1.7.19.","1.7.2.","1.7.20.","1.7.21.","1.7.21.1.","1.7.21.2.","1.7.21.3.","1.7.21.4.","1.7.21.5.","1.7.21.6.","1.7.21.7.","1.7.21.8.","1.7.22.","1.7.22.1.","1.7.22.2.","1.7.22.3.","1.7.23.","1.7.23.1.","1.7.23.2.","1.7.23.3.","1.7.23.4.","1.7.23.5.","1.7.23.5.1.","1.7.24.","1.7.25.","1.7.26.","1.7.27.","1.7.28.","1.7.28.1.","1.7.28.1.1.","1.7.28.1.2.","1.7.28.1.3.","1.7.28.1.4.","1.7.28.1.5.","1.7.28.1.6.","1.7.28.1.7.","1.7.28.1.8.","1.7.29.","1.7.3.","1.7.3.1.","1.7.3.2.","1.7.3.2.1.","1.7.3.3.","1.7.3.4.","1.7.3.5.","1.7.3.6.","1.7.30.","1.7.31.","1.7.32.","1.7.4.","1.7.5.","1.7.6.","1.7.6.1.","1.7.6.1.1.","1.7.6.1.2.","1.7.6.1.3.","1.7.6.1.4.","1.7.6.1.5.","1.7.6.1.6.","1.7.6.1.7.","1.7.6.1.8.","1.7.6.1.9.","1.7.6.2.","1.7.6.2.1.","1.7.6.2.10.","1.7.6.2.11.","1.7.6.2.12.","1.7.6.2.13.","1.7.6.2.14.","1.7.6.2.15.","1.7.6.2.16.","1.7.6.2.17.","1.7.6.2.18.","1.7.6.2.19.","1.7.6.2.2.","1.7.6.2.20.","1.7.6.2.21.","1.7.6.2.22.","1.7.6.2.23.","1.7.6.2.24.","1.7.6.2.25.","1.7.6.2.26.","1.7.6.2.3.","1.7.6.2.4.","1.7.6.2.5.","1.7.6.2.6.","1.7.6.2.7.","1.7.6.2.8.","1.7.6.2.9.","1.7.7.","1.7.7.1.","1.7.7.1.1.","1.7.7.1.2.","1.7.7.10.","1.7.7.10.1.","1.7.7.10.2.","1.7.7.10.3.","1.7.7.11.","1.7.7.11.1.","1.7.7.11.10.","1.7.7.11.11.","1.7.7.11.12.","1.7.7.11.13.","1.7.7.11.14.","1.7.7.11.2.","1.7.7.11.3.","1.7.7.11.4.","1.7.7.11.5.","1.7.7.11.6.","1.7.7.11.7.","1.7.7.11.8.","1.7.7.11.9.","1.7.7.12.","1.7.7.13.","1.7.7.13.1.","1.7.7.13.2.","1.7.7.13.3.","1.7.7.13.4.","1.7.7.13.5.","1.7.7.13.6.","1.7.7.13.7.","1.7.7.13.8.","1.7.7.13.9.","1.7.7.14.","1.7.7.14.1.","1.7.7.14.10.","1.7.7.14.2.","1.7.7.14.3.","1.7.7.14.4.","1.7.7.14.5.","1.7.7.14.6.","1.7.7.14.7.","1.7.7.14.8.","1.7.7.14.9.","1.7.7.15.","1.7.7.15.1.","1.7.7.15.2.","1.7.7.15.3.","1.7.7.15.4.","1.7.7.2.","1.7.7.3.","1.7.7.3.1.","1.7.7.3.2.","1.7.7.3.3.","1.7.7.4.","1.7.7.4.1.","1.7.7.4.2.","1.7.7.4.3.","1.7.7.4.4.","1.7.7.4.5.","1.7.7.4.6.","1.7.7.4.7.","1.7.7.5.","1.7.7.5.1.","1.7.7.5.10.","1.7.7.5.11.","1.7.7.5.12.","1.7.7.5.13.","1.7.7.5.2.","1.7.7.5.3.","1.7.7.5.4.","1.7.7.5.5.","1.7.7.5.6.","1.7.7.5.7.","1.7.7.5.8.","1.7.7.5.9.","1.7.7.6.","1.7.7.6.1.","1.7.7.6.2.","1.7.7.6.3.","1.7.7.6.4.","1.7.7.6.5.","1.7.7.6.6.","1.7.7.6.7.","1.7.7.6.8.","1.7.7.7.","1.7.7.7.1.","1.7.7.7.2.","1.7.7.7.3.","1.7.7.7.4.","1.7.7.7.5.","1.7.7.7.6.","1.7.7.7.7.","1.7.7.7.8.","1.7.7.7.9.","1.7.7.8.","1.7.7.9.","1.7.8.","1.7.9.","1.7.9.1.","1.7.9.1.1.","1.7.9.1.2.","1.7.9.1.3.","1.7.9.1.4.","1.7.9.1.5.","1.7.9.1.6.","1.7.9.2.","1.7.9.2.1.","1.7.9.2.10.","1.7.9.2.11.","1.7.9.2.12.","1.7.9.2.13.","1.7.9.2.2.","1.7.9.2.3.","1.7.9.2.4.","1.7.9.2.5.","1.7.9.2.6.","1.7.9.2.7.","1.7.9.2.8.","1.7.9.2.9.","1.8","1.8.1.","1.8.1.1.","1.8.1.2.","1.8.1.3.","1.8.1.4.","1.8.1.5.","1.8.2.","1.8.2.1.","1.9.1.","10","10'000","10)","10);","10,","10.78e","10.7;","100","100'000'000);","100);","100+","100,","1000","1000);","100000;","100;","100ms;","101;","1024;","10646","10;","10]","10s);","10x","10};","11,","110","114,","12","12.0","12.0;","12.4","123","123'456'7890;","123);","123,","123.456;","12345):","123;","12408a149bfa78a4c2d4011f884aa2adb04f0934","12;","13,","13.)","13.1);","13th","14,","140","1440","14882.","14882:2003(e),","15","15.99","16","1683627180","16:05:16","16:14:55","16:15:43","16:37:45","16;","16];","16th","17:16:38","17:18:19","17:19:50","17;","18","1885});","19","1900","1960","1970","1970;","1978","1980","1980s),","1990s),","1992).","1993).","1994).","1996).","1996.","1997).","1997.","1999).","1:","1;","1?","1]","1s.","1});","1};","2","2)","2)()","2))","2);","2,","2.","2.0);","2.0,","2.0f,","2.7.4","2.71828);","20","20%","20);","200","2000).","2001).","2001.","2002).","2003).","2004).","2005\")","2005.","2009","2009,","2009.","2010","2010.","2011.","2012.","2013","2013.","2014","2014,","2014.","2015","2015).","2015.","2016","2016),","2016.","2017","2017),","2017).","2017.","207,","20x).","20});","21,","21.","21.12","2100","2153518409d218609af40babededec6e8ef51616","218.","21st","22(8),","24","24_celsius;","24h;","255","259.","299'792'458;","29;","2:","2;","2]","2^31","2^n.","2d","2k","2rdu00001","2},","2};","2};).","3","3).","3);","3,","3.","3.0","3.14","3.14);","3.14;","3.14});","3.14};","3.29048e","31,","32","32);","32/64","321","321;","33;","34,","35","35).","37).","39","39,","3;","3rd","3rdedition)","3ull","3x3","3})","3}),","3});","3};","3进行三方合并","4","4%","4);","4,","4.","40","40%","40+","42","4294967292","4294967294","4294967294?","42;","42};","43;","45","46).","4611686018427387904","49.1","4;","4],","4th","4},","5","5%","5,","5.","50%","50,","500","51","51;","52;","53,","55.)","55};","56.","5;","5};","6","6,","6.0","6.1),","6.1,","6.1.","60","62ae6cc3f9280418bdb0fcf6c1e678905b1fe690","64","66)下测试通过","666","666,","666;","6;","6};","6}};","7","7)","7);","7,","7.","7.1","7.9,","7.93","7.9;","73);","75","75.)","77","77;","79,","7:","7;","7th","7};","8","8)","8,","8.","80","800","8;","8],","8};","9","9,","9.00);","9.00};","9.9;","911b1af2e0c95a2fc1306b8dea707064d5386c2","987.654.","987.654;","99.","999","999;","99;","9;","9}","9};",":",":)","::copi","::detail","::foo::bar::baz;","::foo::bar;","::pipeline_diagnostics::sidetable;","::size_typ",":act{a}",":b",":cent{c},",":date2{ii,",":d{dd},",":elem{a.elem},",":elem{new",":f{fopen(name.c_str(),",":i{666},",":i{ii}",":i{ii},",":m2{x},",":m_{abs(m)}",":m{a,",":owned{true},",":p(pp)",":p{a.p},",":p{new",":refs/tags/",":shape{c},",":s{\"default\"},",":s{ss},",":val{x}",":vector0{0}",";",";.","=","=\"r\");","='","=,","=0;","==","==).","==,","==.","==;","==nullptr","=>","=default","=default)","=default.","=delet","=delete.","={...}",">",">()",">,",">=",">=),",">=,",">=.",">>",">^",">act(my_data);",">add(\"*addr\");",">add(\"*ip\");",">add(newrow);",">add(strtmpdev);",">bar();",">cells[0]",">char",">clear();",">column",">currentrow",">data",">datagridview1",">datagridview2",">datasourc",">datatable2",">datatable2;",">detach();",">done();",">draw(*this);",">elem)",">equals(\".upf\"))",">f(i);",">filename;",">filter",">filterindex",">find(x);",">foo();",">func();",">getbytes(sfullpath)",">id()",">initialdirectori",">int",">int.",">int;",">key(),",">lastindexof(\".\"))",">left,",">length());",">listdevad",">listdevadded)",">m(f2());",">name",">newiterator();",">newrow();",">next())",">post_initialize();",">postinitialize();",">ptr",">replace(l\"\\\\\",",">restoredirectori",">right,",">row",">schedule([&]",">schedule([&foo]",">seek(\"\");",">seek(\"foo\");",">set(x,",">showdialog()",">substring(sfullpath",">tostring();",">valu",">value());",">y;","?","???","???(bs:","???)","???.","???1.7.15.8.3.","???1.7.9.2.13.","????","???must","???unix","[","[&,this]","[&]","[&]()","[&](int","[&](rec&","[&]{","[&blacklist](int","[&message](auto&","[&n](const","[&r","[&x]","[&x](int","[*this]","[.l_zz4maine2x2]","[0..4]","[0:5)","[0:max).","[0:n)","[=,this]","[=]","[=](int","[=].","[=]{","[[","[[expects:","[[fallthrough]]","[[fallthrough]];","[[gsl::suppress(lifetime)]]","[[gsl::suppress(tag)]]","[[implicit]]","[[suppress(bounds)]]","[[suppress(types)]].","[]","[]()","[](auto","[](auto&","[](auto)","[](char);","[](const","[](doubl","[](double)","[](int","[](int)","[](order","[](t","[])","[]).","[],","[a,","[abrahams01]:","[alexandrescu01]","[alexandrescu01]:","[auto](https://google.github.io/styleguide/cppguide.html#auto).","[b:e)","[boost],","[c++03]","[c++03]:","[c++cs]","[c++cs]:","[cargill92]","[cargill92]:","[cline99]","[cline99]:","[dewhurst03]","[dewhurst03]:","[googl","[henricson97]","[henricson97]:","[i,","[implicit","[iter,","[koenig97]","[koenig97]:","[lakos96]","[lakos96]:","[meyers15]:","[meyers96]","[meyers96]:","[meyers97]","[meyers97]:","[murray93]","[murray93]:","[n]","[p","[p:p","[p:p+n)","[p:p+n),","[p:q)","[q:q","[q:q+n)","[rbp","[see","[std::forward](http://en.cppreference.com/w/cpp/utility/forward),","[str15].","[stroustrup00]","[stroustrup00]:","[stroustrup05]:","[stroustrup13]:","[stroustrup14]:","[stroustrup15]:","[stroustrup94]:","[suttalex05]:","[sutter00]","[sutter00]:","[sutter02]","[sutter02]:","[sutter04]","[sutter04]:","[sutthysl04b]","[sutthysl04b]:","[taligent94]","[taligent94].)","[taligent94]:","[this]","[this]{","[val,","[value,","[weight,","[x","[x,","[x1]","[x]","\\","\\n,","\\uxxxx","]","](int","])","]]","^","^branch2","_","__.","_________h_.","__attribute__((packed)).","__attribute__(...),","__attribute__,","__builtin_prefetch,","__counter__,","__declspec(align()).","__declspec(dllexport)","__declspec(dllimport)","__declspec,","__pretty_function__,","__pris_prefix","__pris_prefix1.12.7.","_atl_no_except","_celsius(unsign","_int(const","_lp64","_lp641.12.4.","_regtest","_unittest","`!=","`!=0`;","`!=nullptr`,","`#include`","`*p`","`0`","`==","`a`","`al2`","`al`","`alert`","`ar`","`arr`","`c`","`class`,","`color`","`const","`copy2`","`decltype((a))`","`decltype(123)`","`decltype(3.0)`","`decltype(a)`","`decltype(c)`","`decltype(f)","`decltype(x","`double`","`dst`.","`expect`","`expects(p)`","`f`","`foo`","`frobnicate`","`goto`","`i`'","`indices`","`int&&`","`int&`","`int_max`","`int`","`int`.","`l`","`lookup_table`","`lookup_table`.","`m`","`n`'","`nefarious`","`noreturn`","`nullptr`\"","`o`","`open()`","`p","`p1`","`p2`","`p`","`playerprofile`","`pos`","`red`/`green`","`s`","`src`","`std::size_t`","`std::terminate`","`std::terminate`.","`std::tuple`.","`struct`","`sum`","`t`...","`typedef`","`unsign","`weight`","`x`","`xl`","`xr2`","`y`","a\"","a&","a&&.","a&(flag","a&)","a'","a()","a(1.1);","a(a&&","a(const","a(int","a(int)","a(int,","a(std::initializer_list)","a)","a);","a+b","a,","a.","a...","a.1:","a.2:","a.4:","a.at(i);","a.character;","a.elem","a.elem;","a.end());","a.fill(0);","a.i","a.i;","a.id","a.nam","a.numb","a.number;","a.p","a.p;","a.s;","a.subspan(1);","a.swap(b);","a.sz","a.sz,","a.sz;","a.v","a.vr","a.x","a0","a1","a1:","a1;","a1[7];","a1[n];","a2","a2(m);","a2:","a2[9];","a2[m];","a2t(const","a2t_impl(a,","a2t_impl(const","a2{","a3","a:","a::a(int,","a::a(std::initializer_list)","a::b::c","a::bar","a::baz","a::foo","a::oper","a;","a?:b","a[","a[0];","a[100];","a[10]","a[10];","a[5];","a[7],","a[]","a[i","a[i];","a[n","a[n]","a[po","a_class_data_member_.","a_fourth_th","a_local_variable,","a_struct_data_member,","a_third_th","aa","aa[0]","aa[1]","aba","abandon","abbrev=0","abbrevi","abbreviation.","abi","abi,","abi.","abi:","abil","abis),","abis.","abomin","abomination.","abort","abort(),","abort();","about)","about,","about.","abov","above)","above).","above,","above.","abrahams.","absenc","absolut","absorb","abstract","abstract1.7.3.","abstract;","abstractbutton","abstraction\"","abstraction,","abstraction.","abstraction:","abstractions,","abstractions.","abstractions:","abuse,","accent","accept","accept,","accept/improve/alter/reject.","acceptable,","acceptable.","accepted,","access","access,","access.","access/set","access:","accessed.","accesses.","accessible,","accessing/set","accessor","accid","accident","accident.","accidents,","accommod","accompani","accord","accordingly:","account","account.","accu","accumul","accumulate(begin(a),","accumulate(v,","accur","accurately,","achiev","achieve?","acknowledg","acknowledgements1.4.1.5.","acknowledgements1.5.1.5.","acknowledgements1.6.1.5.","acknowledgements1.7.22.","acm","acm,","acquir","acquire/releas","acquisit","acquisition.","acronym","act","act\"","act();","act)","act;","action","action\"","action)","action,","action.","action_mutex;","action_need","action_needed.store(false,","action_needed;","activ","activation).","actual","actually,","ad","adapt","adapt.","add","add(1,","add(1.5,","add(shape*","add(t","add(x","add.","add_fixup(p);","add_front(link_base*","add_front(new","addabl","added\":","addenda","addison","addit","addition","additionally,","additions,","addone(int","addr;","address","address,","address:","addressed:","addressed?","addrlen","addrlen);","addtableentry()","addx","addx(1);","adher","adjac","adjust","adl","adl.","adob","adopt","adopt,","adopt_lock);","adoption.","adoption:","advanc","advance(forwarditer","advance(it","advance(randomaccessiter","advantag","advantage.","advantages.","adve,","advertis","advic","advis","aesthet","aesthetic.","af_inet;","affair","affect","afford","affordable.","after.","afterwards,","again","again,","against","age(0)","age;","age{0};","aggreg","aggregation.","agnost","ago'","agre","agree,","agree.","agreement","ahead","ahead!\"};","ai","aid","aim","aims1.7.3.2.1.","aims1.7.3.4.","air","aircraft","airplan","aka","aka,","al","al2","albeit","alert","alex","alexandrescu.","alexandrescu:","algo(const","algo(it","algo(x,","algorithm","algorithm,","algorithm.","algorithm:","algorithm?)","algorithms,","algorithms.","algorithms1.7.15.5.2.","algorithms1.7.6.2.24.","alia","alias","alias,","alias.","alias.st","alias:","aliased,","aliases)","aliases,","aliases1.4.1.2.10.","aliases1.7.15.5.5.","aliasing,","align","alignment.","alignments,","aliv","alive.","alive?","all\")","all):","all,","all.","all1.7.7.3.3.","all:","all;","all_cap","allevi","alloc","alloca(),","allocate,","allocate.","allocated,","allocation,","allocation.","allocation/dealloc","allocation_error{};","allocations,","allocations.","allocations/deallocations.","allocator.","allow","allowed).","allowed,","allowed.","allowed;","allowed?","alon","alone,","along","alphabetically.","alreadi","already,","already.","also","also,","also.","also:","also](#rc","also](#ri","alter","altern","alternateurltableerror","alternateurltableerrors),","alternative)","alternative)1.7.7.7.3.","alternative,","alternative.","alternative1.7.7.13.5.","alternative:","alternatively,","alternatives,","alternatives.","alternatives:","alternatives;","although","altitude_map(const","altitude_map(surface_readings);","alto","altogether.","alway","always)","always,","ambigu","ambiguities.","ambiguities1.7.15.6.8.","ambiguity.","ambiguous,","ambiguous.","ambit","ambitious:","amen","amend","amount","amount\"","ampersand","amplifi","am会给出提示，git","an_apple,","analog","analogu","analysi","analysis,","analysis.","analyz","analyze(const","analyzed.","analyzer.","ancestor","anchor","anchors.","ancient","and,","and/or","andrew","angl","annot","annotation.","annotation:","announc","announced?","announcement:","annoying/danger","annual","anonym","anoth","another),","another.","another:","another_appl","another_condition);","ansi","answer","answer.","anthoni","anti","anticip","antiqu","any)","any,","any.","any:","any_of(inputiter","anyon","anyth","anything\"","anything)","anything,","anything.","anyway)","anyway,","anyway.","anywher","anywhere,","ap;","apach","apart","api","api'","api,","api.","api:","apis,","apis.","apis:","appar","appear","appeared.","append().","append(i);","appendint()","appendix","appendstring(),","appl","apple&","appli","applic","application.","application:","applications.","applies.","apply,","apply.","appreci","approach","approach.","approaches,","appropri","appropriate)","appropriate,","appropriate.","appropriate;","appropriately,","appropriately.","approv","approxim","approximation,","approximation.","approximation:","apr,","april","apue.2","ar","arbitrari","arbitrarili","arbitrary,","archetyp","architectur","architecture,","architecture.","architectures.","are,","are.","are:","area","area(10'000'000,","area(height,","area(int","area(unsign","area,","area.","areas,","areas:","aren't","arg","arg)","argc,","argh","args&&...","args)","args);","args.push_back(\"false\");","args.push_back(\"true\");","args.push_back(elem.value());","args.push_back(prefix","args.push_back(std::to_string(num));","args0,","args1,","args2,","args3,","args;","argu","arguabl","argument","argument\"","argument,","argument.","argument1,","argument2,","argument3);","argument3,","argument4);","argument:","argument_typ","arguments,","arguments.","arguments1.12.2.5.4.","arguments1.12.2.5.6.","arguments1.7.10.3.6.","arguments1.7.15.3.2.","arguments1.7.7.","arguments:","arguments?","argv","argv[])","aris","arithmet","arithmetic\"","arithmetic,","arithmetic.","arithmetic1.7.10.4.1.","arithmetic1.7.10.4.2.","arithmetic1.7.10.4.4.","arithmetic:","ariti","around","around,","around.","arr","arr)","arr,","arr;","arr[10];","arr[]","arr[count];","arrang","array","array\");","array&","array(2);","array)","array),","array);","array,","array.","array1.7.18.1.2.","array:","array?","array[3]","array^","array_v(array,","arrays,","arrays.","arrays/struct","arrays1.7.10.3.17.","arrays1.7.15.7.3.","arrays:","arrow","arrow.","art","articul","as:","ascii","ascii.","asic","ask","aspect","assembl","assembly,","assert","assert(","assert().","assert(0","assert(false);","assert(n","assert(p","assert(s1","assert:","assert?","assertion.","assertion:","assertions,","assertions.","assertions1.4.1.2.6.","assertions1.7.23.4.","assign","assign(const","assigned,","assignment).","assignment):","assignment,","assignment.","assignment1.7.7.6.4.","assignment1.7.7.6.7.","assignment:","assignments,","assignments?","associ","assuag","assum","assume.","assumed.","assumpt","assumption;","assumptions.","assumptions;","assumptions?","ast","asterisk","asymmetr","asymptot","async","async()","async(),","async().","async([&]","async([&]{","async(modify1,","async(modify2,","asynchron","at()","at().","at():","at(a,","at(v,","at*","at_quick_exit().","atexit().","atl","atl,","atl/wtl","atom","atomic,","atomic_compare_exchange_strong","atomic_shared_ptr","atomicity,","attacks.","attempt","attent","attention\"","attribut","attribute\"","attributes,","attributes.","attributes1.4.1.2.13.","attributes1.7.7.11.12.","audience:","august","august,","author","author1.4.1.6.","author1.5.1.6.","author1.6.1.6.","author='author","authorit","authors,","auto","auto&","auto&&","auto&&).","auto(123);","auto)","auto,","auto.","auto1.4.1.2.7.","auto1.6.1.2.3.","autom","automat","automatic,","automatically,","automatically.","automation:","autostash","av","av)","av);","av.length());","avail","available)","available).","available,","available.","available;","averag","avoid","avoid.","avoidance.","avoided.","awar","away","away,","away.","awesom","awkward","awkward.","axel","axiom","axiom(t","axioms.","a{","a{0,","a{};","a参数相当于：al","b","b&","b&)","b'","b's.","b()","b(0,","b(const","b)","b)),","b));","b),","b);","b){","b*","b+a.","b,","b.","b.data(),","b.end(),","b.h:","b.id;","b.multiply(10);","b.name","b.number;","b.p","b.p,","b.p;","b.size())","b.sz","b.sz);","b.v;","b.vr;","b.x","b.y;","b1","b1;","b2","b2)","b2))","b2,","b2.name","b3","b:","b::b","b::baz","b::create();","b::f1()","b::f3()","b::f;","b::foo","b::oper","b::~b","b;","ba","back","backbon","background","background1.12.2.1.1.","backtonormal();","backward","bad","bad!","bad()","bad();","bad(pun&","bad,","bad.","bad.h","bad:","bad;","bad_alloc","bad_date{};","bad_entri","bad_entry{};","bad_value{p.first};","badfoo(s.message());","badli","bad{};","bag","bake","balanc","balance()","ban","ban,","bang","banning:","bar","bar\"};","bar&","bar(&x);","bar()","bar());","bar(),","bar();","bar(char","bar(double)","bar(int","bar(long);","bar(p1);","bar(std::shared_ptr","bar*","bar,","bar.cpp:","bar.h","bar.h,","bar.h.","bar.h:","bar;","bare","bar});","bar};","base","base\"","base&","base&)","base'","base(const","base)","base);","base,","base.","base/basictypes.h),","base/basictypes_test.cc","base1.7.7.13.9.","base::equal(base*","base;","base_flag","base_flag).","based.","basenam","bases,","bases.","bases;","bases[x],","bases[x];","basi","basic","basic_std_lib.h:","basic_string.","basically,","basics\",","basis,","basis.","batty,","bay","baz","baz()","baz(p1);","baz(std::shared_ptr","baz_","baz_(b)","bb","bde","be","be)","be),","be).","be,","be.","be:","be?","be?)","bear","beat","because,","becom","becomes.","been)","been.","befor","begin","begin,","beginn","behav","behaved\"","behavior","behavior!","behavior\"","behavior).","behavior,","behavior.","behavior:","behavior?","behavior?)","behaviorless","behind","believ","belong","below","below)","below).","below.","benchmark","bend","benefici","benefit","benefit,","benefits,","benefits.","besid","best","best,","bet","better","better)","better,","better.","better:","better;","better?","between","bewar","beware!","beyond","bibliographi","bibliography1.7.1.","big","big,","bigopen()","bigpo","billion","bimap","binari","binary,","binary.","binary_search(begin(c),","binary_search(forwarditer","bind","binders.","bindings\"","bindings1.6.1.2.10.","bit","bit.","bit:","bit;","bits,","bits.","bitwis","bjarn","blacklist","blacklist.end();","blacklist.find(i)","blame","blame的意思为‘责怪’，你懂的。","blank","blanket","bless","blind","blindli","blink_led(1500ms);","blink_led(2);","blink_led(2s);","blink_led(dur","blink_led(int","blink_led(millisecond","bloat","bloat.","bloated,","bloated.","block","block,","block.","block.)","blocks.","blog","bloomberg:","blue","blue;","bodi","bodies,","bodies.","body)","body).","body,","body.","boehm,","bogu","boil","boilerpl","boilerplate.","bonus,","book","book!","book.","bookkeep","bookkeeping,","bool","bool&","bool()","bool()).","bool().","bool.","boolean","boost","boost'","boost,","boost.intrus","boost.spirit","boost/array.hpp:","boost/bimap","boost/call_traits.hpp","boost/compressed_pair.hpp","boost/container/flat_map,","boost/container/flat_set","boost/graph,","boost/graph/distributed/*).","boost/heap","boost/intrusive.","boost/iter","boost/math/distribut","boost/math/special_funct","boost/multi_index","boost/polygon/voronoi_builder.hpp,","boost/polygon/voronoi_diagram.hpp,","boost/polygon/voronoi_geometry_type.hpp","boost/preprocessor.","boost/property_map,","boost/ptr_container:","boost/sort","boost?","boost_test","bore","borrow","both","both.","both.templ","bottom","bottom_left,","bottom_right);","bottom_right,","bound","bound,","boundari","boundary.","bounds).","bounds.","bounds.1:","bounds.2).","bounds.2:","bounds.3:","bounds.4:","bounds:","box","box\",","brace","brace,","brace.","braced_initializer_list_format","braces,","braces.","bracket","brackets1.4.1.3.","brain","branch","branch1","branch_nam","breaches:","break","break,","break.","break1.7.10.2.10.","break;","breaks.\",","breed","brew","brief","brief,","briefli","bring","brittl","brittle)","brittle,","brittle.","brittle;","broader","broadli","broken","broken.","brows","bsd,","btoa","buck:","buckets.","buf","buf(1024);","buf,","buf;","buf[128];","buf[max]","buf[max];","buffer","buffer)","buffer.","buffer;","buffer[max];","buffer_s","buffer_size)","bufmax","bufs)","bug","bug)?","bug.","bug:","buggy.","bugs)","bugs,","bugs.","build","build,","builder","builder.","building.","built","bunch","bundl","bundle\",","bundle\";","bundle&","burden","burden.","busi","but:","bypass","byte","byte:","bytes)","byte{1};","byte{256};","b{0};","b{1.1};","b{};","b}","c","c\"","c'","c()","c(10,","c(c)","c)","c):","c++","c++\"","c++\"1.7.21.6.","c++'","c++)","c++,","c++.","c++/cli","c++/cli1.8.1.1.","c++03","c++03,","c++11","c++11'","c++11)","c++11),","c++11,","c++11.","c++111.4.1.1.","c++11:","c++14","c++14\".","c++14)","c++14).","c++14,","c++14.","c++14...","c++141.5.1.1.","c++14;","c++17","c++17)","c++17).","c++17,","c++17.","c++171.6.1.1.","c++84,","c++98","c++98'","c++98)","c++98,","c++:","c++;","c,","c.","c.\"","c.100:","c.101:","c.102:","c.103:","c.104:","c.105:","c.109:","c.10:","c.11:","c.120:","c.121:","c.122:","c.126:","c.127:","c.128:","c.129:","c.130.","c.130:","c.131:","c.132:","c.133:","c.134","c.134:","c.135:","c.136:","c.137:","c.138:","c.139:","c.140:","c.145:","c.146","c.146:","c.147,","c.147:","c.148:","c.149:","c.150:","c.151:","c.152:","c.153:","c.160:","c.161:","c.162:","c.163:","c.164:","c.165:","c.166:","c.167:","c.168:","c.170:","c.180:","c.181:","c.182:","c.183:","c.1:","c.20:","c.21:","c.22:","c.2:","c.30:","c.31:","c.32:","c.33:","c.35.","c.35:","c.36:","c.37:","c.3:","c.40:","c.41:","c.42:","c.43:","c.44:","c.45:","c.46:","c.47:","c.48:","c.49:","c.4:","c.50","c.50:","c.51:","c.52:","c.5:","c.60:","c.61:","c.62:","c.63:","c.64)","c.64:","c.65:","c.66:","c.67.","c.67:","c.7","c.7:","c.80:","c.81:","c.82:","c.83:","c.84:","c.85:","c.86:","c.87:","c.89:","c.8:","c.9:","c.con:","c.concrete:","c.copy:","c.ctor:","c.defop:","c.dtor:","c.elem)[]","c.hier","c.hier:","c.hierclass:","c.lambdas:","c.other:","c.over:","c.union:","c.x","c/c++","c1","c1,","c11,","c1{","c2","c2)","c2),","c2;","c2;)","c3","c89\");","c99","c:","c;","c[sizeof(int)];","cabl","cach","cache,","cache.","cache.find(x);","cache.set(x,","cache:","cache;","cached_comput","cached_computation(doubl","cached_result","cached_result;","cached_x","caching,","calandra","calcul","calculateproduct(values,","calendar","call","call\".","call'","call,","call.","call:","call_f(struct","call_f(y*","call_something(std::forward(t));","call_something(std::forward(x));","call_something(std::move(t));","call_something(std::move(x));","call_something(t);","call_something(x);","callabl","callable,","callback","callback)","callback)1.7.12.1.4.","calle","called,","called.","callee,","callee.","caller","caller'","caller(int","caller,","caller.","caller;","callers'","callers.","callers:","calls!","calls,","calls.","calls1.12.13.2.7.","callsit","callsites.","camelcas","camelcase,","camelcase.","camelcase:","camelcase???","camelcasevari","can't","can't:","can,","can.","can:","canari","candid","candidate.","cannot)","cannot,","canvas)","cap","capabl","capac","capacity)","capacity.","capit","capitalization.","caps,","caps.","captur","capture)","capture)1.7.6.2.26.","capture.","capture:","captures,","captures.","car","care","care,","careful.","careful:","carefulli","carefully),","carelessli","cargill.","caricature,","carri","case","case\"","case\").","case).","case);","case,","case.","case.\"","case:","case;","cases)","cases,","cases.","cases.)","cases:","cases?","cast","cast!).","cast)","cast,","cast.","cast1.7.10.3.11.","cast:","cast?","casting.","casting1.12.2.7.6.","casting1.7.7.14.","casts)","casts,","casts.","casts.b.","casts.c.","casts1.7.10.3.10.","casts:","casts:a.","casual","cat","cat(const","catch","catch(bufferpool_exhausted)","catch(int","catch(runtime_error)","catchal","catches,","categori","categorization:","category,","category:","cater","caught","caus","caution","caveat:","cc","ccomptr","cd.","ce","ceil(d)","celsiu","cent","cent;","center","center()","central","centuri","cent{ce},","cern,","cerr","cerr)","cert:","certain","certainli","cfgdevcheck[i].base.addr);","ch","ch)","ch,","ch2","ch2;","ch;","chain","chain.","chain:","chaining,","chains)","chains.","challeng","challenging,","challenging.","chanc","chang","change\"","change,","change.","change?","change_speed(2.3);","change_speed(23m","change_speed(doubl","change_speed(spe","changeable;","changed,","changed.","changed/improved.","changes,","changes.","changing.","chaos.","chapter","char","char&);","char*","char*);","char**","char*,","char*.","char*1.8.1.2.","char*;","char*[maxelem];","char*`","char*s;","char.","char16_t","char32_t","char;","char[n];","charact","character","character,","character1.7.18.2.5.","character;","characterist","characters\"","characters)","characters),","characters).","characters,","characters.","characters1.12.13.2.3.","characters1.7.18.2.4.","characters1.7.18.2.6.","characters;","chars,","chars.","cheap","cheap,","cheap:","cheaper","cheapest","cheapli","check","check(x);","check,","check.","checkabl","checkable.","checkbox","checked,","checked.","checked:","checker","checkers)","checkforillegalcrossthreadcal","checking,","checking.","checking1.7.10.3.13.","checking:","checking;","checkout","checks)","checks),","checks,","checks.","cherri","child,","choic","choice,","choice.","choice1.7.10.2.2.","choice1.7.10.2.3.","choos","choose,","chose","chosen","chosen.","chrono","chunk","ci)","cin","cin,","cin/cout","circl","circle(point","circle,","circle::rotate(doubl","circle::rotate(double)","circle[10]","circuit.","circular","circumst","circumstances,","cit","claim","claims.","clang","clang'","clarif","clarifi","clariti","clarity,","clarity.","clash","clash.","clashes,","clashes.","class","class'","class)","class).","class,","class.","class.cc","class/structur","class1.7.15.6.4.","class1.7.7.10.3.","class1.7.7.5.13.","class:","class;","classes)","classes),","classes).","classes,","classes.","classes/funct","classes/structs)","classes1.12.2.4.1.","classes1.12.2.4.5.","classes1.7.7.11.13.","classes1.7.7.7.9.","classes:","classic","classif","classifi","classname::functionname(typ","classname::reallylongfunctionname(typ","claus","clause).","clause.","clauses,","clauses.","clean","clean,","cleaner","cleanest","cleanest,","cleanli","cleanup","cleanup\"};","cleanup(g1);","cleanup(g2);","cleanup,","cleanup.","cleanup:","clean后，删除的文件无法找回","clear","clear();","clear,","clear.","clear:","clearer","clearli","clever","clever\"","clever).","clever.","client","client'","clients.","cline,","clock","clock.","clock;","clocks,","clone","clone()","clone(),","clone().","cloned,","clone下来指定的单一分支","clone下来指定的单一分支1.10.1.68.","close","close\"","close\".","close,","close/cleanup","close?","close_port(port);","close_port,","closer","closur","clumsi","clumsy,","clutter.","cm1","cm2;","cm2{ci}","cm3","cm3;","cmp_to_n","cmp_to_n(r.name);","co","code","code!","code\"","code)","code).","code,","code.","code.\"","code/librari","code1.12.13.3.2.","code1.12.13.4.","code1.7.15.1.2.","code1.7.15.10.5.","code1.7.28.","code:","code;","code?","codebas","codebase'","codebase,","codebase.","coder","codes)","codes,","codes.","coding.","coher","cohes","col","col1","col2","col;","collabor","collapsing,","collect","collect()","collect(istream&","collection\"","collection.","collid","collide,","collis","collisions).","collisions,","colloqui","colon","color","color()","color);","color,","color::red;","column","columns.","col{c}","com","combin","combination,","combination1.7.12.5.3.","combinations.","come","comfort","comfortable,","comma","command","command_line:","comment","comment)","comment,","comment.","comment:","commented.","commenting,","comments)).","comments),","comments).","comments,","comments.","comments1.12.13.1.1.","comments1.12.13.1.3.","comments1.12.13.1.4.","comments1.12.13.1.5.","comments1.12.13.1.6.","comments1.12.13.1.7.","comments1.12.13.1.9.","comments1.12.13.2.","commerci","commit","commit).","commit.","committe","committee'","committee,","committee.","committee:","committee?","committerd","commit历史中显示branch1有的，但是branch2没有commit","commit历史中显示branch1有的，但是branch2没有commit1.10.1.63.","common","common)","common,","common.","commonli","commonly,","commonmark,","commun","community,","community.","commutative:","commutativity),","comp);","compact","compar","comparable:","compare,","compare_doubl","compare_doubles);","compare_exchange_weak","compare_insensitive(a,","compare_insensitive(const","comparison","comparison),","comparison,","comparison.","comparisons,","compat","compatible,","compensate.","compil","compilation,","compilation.","compilation/link","compile,","compile.","compiled,","compiled.","compiler'","compiler)","compiler).","compiler,","compiler.","compiler/analyz","compiler/languag","compiler:","compilers,","compilers.","compl.","complain","complains,","complement","complementari","complementary.","complet","complete),","complete,","completed.","completely.","completeness,","complex","complex(doubl","complex,","complex.","complex?","complexifi","complexity,","complexity.","complexity:","complexity?","compliant","complic","complicated,","complicated.","complicated?","complicated_algorithm(vector&","complication.","complimentari","compon","components)","components.","components:","compos","composit","composition.","compound","comprehens","comprehension.","compress","compress(b);","compressor([&](buffer&","compressor.process(b);","compromis","comput","computation(x);","computation,","computation.","computation:","computation_of_zero;","computations...","compute()","compute(args)","compute(doubl","compute(int","compute(x);","compute.","compute_string_rep()","compute_string_rep();","computer'","computer,","computer.","computer;","computers,","computers.","con).","con.1:","con.2:","con.3:","con.4:","con.5:","con:","concaten","concatenate(string&,","concatenation,","conced","conceivably,","concentr","concept","concept\".","concept)","concept,","concept.","concept1.7.15.4.3.","concept:","concepts)","concepts).","concepts):","concepts,","concepts.","concepts1.7.15.3.3.","concepts1.7.15.4.","concepts1.7.15.4.4.","concepts1.7.15.5.3.","concepts1.7.15.9.3.","concepts1.7.23.5.1.","concepts1.7.24.","concepts:","conceptu","conceptually,","concern","concerned,","concerned.","concerns.","concis","concise,","concise.","concret","concrete/specific/check","concretecommand","concurr","concurrency\",","concurrency.","concurrency/parallel","concurrency1.7.12.1.1.","cond","cond.notify_one();","cond.wait(lck,","cond;","condemn","condit","condition","condition,","condition.","condition1.7.12.1.13.","condition:","condition_vari","condition_variable).","condition_variable,","conditional,","conditionals1.12.13.2.9.","conditions,","conditions.","conditions1.7.10.3.","conditions:","confer","confid","config","config_file;","configur","configurations.","config分为：当前目录（local）和全局（golbal）的config，默认为当前目录的config","confin","conflict","conform","confus","confusing,","confusing.","confusion.","confusion:","conjectur","conjunct","connect","connection,","consecut","consensu","consequ","consequence,","consequenti","consequently,","consid","consider","consider,","consider.","consider:","considerations,","considered?","consist","consistency,","consistency.","consistent\"","consistent,","consistent.","consistent1.7.7.4.","consistent:","consistently).","consistently,","consistently.","consistently1.7.28.1.1.","consistently:","consol","const","const\"","const\";","const&","const&,","const&1.7.7.6.2.","const)","const).","const,","const.","const1.12.2.7.9.","const1.7.10.3.12.","const1.7.6.2.3.","const1.7.6.2.4.","const:","const;","const_cast","const_cast(cache).set(x,","const_cast(i)","const_cast(static_cast(*this).get_bar());","const_cast).","const_cast.","const_cast:","const_casts.","const_iter","constant","constant)","constant,","constant.","constant:","constantli","constants\",","constants\";","constants).","constants,","constants.","constants1.7.10.3.7.","constants:","constants?","constexpr","constexpr,","constexpr.","constexpr1.12.2.7.10.","constexpr1.4.1.2.14.","constexpr1.7.6.1.5.","constexpr:","constrain","constraint","constraint.","constraints),","constraints,","constraints.","constraints1.7.15.4.7.","construct","construct.","constructed,","constructed:","constructed;","constructible.","construction).","construction.","construction1.7.10.3.19.","construction:","constructor","constructor'","constructor)","constructor),","constructor).","constructor,","constructor.","constructor/destructor","constructor1.7.29.","constructor1.7.7.11.2.","constructor1.7.7.5.5.","constructor:","constructor;","constructors)","constructors).","constructors,","constructors.","constructors1.12.2.4.2.","constructors1.4.1.2.15.","constructors1.4.1.2.23.","constructors1.7.7.5.1.","constructors1.7.7.5.11.","constructors:","constructs\").","constructs,","constructs:","consts,","consult","consum","consuming,","contact","contain","contained.","container'","container,","container.","container1.7.12.1.5.","container1.7.12.1.6.","container1.7.18.1.3.","container:","container::first()","container::iter","container?","container_traits::value_typ","container_traits::value_type;","containers,","containers.","containers1.4.1.3.11.","containers1.7.18.1.1.","containers:","contains.","content","content.","context","context.","contexts,","contigu","contiguous;","contiguous_it","continu","continue,","continue.","contract","contract,","contract.","contract:","contracts)","contracts),","contracts/assertions:","contracts:","contradict","contrari","contrast","contrast,","contraven","contribut","contribute)","contribute?","contributing.md.","contributor","contributors1.4.1.7.","contributors1.5.1.7.","contributors1.6.1.7.","control","control\"","control,","control1.12.2.4.10.","controls)","controversial,","controversial.","conveni","convenience,","convenience.","convenient&);","convenient&,","convenient.","convent","convention","convention).","convention,","convention.","convention:","conventional,","conventional,not","conventional.","conventions,","conventions.","converg","convers","converse,","converse.","conversely,","conversely:","conversion)","conversion,","conversion.","conversion:","conversions,","conversions.","conversions1.12.2.4.3.","conversions1.7.10.3.8.","conversions:","conversions]","convert","converted.","convey","convinc","convolut","cooper","coord","coordin","coordinate{0,","cope","copi","copied,","copied.","copied/mov","copied:","copied;","copies,","copy\"","copy(/*...","copy(/*...*/);","copy(a.p,","copy(it","copy(span","copy(vi.begin(),","copy(vs.begin(),","copy)","copy),","copy,","copy.","copy/mov","copy/valu","copy1.7.7.6.3.","copy2","copy:","copy?","copy_circle();","copy_helper(first,","copy_helper(in,","copy_helper(it","copy_n(const","copy_n(span","copy_n(t*","copy_trait","copy_trait::tag{})","copyabl","copyable):","copyable,","copyable.","copyable/mov","copyable?","copyfrom()","copyfrom(),","copying,","copying.","copying/mov","copying:","copyright","corba)","core","core.filemod","corner","corollary:","corpor","correct","correct)","correct,","correct.","correct/saf","correct:","correct;","corrections).","correctli","correctly)","correctly).","correctly,","correctly.","correctness).","correctness,","correctness.","correctness:","correl","correspond","corrupt","corruption,","corruption.","cost","cost).","cost,","cost.","cost:","costli","costly.","costs,","costs.","costs1.7.15.2.","couldn't","count","count\"","count()","count)","count).","count++;","count,","count.","counter","counter++);.)","counter.","counterproduct","counters.","counts,","count{","coupl","cours","course,","cout","cout_my_class","cout_my_class(const","covari","cover","covered.","covered?","cp.100:","cp.101:","cp.102:","cp.110:","cp.111:","cp.1:","cp.200:","cp.201:","cp.20:","cp.21:","cp.22:","cp.23:","cp.24:","cp.25:","cp.26:","cp.2:","cp.31:","cp.32:","cp.3:","cp.40:","cp.41:","cp.42:","cp.43:","cp.44:","cp.4:","cp.50:","cp.60:","cp.61:","cp.8:","cp.9:","cp.con:","cp.etc:","cp.free:","cp.mess:","cp.par:","cp.vec:","cp:","cpl.1:","cpl.2:","cpl.3:","cpl:","cpp","cpp11","cpp11longtypedef;","cpp14","cpp17","cpp98longtypedef;","cppcon","cppcorecheck","cppcoreguidelin","cpplint","cpplint.pi","cpplint1.12.2.7.","cpprefer","cppstr{","cpu","cracker","craft","crash","crash.","crashes,","crashes.","creat","create()","create(),","create(bool","create(false).value_or(\"empty\");","create(true))","create(true).value();","created,","created.","create命令导出的内容","creation","creation,","creation.","creep:","crew","crisi","crisp","criteria","criteria.","criteria:","critic","critical)","critical,","critical.","cross","crtp","crtp/static?","crucial","cryptic","cryptic.","cstmr_id;","cstring_span","ctor","ctors,","ctors/dtor","cumbersome,","cumbersome.","curli","curly,","current","current_element_index","current_vector)","current_year()}","currently,","cursori","custom","customiz","cut","cv","cv.notify_one();","cv.wait(lock);","cv;","cycl","cycles\",","cycles,","cycles.","cycles;","cyclic","cyclomat","czstring","c{","c{};","d","d&","d'","d()","d)","d)));","d));","d);","d*","d,","d.","d.clone();","d.data","d.f();","d.f(1)","d.more_data","d.multiply(10);","d1","d1.unit","d1.valu","d2","d2'","d2.unit","d2.valu","d2;","d:","d::","d::clone","d::create();","d::d(int","d::f1()","d::f3()","d;","d[0].i","damag","damian","danger","dangerous,","dangerous.","dangl","dangle.","danish,","dash","data","data\"","data)","data).","data);","data,","data.","data.end(),","data1.7.7.11.9.","data:","data;","data?","data[100];","data_size_","datagridview2;","datapoint","datapointcomparator>","datapointcomparator>;","datarecord","datarow^","datatable1;","datatable2;","data{","date","date\"","date()","date();","date(int","date)","date);","date.","date2","date2(int","date{month::october,","daunt","day","day&","day()","day.count();","day::mon","day::sat;","day::sun)","day{++d};","db.h.","dcount","dd","dd);","dd,","dd}","de","deadlock","deadlock,","deadlock.","deadlock:","deadlocks.","deal","dealloc","deallocate),","deallocated,","deallocation)","deallocation),","deallocation,","deallocation1.7.9.1.1.","deallocations,","dearli","debates.","debug","debug,","debuggers.","debugging,","debugging.","debugging:","debugstring()","dec","decad","decades),","decades.","decay","decay)","decay,","decay:","decemb","decent","dechev","dechev,","decid","decide:","decimalnumb","decis","decl","declar","declaration\"","declaration,","declaration.","declaration1.7.10.1.7.","declaration1.7.7.5.9.","declaration:","declarations,","declarations.","declarations1.12.2.2.4.","declarations1.7.10.1.1.","declare/r","declared,","declared.","declares).","declares,","declares.","decltyp","decltype((a))","decltype(123)","decltype(a)","decltype(auto)","decltype(auto)1.5.1.2.6.","decltype(auto)?","decltype(c)","decltype(declval()","decltype(f)","decltype(t","decltype(t.get_bar())","decltype(x","decltype(x2)","decltype(x3)","decltype(x4)","decltype)","decltype1.4.1.2.9.","decltype:","declval())","decor","decorate(b);","decorations.","decorator([&](buffer&","decorator.process(b);","decreas","decrease.","decrement","decrement)","deduc","deduced.","deduced:","deducing:","deduct","deduction1.5.1.2.5.","deduction:","deem","deep","deepli","deeply:","default","default\"","default\".","default'","default)","default),","default,","default.","default/empti","default:","default;","default?","defaults.","defend","defens","defer","defi","defin","define_flag(bool,","defined,","defined.","defined;","defines.","defining.","defining/overrid","definit","definition'","definition,","definition.","definition/implementation.","definition:","definition;","definitions![](./googl","definitions,","definitions.","definitions/declar","definitions1.7.15.6.1.","definitions1.7.6.1.1.","degener","degradation,","degre","delay","deleg","delet","delete(void*);","delete)","delete),","delete).","delete,","delete.","delete1.7.10.3.16.","delete;","delete[]","delete[],","deleted)","deleted,","deleted.","deleter:","deletes,","deletes.","deleteurl()","deleting_commit","deletion).","deletion,","deletion.","deliber","delim)","delim))","delimiters.","deliv","delta","delta,","deltas,","delus","demonstr","demonstrated.","denni","denot","dens","departur","depend","dependencies.","dependencies1.7.15.6.2.","dependencies:","dependency,","dependency:","deploy","depositories,","deprec","deprecated,","deprecated.","depriv","depth.\"","derefer","dereferenc","dereference.","deriv","derivation.","derive1","derive2","derived()","derived).","derived*","derived1","derived2","derived::equal(base*","derived::g();","derived::g,","derivedi","derived{\"her","descend","describ","describing.","descript","descriptive;","descriptor","design","design)","design).","design,","design.","design:","designed,","designed.","designs.","desir","desirable,","desirable.","desired,","desired.","desired1.7.7.7.","despis","destin","destination)","destination.","destroy","destroyed,","destroyed.","destroying,","destruct","destruction).","destruction,","destruction.","destruction1.7.12.1.12.","destruction1.7.7.4.2.","destructor","destructor'","destructor).","destructor,","destructor.","destructor1.7.7.11.3.","destructor1.7.7.4.3.","destructor1.7.7.4.5.","destructor:","destructor;","destructor?\"","destructors,","destructors.","destructors1.7.7.3.","destructors1.7.7.4.1.","destructors1.7.7.7.4.","detach","detach()","detach(),","detach().","detach(p);","detach.","detached().","detached,","detaches.","detail","detail,","detail.","detail.)","detail::helper(t);.","details)","details);","details,","details.","details.\"","details1.7.15.5.4.","details;","detect","detect.","detected.","detected/prev","detection.","determin","determined,","determinist","detriment","develop","developed,","developers,","developers.","development,","development.","devic","device.","devinfo","devinfo[0];","devinfo[1];","devis","devised.","devot","dewhurst.","df","diagnos","diagnose.","diagnost","diagnostic.","diagnostics),","diagnostics,","diagnostics.","diagram","dictat","dictionari","did,","didn't","die","dies\").","diff","differ","differ.","differ;","difference\").","differences.","different,","different.","differenti","differentiator,","differently.","difficult","difficult,","difficult.","difficulti","difficulties.","diff标准补丁","diff标准补丁1.11.3.2.","digit","digits,","digits.end());","digits.end(),","digits.erase(std::remove_if(digits.begin(),","dilemmas.","dir","dir/foo.cc","dir/foo_test.cc","dir/foo_test.cc,","dir2/foo2.h","dir2/foo2.h,","dir2/foo2.h.","dir=/path/to/main.git","dir=/path/to/util.git","direct","directions,","directives1.12.13.2.15.","directli","directly,","directly.","directly:","directori","directory)","directory).","disabl","disagre","disagrees,","disallow","disambigu","disappear","disappoint","disassembl","disaster_pend","disastr","disciplin","discipline:","disclaim","discontinu","discourag","discouraged),","discouraged.","discov","discoveri","discrimin","discuss","discussion)","discussion.","discussion1.7.28.1.","discussion:","disguis","disguise.","disguise;","disjunct","disk","disk.","dispatch","dispatch,","dispatch?","dispel","dispers","display_error_window();","disposal.","disprov","disrupt","distanc","distance);","distant","distant)","distinct","distinct,","distinguish","distract","distracting.","distracts.","distribut","distribution.","distrust","div(123456,","div_t","diverg","diverge.","divid","divide(int","divis","dllexport,","dllimport","do","do,","do.","do.\"","do0();","do1();","do1.7.7.3.2.","do2();","do:","do;","do?","do_bar(int","do_bar(x","do_bar(x);","do_something()","do_something();","do_something(act","do_something(int","do_something(x);","do_something_else();","do_something_with(iter);","do_something_with(result.first);","do_stuff()","do_thi","do_this(foo*","do_this.","document","document,","document.","document/com","document1.7.3.6.","document?","documentation,","documentation.","documentation;","documented,","documented.","documenting,","documenting.","documents)","dodg","does)","does,","does.","doesn't","doesn't.","doesn’t","doing\"","doing,","domain","domain,","domain.","domains,","domin","don't","don't,","don't.","don't:","don't;","done","done)","done,","done.","done?","don’t","door","dosomething(","dosomething();","dosomething(argument1,","dosomething(averyveryveryverylongargument1,","dosomething(my_heuristic,","dosomething(scores[x]","dosomethingelse();","dosomethingelsethatislonger();","dothat();","dothis();","doubl","double&","double'","double(int","double,","double.","double[s]},","doubles).","doubles.","double{1.23};","doubli","doubt","doubt,","down","down)","downcast","downcast:","downcasts,","downgraded.","download","downright","downsid","dozen","draconian","draft","draft.","dragons!","dramat","drastic","draw","draw()","draw(),","draw();","draw(arr,","draw(const","draw(int","draw(point","draw(shape*","draw2()","draw2(arr);","draw2(span(arr));","draw2(span);","draw3(arr);","draw3(span);","draw_line(int,","draw_line(point,","draw_rect(int,","draw_rect(p.x,","draw_rectangle(p,","draw_rectangle(point","drawableuiel","drawback","drop","dropeverything();","ds","dst","dst.insert(src.extract(2));","dst.insert(src.extract(src.find(1)));","dst.merge(src);","dst{","dst{2,","dtor","dual","duck","due","dumb","duplic","duplication,","durat","duration,","duration](http://en.cppreference.com/w/cpp/language/storage_dur","duration_cast(time_to_blink);","durations,","dure","dword","dword,","dx","dyn_array","dynam","dynamic)","dynamic:","dynamic_cast","dynamic_cast(item))","dynamic_cast(other);","dynamic_cast(pb))","dynamic_cast(pb);","dynamic_cast(ps))","dynamic_cast(ps);","dynamic_cast).","dynamic_cast,","dynamic_cast.","dynamically,","dynarray","dynarray?","d{0,","d{1.23};","e","e)","e);","e){","e,","e.","e.12:","e.13:","e.14:","e.15:","e.16:","e.17:","e.18:","e.19:","e.1:","e.25:","e.26:","e.27:","e.28:","e.2:","e.30:","e.31:","e.3:","e.4:","e.5:","e.6:","e.7:","e.8:","e.g","e.g.","e.g.,","e.g.:","e.i;","e.key()","e.s;","e.typ","e.type;","e1","e2","e2),","e:","e;","each","each(array^","each.","earli","earlier","earlier.","early.","earlyusersend","eas","easi","easier","easier.","easiest","easili","easily)","easily.","easy,","easy.","eat","eax","eax,","ec","ec;","ecbs).","echo","edg","edge_color;","edi,","edinburgh.","edit","edition)","edition).","edition,","edition.","editor","editor/maintainer?","editors:","effect","effect,","effect.","effective).","effectively.","effects,","effects.","effects:","effici","efficiency\".","efficiency)","efficiency)1.7.28.1.7.","efficiency.","efficiency:","efficient,","efficient.","efficient.\"","efficient:","efficiently,","efficiently:","efficiently;","effort","effort,","effort;","efforts.","eg","either.","either:","elabor","elaborate.","elapsed_second","elapsed_seconds.count();","eleg","elegant,","elegantli","elem","elem.key());","elem.value();","elem;","elem[s];","elem_max)","elemcount","element","element);","element.","element...","element:","elementfactory()","elements)","elements,","elements.","elements:","elements;","elems.push_back(item);","elems;","elem{new","elem{nullptr},","elig","elimin","elis","elision.","else\"","else'","else,","else.","else1.12.6.","else:","elsewher","elsewhere)","elsewhere.","emacs.","email","email(first","email,","emb","embed","emerg","emit","emphas","emphasi","emphat","employe","employee(const","employee::employee(const","empti","empty).","empty,","empty.","empty:","emul","enabl","enable_if","enable_if,","enable_if1.7.15.5.9.","encapsul","encapsulated.","encapsulation.","encapsulation:","enclos","encod","encount","encourag","encouraged,","encouraged:","encrypt(b);","encryptor([]","encryptor.process(b);","end","end(a),","end(c));","end(c),","end(sockets),","end(v),","end.","end;","endeavor","endif","endif1.12.8.","endl","endl1.7.18.3.6.","endraw","ends).","ends.","enforc","enforce)","enforce,","enforce.","enforce;","enforceability.","enforceable\"","enforceable)","enforceable,","enforced,","enforced.","enforcement,","enforcement.","enforcement1.7.3.5.","engin","engineers,","english","english,","english.","enhanc","enorm","enough","enough,","enqueu","ensur","ensure.","ensures()","ensures(buffer[0]","ensures(r","enter","entir","entiti","entities:","entity.","entity;","entrant.","entri","entries.","entry.","enum","enum)","enum.","enum.1:","enum.2:","enum.3:","enum.4:","enum.5:","enum.6:","enum.7:","enum.8:","enum:","enum_name.","enumer","enumeration).","enumeration,","enumeration.","enumerations,","enumerations.","enumerations1.7.9.","enumerations:","enumerators.","enums)","enums,","enums.","enums1.4.1.2.12.","enums1.6.1.3.","environ","environment","environment,","environment.","environment:","environments.","eop","ephemeral?","equal","equal(a.p,","equal.","equal?","equal_rang","equal_range(begin(c),","equal_range(forwarditer","equality.","equality_comparable,","equalitycompar","equalitycomparable,","equalitycomparable>,","equals(),","equip","equival","equivalent)","equivalent.","equivalent1.7.7.14.4.","equivalent1.7.7.14.5.","equivalently,","equivalently.","equivalents)","erased,","erasur","erasure).","erasure1.7.15.6.","err","errata","errno)","errno,","errno.","erron","error","error(\"impossible!\");","error(\"no!\");","error()","error(int","error):","error,","error.","error1.7.7.13.4.","error:","error?","error_cod","error_code)","error_code;","error_code]","error_ind","errors\"","errors).","errors,","errors.","errors1.7.18.2.","errors:","err};","es.10.","es.100:","es.101:","es.102:","es.103:","es.104:","es.105:","es.106:","es.107:","es.10:","es.11:","es.12:","es.1:","es.20:","es.21:","es.22:","es.23:","es.24:","es.25:","es.26:","es.27:","es.28","es.28.","es.28:","es.2:","es.30,","es.30:","es.31,","es.31:","es.32.","es.32:","es.33:","es.34:","es.40:","es.41:","es.42:","es.43),","es.43:","es.44:","es.45:","es.46:","es.47:","es.48:","es.49:","es.50:","es.55:","es.56:","es.5:","es.60:","es.61:","es.62:","es.63:","es.64:","es.65:","es.6:","es.70:","es.71.","es.71:","es.72:","es.73:","es.74:","es.75:","es.76:","es.77:","es.78:","es.79:","es.7:","es.84:","es.85:","es.86:","es.87:","es.8:","es.9:","es.dcl:","es.expr:","es.stmt:","es:","escap","esi,","esoter","especi","essenc","essenti","essential,","essential.","establish","estim","etc.","etc.)","etc.).","etc.);","etc.,","etc...","etc.:","evalu","evaluated.","evaluation)","evaluation,","evaluation.","evaluation1.7.10.3.5.","evaluation:","evaluation;","even","event","eventu","eventually).","eventually,","ever,","everybodi","everybody.","everyon","everyone'","everyth","everything\"","everything).","everything.\"","everywher","evil","evil,","evil.","evolut","evolv","exact","exactli","examin","examined.","exampl","example),","example).","example,","example.","example.)","example:","example;","example?","examples)","examples,","examples.","examples:","examples;","exce","exceedingli","except","exception","exception&","exception).","exception,","exception.","exception1.7.7.5.4.","exception:","exceptional.","exceptional?\"","exceptions).","exceptions,","exceptions.","exceptions1.12.2.7.4.","exceptions:","exceptions?","excess","exclud","exclus","execut","executable:","execute,","executed).","executed.","execution.","executor","exemplifi","exhaust","exhaustion,","exhaustion.","exhibit","exist","exist,","exist.","exist:","existing,","exists,","exists.","exists;","exit","exit()","exit().","exit.","exit:","exit;","exit?","exiting.","expand","expand_public_wombat_api(foo)","expand_wombat_comparisons(foo,","expansion,","expansion.","expect","expect).","expect.","expectation,","expectations.","expected\"","expected,","expected.","expects()","expects(0","expects(b","expects(height","expects(i","expects(p","expects(x","expects)","expects.","expens","expensive.","experi","experienc","experience,","experience.","experiment","experiment).","experimental))","experimentation.","expert","expert.","expertis","experts,","experts.","explain","explan","explanation.","explanatori","explicit","explicit,","explicit.","explicit1.7.7.5.8.","explicit:","explicitli","explicitly)","explicitly,","explicitly.","explicitly1.7.9.1.3.","explicitly:","exploit","explor","explorer.","expon","exponent);","exponenti","export","expos","exposur","expr","expr;","expr;.","express","expressed:","expression\"","expression,","expression.","expression:","expressions![](./googl","expressions).","expressions.","expressions1.12.13.2.12.","expressions1.12.13.2.6.","expressions1.4.1.2.8.","expressions1.5.1.2.3.","expressions1.6.1.2.4.","expressions1.7.10.3.1.","expressions1.7.10.3.2.","expressions:","extend","extend,","extens","extensible)","extensible,","extensible.","extension)","extension,","extension.","extensions\"","extensions,","extensions.","extensively).","extensively.","extent","extern","extra","extract","extract_date(const","extract_date(date);","extrem","f","f()","f())","f(),","f();","f(*g_p);","f(*my_widget);","f(*p2);","f(*pin);","f(++i,","f(/*t*/)","f(0);","f(0,","f(1,","f(2)","f(2);","f(a","f(a,","f(arg);","f(array","f(a{});","f(b*)","f(b*);","f(bool","f(boost::intrusive_ptr","f(buffer);","f(ccomptr","f(char*","f(char*)","f(char*);","f(complex);","f(const","f(const_cast(p));","f(double);","f(flags);","f(fopen(\"a","f(forward(args)...);","f(fstream&","f(gsl::span","f(i);","f(int","f(int)","f(int);","f(int*","f(int*);","f(int**)","f(int*[])","f(j);","f(make_unique(),","f(my_widget);","f(new","f(not_nul","f(nullptr);","f(p.get());","f(q);","f(shared_ptr&","f(span","f(span)","f(stack_widget);","f(std::vector&","f(string&","f(string&&","f(t","f(t&","f(t);","f(t*,","f(this);","f(unique_ptr(new","f(v,","f(vector&","f(void)","f(void);","f(void*).","f(void*);","f(widget&","f(x);","f(zstring","f({2*pi,","f)","f);","f,","f.","f.15:","f.16","f.16:","f.17:","f.18","f.18).","f.18.","f.18:","f.19).","f.19.","f.19:","f.1:","f.20,","f.20.","f.20:","f.21:","f.22:","f.23:","f.24","f.24:","f.25","f.25:","f.26:","f.27:","f.2:","f.3:","f.4.","f.42:","f.43.","f.43:","f.44:","f.45:","f.46:","f.47.)","f.47:","f.4:","f.50:","f.51:","f.52:","f.53:","f.54:","f.55:","f.5:","f.60:","f.6:","f.7:","f.8:","f.9:","f.call:","f.def:","f.read(buf,","f1","f1()","f1();","f1(const","f1(czstring","f1(e","f1(int","f1(int)","f1(int);","f1(int*","f1(n::x&","f1(span","f1(std::byte*","f1(zstring","f1a()","f2","f2()","f2())","f2();","f2()}","f2(array","f2(e","f2(int","f2(int)","f2(int*","f2(n::x&","f2(new","f2(string","f2(zstring","f3","f3()","f3();","f3(array","f3(double)","f3(double);","f3(int","f3(int);","f3(int*","f3(make_unique(n),","f3(n::x&","f3(unique_ptr,","f4()","f4();","f4(const","f4(int","f4(span);","f4(span{v});","f4(v);","f4(vector&);","f5(int","f6(int","f7","f7(int","f:","f;","fac().","fac(int","face","face,","facebook:","facet","facil","facilit","facilities)","facilities).","facilities,","facilities.","facilities1.7.15.9.6.","facilities?","facility,","facility.","facility:","fact","fact,","facto","factor","factori","factorial(int","factorial:","factories.","factors.","factory(2)]","factory(int","factory.","fade","fahrenheit:","fail","fail,","fail.","fail1.7.7.4.7.","fail1.7.7.7.6.","failed!","failed,","fails,","fails.","fails;","failur","failure,","failure.","failure:","failures)","failures.","fair","fairli","fake","fall","fallthrough","fallthrough.","fals","false)","false);","false,","false.","false;","famili","familiar","famou","faq","faq,","faq.10:","faq.1:","faq.2:","faq.3:","faq.4:","faq.50:","faq.51:","faq.52:","faq.53:","faq.54:","faq.55:","faq.56:","faq.57:","faq.58:","faq.59:","faq.5:","faq.60:","faq.6:","faq.7:","faq.8:","faq.9:","faq:","far","far,","far.","fashion","fashion,","fashion.","fast","fast),","fast.","fast;","faster","faster)","faster):","faster,","faster.","faster/easi","fastest","fat\".","fatal","favor","favorit","fbb71ef","fclose(f);","fclose(input);","fclose);","fct();","fct(string&","fear","feasibl","feasible)","feasible)1.7.15.5.6.","feasible,","feasible.","feasible..","featur","feature,","feature.","feature?","features,","features.","features/graphs/contributor","features1.12.2.7.1.","features1.4.1.2.1.","features1.4.1.3.1.","features1.5.1.2.1.","features1.5.1.3.1.","features1.6.1.2.1.","features1.6.1.3.1.","features:","features;","features?","feb","feb,","feedback.","feel","fenc","fertil","fetch","few","few,","few.","fewer","fewer.","fib10","field","field.","field_(other.field)","field_;","fighter","figur","file","file\"","file\")","file\");","file\",","file\"};","file(s)","file)","file).","file*","file,","file.","file.h:","file.init();","file.read();","file1.c","file1.cpp","file1.cpp:","file1.h:","file2.c","file2.cpp","file2.cpp:","file2.h:","file3.h:","file:","file;","file_handl","file_handle::file_handle(const","filenam","filename.","files),","files).","files,","files.","files1.12.2.2.1.","files1.7.18.","files:","filesystem","fill","fill();","fill(b,","fill(b.begin(),","fill(package&);","fill,","fill_color;","final","final)","final,","final.","final1.7.7.11.4.","final;","final_act","final_action(a","final_action.","final_action{act};","final_action{f}","finalize(intermediate,","finally()","finally([]{","finally([f]","finally([p]","finally(a","finally(f)","finally,","finally.","find","find(begin(v),","find(int","find(it","find(map&","find(node*","find(span","find(t","find({vec.begin(),","find,","find.","find_all(buf,","find_all(const","find_id(const","find_if(v,","find_if(vr.begin(),","find_index(vector&","fine","fine,","fine.","finish","finished.","finished:","finished;","finit","fire","fire.","firmer","firmli","first","first()","first();","first(firstname),","first,","first.","first1,","first2,","first;","first?","first_month","first_month;","firstname,","firstvers","fit","fit.","fits.","five","five\"","five).","fix","fix,","fix.","fix1.patch","fix:","fixtur","flag","flag\");","flag)","flag1","flag1,","flag1;","flag2)","flag2);","flag;","flagged,","flagged.","flags,","flags.","flat","flatli","flaunt","flavor","flawed,","flawed.","flexibility.","flexibl","flexible,","fli","flight","float","floats,","flood","flow","flt_radix","fluent","flush()s.","flush.","flush;","fmt)","fn","focu","focus","focus.","fold","fold.","folder","folding)","folding.","folds.","folk","folklore.","follow","follow,","follow.","followed,","following.","following:","follows:","foo","foo&","foo&).","foo&);","foo'","foo()","foo()),","foo();","foo(0)","foo(char*)","foo(char*);","foo(const","foo(doubl","foo(foo&&","foo(foo&&);","foo(foo)","foo(int","foo(int)","foo(int);","foo(null);","foo(nullptr);","foo(p1);","foo(std::round(x));","foo(std::shared_ptr","foo)","foo).","foo,","foo.","foo.cc","foo.cpp","foo.cpp.","foo.cpp:","foo.foo;","foo.h","foo.h'","foo.h:","foo.length()","foo/src/bar/baz.h","foo::act","foo::bar::bar*;","foo::operator=(const","foo::operator=(foo&&","foo;","foo_bar","foo_bar.cc,","foo_bar.h","foo_bar_baz_h_","foo_bas","foobar","foobar(int);","foobar.","foobar.h:","foobar_error;","foobar_error};","foobuild","fooconsumer(std::unique_ptr","foofactory();","fool","foolproof","foo{}","foo{};","fopen(\"a","fopen()),","fopen(const","fopen(name,","fopen,","fopen/fclose,","for\"","for,","for.","for:","for_each","for_each(par,","for_each(v,","forbid","forbidden","forbidden).","forbidden:","forc","fore,","foreign","forev","forever.","forget","forgetting...","forgot","forgotten","forgotten.","fork","form","form,","form.","formal","formal,","format","format,","format1.12.13.2.16.","format1.12.13.2.8.","format:","format='%(refname:short)'","formatting.","formatting1.12.13.2.1.","formatting1.12.13.2.18.","former","former,","forms)","formul","formula","formulation:","forth)","fortunately,","forward","forward(typenam","forward(x)","forward)","forwarder(t&&","forwarding\".)","forwarding)","forwarding,","forwarding.","forwarditer","forwards.","for~mat~ting.","foster","found","foundat","foundation'","foundation,","foundation;","four","fourth","fp","fp;","fp_up","fprintf(connection,","fragil","fragment","fragments.","frameworks.","freaki","free","free\"","free()","free()1.7.9.1.2.","free(p);","free(p2);","free,","free.","free_slot","free_slots.","freed),","freedom","freeli","freely.","freestand","french","frequent","frequent)","frequent,","frequently)","fri,","friend","friendli","friendly),","friendly).","friendly.","friends1.12.2.7.3.","friendship","frobber.h)","frobnic","frobnicate(foo);","from).","from,","from.","from_json(const","from_lin","from_redi","from_redis(std::vector","from_redis1.3.2.3.","front","front\".","front()","fruit*","fruits.","frustrat","fs","fs(\"foo\");","fs,","full","fulli","fun","fun!","fun(make_shared(a,","fun(shared_ptr","fun(shared_ptr(new","fun(sp1,","fun.","func","func(foo","func(zstr","func({42,","func1(","func1(val);","func1_muon(doubl","func1_muon(val,","func1_tau(","func1_tau:","func2(intermediate);","funct1_tau(doubl","function","function!","function'","function)","function)1.7.6.2.22.","function,","function.","function/class/vari","function1();","function1.7.10.2.","function1.7.15.6.6.","function1.7.7.7.5.","function2();","function:","function;","function?","function_that_throws(),","functionality,","functionality.","functioncall({foo,","functions![](./googl","functions\"","functions)","functions).","functions,","functions.","functions/typ","functions1.12.2.2.5.","functions1.12.2.5.1.","functions1.12.2.5.3.","functions1.4.1.2.19.","functions1.4.1.2.20.","functions1.4.1.2.24.","functions1.5.1.2.7.","functions1.7.10.3.15.","functions1.7.6.1.","functions1.7.6.1.2.","functions1.7.6.1.9.","functions:","functions;","functor","fundament","fundamental,","fundamentally,","further","further,","furthermore,","futur","future).","future,","future.","futures,","fwd_iter","fx","f{name};","g","g(&a[0]);","g()","g())","g();","g(a);","g(av.data(),","g(const","g(int","g(int*","g(p.get());","g(shared_ptr);","g(unique_ptr);","g(y);","g);","g,","g.","g1","g1(a);","g1(span","g1_error;","g1_error};","g2","g2(int","g2))","g2;","g2_error;","g2_error};","g3(int","g;","g_p","g_p;","gabriel","gadget","gadget&","gadget(args);","gadget(s);","gadget*","gadget.status())","gadget.zip();","gadget:","gadget_construction_error;","gadget{n};","gain","gap","garag","garbage).","gargantuant","gargantuantable.","gargantuantableiter","gargantuantableiterator*","gather","gathering,","gcc","gcc'","gcc,","gcc.","gch","gch;","gchandl","gchandle::alloc(fp);","gcnew","gear","gener","general)","general),","general,","general.","generality.","generality:","generalization.","generalize.","generalized,","generally,","generally.","generate.","generate_first_string(buffer,","generate_second_string(buffer,","generated)","generator();","generic,","genuin","geometr","geometric_attribut","geometric_attributes.","geosoft.no:","get","get()","get().","get(int","get(t&","get(v);","get.","get_bar()","get_bar_impl(*this);","get_bar_impl(t&","get_hardware_memory_location();","get_id()","get_large_vector()","get_large_vector();","get_shape(istream&","get_str()","get_string(cin);","get_string(istream&","get_val()","get_val(int","get_value()","get_value();","get_wheel(size_t","get_x()","get_y()","getc())","getenv(),","getiterator()","getline()","getline(cin,","getline(cin,s);","getnofiydelegate(char","getnofiydelegate(getnotifymsg);","getnofiydelegate^","getpid())","gets()","gets_s(),","getter","getter/sett","getupgradedelegate(getupgrademsg);","getvaluecopy()","getvalueref()","getversion()","getx","getx()","getx();","getxref","getxref();","gflag","gfm","gif","gif图","girou.","git","gitbook最近修改:","gitflow","github","github.","github.com/cplusplus.","github.com/isocpp?","github.com/microsoft/gsl","git子树合并和拆分","git子树合并和拆分1.11.2.","git常用命令集合，fork于tips项目","git是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。","git的奇技淫巧:see_no_evil:","git的奇技淫巧:see_no_evil:1.10.1.1.","git补丁","git补丁git","give","given","given.","glad","glance.","glob","glob;","global","global)","global.","globals,","globals.","glorifi","glossari","glossary1.7.31.","go","go!\"};","go\"}};","goal","goal,","goal.","goe","gone","good","good,","good:","good_user.cc:","goof","googl","google'","google_c++_sytle_guid","googler","gotcha","goto","goto.","goto1.7.10.2.8.","goto:","gotten","gotw","govern","gp","gpl).","gplv3","gracefulli","gradual","grammar","grammar![](./googl","grammar,","grammar.","grammar;","granular","graph","graph,","gratuit","great","great,","greater","greater(doubl","greater);","greater_than(7));","greater_than_7(doubl","greater_than_7);","greatest","greatli","greatly.","green","grep","grep.","grep=''","ground","grounds,","group","grow","grown","growth","gsl","gsl'","gsl)","gsl.","gsl.assert:","gsl.concept:","gsl.owner","gsl.owner:","gsl.ptr:","gsl.util:","gsl.view:","gsl:","gsl::finally()","gsl::joining_thread","gsl::joining_thread.","gsl::narrow","gsl::narrow_cast","gsl::not_nul","gsl::owner),","gsl::owner,","gsl::span","gsl::string_span","gsl::string_span.","gsl?","guarante","guarantee,","guarantee.","guarantees,","guarantees.","guard","guard1.12.2.2.3.","guard:","guards)","guards,","guards.","guard{my_mutex};","guess","guid","guidanc","guide)","guide,","guide.","guide1.12.2.","guide1.12.2.2.","guide?","guide???","guide_files/link.png)","guidelin","guideline:","guidelines\"","guidelines,","guidelines.","guidelines1.7.2.","guidelines1.7.21.3.","guidelines?","gval","gx","gx.","gx;","g{n};","h","h()","h(),","h();","h(const","h(int&);","h,","h.","h1","h1.get();","h2","h2.get();","h3","h3.get();","h;","habit","hadn't","half","half.","hall,","hamper","hand","hand,","hand;","handcod","handi","handl","handle,","handle.","handle1.7.28.1.3.","handle1.7.28.1.4.","handle:","handle;","handled).","handled.","handled?","handler","handlers\".","handlers)","handles)","handles).","handles)1.7.28.1.6.","handles,","handles.","handles1.7.7.9.","handling,","handling.","handling1.7.14.","handling???.","handwritten","handwritten).","happen","happen\"","happen.","happening,","happens)","happens.","happi","hard","hard,","hard.","hard:","hardening.","harder","harder.","hardest","hardwar","hardware\",","hardware).","hardware,","hardware.","hardware/compil","harm","harm\"","harm.","has.","has_divide;","has_equ","has_minu","has_multipli","has_not_equ","has_not_equal;","has_plu","has_plus;","hash","hash.","hash_map","hash_map)","hash_map;","hash_tbl","hasher","hasher,","hashes.","have","have)","have,","have.","haven't","hazard","hazard.","hazardous,","hazardous.","head","head,","head.load();","head;","head^","header","header'","header)","header,","header.","header:","header[16];","headers).","headers,","headers.","headers1.12.2.2.2.","headers;","head~3","heap","heap),","heap,","heap.","hear","heard","heart'","heartbeat","heartbeat();","heartbeat,","heat","heavi","heavili","heed","height","height*width;","height,","height;","height_width);","held","held,","held.","hello","help","help!","help!\"","help,","help:","helper","helper(first,","helper(i);","helper(t)","helpful,","helpful.","henc","hence,","henricson","herb","here","here'","here).","here,","here.","here;","here?","here?)","herein","hesit","heterogen","heurist","heuristic.","heuristic:","heuristics,","heuristics.","hex","hidden","hidden/abstracted.","hide","hidebound","hiding.","hiding:","hier:","hierarch","hierarchi","hierarchies,","hierarchies.","hierarchies1.7.7.1.","hierarchies1.7.7.1.2.","hierarchies:","hierarchies;","hierarchies?","hierarchy,","hierarchy.","hierarchy1.7.15.7.2.","hierarchy1.7.7.13.1.","hierarchy:","hierarchy:1.7.7.11.1.","high","high\")","higher","higher,","highest","highli","highlight","hinder","hinder).","hint","hint);","histor","histori","history.","hit","hmset/hgetall(非数组)","hmset/hgetall(非数组)1.3.2.1.","hnd","hnd;","hnd?","hoc","hoc,","hoc.","hoisting,","hold","hold.","holds,","holds.","home","homegrown","homogen","hope","hopefulli","horizont","horrendous.","horribl","horror!","host","how.","how/when","how:","how?","however,","however:","however;","hpl","html","htonl(inaddr_broadcast);","htons(5555);","http://www.open","http_server_logs.h","https://github.com/anthonycalandra/modern","https://github.com/user/repo.git","huge","human","human()","human,","humans.","humans;","hundr","hungarian","hurry,","hurry.","hyslop.","i'm","i(0,","i)","i);","i){","i++)","i++;","i,","i.10:","i.11:","i.12:","i.13:","i.1:","i.22:","i.23:","i.24:","i.25.","i.25:","i.26:","i.27:","i.2:","i.30:","i.3:","i.4:","i.5","i.5:","i.6:","i.7","i.7:","i.8:","i.9:","i.??.","i.e.","i.e.,","i/o","i/o,","i/o.","i/o1.7.18.3.4.","i0","i1","i1;","i2","i:","i;","i_give_up{information};","iconnectret","id","id()","id();","id)","id++;","id,","id.","id;","idea","idea.","idea:","idea;","ideal","ideal:","ideally,","ideals):","ideals.","ideas)","ideas,","ideas1.7.20.","ideas:","ident","identifi","identifier:","identifiers:","identity(\"foo\");","identity(3);","identitycast)","idiom","idiom,","idiom.","idiom:","idiom?","idiomat","idioms,","ids.","id。","id之后的所有commit","id版本的内容","id的状态，暂存区和工作区也会变为指定commit","id：输出命令：git","ieee","if\")","if(condition)","if(condition){","if(strcmp(p1,","if,","if.","if/when","if1.6.1.2.12.","if_you_must_pun(int&","ifdef","ifstream","ifstream)","ifstream{argv[2]};","ifstream{p}}","ignor","ignorance.","ignored),","ignored,","ignored.","iheaderlen,","ii","ii)","ii,","ill","illustr","im","im(i)","im;","imag","imag()","imagin","imaginari","imbue(),","imit","immedi","immediate,","immediately,","immensely.","immort","immortal*","immortal{};","immut","immutability1.7.15.","immutable,","immutable_str","immutable_string(const","impact","impacted.","imper","imperfectli","impl","impl(int","impl::circl","impl::shap","impl::smiley","impl;","implement","implement,","implement.","implementation(s).","implementation,","implementation.","implementation:","implementation;","implementations).","implementations,","implementations.","implementations;","implemented.","implementers.","implementor","implements,","impli","implic","implicit","implicit,","implicit.","implicit;","implicitli","implicitly)","implicitly,","implicitly.","implied).","implied.","import","important)","important,","important.","importantli","importantly,","impos","imposs","impossible)","impossible.","impoverish","impract","improv","improve).","improve.","improved.","improvement,","improvement.","improvements.","im};","in.","in.0:","in.aims:","in.force:","in.not:","in.sec:","in.struct:","in.target:","in/out","in/with","in2","in2,","in:","inabl","inaccurate,","inadvert","inappropri","inbuf)","includ","include:","includes).","includes,","includes.","includes1.12.2.3.","including:","inclus","inclusion.","incomplet","incomplet,","incomplete,","incomplete.","inconclusive.","inconsist","inconsistent,","incorpor","incorrect","incorrect,","incorrect.","incorrectli","incorrekt,","increas","increment","increment.","increment1()","increment1(int*","increment2(a);","increment2(span","increment2({a,","increment?","incremented\"","incur","inde","indent","indent!","indent.","indent:","indentation.","indented.","independ","independent.","independently,","indetermin","indeterminate,","index","index(const","index)","index2(const","index;","index_","indexing.","indic","indicates)","indicates,","indicator.","indicator:","indicator?","indices());","indices,","indices.","indices.end(),","indirect","indirection.","indirections)","indirections.","indirectli","indirectly)","individu","induct","industri","ineffici","inefficient,","inefficient.","inefficient:","inevitable.","inexpens","inexplicit,","inf)","infeas","infeasible,","infeasible.","infer","inferior","infinit","infinite,","inflex","influenc","influential.","inform","informal,","informal/non","information\").","information,","information.","information1.7.6.2.2.","information:","infrequ","inher","inherit","inheritance).","inheritance,","inheritance.","inheritance1.12.2.4.6.","inheritance1.12.2.4.7.","inheritance1.7.7.11.5.","inheritance:","inheritance;","inherited.","inhibit","init","init()","init();","init);","init.first;","init.second;","init.size()","init_list)","initi","initialization![](./googl","initialization\"","initialization\")","initialization\").","initialization)","initialization,","initialization.","initialization1.7.12.5.5.","initialization1.7.7.5.12.","initialization1.7.7.6.","initialization:","initialization;","initializations.","initialize(),","initialize(systemparam","initialize,","initialize.","initialize:","initialized.","initialized:","initialized;","initializer.","initializer1.6.1.2.11.","initializer;","initializer_list","initializer_list.","initializers).","initializers.","initializers1.4.1.2.26.","initializers1.5.1.2.4.","initializers1.7.7.5.10.","initially,","inject","inl.h);","inlin","inline.","inline1.7.6.1.6.","inline:","inlined.","inlining.","inner","innoc","innocent.","innocent_bystand","innocu","inordin","inp","inp;","input","input)","input,","input.","input/output","input1.7.18.3.3.","input:","input_it","input_iter","inputiter","inputiterator1","inputiterator2","inputrange2","inputs,","inp{new","inquiri","ins.","insensit","insert","insert(position)","insert,","inserted]","insid","insidi","insight","insight.","insist","inspection.","inspir","inspiration.","instanc","instance).","instance,","instance.","instance:","instant","instanti","instantiation.","instantiations.","instead","instead)","instead),","instead,","instead.","instead1.7.7.11.6.","instead1.7.7.5.7.","instead:","instead?","instruct","instrument","insuffici","insul","int","int&","int&&","int&:","int&`","int&`.","int(ch);","int(d);","int(lng);","int(p);","int(x)","int)","int);","int*","int*)","int,","int.","int.\"","int16_t,","int16_t.","int32),","int32_t.","int64","int64_t","int64_t,","int64_t.","int64_t/uint64_t","int64{1}","int64{x}).","int:","int;","int>::valu","int[10];","int[12];","int[700];","int[initial_size];","int[n]);","int[n],","int[n];","int`","integ","integer.","integer:","integers,","integers.","integr","integral,","intellig","intend","intended)","intended.","intended?","intent","intent,","intent.","intention","inter","interact","interaction,","interchang","interchangeable.","interest","interest,","interesting,","interesting.","interfac","interface)","interface)),","interface,","interface.","interface/declar","interface1.7.15.8.","interface:","interface;","interfaces)","interfaces,","interfaces.","interfaces1.12.2.4.8.","interfaces1.7.15.5.1.","interfaces1.7.6.","interfaces1.7.7.11.11.","interfer","interior,","interiorwrappinglist2}};","interleav","interleaved.","intermedi","intermediate);","intermediate;","intermingl","intern","internal,","internal/nonexport","internationalization,","interoper","interoperability.","interpret","interrelated.","intersect(t*","interv","interven","intimid","into\"","intptr","intptr_t","intrins","introduc","introduce.","introduct","introduction1.7.3.1.","intrus","intrusive_ptr","intrusive_ref_counter).","ints,","ints.","ints?","inttypes.h","inttypes.h):","intuit","int{7};","int{ch};","int{d};","int{lng};","int{p};","inum).","invalid","invalid_data{};","invalidation.","invari","invariable.","invariant)","invariant).","invariant,","invariant.","invariant1.7.7.5.2.","invariant:","invariant;","invariants)","invariants,","invariants.","invent","investig","invis","invisible,","invit","invoc","invocations.","invok","invoke(f","invoked).","invoked,","invoked.","invoked;","involv","involved,","involved.","involves:","ios_base::sync_with_stdio(false)","ios_base::sync_with_stdio(false)1.7.18.3.5.","ios_base::sync_with_stdio(false);","iostream","iostream1.7.18.3.1.","iostreams:","ip","iptv","irregular","is)","is);","is,","is.","is1.12.13.1.","is:","is_contigu","is_contiguous::value;","is_sign","is_valid()","isfirstversion()","isintegral()","isn't","isn't.","iso","iso.org.","iso/iec","iso:","isocpp","isocpp.org","isok();","isol","isolation.","isolation.)","isolation:","isorc","issu","issue,","issue.","issues,","issues.","istablefull();","istream","istream&","istream'","istream()","istream(zstr","istream*","istream,","istringstream{argv[2]};","istringstream{p}}","isvalid()","it!","it\";","it'","it)","it),","it).","it):","it,","it.","it1.7.10.1.11.","it;","it?","item","item\",","item\"};","item'","item)","item,","item.first;","item.second;","item;","items.","iter","iter)","iter++;","iter,","iter;","iteration.","iteration:","iterator)","iterator*","iterator,","iterator.","iterator:","iterator;","iterators,","iterators/point","iterators;","itself","itself)","itself,","itself.","itself:","itself;","i{1}","i{ii}","j","j();","j)","j,","j.","j.at(\"address\").get();","j.at(\"age\").get();","j.at(\"name\").get();","j;","j]","jack","jan","januari","jason","java","java).","java,","jet","jiangang","jj","job","job,","job.","join","join()","join(const","join1.3.2.6.","join;","joining_thread","joins,","joins.","joint","journal,","jsf++.","jsf++:","json","json&","json{","judgement.","judgment,","judici","judiciously.","juhl","jul,","jump","jun,","justifi","j{jj}","k","k&r","kb","kb)","kbar)","kcircle:","kdaysinaweek","keep","kenumnam","kept","kerrormalformedinput,","kerroroutofmemory,","key","key.","keyboard).","keynot","keynote,","keynote.","keys,","keytype&","keyvalu","keyvalue.end(),","keyword","keyword,","keyword.","keywords.","kfoo)","kilometers,","kind","km","knew","know","knowledg","knowledge.","known","known,","known.","knows,","knumtestcas","koenig","kok","ktriangle:","l","l\"\\\\\\\\\");","l\"baz\"","l()","l0))","l1","l1);","l2","l2);","la","label","labels.","lack","laden","lakos.","lambda","lambda\")","lambda'","lambda();","lambda)","lambda,","lambda.","lambda1.6.1.2.6.","lambda1.7.7.15.","lambda2","lambdas)","lambdas).","lambdas,","lambdas.","lambdas.)","lambdas1.7.7.10.","lane","lang_cxx11","lang_cxx11.","languag","language\")?","language)","language).","language):","language,","language.","language/librari","language:","languages,","languages.","larg","large):","large,","large.","large.\"","larger","largest","last","last(lastname),","last)","last,","last.","last1,","last2,","last;","last_month","last_one)","lastname)","lastname);","last{elem}","late","latenc","latency),","latency.","latent:","later","later)","later).","later,","later.","latter","latter,","latter.","lattic","lavavej","law","layout","layout.","lazily:","lck","lck(mtx);","lck(my_lock);","lck1(m1);","lck1(m1,","lck2(m2);","lck2(m2,","lcsd05.","lead","leads.","leak","leak(int","leak)","leak,","leak.","leak:","leaked.","leaks)","leaks),","leaks).","leaks,","leaks.","learn.","learned,","leav","led","left","left)","leftmost","legaci","legal","legal)","legal,","legitim","length","length()","length(const","length(not_nul","length(nullptr)","length(nullptr);","length(p)","length(record*","length(s)","length(zstr","length);","length,","length.","length1.12.13.2.2.","length_of_string(const","lengthen","less","less)","lesst","let","letter","letter,","letters.","level","level):","level,","level.","level1.7.7.11.10.","level:","levels.","lgpl,","li;","liabl","lib","liber","liberating.\"","librari","librarian","libraries'","libraries)","libraries,","libraries.","libraries1.7.27.","libraries:","library\")","library)","library)?","library,","library.","library1.7.15.10.","library1.7.18.1.","library1.7.18.6.1.","library1.7.23.1.","library:","library_foobar_h","licens","license.","license1.4.1.","license1.5.1.","license1.6.1.","lie","life","lifecycl","lifetim","lifetime,","lifetime.","lifetime.1:","lifetime:","lifetimes.","light","lightweight","like","like\"","like,","like.","like:","likelihood","likely)","likely,","likely.","likewise,","limit","limit.","limited.","line","line\"};","line,","line.","line:","linear","linear)","lines).","lines,","lines.","lines:","lingo","link","link(data,","link*","link*;","link_bas","link_base*","linkag","linker","linker.","linker:","linking.","links)","links.","link{e});","linux","list","list\"","list\".","list)","list,","list.","list1.6.1.2.5.","list2","list:","list;","list_bas","list_base_hook","listdevadded;","listdevsearched;","listed,","lists.","lists1.12.13.2.17.","lists1.4.1.2.5.","lists1.7.15.9.","lists:","list{","list},","liter","literal,","literal.","literal:","literals,","literals.","literals1.4.1.2.16.","literals1.5.1.2.2.","literals1.6.1.2.13.","literals;","literatur","literature1.7.12.5.4.","litter","littering!.","littl","live","lk(mx);","ll","llvm.","lng)","load","load[2024","load_record(const","load_record(name);","loads/stores,","local","local)","local,","local.","local;","locales.","localization,","localized)","localized.","locally,","locally.","locals.","locat","location.","locations,","lock","lock()","lock()/unlock()","lock()/unlock()1.7.12.1.2.","lock():","lock(action_mutex);","lock(m1,","lock(m2,","lock(mx);","lock,","lock/unlock,","lock_guard","lock_guard,","locked,","locked.","locking,","locking1.7.12.6.","locks,","locks.","lock{mx};","log","log(sqrt(d","log_call(typeid(f));","logged.","logger.error(u8\"to_redi","logic","logic)","logic.","logical,","logicaland(args...","logicaland(b,","logically,","logs,","logs.h.","log中显示gpg签名","log中显示gpg签名1.10.1.64.","log中查找相关内容","log中查找相关内容1.10.1.72.","log，最上面那行commit","lomow,","long","long).","long*)&d;","long,","long.","long/clutteri","long`","longclassname::reallyreallyreallylongfunctionname(","longer","longer,","longer.","longer1.7.10.1.4.","longish","longish,","longjmp","longjmpand","longlong_max","longstand","look","looking.","lookup","lookup.","lookup_t","lookup_table[a]","lookups,","loop","loop\"","loop,","loop.","loop:","loophol","loops,","loops.","loops1.4.1.2.21.","loops1.7.10.2.14.","loops1.7.10.2.9.","lose","loss","loss.","lossi","lost","lot","lots_of_work();","love","low","lower","lower(zstr","lower_bound","lower_bound(forwarditer","lowercas","lowercase,","lowercase.","lowest","lpctstr.","ls","ls;","lsp","lst","lst1;","lst2;","lst;","luckily,","lurk","lvalu","lvalue.","lvalue:","lvalues),","lvalues.","lvalues/rvalu","lvalues:","m","m(f1(),","m)","m));","m);","m,","m.","m.extract(2);","m.insert(std::move(e));","m.insert_or_assign(k,","m.lock();","m.unlock()","m/s2","m1","m1);","m1.swap(rhs.m1);","m1;","m1{++x}","m2","m2);","m2;","m2{i},","m3","m3.","m3;","m;","m[mt]","m_;","m_cb","m_cb;","m_csocket_devsearch.socket_bind((sockaddr*)&servaddr,sizeof(servaddr));","m_csocket_devsearch.socket_create(af_inet,sock_dgram,ipproto_udp);","m_csocket_devsearch.socket_open();","m_csocket_devsearch.socket_recvfrom(recvbuf,","m_csocket_devsearch.socket_sendto(&searchdevicemsg[0],","m_csocket_devsearch.socket_setblocking();","m_csocket_devsearch.socket_setsockopt(sol_socket,so_broadcast,(char*)&optval,sizeof(bool));","machin","machine\".","machine'","machine)","machine,","machine.","machineri","macintosh","macintosh:","macro","macro,","macro.","macros!","macros,","macros.","macros:","macros;","made","made,","made.","magic","magic1.12.2.6.1.","magic](https://google.github.io/styleguide/cppguide.html","magnet","magnitud","magnitude*unit;","magnitude;","mail","mail文件","main","main()","main()1.7.6.2.20.","main(int","main),","mainframes;","mainli","maintain","maintain,","maintain.","maintainability.","maintainable,","maintained,","maintained:","maintainers,","maintainers.","maintaining,","mainten","maintenance).","maintenance,","maintenance.","major","make","make()","make();","make_gadget(17);","make_gadget(int","make_gadget(n);","make_pair(\"tokyo\",","make_pair(\"tokyo\"s,","make_related_widgets(bool","make_related_widgets(cond);","make_shar","make_shared()","make_shared();","make_shared(2);","make_shared(7);","make_shared(c,","make_shared.","make_t","make_tuple(1,","make_tuple(status,","make_uniqu","make_unique()","make_unique();","make_unique(1,","make_unique(12);","make_unique(7);","make_unique(9);","make_unique(99);","make_unique(d);","make_unique(heartbeat);","make_unique(is);","make_unique(n);","make_unique(s);","make_unique.","make_unique?","make_vector()","makes,","malformed_input","malloc","malloc()","malloc(),","malloc(1,","malloc(10","malloc(l1","malloc(sizeof(int)","malloc,","man","manag","manageable.","management)","management,","management.","management1.7.9.1.","manager'","mandatori","mandatory.","mani","manifest","manifest,","manipul","manipulate(record&","manipulation.","manipulation1.7.10.1.19.","manipulation1.7.10.4.3.","manipulation1.7.15.1.5.","manner","manner.","manual","manual.","manually.","manuals1.7.21.7.","many,","many.","many?","map","map&","map.","mar,","margin.","mark","markdown","marshal","marshal::getfunctionpointerfordelegate(fp);","marvel","master","master'","master(istream&","mat::matrix&);","match","match.","materi","material,","material.","materials1.7.21.8.","mathemat","matrix","matrix&","matrix.","matrix[rows][cols];","matter","matter,","matters.","matters:","matur","maul()","maul(aa);","maul(fruit*","maul2(&va[0]);","maul2()","maul2(fruit*","maul2(va);","max","max(0,","max(int","max);","max_exp","max_slots;","maxelem,","maxim","maximum","maximum.","maxstring,","may,","may_share(const","mayb","maybe,","maybe:","maze","me\"","mean","mean?","mean_time_between_failur","meaning","meaning,","meaning.","meaning1.7.7.14.9.","meaning;","meaningful.","meaningful/correct","meaningful/us","meaningful:","meaningfulli","meaningfully,","meaningfully.","meaningless","meaningless.","means.","means:","meant","measur","measure!","measure()","measure(obj1);","measure(obj2);","measure(obj3);","measure(obj4);","measure.","measurements.","measuring;","mechan","mechanically,","mechanism,","mechanism.","mechanism;","mechanisms,","mechanisms.","meet","mem(int","member","member)","member,","member.","member;","members'","members)","members).","members,","members.","members:","members;","membership","memcmp","memcmp(a.data(),","memmov","memoization,","memoized.","memor","memori","memorized.","memory)","memory,","memory.","memory1.7.12.6.2.","memory1.7.7.15.2.","memory;","memory?","memory_order_release);","memset(&data,","memset()","memset().","memset(a.data(),","memset(buffer,","mention","mention:","mentioned,","mentioning.","mere","merg","merge\"","merge()","merge(in1","merge(inputiterator1","merge(inputrange1","merge,","mergeable{in1,","merging:","mess","mess.","messag","message)","message,","message;","messages:","message{m}","messi","messier","messier,","messy,","messy.","messy:","met","met,","met.","meta","metafunct","metaprogram","metaprogram.","metaprogramming,","metaprogramming.","mete","meter","meters()","meters,","method","method(s)","method).","method,","method.","methods,","methods.","meyers'","meyers.","meyers01","meyers05","meyers15","meyers96","meyers97","meyers:","microbenchmark","microsoft","microsoft'","microsoft,","microsoft.","middl","middle,","middleware),","migrat","mill?","millimeters,","million","millisecond","milliseconds?","milliseconds_to_blink","mimic","min(int","mind","mind.","mind:","mine","minim","minimal&);","minimal&,","minimal,","minimum","minimum,","minor","minu","minut","mirror","misguided.","mislead","mismatch","misnomer,","misread","misread.","miss","miss.","missing,","missing.","mission","misspel","mistak","mistake)","mistake.","mistake:","mistake?).","mistakenli","mistakes.","mistakes.\"","mistakes:","misunderstand","misunderstood","misus","misuse)","misuse.","misused),","misused,","misused.","mit","mitig","mix","mixed参数。","mixes.","mixin","mixtur","mixtures,","mkdir","mlock))","mm","mm)","mm,","mmap","mmap_budget","mo.getvaluecopy();","mo.getvalueref();","mo.valu","mo;","mocks.","mod","mode","mode)","mode);","mode.c_str())}","model","model\",","model.","model1.4.1.4.","models).","models:","moder","modern","modern,","modernizing/rejuvenating/upgrading.","mode};","modif","modifi","modification,","modified,","modified.","modify();","modify,","modify.","modify1","modify1(string);","modify2","modify2(shared_ptr);","modul","module,","module/system","modules.","modulo","moment.","mon,","money,","monitor","monitor.","monolith","month","month()","month();","month)","months,","moo.","moonphase_error{};","moral","more","more)","more.","more_data;","moreover,","morgan","most,","mostli","motion,","mov","movabl","movable).","movable.","move","move()","move(f());","move(local_variable);,","move(point","move(s1);","move(t&&","move(x)","move)","move,","move.","move1.7.7.6.1.","move:","move_own","move_owner(q)","moved,","moved.","mover(x&&","moves,","moves.","mozilla","msgtype,","msvc","mtbf","mtx.lock();","mtx.unlock(),","mtx.unlock();","mtx;","mt{","much","much)","muddi","multi","multipl","multiplex","multipli","multiply(int","multiply(int,","multiply.","multithread","munge(const","murray.","must.","must_use_result","mutability,","mutabl","mutable.","mutable:","mutat","mutated,","mutators,","mutators.","mutex","mutex),","mutex,","mutex.lock","mutex.unlock","mutexes,","mutexes.","mutexes1.7.12.1.3.","mx","mx;","my_bar","my_bar;","my_class","my_class&","my_class()","my_code()","my_code();","my_contain","my_func(base&","my_func(derived1&","my_heurist","my_improved_widget","my_inline_function()","my_integer_sequ","my_integer_sequence();","my_interfac","my_lock.lock();","my_lock.unlock();","my_macro_that_scares_small_children.","my_map","my_map;","my_mask","my_mutex","my_mutex.","my_mutex.lock();","my_mutex.unlock();","my_mutex;","my_object;","my_once_flag;","my_polici","my_set,","my_set.insert(\"hello\");","my_typ","my_type;","my_useful_class.cc","my_valu","my_vector&","my_widget","my_widget.transform(x1,","my_x","my_x;","mychar","mychar*/","myclass","myclass&","myclass&)","myclass();","myclass(const","myclass(int","myclass::foo()","myclass::myclass(int","mycontain","mycontainer()","mycontainer(t","myexcitingclass,","myexcitingenum.","myinthash.","mykulou@gmail.com","mymap","mymap.insert(value);","mymap;","mynamespac","myobj","myothertyp","myothertype(int,","myothertype(string);","myproject","myproject/foo_bar.h,","mysteri","myth","myths.","myths1.7.21.","mytyp","mytype&","mytype(std::initializer_list","myusefulclass.cc","myusefulclass_test.cc","myx","myx()","m{","m{\"b\"};","m{2,","m{mm}","m{mm},","m});","m选项表示这个patch要和那个分支比对，每次提交生成一个patch。","n","n&","n(n)","n)","n):","n);","n+1","n,","n.size())","n:","n::","n::operator==()","n::swap","n::x","n::x&","n;","n_comp_conns;","naiv","nake","name","name\");","name\";","name\"};","name(\"som","name)","name),","name);","name,","name.","name1.7.10.2.12.","name:","name;","named)","named.","named_map","names)","names,","names.","names1.12.12.1.3.","names1.12.12.1.4.","names1.12.12.1.5.","names1.12.13.","names1.7.10.1.21.","names1.7.10.1.22.","names1.7.10.1.5.","names1.7.10.1.6.","names1.7.10.1.8.","names1.7.15.5.8.","names:","namespac","namespace\")","namespace).","namespace):","namespace,","namespace.","namespace:","namespace;","namespaces).","namespaces,","namespaces.","namespaces1.12.2.3.2.","namespaces1.4.1.2.25.","namespaces1.6.1.2.9.","name{\"som","name};","naming,","naming.","naming1.12.12.1.1.","nan,","nan.","narr","narrow","narrow(d);","narrow(x)","narrow_cast","narrow_cast(d);","narrow_cast(x)","narrowest","narrowing.","narrowing:","narrowing;","narrowing_error","nasti","nasty.","native回调转托管","native回调转托管1.8.1.3.","natur","naturally)","naturally,","naturally.","naumann","navig","nb:","ne","ne,","ne:","near","nearby.","nearest","nearli","necessari","necessarili","necessary)","necessary).","necessary,","necessary.","necessary:","necessit","need","need\"","need)","need,","need.","need/us","need?","needed)","needed,","needed.","needed1.7.6.2.13.","needed1.7.6.2.18.","needed1.7.7.11.","needed:","needed;","needed?","needless","needlessli","needn't","needs.","nefari","nefarious'","nefarious()","nefarious:","neg","negat","negation:","negative.","negatives,","negatives;","neil","nerr;","ness","ness\",","ness.","nest","net_msg_noteinfo","net_msg_notetype_","network","network.","neuter","neutral","neutral.","never","nevertheless,","new","new!\"","new(&s)","new(&s)(e.s);","new(nothrow)","new(size_t","new)","new,","new.","new/delete.","new1.7.7.13.6.","new:","new;","new[].","newiterator()","newli","newrow","newrow[0]","newrow[1]","news\".","next","next();","next.","next_weekday(date);","nh","nh));","nice","nicola","nielsen\"","nielsen\",","nightmar","nl.10:","nl.11:","nl.15:","nl.16:","nl.17:","nl.18:","nl.19:","nl.1:","nl.20:","nl.21:","nl.25:","nl.26:","nl.2:","nl.3:","nl.4:","nl.5:","nl.7:","nl.8:","nl.9:","nl:","nlohmann::json","nlohmann::json;","nm2","nm:","nm;","no)","no,","no.","no;","no_leak(int","no_leak_simplified(int","nobodi","node","node*","node,","noexcept","noexcept(false)","noexcept,","noexcept.","noexcept1.7.6.1.7.","noexcept1.7.7.5.","noexcept1.7.7.6.8.","noexcept1.7.7.7.7.","noexcept1.7.7.7.8.","noexcept1.7.7.8.","noexcept;","noisi","noisy,","nolint","nolintnextlin","non","non_pod_tag","non_pod_tag)","non_pod_tag;","none","none):","none.","none/one/some/al","nonempti","nongener","nonloc","nonlocal,","nonlocally,","nonmemb","nonmember,","nonneg","nonnegative.","nonobvi","nonobvious,","nonpriv","nonpubl","nonreus","nonsensical,","nonstandard","nonvirtu","nonvirtual.","nonvirtual1.7.7.4.6.","nonvirtual:","nonvirtual;","noreturn","normal","normal.","normally,","normally.","not)","not,","not.","not;","not?","not_","not_nul","not_null.","not_null>)","not_null?","notabl","notat","notation","notation.","notation1.7.15.10.4.","notations,","note","note,","note:","notes:","noth","nothing.","nothrow","notic","notices.","notif","notifi","notification,","notifyclient();","notion","notion,","notions,","nov,","novemb","novic","novices.","now","now,","now.","now;","now?","nowher","nr.1:","nr.2:","nr.3:","nr.4:","nr.5:","nr.6:","nr.7:","nr:","nread)","ns","nuisanc","null","null)","null,","null1.7.10.3.9.","null;","nullptr","nullptr)","nullptr);","nullptr);.","nullptr,","nullptr.","nullptr/nul","nullptr1.4.1.2.11.","nullptr:","nullptr;","nullptr?","nullptr]]","nullptr]].","nullptr_error{}\"","nullptr_error{};","nullptr`,","nullptr}","nullptr};","num","num,","num_dns_connections;","num_entries;","num_errors;","num_events_;),","num_total_entries_;","number","number\",","number()","number,","number.","number:","number;","numbered,","numbers:","numer","numeric_limits::max();","nutshell,","nvi","nw,","nyquist.","n},","n};","o","o'reilli","o(1)).","o(k)","o(log","o(n)","o)","o);","o0","o1","o;","obey","obfusc","object","object\"","object'","object)","object),","object,","object.","object.\"","object/handl","object1.7.10.1.10.","object1.7.6.2.17.","object1.7.6.2.9.","object1.7.7.5.3.","object1.7.9.1.4.","object:","object;","object?","objects\"","objects)","objects),","objects).","objects,","objects.","objects:","objects;","oblig","obscur","observ","observer_ptr","observer_ptr?","obsolete;","obstacl","obtain","obviou","obvious","obvious);","obvious,","obvious.","obvious:","obviously,","occasion","occasionally,","occupi","occur","occur.","occurr","oct","oct,","octob","odd","of\"","of,","of.","of:","off","off\"","off:","offer","offici","ofstream","often,","often.","ok","ok,","ok.","ok:","ok?","okay","ol","old","old)","old.","older","older,","older/differ","oldvers","omit","omitted:","on","on,","on.","on...","on1.7.10.1.15.","on:","onc","once\"","once,","once.","once;","onclick()","one)","one,","one.","one;","ones.","only\"","only\",","only).","only):","only*/","only,","only.","only1.7.15.10.3.","only:","onto","onward","oo","oo01ll","oop","oops,","oopsla'09.","op","opaqu","open","open\"","open(const","open(gate&","open,","open:","open;","open_gate(gate&","open_port(destination);","openfiledialog1","openfiledialog;","openfiledialog^","openfileordie()","oper","operand","operand,","operands.","operands1.7.7.14.10.","operation),","operation,","operation.","operation1.7.6.1.3.","operation:","operation;","operations)","operations,","operations.","operations/algorithm","operations1.7.18.2.7.","operations1.7.28.1.8.","operations1.7.7.3.1.","operations:","operations;","operator\"","operator\"\",","operator&()","operator'","operator()","operator()(args&&...","operator)","operator*();","operator*(const","operator*)","operator*,","operator+(const","operator+(x","operator++(day&","operator,","operator.","operator:","operator=","operator=(a&&","operator=(const","operator=(foo&&","operator=(foo&&);","operator=(std::initializer_list","operator=(vector&&","operator=(vector2&&","operator=(widget&&);","operator=(x&&)","operator=.","operator==()","operator==();","operator==()s;","operator==(const","operator==(date,","operator==(point","operator==(s,","operator==(t1,","operator>>(istream&","operator[](int","operator[](int)","operator[](size_t);","operators,","operators.","operators1.7.6.2.21.","operators1.7.7.14.1.","operators1.7.7.14.3.","operators1.7.7.14.6.","operators:","opinion","opinion,","opinions.","opportun","opportunities)","opportunities.","oppos","opposit","ops.","opt","opt)","optim","optimal:","optimiz","optimization)","optimization).","optimization,","optimization.","optimization:","optimizations,","optimizations.","optimize.","optimized.","optimizer.","option","option.","option1.7.6.2.15.","option:","optional.","options,","options.","options.set_precision_decimals(7);","options.set_use_cache(productoptions::kdontusecache);","options:","options;","or,","or:","order","order,","order.","order1.12.2.5.","order:","ordered,","ordered.","ordered.\"","ordered>;","ordered_contain","ordering,","ordering.","ordering1.12.2.5.2.","ordinari","ordinarily,","organ","organization'","organization.","organizations,","organizations.","orient","oriented,","origin","origin()","origin();","origin/","origin/mast","origin/mybranch","original.","ornate).","orphan","orthogonal.","os","os,","ostream","ostream),","other","other)","other).","other,","other.","other.ptr","other.ptr;","other/futur","other:","other;","other_namespace::foo;","otherclass","others.","otherwis","otherwise\"","otherwise,","otherwise.","ought","ourselv","ourselves)","out","out\"","out)","out,","out?","out_of_memori","outbuf)","outdat","outer","outermost","outlin","outline;","outliv","output","output()","output,","output.","output:","output_data","output_data)","output_path;","outputiter","outputs.","outright","outsid","outweigh","out}","over","overabstract","overabstract.","overal","overcom","overconstrain","overdo","overestimated,","overflow","overflow\"","overflow,","overflow.","overflow1.7.10.4.5.","overflow:","overgeneralize;","overhead","overhead)","overhead,","overhead.","overkil","overli","overload","overload,","overload:","overload;","overloading,","overloading.","overloading1.12.2.4.9.","overloading1.12.2.5.5.","overloading1.7.6.2.23.","overloads.","overlook","overlooked)","overrid","overridden","override,","override.","override:","override;","overrider.","overrider1.7.7.13.","overrides,","overrides1.4.1.2.17.","overus","overused.","overview","overview1.4.1.2.","overview1.5.1.2.","overview1.6.1.2.","overwrit","owens,","own","own)","own,","own.","own;","owned;","owned_shapes.emplace_back(item);","owner","owner!","owner,","owner.","owner1.7.9.2.11.","owner:","owners.","ownership","ownership\"","ownership)","ownership),","ownership).","ownership,","ownership.","ownership1.7.6.2.14.","ownership1.7.9.2.2.","ownership1.7.9.2.3.","ownership:","ownership;","owning).","owning,","owning.","owning1.7.7.4.4.","owns,","p","p'","p(1,","p)","p);","p,","p.","p.10:","p.11:","p.12:","p.13:","p.1:","p.2.","p.2:","p.3:","p.4:","p.50:","p.5:","p.6:","p.7:","p.8:","p.9:","p.address","p.address},","p.age","p.age}","p.first;","p.name","p.name},","p.second","p.second;","p.y,","p1","p1)","p1,","p1.p","p1.p.","p11","p12","p1;","p1{","p2","p2)","p2))","p2,","p2.p","p21","p21.clone();","p22","p3","p3);","p4","p5","p:","p;","p?","p[0]","p[0]..p[n","p[10]","p[1]","p[1].x","p[2]","p[]","p[count++]","p[l1","p[l1]","p[n","p[p.size()","pack","pack()","pack,","packag","packages.","packs,","pad","pad,","padding)","padding.","page","page.","pages)","pages),","pages.","paid","pain","pain.","pair","pair)","pair),","pair*","pair,","pair.","pairs.","pairs...","pairs1.7.9.2.","palo","panacea;","panic!","panic!1.7.3.3.","paper","paper.","paper?","par","par_name1,","par_name2)","par_name2,","par_name3)","paradigm","paradigm:","paragraph","paragraph).","parallel","parallel.","parallel/distribut","parallelism,","parallelism.","parallelism1.7.12.1.","parallelism1.7.12.3.","parallelize),","parallelize,","param)","paramet","parameter","parameter).","parameter,","parameter.","parameter1.7.6.2.5.","parameter1.7.6.2.6.","parameter1.7.9.1.6.","parameter:","parameterize:","parameters)","parameters,","parameters.","parameters.\"","parameters1.7.6.2.7.","parameters:","paranoid","pardo","paren","paren:","parent","parent'","parenthes","parentheses.","parentheses:","parenthesi","parenthesis,","parenthesis.","parenthesize1.7.10.3.3.","parents。","pars","parser","parsing).","parsing,","part","part,","part.","parti","partial","particip","particular","particular,","particularli","partli","parts,","parts:","pass","pass(void*","passed,","passed.","passing,","passing.","passing1.7.12.3.1.","passing1.7.6.2.1.","passing:","passion","passiv","passthrough","past","past,","paste)","paste,","pat)","pat);","patch","path","path.","path/to/fil","paths,","paths.","pattern","pattern,","pattern.","pattern:","patterns),","patterns,","patterns.","patterns.1.7.15.4.5.","paus","pay","pb","pb)","pb1","pb2","pb;","pc","pc_reader;","pd","pd0","pd1","pd2","pd3","pd4","pear","pear?","pear{};","peculiar","pedant","peer","pend","peopl","people'","people),","people,","per","per.1","per.10:","per.11:","per.12:","per.13:","per.14:","per.15:","per.16:","per.17:","per.18:","per.19:","per.1:","per.2.)","per.2:","per.30:","per.3:","per.4:","per.5:","per.6:","per.7:","per:","perceiv","perenni","perfect","perfect).","perfect,","perfect.","perfectli","perform","performance)","performance).","performance,","performance.","performance1.7.12.","performant.","perhap","period","period,","perman","permit","permitted,","permitted:","persist","persist.","persistent,","person","person&","perspect","perspective.","pervas","pessimization.","pessimization;","peter","pfi2","pft2","phase","phase.","philosoph","philosophi","philosophy.","philosophy1.7.5.","phrase","physic","pi","pi(3.14);","pi2","pi3","pi_round","pick","pick.","pick命令，参考","piec","pieces.","pimpl","pimpl.","pimpl;","pimpl{std::make_unique(n)}","pin","pipe.","pipelin","pipeline.","pirkelbauer,","pitfal","pitfall:","pitfalls.","pi{3.14};","place","place,","place.","placehold","placement","places.","places.)","plain","plain).","plain/nak","plainer","plan","plane","platform","platform.","platforms.","plausible,","playername,","playername;","playerprofil","pldi","pleas","please_use_this(&vl);","plenti","plu","plug","plus(x,","plus(xx,","pmk_notify_cb","po","poco","pod","pod.","pod>","pod_tag","pod_tag)","pod_tag;","point","point&","point'","point(int","point);","point,","point.","point.)","point1","point1.7.15.7.","point2","point:","pointed/ref","pointer","pointer\"","pointer\",","pointer\".","pointer'","pointer)","pointer,","pointer.","pointer.\"","pointer/iter","pointer/refer","pointer1.7.10.","pointer1.7.10.4.","pointer1.7.12.1.9.","pointer1.7.9.2.12.","pointer:","pointer;","pointer?","pointers\"","pointers\"?","pointers)","pointers),","pointers,","pointers.","pointers1.12.2.6.2.","pointers1.4.1.3.6.","pointers1.7.10.1.14.","pointers1.7.23.3.","pointers1.7.6.1.8.","pointers1.7.9.2.1.","pointers:","pointlessli","points)","points,","points.","points1.7.7.14.7.","point{10,","poison","polici","policy.","pollut","pollution.","polygon","polygon:","polymorph","polymorphically,","polymorphisms?","pool","pool*","pool,","pool;","pool?","pool_;","poor","pop","popd","popl","popular","popular),","popular,","port","port&","port&)","port(const","port(cstring_span","port;","port?","portability.","portability1.12.3.","portabl","portable,","portable.","portably.","porthandl","porthandle()","portion","ports,","port{destination};","port{open_port(destination)}","pos)","posit","positive(int","positive,","positive.","positives)","positives).","positives,","positives.","positives;","possibility.","possibility.com:","possibl","possible).","possible,","possible.","possible1.7.12.2.","possible:","possible?","possibly,","post","post,","post_initialize()","postcondit","postcondition.","postcondition:","postconditions).","postconditions,","postconditions.","postincr","postiniti","postinitialize()","postinitialize.","postpon","pos};","potent","potenti","pow(flt_radix,","pow(pi,","pow(t","power","power/exponenti","pp","pp)","pp,","pp.","pp1","pp2","pp216","pp3","pp4","ppp","pr.","practic","practical).","practice,","practice.","practices,","practices.","pre","pre;","preced","precedence,","preceding.","precis","precisely,","precision,","precision.","preclud","precompil","precompile.cc),","precompile.h.","precomputation.","precondit","precondition)","precondition).","precondition:","preconditions,","preconditions.","pred);","predecessor","predecr","predecrement1.12.2.7.8.","predic","predicate(*p)","predicate>","predicates)","predicates.","predicate}","predict","predictable.","predictor","pref)","pref;","prefer","prefer:","preferably,","preference,","preference.","prefetch","prefix","prefix.","prefix=lib","preincrement","prematur","prepar","preparation:","preprocess","preprocessor","prerequisites.","prescriptive.","presenc","present","present,","present.","preserv","preserved).","pressur","pressure.","pressures.","presum","presumably,","pretenti","pretti","pretty\"","pretty,","pretty=onelin","prevail.","preval","prevent","prevention.","previou","previous","previously,","pri*","price_count_reader;","prid","prid64","primari","primarili","primit","primitives,","principl","principle)","principle:","principles,","principles.","print","print()","print(auto&","print(const","print(cout,","print(int","print(int);","print(ostream&","print(product_info","print(zstring);","print_based(int","print_color(int","print_color(product_info::blue);","print_color(product_info::red);","print_color(webby);","print_int(1);","print_int(int","print_int(x);","print_string(const","printer","printf","printf'","printf(\"%\"","printf(\"x","printf()","printf().","printf()?","printf(const","printf,","printf.","printf_s()","printi","printing,","prints?","printto().","prio","prior","priorit","priu","priu64","privat","private).","private,","private.","private:","private:.","prix","prix64","pro.bounds:","pro.lifetime:","pro.safety:","pro.type:","pro:","probabl","probably,","problem","problem)","problem).","problem,","problem.","problem:","problem;","problemat","problematic,","problems,","problems.","problems:","proc.","proce","procedur","proceed.","process","process()","process(element);","process(it","process(local);","process,","process.","process_readings(const","processed.","processing,","processor","processor,","produc","produced,","produced?","product","product_info","product_info::red:","productinfo.h","productively.","productivity,","productopt","professionalism,","profil","profile)","profile.","profile1.7.22.2.","profile1.7.22.3.","profile1.7.23.","profiles,","profiles.","profiles1.7.22.1.","program","program)","program,","program.","program:","program;","programm","programmat","programmer'","programmer,","programmer.","programmers\";","programmers).","programmers,","programmers.","programmers:","programming)","programming,","programming.","programming1.7.12.5.1.","programming1.7.15.1.","programming1.7.15.1.1.","programming1.7.17.","programming:","programming;","programs,","programs.","progress","prohibit","prohibited),","prohibition.","project","project'","project(s)","project,","project.","project/src/base/logging.h","project/src/foo/internal/fooserver.cc","project1::foo","project2::foo","projects,","projects.","promin","promis","promises,","promot","promotions/convers","prone","prone).","prone,","prone.","prone:","proof","proof.","propag","proper","proper.","properli","properly,","properly.","properti","properties.","propertiesmap","propertiesmap;","property,","propon","proport","propos","proposal)","proposal,","proposal;","protect","protected,","protected.","protected:","protected:,","proto","protocol","prototyp","provable,","prove","proven","provid","provide.","provided,","providing/us","proxi","proxy(cal","ps","ps.","pseudo","pt)","pt.getx();","pthread_once().","ptr","ptr(x*","ptr);","ptr.","ptr;","ptrdiff_t","ptrdiff_t.","ptr{this};","public","public\"),","public)","public),","public,","public.","public:","public:,","publications.","publicli","publish","pull","pull//head:","pun","punctuat","punctuation,","punctuation.","punning.","punning1.7.8.","pure","pure).","pure.","pure:","pure;","purpl","purple,","purpos","purpose.","purposes,","purposes1.7.10.1.16.","purveyor;","push","push_back,","pushbutton","pushd","pushes,","push，不需要指定远程仓库了。","put","put(const","put(t&&","put(t&)","put_front(const","pv","pv;","python,","python速查","p{","p{a.p}","p{foo,","q","q)","q);","q,","q.front();","q.get());","q.pop_front();","q.push_back(val);","q2","q;","q;)","q?","qqq","qsort","qsort(data,","quad_word","qualif","qualifi","qualification.","qualiti","quality,","quantifi","quarter\"","quarter\"};","queri","question","question),","question,","question.","questions1.7.26.","queue","queue,","quick_exit()","quick_exit(),","quickli","quiet_nan();","quietli","quit","quotient,","q}","r","r();","r)","r);","r,","r.","r.10:","r.11:","r.12:","r.13:","r.14:","r.15:","r.1:","r.20:","r.21:","r.22:","r.23:","r.24:","r.2:","r.30).","r.30.","r.30:","r.31:","r.32:","r.33:","r.34:","r.35:","r.36:","r.37:","r.3:","r.4.","r.4:","r.5:","r.6:","r.alloc:","r.first();","r.first;","r.second(),","r.smart:","r.val;","r.x;","r.y;","r1","r1,","r2","r2);","r2,","r3}};","r:","r;","ra_it","race","race,","race.","races).","races,","races.","races:","rad;","radians)","radic","radiu","radius()","rad{r}","rad{r},","raii","raii).","raii,","raii.","raii.\"","raii:","rais","random","random_access>","randomli","rang","range\"","range:","range?","ranges1.7.15.1.4.","rare","rare)","rare,","rare.","rare;","rarely,","rarely.","rarer","rat'","ratio","ration","rational","rationale,","rationale.","rationale:","rationales)","raw","raw_find()","raw_find(char*","re","re(r),","re;","reach","read","read!","read\",","read\".","read()","read();","read(a);","read(a,","read(cin);","read(int*","read(istream&","read(span","read,","read.","read1(istream&","read2(istream&","read:","read_and_print()","read_and_print(istream&","read_and_print.","read_date(cin);","read_date(istream&","read_header(is);","read_image(somewhere)","read_until(const","read_until(p);","read_until(s);","read_until(ss);","read_until(string_span","read_until(string_view","read_vec(fs,","readability,","readability.","readability:","readability—for","readabl","readable,","readable.","reader","reader\"","reader,","reader.","readers,","readers.","readership","readership1.7.3.2.","readi","readily.","reading,","reads,","real","real()","realist","realistically,","reality,","realli","realloc","realloc(p,","really,","reals,","reals.","reappears.","reason","reason,","reason.","reason1.7.18.4.","reason1.7.7.11.8.","reason;","reasoning,","reasons)","reasons),","reasons,","reasons.","reasons:","reassign","rebas","rec","rec&","rec(const","rec(int","rec2","rec2(const","rec2{","rec::rec;","recal","recapitul","receiv","recogn","recogniz","recognize?)","recognized.","recommend","recommend.","recommend:","recommendations,","recommendations.","recommended,","recompil","recompilation.","recompiled.","record","record*","record,","record;","records)","records.size();","recov","recover","recoveri","recovering,","recruit","recurs","recursion,","recursion.","recursion:","recursive_mutex","recursive_mutex.","recycl","red","red,","redefin","redesign","redi","redraw()","redraw();","reduc","reduct","reduction,","redund","redundant,","redundant.","redundant;","reestablish","ref","ref).","refactor","refactor:","refactored.","refactoring.","refcount","refer","referenc","reference\".","reference\";","reference)","reference),","reference).","reference,","reference.","reference.\"","reference:","reference;","references)","references),","references,","references.","references1.12.2.7.2.","references1.4.1.2.3.","references1.7.21.1.","references1.7.7.13.2.","references1.7.7.14.8.","references:","refin","refined).","refinement).","reflect","reflog","reformat.","refs/heads/","refus","regard","regardless","regex","regex1.7.18.5.","region","region,","regist","register_callback().","registr","regress","regressions.","regular","regular\").","regular,","regular1.7.7.2.","regular:","regularfunct","regularli","rei","reimplement","reimplementation.","reinterpret","reinterpret_cast","reinterpret_cast(&x);","reinterpret_cast(0x800);","reinterpret_cast(pb);","reinterpret_cast.","reinterpret_cast;","reis'","reis:","reiter","rel","relat","related,","related.","relations.","relationship","relax","releas","release,","released!","released\"","released\")","released,","relev","reli","reliability,","reliabl","reliable,","reliably.","relianc","reluct","remain","remaind","remedi","remedies.","remedies:","remedy.","rememb","remember:","remind","remot","remov","remove_reference::type&","remove_reference::type&&","removed.","render","render()","renov","reorder","rep;","repeat","repeatedli","repeatedly;","repetit","repetition.","repetition:","repetitive.","repetitive;","replac","replacement,","replic","replication.","repo","repo.bundl","repo.patch","report","report.","reporting,","repositori","repres","represent","representation,","representation.","republish","request","request.","requir","required,","required.","requirement,","requirement.","requirement:","requirements)","requirements,","requirements.","requirements:","requires(i","requires(node*","requires(t","requires.","res(10000);","res.push_back(s);","res;","research","reseat","reseat(shared_ptr&);","reseat(unique_ptr&);","resembl","reserv","reserve(128)","reserved，pow","reset","reset()","reset(),","resili","resist","resiz","resizable,","resolut","resolution,","resolv","resolved.","resort","resort,","resort.","resourc","resource\"","resource),","resource,","resource.","resource.h","resource1.7.28.1.2.","resource:","resource;","resources\",","resources).","resources,","resources.","respect","respect\"","respectively.","respond","respons","response.","responses.\").","responsibility.\"","rest","rest.","restart.","restor","restrain,","restrict","restriction.","restrictions!","restrictions)","restrictions,","restrictions.","restrictive)","restrictive.","result","result),","result);","result,","result.","result.second)","result;","result;\"","result_typ","results,","results.","resumpt","retain","retention.","rethink","retir","retrofit","retry.","retryable.","return","return(result);","return,","return.","return:","return;","returned,","returned.","returned;","returning.","returns,","returns.","returntyp","reus","reusability,","reusability.","reusabl","reusable,","reusable.","reuse,","reuse.","reuse1.7.15.10.2.","reused,","reused.","rev","revers","revert","review","review,","review:","review?","reviewed,","revis","rewrit","rewrite,","rewritten","rewritten.","rf","rf.books:","rf.c++:","rf.core:","rf.man:","rf.rules:","rf.web:","rf:","rhs)","rhs.m2);","rhythm","right","right)","right,","right.","right;","right?","rigor","risk","risk.","risks.","ritchi","rm","robust","robust,","roll","rollback","rollback,","room","root","rotate(doubl","rotate(int)","rotate(int);","rough","roughli","round(7.2)","round(doubl","round(x)","rounding:","rouquette,","routin","rs.video:","rtti","rtti,","rtti.","rtti:","rude","rule","rule)","rule).","rule,","rule.","rule:","rules!","rules\"","rules).","rules,","rules.","rules1.12.12.1.2.","rules1.12.13.3.1.","rules1.7.12.6.1.","rules1.7.15.10.1.","rules1.7.15.3.","rules1.7.15.4.1.","rules1.7.15.8.1.","rules1.7.21.2.","rules1.7.25.","rules1.7.32.","rules1.7.7.7.1.","rules:","rules:1.7.15.7.1.","rules;","rumin","rumor","run","run_list","run_list.push_back(new","runs?).","runtim","runtime.","runtime_error","runtime_error{\"could","runtime_error{\"file_handle:","runtime_error{\"moon","russian.","rvalu","rvalue)","rvalue):","rvalue,","rvalue:","rvalues)","rvalues,","rvalues.","rvalues:","rvo","rvo,","r参数相当于：remot","s","s&","s&&","s'","s(\"test\")","s(int","s(o.s)","s(std::move(o.s))","s)","s)))","s);","s,","s.","s.c.1:","s.emplace(...);","s.end(),","s.extract(s.begin());","s.rend(),","s.reserve(128);","s.size())","s.~string();","s1","s1'","s1,","s1;","s1{\"hello,","s2","s2)","s2).c_str();","s2,","s2.insert(elementfactory());","s2;","s3","s::f(int","s::operator!(","s;","s;)","sacrific","safe","safe)","safe,","safe.","safe:","safely,","safely.","safer","safer,","safer.","safest","safeti","safety)","safety,","safety.","safety.\"","safety:foo(std::make_shared(),","safety:foo(std::make_unique(),","safety;","said,","same","same(const","same,","same;","sampl","sanit","sarkar,","sat,","satisfact","satisfactori","satisfi","save","say","say,","saying,","says:","scalabl","scalar","scalbn(","scalbn(doubl","scale","scale)","scanf()","scanf_s(),","scatter","scenario","scenarios?","scheme","scheme.","scope","scope)","scope).","scope);","scope,","scope.","scope1.7.10.1.3.","scope1.7.10.3.14.","scope:","scope;","scoped_lock","scopes,","scopes.","scopes1.7.10.1.9.","scoping1.12.2.3.1.","score","scores[x]","scott","scrambl","scratch","scratch.","scream","screen","screen\"","screen).","screen,","screen.\"","screen?","se,","sean","search","search,","second","second,","seconds,","seconds?","section","section),","section,","section.","section1.7.12.1.14.","section:","sections)","sections.","sections1.7.4.","sections:","sections;","secur","see","see,","see.","see:","seek","seek.","seem","seen","seen.","sees.","segments.","sei","seldom","select","selected.","selection.","selection/loop","self","semant","semantics)","semantics,","semantics.","semantics.1.7.15.4.6.","semantics1.4.1.2.2.","semantics1.4.1.2.22.","semantics1.7.15.4.2.","semantics1.7.7.7.2.","semantics1.7.9.2.7.","semantics:","semantics;","semi","semicolon","semicolon,","semicolon.","semiregular","semiregular.","semiregular1.7.15.5.7.","semiregular:","send","send(port,","send(unique_ptr","send(x*","send_packets(buffers&","sens","sense,","sense.","sense:","sensibl","sensit","sentenc","sentinel","sep,","separ","separately,","separately.","seq","seq2","sequenc","sequence,","sequence.","sequence1.7.6.2.11.","sequence:","sequences)","sequences.","sequences1.5.1.3.3.","sequences1.7.18.2.2.","sequences1.7.18.2.3.","sequenti","sergey","seri","serial","serially,","seriou","serious","serv","servaddr.sin_addr.s_un.s_addr","servaddr.sin_famili","servaddr.sin_port","servaddr;","serve.","server","servic","serving,","set","set\"","set(&var);","set(int","set.","set2(3.14);","set:","set_count(int","set_number(int","set_some_var(int","set_text(const","set_unit(doubl","set_x(int","set_y(int","setjmp","setjmp/longjmp","setjmp/longjmp1.7.19.","sets.","sets1.6.1.4.","setter","setters1.7.7.11.7.","setting.","settl","sever","severity)","severity);","severity,","sewell,","sexi","sf.10:","sf.1:","sf.20:","sf.21:","sf.22:","sf.2:","sf.3:","sf.4:","sf.5:","sf.6:","sf.7:","sf.8:","sf.9:","sf:","sfina","sfullpath","shadow","shadowing/hid","shall","shallow","shape","shape();","shape(point","shape,","shape.","shape::move()","shape_own","share","share(shared_ptr);","shared","shared,","shared.","shared_futur","shared_lock),","shared_ptr","shared_ptr&","shared_ptr&);","shared_ptr&.","shared_ptr'","shared_ptr(new","shared_ptr)","shared_ptr,","shared_ptr.","shared_ptr.)","shared_ptr1.7.12.1.10.","shared_ptr:","shared_ptrs,","shared_ptrs1.7.7.13.8.","shared_ptrs1.7.9.2.4.","shared_ptrs1.7.9.2.6.","sharedptrparam","sharing,","shell","shini","ship","shoe\"","short","short)","short,","short.","short.\"","shortcut","shorten","shorter","shorter,","shortest","shorthand","should)","should,","shouldn't","show","shown","shown),","shown,","shutdown","shutdown.","side","side,","sides!","sidestep","sidet","sign","sign(t","signal","signals1.7.13.","signatur","signature.","signed.","signed/unsign","signed;","signedintegr","signifi","signific","significant,","significant.","significantli","signify?","silent","silli","silly&","silly(const","similar","similar)","similarli","similarly,","simpl","simple!\")","simple!.","simple\"","simple)","simple,","simple.","simple1.7.6.1.4.","simple_func(doubl","simple_func:","simple_numb","simpler","simpler,","simplest","simplest,","simplest.","simpli","simplic","simplicity.","simplif","simplifi","simply,","simply.","simul","simultan","simultaneously,","simultaneously.","since='2","singl","single,","singleton","singleton)","singleton.","singletons,","singular","sink","sink()","sink(std::move(w));","sink(std::move(x));","sink(std::unique_ptr","sink(unique_ptr","sink(unique_ptr);","sink(vector&&","sink(w);","sink(x&&","sink(x);","site","site).","site,","site.","site:","situat","situation,","situation.","situations,","situations.","six","six\",","size","size()","size(),","size();","size(strlen(str))","size)","size),","size);","size,","size.","size_t","size_t,","size_t;","sizeof","sizeof(0).","sizeof(apple)","sizeof(data));","sizeof(double)","sizeof(double));","sizeof(double),","sizeof(int)","sizeof(int))","sizeof(int)));","sizeof(int)).","sizeof(int));","sizeof(int).","sizeof(null)","sizeof(pear)","sizeof(recvbuf),","sizeof(servaddr);","sizeof(struct));","sizeof(type)","sizeof(type).","sizeof(varname)","sizeof(void","sizeof...(t);","sizes.","sizes:","size{10,","size{1000};","skeptic","skip","skull@walker:boost_test(master)","sl.1:","sl.2:","sl.3:","sl.4:","sl.c.1:","sl.c:","sl.chrono:","sl.con.1:","sl.con.2:","sl.con.3:","sl.con:","sl.io.10:","sl.io.1:","sl.io.2:","sl.io.3:","sl.io.50:","sl.io:","sl.regex:","sl.str.10:","sl.str.11:","sl.str.12:","sl.str.1:","sl.str.2:","sl.str.3:","sl.str.4:","sl.str.5:","sl.str:","sl:","sleep,","slice","slice,","slice1.7.10.3.18.","sliced.","slicing,","slicing.","slide","slides.","slightli","slightly)","slow","slow,","slow.","slowdown","slower","slower.","slower:","slowest","slowli","sm","small","small\"","small,","small.","small1.7.10.1.2.","smaller","smaller,","smaller.","smallest","smart","smart(er)","smart_ptr","smart_ptr2","smart_ptr3","smiley","smiley,","smoothli","snag","snippet","snippet,","so,","so.","so:","so:foo(std::shared_ptr{","so:foo(std::unique_ptr{","social","societi","sockaddr_in","socket","socket\"","socket)","socket),","socket.send(message);","socket1.8.2.1.","sockets,","softwar","software)","software),","software.","software:","sole","solut","solution,","solution.","solution:","solv","some,","some_condit","some_fct(int*","some_fct.","some_ints);","some_ints,","some_ints_length);","some_map)","some_other_function_parameter);","some_other_var_(var","some_other_var_;","some_var()","some_var_","some_var_(var)","some_var_(var),","some_var_;","somebodi","someflag,","somefunction(","somefunction();","somefunctionthatdoesnothing()","somehow","someinternalfunction();","somelargetyp","someon","someothertyp","someothertype{","someothertype{\"slightli","someth","something\"","something());","something();","something)","something,","something.","sometim","sometimes,","sometyp","somewhat","somewher","somewhere,","sommerlad:","soon","soon.","sooner","sort","sort()","sort();","sort(a,","sort(c&","sort(data,","sort(it","sort(ordered_container&","sort(par,","sort(s&","sort(sortable&","sort(sortable&);","sort(t&);","sort(v,","sort)","sort=","sort?","sortabl","sortable\"","sortable\":","sortable:","sorting.","sought","sourc","source,","source.","sources,","sourcetre","sp1(new","sp1,","sp2);","space","space)","space.","space;","spaces,","spaces.","spaces:","space{elem","span","span):","span,","span.","span:","span_p","spans.","spans:","sparingli","sparingly,","sparingly.","sparingly1.7.7.12.","sparse;","sparse_hash_map","spawn","speak","speak.","special","special,","special.","specialists.","specialization)","specialization,","specializations).","specialize.","specialized,","specif","specifi","specific,","specific.","specific_magic)","specific_magic)1.12.2.1.","specifically,","specification)","specification,","specification.","specification:","specifications.","specified)","specified,","specified.","specifier.","specifier1.4.1.2.18.","specifiers,","specifiers.","specul","speed","speed.","speed?)","spell","spelling,","spend","spent","spinlock","spite","splice","split","split(const","split1.3.1.","splonk","splunk","spot","spot.","spots.","spread","sprinkl","spuriou","sqrt","sqrt(","sqrt()","sqrt()?","sqrt(*first);","sqrt(2);","sqrt(doubl","sqrt(double);","sqrt(intermediate);","sqrt(x);","squar","square(2);","square(a,","square(int","square(t","square2(2);","square2(int","square2(int)","src","src{","src{1,","ss","ss(s);","ss)","ss,","ss;","ss_number","st;","stabil","stabl","stable,","stable.","stable_sort(sortable&","stack","stack.","stack1.7.10.1.17.","stack;","stack_array","stack_widget;","stage","stake","stand","standalone.","standard","standard'","standard,","standard.","standard:","standard;","standardization,","standardization.","standardized).","standardized.","standards,","standards.","standards:","stanley,","star","start","start,","start;","starters,","startrpc()).","startrpc(),","starts.","startup:","starvat","stash","state","state\"","state)","state),","state,","state.","state1.7.7.6.6.","state:","state?","stated.","statement","statement,","statement.","statement1.7.10.2.6.","statement1.7.9.1.5.","statements,","statements.","statements1.12.13.2.10.","statements1.7.10.1.","statements1.7.10.2.1.","statements1.7.10.2.7.","static","static,","static.","static:","static_assert","static_assert(add(1,","static_assert(addone(1)","static_assert(arity::valu","static_assert(arity<>::valu","static_assert(copyable);","static_assert(default_constructible);","static_assert(identity(123)","static_assert(isintegral()","static_assert(sizeof(int)","static_assert(std::is_integral::valu","static_assert(std::is_same::type,","static_assert(std::is_same::valu","static_assert(x","static_assert1.7.16.","static_assert:","static_cast","static_cast(arg);","static_cast(double_value),","static_cast(ip.topointer());","static_cast(malloc(10","static_cast(malloc(n,","static_cast(malloc(sizeof(record)));","static_cast(pb);","static_cast(pb1);","static_cast(static_cast(d)+1);","static_cast(x)","static_cast(x);","static_cast)","static_cast*>(first).val;","static_cast.","static_cast::type&&>(arg);","statically,","statics?","statist","statu","status;","stay","std","std),","std,","std.","std.org/jtc1/sc22/wg21/docs/papers/2015/n4477.pdf.","std1.7.9.2.8.","std::","std::accumul","std::addressof()","std::ani","std::any1.6.1.3.4.","std::any_cast(x)","std::appli","std::apply(add,","std::apply1.6.1.3.7.","std::array","std::array&","std::array)","std::array,","std::array.","std::array1.4.1.3.10.","std::array<>::fill()","std::async","std::async\"","std::atom","std::auto_ptr","std::auto_ptr.","std::back_inserter(args));","std::bind","std::bind,","std::byte","std::call_onc","std::call_once(my_once_flag,","std::call_once.","std::cerr","std::cerr,","std::chrono","std::chrono)","std::chrono1.4.1.3.7.","std::chrono::dur","std::chrono::duration_cast(day).count();","std::chrono::system_clock::now();","std::chrono::time_point","std::chrono_literals;","std::cin,","std::clog.","std::condition_vari","std::copi","std::copy(keyvalue.begin(),","std::copy,","std::cout","std::cout,","std::enable_shared_from_thi","std::except","std::exception_ptr,","std::fill()","std::find(v.begin(),","std::find.","std::find_if(s.rbegin(),","std::find_if_not(s.rbegin(),","std::for_each(begin(sockets),","std::for_each(v.begin(),","std::forward","std::forward(arg)","std::forward(args)...);","std::forward.","std::forward1.4.1.3.3.","std::forward:","std::forward?","std::free(),","std::function","std::function)","std::function,","std::function.","std::get(playerprofile);","std::get(v);","std::get.","std::greater<>());","std::greater<>);","std::hash","std::hash.","std::hash;","std::ifstream:","std::ignor","std::ignore)","std::index_sequence_for","std::initializer_list","std::initializer_list&","std::initializer_list,","std::initializer_list.","std::integer_sequ","std::integer_sequence();","std::integer_sequence)","std::invok","std::invoke(c,","std::invoke1.6.1.3.6.","std::list","std::literals::*_literals)?","std::llround(tempcelsiu","std::lock","std::lock()","std::lock_guard","std::make_integer_sequ","std::make_pair(\"yes\",","std::make_shar","std::make_shared());","std::make_shared(args);","std::make_shared,","std::make_shared.","std::make_shared1.4.1.3.12.","std::make_tuple(","std::make_tuple(51,","std::make_tuple(91,","std::make_tuple(a[i]...);","std::make_uniqu","std::make_unique());","std::make_unique(1);","std::make_unique,","std::make_unique1.5.1.4.","std::make_x","std::map","std::map>>","std::max(x,","std::move","std::move()","std::move()'s.","std::move(a.s);","std::move(a1);","std::move(a3);","std::move(f())","std::move(local_variable);","std::move(make_vector());","std::move(o.s);","std::move(p)","std::move(p)]","std::move(p1)","std::move(p1);","std::move(p2);","std::move(result);","std::move(v)","std::move(x)","std::move(x);","std::move(y);","std::move(z);","std::move,","std::move.","std::move1.4.1.3.2.","std::move?","std::mutex","std::mutex.","std::nested_exception.","std::nullptr_t","std::once_flag","std::operator>>()","std::option","std::optional,","std::optional1.6.1.3.3.","std::out_of_rang","std::pair","std::pair).","std::pair,","std::pair.","std::pair;","std::remove_if(users.begin(),","std::scoped_lock","std::set","std::set,","std::shared_ptr","std::shared_ptr'","std::shared_ptr)","std::shared_ptr).","std::shared_ptr,","std::shared_ptr.","std::shared_ptr{","std::size_t)","std::sort(a.begin(),","std::sort(begin(c),","std::sort(begin(v),","std::sort(indices.begin(),","std::sort(v.begin(),","std::stoi(str);","std::string","std::string'","std::string(s.begin(),","std::string(std::find_if_not(s.begin(),","std::string,","std::string.","std::string;","std::string_view","std::string_view1.6.1.3.5.","std::stringstream","std::strlen()","std::swap","std::swap()","std::swap(*this,","std::swap(a,","std::swap(m2,","std::swap;","std::termin","std::terminate(!)","std::terminate()","std::thread","std::thread1.7.12.1.7.","std::thread:","std::thread?","std::tie","std::tie(std::ignore,","std::tie(yes,","std::tie,","std::tie1.4.1.3.9.","std::to_str","std::to_string(1.2);","std::to_string(123);","std::to_string1.4.1.3.4.","std::transform(data.begin(),","std::tupl","std::tuple,","std::unary_function.","std::unique_lock","std::unique_ptr","std::unique_ptr)","std::unique_ptr,","std::unique_ptr.","std::unique_ptrs,","std::unique_ptrs:","std::unique_ptr{","std::unordered_map","std::unordered_set,","std::unordered_set;","std::variant","std::variant1.6.1.3.2.","std::vector","std::vector)","std::vector):","std::vector,","std::vector:","std::vector::.","std::vector::const_iter","std::vector::iterator;","std::vector;","std::weak_ptr","std::weak_ptr.","std::wstring_view","std;","std_in:","stdafx.h","stdlib","stdlib)","steadili","steal","steal([&]","steal(t","stem","step","stepanov","stephen","steps,","stick","stifl","still","still,","still:","stl","stl,","stl.","stl:","stls,","stop","storag","storage_duration)","store","store)","store).","store,","store.","store_somewhere()","store_somewhere(std::move(v));","stored.","story.","str","str)","str,","str1=","str;","straight","straightforward","straightforward1.7.10.3.4.","strang","strategi","strategically,","strategy)","stray","strchr(str,","strcpy(p","strcpy(p,","strdup)","stream","stream,","stream.","streamabl","streams'","streams),","streams,","streams.","streams1.12.2.7.7.","strength","strengths,","strict","strict.","stricter","strictli","strike","string","string\",","string&","string&);","string(\"\"","string((char","string(czstr","string(int);","string(s)","string)","string).","string);","string*","string,","string,double}","string.","string1.7.18.2.1.","string1.7.18.2.8.","string1.7.6.2.12.","string:","string;","string^","string_ptr;","string_ref()","string_span","string_span.","string_val","string_val;","string_view","string_view,","string_view.","string_view?","stringifying,","strings,","strings.","strings1.7.18.3.","strings:","string{p};","string{ss};","string{};","strive","strlen(p);","strlen(s1);","strlen(s2);","strong","stronger","strongli","stroustrup","stroustrup'","stroustrup,","stroustrup.","stroustrup05","stroustrup13","stroustrup14","stroustrup94.","stroustrup:","strtmpdev","strtmpdev[0]","strtmpdev[1]","struct","struct1.7.6.2.8.","struct:","structs)","structs,","structur","structure,","structure.","structure:","structures,","structures.","struggl","str{","studi","stuff","stuff,","style","style\"","style\",","style)","style,","style.","style1.12.13.1.2.","style1.12.13.1.8.","style1.12.13.2.11.","style1.12.13.2.14.","style1.12.13.2.5.","style1.12.2.3.3.","style1.12.2.3.4.","style1.12.2.7.5.","style:","style;","st，这样可以简化命令","sub","subclass","subclass,","subclass.","subclassed,","subclasses.","subdirectori","subdivid","subexpress","subexpressions,","subject","submit","suboperations.","subrang","subscript","subscripts.","subscripts1.7.11.","subsect","subsections:","subsequ","subset","substant","substanti","substantiated.","substitut","substitution.","subtl","subtle.","subtleties.","subtli","subtract","subtract(t","subtre","subtree目录拆分","subtree目录拆分1.11.3.","subtyp","subtype:","suc;","succe","succeed","succeed.","succeeded,","success","success)","success.","success;","successfulli","succinctly:","such","such,","such.","such;","suffer","suffic","suffices.","suffici","sufficient,","sufficient.","suffix","suffix);","suffix.","sugar","suggest","suggestion)","suggestions,","suggestions:","suit","suitabl","suited,","sum","sum(...)","sum(1.0,","sum(3,","sum(3.14159,","sum(args...","sum(const","sum(list);","sum(vector&","sum({","sum({});","sum1","sum1(vector&","sum2(vector&","sum2.","summar","summari","summary,","summary1.2.1.","summary:","sun","sun.\"","superclass","superclass,","superclasses,","superior","superlongvariablename1,","superlongvariablename2,","supersed","superset","superset\"","superstit","supertype:","suppli","supplier","supply,","support","support\"","support)","support,","support.","support:","supported,","supportive)","suppos","supposedli","suppress","suppressed.","sure","surfac","surface_read","surface_readings)","surface_readings.","surpris","surprise!","surprise();","surprise:","surprised.","surprised?","surprises,","surprises.","surprises:","surprising.","surprising:","surprisingli","surround","surviv","susmit","suspect","suspect,","suspect.","suspens","suspici","suspicion,","suspicion.","suspicious,","suspicious.","suspicious:","suttalex05","sutter","sutter'","sutter,","sutter.","sutter/alexandrescu)","sutter:","sutton","sutton'","sw","sw,","swap","swap()","swap(),","swap().","swap(a,","swap(foo&","swap(my_vector&","swap(temp);","swap(x&,","swap),","swap).","swap,","swap.","swap:","swapped,","sweep","switch","switch.","switch`stat","switching1.7.12.1.11.","symbol","symmetr","symmetri","symposium.","symptom","sync","sync_queu","sync_queue::get(t&","sync_queue::put(const","synchron","synchronization),","synchronization.","synchronization:","synchronized.","synchronized_valu","synonym","syntact","syntax","syntax,","syntax.","syntax1.12.2.6.","syntax1.7.10.1.13.","syntax1.7.15.5.","syntax:","syntax;","syntaxes,","synthes","synthesi","system","system\",","system)","system,","system.","system:","system::collections::generic::list^","system::data::datat","system::runtime::interopservices::marshal::ptrtostringansi((intptr)ch1);","system::text::encoding::default","system::windows::forms::datagridview^","system::windows::forms::dialogresult::ok","system_error","systemat","systematic,","systematic.","systematically.","systemparam","systems,","systems.","sz","sz)","sz);","sz,","sz;","sz{0}{}","sz{a.sz}","sz{s}","s{\"foo\"};","s{\"qqq\"}","s{123};","s{321};","s{ss}","s{ss},","s};","t","t&","t&&","t&&1.7.6.2.19.","t&)","t&,","t&.","t'","t(2.7182818284590452353);","t(3.1415926535897932385);","t(e)","t(expression)","t(heartbeat);","t(u);","t)","t*","t*)","t*),","t*,","t*.","t*s,","t,","t.","t.100:","t.101:","t.102:","t.103:","t.10:","t.11:","t.120:","t.121:","t.122:","t.123:","t.124:","t.125:","t.12:","t.13:","t.140:","t.141:","t.142:","t.142?:","t.143:","t.144:","t.150:","t.1:","t.20:","t.21:","t.22:","t.23:","t.24.","t.24:","t.25:","t.26:","t.2:","t.30:","t.31:","t.3:","t.40:","t.41:","t.42:","t.43:","t.44:","t.46:","t.47:","t.48:","t.49:","t.4:","t.5:","t.60:","t.61.","t.61:","t.62:","t.64:","t.65:","t.67:","t.68:","t.69","t.69:","t.80:","t.81:","t.82:","t.83:","t.84:","t.??:","t.con","t.concepts.def:","t.concepts:","t.def:","t.detach();","t.f();","t.future();","t.gp:","t.meta:","t.temp","t.var:","t0","t0(f,","t0.detach();","t1","t1(f,","t1.detach();","t2","t2(f,","t2)","t2.detach();","t3","t3(f,","t3.detach();","t:","t::operator=(const","t;","t[0],","t[a.sz]},","t[n]},","tab","tabl","table.","table_name;","table_name_;","tableinfo","tablename;","tablename_;","tabs1.12.13.2.4.","tacitli","tactic","tag","tag::number)","tag::number:","tag::number;","tag::text","tag::text)","tag::text:","tag::text;","tag_nam","tags.","tail)","take","take_action();","take_the_default_action();","taken","taken,","taligent'","talk","talk,","tangl","target","target.","target_stream,","task","task,","task.","task1","task1.7.12.3.2.","task1.7.12.4.","task2","tasknum","tasks,","tasks.","tast","taste.","tavares\",","taxonomi","tc","tc++pl4","tc++pl4,","tc++pl4:","tchar","teach","teach,","team","team.","technic","technicalities.","technically,","techniqu","technique,","technique.","techniques\"","techniques,","techniques.","techniques;","technology.","tediou","tedious,","tedious.","tell","tell,","temp","temp;","tempcelsius)","temperature_gradiants(const","temperature_gradiants(surface_readings);","templat","template'","template)","template,","template.","template1.7.15.8.4.","template:","template<>","template>","templated:","templates)","templates).","templates,","templates.","templates1.4.1.2.4.","templates1.5.1.3.","templates1.6.1.2.2.","templates1.7.15.10.6.","templates1.7.15.6.5.","templates:","temporari","temporaries?","temporarili","temporary,","temporary.","tempt","temptat","ten","tend","tendenc","tendencies.","term","term,","termin","terminate!","terminate()","terminate();","terminate)","terminate.","terminated)","terminated,","terminated.","terminates).","terminates,","terminates.","terminator)","terminator);","terminator;","test","test()","test(d*","test(string&","test).","test,","test.","test1(t","test2(t","test3(t","test_function()","test_traits::f(t);","test_traits<>","tested.","testfunction2(std::vector","testfunction2({1,","testing)","testing,","testing.","testing:","tests,","tests.","text","text()","text,","text.","textbook","textlen);","textual","text：所需要查找的字段","than:","thank","that!\"","that'","that,","that.","that:","thee","them)","them),","them).","them,","them.","them:","them;","theme","themselv","themselves;","then,","then.","there!","there\",","there'","there'd","there,","there.","thereafter.","therebi","therefor","therefore,","thereof).","thewidget","thewidget1.7.9.2.10.","they'll","they'r","they'v","thing","thing,","thing.","things\"","things,","things.","thing{2},","thing{monkey}},","think","think:","thinko(const","third","this\"","this,","this.","this:","this]{","this_other_th","thorough","thoroughli","those","those).","those,","those.","though","though).","though,","though.","thought","thought)","thought:","thousand","thread","thread(f&&","thread(worker,","thread,","thread.","thread1","thread1'","thread1()","thread1.7.12.1.8.","thread1.7.6.2.25.","thread2","thread2()","thread:","thread_loc","thread_pool.queue_work([&]{","thread_pool.queue_work([=]{","threads!","threads\"","threads)","threads,","threads.","threads:","threads?","threads?)","three","threw","through","through,","through.","through.\"","throughout","throw","throw().","throw(x,","throw,","throw.","throw:","throw;","throwback","throwing),","throwing.","throwing1.7.7.5.6.","thrown","thrown,","thrown.","throws,","throws.","throws?","thu","thu,","thumb","thumb:","thus,","ti","tick_tock","tidi","tie","tie():","tie(i,","tie(iter,","tie(val,","tight","tight.","tighten","tightli","time","time)","time).","time,","time.","time1.7.15.9.4.","time1.7.15.9.5.","time1.7.18.6.","time:","time?","time_point","time_points.","time_to_blink","time_to_blink)","timeout;","times.","timeseri","timeseries;","tini","tip","tire","tjark","tmp","tmp(data);","tmp);","tmp,","tmp.","tmp.begin(),","tmp;","to)","to):","to);","to,","to.","to/from","to1.7.12.5.2.","to1.7.15.9.2.","to1.7.18.3.2.","to1.7.28.1.5.","to:","to;","to?)","to_json(json&","to_low","to_lower1.3.2.4.","to_redi","to_redis(*elem,","to_redis(nlohmann::json","to_redis1.3.2.2.","to_upp","to_upper1.3.2.5.","today","today,","today.","todo","todo(bug","todo(kl@gmail.com):","todo(zeke)","todo.","toe","togeth","together,","together.","token","token)","token;","tolerant,","tolower(const","tomorrow","tomorrow.","ton","too,","too.","too:","tool","tool.","toolchains.","tooling.","tools)","tools,","tools.","tools1.7.30.","tools:","top","top:","top_left,","top_right,","topic","topic.","total","total.","total;","totallyord","touch","touch(p);","tough,","toupper(c);","toupper(const","tour","tour++:","toward","tp","tp&&","tr","tr,","tr.","trace","tracer","tracer(const","tracer2","tracer2(const","track","track.","trade","tradeoff.","tradit","trail","train","trait","trait)","trait.","traits!\"","traits.","traits1.4.1.3.5.","transact","transaction:","transfer","transfer.","transfer.\"","transform","transformation.","transient","transit","transition)","transition,","transitive.","translat","transmit","transpar","trap.","travers","treat","treatment","tree","tree.","tree:","trees,","tri","triangl","triangle(point","triangle?","trick","tricki","trickier","tricky(thread*","tricky,","tricky.","trigger","trim","trim(const","trim(s,","trim(x.s);","trim1.3.2.7.","trim_tail","trim_tail(s);","trimdir(const","tripl","trisym","trivia","trivial","trivial,","trivial.","troubl","trouble,","trouble.","true","true);","true,","true.","true;","true`","truli","truncating)","truncation:","trust","try/catch","try/catch(...)","try/catch,","try/catch.","try_lock()","ts","ts)","ts),","ts).","ts,","ts.","ts...","ts:","ts::operator()...;","tsan","tsan)","tt","tt()?","tt(s);","tt?","tue,","tune","tupl","tuple,","tuple.","tuple:","tuples...","tuples1.4.1.3.8.","ture","turn","turner'","tutori","tutorial:","tweak","twice","two","two,","two.","two?","type","type\"","type'","type)","type),","type).","type,","type.","type.1:","type.2:","type.3:","type.4:","type.5:","type.6:","type.7:","type.8:","type:","type;","type?","type_check","typedef","typedef,","typedef.","typedefs,","typeid","typeid(d1))","typeid(d2))","typeid(d3))","typenam","types)","types,","types.","types1.12.2.4.4.","types1.12.2.7.11.","types1.5.1.3.2.","types1.7.15.1.3.","types1.7.15.6.7.","types1.7.15.8.2.","types1.7.7.1.1.","types:","types;","types[*],","typic","typically,","typo","typo\",","typo,","t{e}","t{e}.","t{e}not","t{}","t{},","u","u)","u);","u.","u.x","u1","u2","u2;","u8","u8\"\\ufeff\",","u8'x';","u;","ub","ubiquitous.","ugh","ugh;","ugli","ugly,","uint","uint32_t,","uint64_t","uint64_t.","ull","ultim","umbrella","unabl","unaccept","unacceptable.","unaffect","unalias","unalloc","unambigu","unambiguous,","unambiguous.","unanticip","unari","unary_funct","unauthor","unavoid","unavoidable1.7.7.13.3.","unawar","unbalanc","unbeat","unblock","unbound","uncaught","uncertainti","unchang","unchanged).","unchanged,","uncheck","unchecked/unsaf","unclassifi","unclear","unclear)","uncom","uncomfort","uncommon","uncommon,","uncommon.","uncompromis","uncondition","unconstrain","unconvent","unconvention","undecid","undeclared.","undefin","undefined)","undefined.","undefined;","under","underflow","underflow1.7.10.4.6.","underli","underscor","underscore):","underscore.","underscores.","underscores:","understand","understand)","understand,","understand.","understand:","understanding.","understood","understood.","underus","undesir","undesirable,","undesirable1.7.15.7.4.","undisciplin","undone.","unenforceable,","unenforceable.","unenforced.","unexpand","unexpect","unexpected)","unexpectedli","unexpectedly.","unfamiliar","unfamiliar.","unfinish","unformat","unfortun","unfortunately,","unheard","unicod","unicode,","unifi","uniform","uniform,","uniformity:","uniformli","unimpl","unimport","uninit","uninit;","uniniti","uninitialized,","uninitialized.","uninitialized:","unintend","unintent","unintention","union","union)","union,","union.","union:","unions,","unions.","unions1.7.7.15.1.","unions1.7.7.15.3.","unions1.7.7.15.4.","uniqu","unique.","unique_lock","unique_lock(m1);","unique_lock,","unique_locks.","unique_locks1.7.12.1.15.","unique_ownership,","unique_ptr","unique_ptr&","unique_ptr&)","unique_ptr&);","unique_ptr()","unique_ptr(const","unique_ptr(point","unique_ptr(unique_ptr&&","unique_ptr)","unique_ptr),","unique_ptr).","unique_ptr,","unique_ptr.","unique_ptrs1.7.7.13.7.","unique_ptrs1.7.9.2.5.","uniqueness,","unit","unit.","unit:","unit;","unit]","units.","unittest","unittests,","univers","universally,","unix","unknown","unknown.","unless","unlik","unlikely,","unlink","unlock","unlock().","unlock,","unmanag","unmanageable.","unmodifi","unnam","unnamed1.7.6.2.","unnecessari","unnecessarili","unnecessary.","unoptim","unord","unordered_map","unordered_multimap","unordered_multiset","unordered_set","unordered_set,","unpack","unpleas","unpredict","unprincipl","unqualifi","unreadable,","unrealistic.","unreason","unreasonably)","unrecognized)","unrel","unrelated)","unreleas","unreliable.","unsaf","unsafe,","unsatisfied.","unscop","unset","unsign","unsigned1.7.10.4.8.","unsigned:","unsigned;","unspecifi","unspecified\"","unspecified.","unspecified;","unstable:","unstat","unsuit","unsupport","unsure,","unsurpris","unsurprising,","unsystemat","untend","untest","until","untracked文件：新建的文件","untrust","unus","unusu","unusual)","unwind","up","up\"","up.","up.\"","up:","upcast(b*","updat","update(record&","update,","update_status_bar();","updates,","upgrad","upon","upon,","upper","upward","urgent","url","urltabl","urltableerror","urltableproperti","urltabletest","us","usabl","usable.","usable/compos","usag","usage,","usage1.7.7.14.2.","usages.","use()","use()'","use().","use(*w);","use(42);","use(43);","use(a);","use(b","use(b*);","use(bool","use(char","use(const","use(d);","use(i);","use(i,","use(int","use(int*","use(param.f());","use(param.g());","use(result.first);","use(smart_ptr","use(smart_ptr2","use(smart_ptr3","use(vector&","use(w);","use(x);","use)","use).","use,","use.","use1","use1(const","use1.7.15.3.1.","use2()","use2(int","use2(span","use3()","use3(int","use:","use;","use?","used,","used.","used:","used;","used?","useful,","useful.","useful/necessari","useful:","usefull_c++_idiom","useless.","user","user'","user(&b);","user()","user(b*","user(foo&","user(t&","user(zstr","user,","user.cpp","user1(const","user1(d.to_string());","user2(&b);","user2()","user2(b*","user2(t&","user3(&b);","user3(b*","users\"","users'","users,","users.","users.end(),","uses(widget*);","uses)","uses).","uses,","uses.","uses:","using,","using1.7.7.11.14.","using:","usings,","usual","usual,","usually,","utf","util","util/mast","utilities1.7.23.5.","utility1();","utility2();","u参数","v","v'","v(10).","v(10);","v(100)","v(100,","v(100000);","v(12);","v(7);","v(700);","v(n);","v)","v);","v,","v.at(0)","v.at(7)","v.begin(),v.begin()+i","v.begin(),v.end()","v.begin();","v.cbegin();","v.d","v.empty())","v.end())","v.end(),","v.front();","v.push_back(1);","v.push_back(2);","v.push_back(99);","v.push_back(s);","v.push_back(val);","v.push_back(x);","v.push_back(z);","v.remove_prefix(std::min(v.find_first_not_of(\"","v.reserve(100);","v.resize(900);","v.size()","v.size()));","v.size();","v.x","v1","v1(10);","v1(x);","v1,","v1{10};","v2","v2(","v2(std::move(v1))","v2(v.size());","v2{count{10}};","v3","v3(10);","v3{count{10}};","v;","v[0]","v[7]","v[i]","v[j]","v[k];","v[size];","v[v.size()]","va","va_arg","va_arg(ap,","va_arg(list,","va_arg.","va_list","va_list,","va_start(ap,","va_start,","vagu","vague,","val","val()","val();","val(int&);","val(val)","val)","val);","val,","val;","val>","valid","valid\"","valid()","valid):","valid.","valid:","valid;","valid?","validate().","validate(const","validated,","valid{false}","valtype&","valu","valuabl","value\"","value&","value&);","value(const","value)","value).","value);","value,","value.","value.\"","value.begin();","value.end();","value1.6.1.2.7.","value1.7.6.2.10.","value:","value::number()","value::operator=(const","value::set_number(int","value::set_text(const","value::text()","value::~value()","value;","value_to_be_returned;","value_typ","value_types.","valuecopi","valuecopy();","valueless).","valueref","valueref();","values)","values),","values).","values):","values,","values.","values.\"","values1.12.13.2.13.","values:","values;","values?","values},","values}};","value{","vanishingli","var","var)","var);","var;","vararg","vararg.","varargs)","varargs.","varargs:","vari","variabl","variable\"","variable'","variable)","variable,","variable.","variable1.7.10.2.4.","variable1.7.10.2.5.","variable:","variable?","variables![](./googl","variables'","variables)","variables,","variables.","variables1.12.2.3.5.","variables1.12.2.4.","variables1.6.1.2.8.","variables1.7.10.1.18.","variables1.7.15.3.4.","variables:","variables;","variable{","variad","variant","variant,","variant.","varieti","variou","vary).","vd1","vd1(1000);","vd2(1000,","vec","vec(10);","vec,","vec.end()},","vec::vector","vec::vector&,","vec;","vector","vector&","vector&);","vector&,","vector()","vector(count","vector(initializer_list","vector(int","vector(std::initializer_list);","vector(vector&&","vector)","vector,","vector.","vector0","vector0()","vector0(int","vector1","vector1()","vector1(int","vector1{}","vector2","vector2&","vector2(vector2&&","vector:","vector::iter","vector::operator=(const","vector::sort()","vector::sort().","vector;","vector>","vectorization.","vectorization1.7.12.5.","vectorized?\"","vector{\"foo\",","vehicl","vendor","vendor.","verbos","verbose,","verbose.","verbose:","veri","verifi","versa.","version","version,","version.","version1","version2","version?","versioning.","versions,","versions.","versu","versus:","vertic","vi","vi,","vi.clear();","vi.end(),","vi1","vi2","vi2,","vi2.begin());","vi;","via","viabl","vice","video","videos).","videos.","view","view,","view.","view_of_evens.emplace_back(even);","view_of_trisyms.emplace_back(trisym);","views,","views.","views1.7.23.2.","vigor","violat","violation,","violation.","violations).","violations,","violations.","violations:","viral:","virtual","virtual,","virtual.","virtual1.7.15.7.5.","virtual:","virtual;","virtuality.","virtually,","virtually?","visibl","visible,","visible.","visible1.7.10.2.13.","visit","visitor","visitors\"","visitors,","visitors.","visual","vital","vl;","vlas)","vocabulari","vocabulary.","void","void*","void*));","void*).","void*,","void*s),","void>","volatil","volatile*","volume;","volunt","voronoi","vote","vr","vr,","vr.end(),","vr;","vs","vs(100);","vs)","vs,","vs.","vs.end(),","vs/and","vs2)","vs2.begin());","vs;","vtbl","vulner","vulnerabilities,","vv","vv;","vv就可以展示关联的远程分支名了，同时推送到远程仓库直接：git","vx)","vx;","v{","v{\"foo\",","v{100,","v{};","w","w(initial_size);","w)","w*x","w,","w1","w2","w3","w4","w;","wait","wait,","wait_for_event();","waiting.","waiv","waiver","wake","wakeup","walker.zheng","want","want,","want.","wanted.","wanted:","wari","warn","warn.","warned:","warning):","warning:","warnings,","warnings.","warrant","wasn't","wast","waste\";","waste(const","waste.","wasted.","wasteful.","watch","water","waters,","way","way).","way,","way.","way:","ways,","ways.","wchar_t","wchar_t,","wcstr_v{","we'd","we'll","we'r","we'v","weak","weak_ptr","weaker","weakest","weakli","weakness:","web","web_color","web_color::blue;","webbi","webcolors.h","weber,","websearch::index_util)","websearch::util.","websit","websites1.7.21.5.","wed,","week","weekli","weigh","weight","weight(x)","welcom","welcome,","welcome.","well","well)","well,","well.","well:","went","weren't","wesley","wesley,","wg21","wg21,","wgc_connections;","what'","what?","whatchang","whatev","whatever).","wheel&","wheel.","when/how","whenev","where,","where.","wherea","wherev","wherever.","whether","whi","which.","whichev","while()","while.","whitespac","whitespace.","whitespace1.12.13.2.19.","whitespace1.12.13.3.","whoever","whole","whole.","whole;","whose","wide","widely,","widen","wider","wider?","widespread","widget","widget&","widget&)","widget&.","widget'","widget(a,","widget(c,","widget(const","widget(int);","widget(widget&&)","widget*,","widget,","widget1.7.9.2.9.","widget:","widget::draw()","widget::impl","widget::operator=(widget&&)","widget::widget(int","widget::~widget()","width","width)","width,","width;","wiki","wild.","will","will,","williams:","wind","winded.","window","windows,","windows.","windows:","wisdom\"","wisdom.","wish","with\"","with\")","with,","with.","with1.7.10.1.12.","within","without","wombat_type(foo)","won't","wonder","word","word,","word.","word:","words)","words,","words.","words1.12.1.","work","work)","work).","work,","work.","work.get();","work.put(m);","work;","work?\"","workaround","workaround.","workarounds.","worker","worker()","worker(messag","workers()","workload","workshop","world","world.","worri","worry,","wors","worse,","worse.","worst","worth","worthwhil","worthwhile.","wouldn't","wrap","wrap.","wraparound","wrapper","wrapper\"","wrapper(a);","wrapper(a{});","wrapper(f","wrapper(std::move(a));","wrapper(t&&","writabl","write","write(span","write).","write,","write.","write/dis","write:","write_event_log();","write_to_file()","write_to_file(buffer);","writer","writing,","written","written),","written.","written:","wrong","wrong!","wrong!),","wrong,","wrong.","wrong.)","wrongli","x","x&","x&&","x&)","x&);","x&,","x'","x()","x();","x(...)","x(1);","x(3);","x(const","x(int","x(int);","x(x&&","x(x&&)","x(x)","x)","x));","x),","x).","x);","x){","x*","x++","x++;","x+x;","x,","x,i","x.","x.add_foo();","x.bar(1);","x.do_bar(2);","x.empty()","x.has_value()","x.i","x.is_empty()","x.m1","x.m2","x.modify();","x.rank()","x.s.size();","x.scale(0.5).rotate(45).set_color(color::red);","x.size()","x0();","x1","x1()","x1(1);","x11","x1:","x1;","x1{","x2","x2&","x2()","x2();","x2(const","x2(int","x2,","x22","x3","x3(const","x3(int","x3,","x3{","x4","x4{","x:","x::foo()","x::x(const","x::x(x&&","x::y::foo()","x::~x()","x;","x?","x[]","x[n];","x_plus_n","xalloc(),","xarg","xl","xmax","xml","xr","xr2","xs","xsubtree=lib","xwith","xx","xx()","xx)","xx,","xx;","xxxxxx，后面的字符串就是commit","x{","x{1};","x{2}","x{3};","x{xx},","x{{},","x{}","x{});","x{};","y","y\");","y)","y))","y);","y)`","y*,","y,","y.","y.find(key);","y/z;","y0","y1","y1,","y1;","y2","y2);","y2,","y3","y3,","y4","y;","y]","ye","year","year.","years'","years,","years.","yellow","yellow,","yes,","yes.","yet.","yet_anoth","yield","yields.","york\";","you!","you'd","you'r","you'v","you,","you.","you:","you?","your","your_code()","yourself","yourself,","yourself.","yourself.)","yuck!","yy","yy)","yy);","yy,","yy;","yyyi","yyyy);","y{current_year()}","y{yy}","z","z);","z,","z1","z1,","z2","z2,","z3","z3);","z4","z:","z;","zcorp_char","zero","zero\".","zero,","zero1.7.10.4.7.","zero;","zero_terminated_array_of_char[])","zhuang,","zstring","zstring()","zstring,","zstring.","zstring/czstr","zstring_to_string(zstr","zubkov","zubkov:","zz","z{","{","{\"a","{\"address\",","{\"age\",","{\"assum","{\"b\"};","{\"bar\"};","{\"d\"};","{\"default\"};","{\"foo","{\"foo\",","{\"foobar\"};","{\"heraclides\"};","{\"my_file\",","{\"name\",","{\"qqq\"};","{\"tokyo\",","{\"tokyo\"s,","{\"troubl","{\"zeno\"};","{\"},","{%","{'a',","{'b',","{.","{...}","{.field","{0,","{0};","{1,","{1.23};","{10}","{10};","{12};","{1};","{2,","{3,","{3};","{5,","{666};","{7,","{7.9};","{7};","{a","{arg};","{arr,","{buf};","{c","{co}","{c};","{d,","{extent{size}}","{f(99)};","{f1(),","{f3(),","{fn};","{foo,","{initializers}","{interiorwrappinglist,","{is,","{m2};","{make()};","{mtx};","{mx};","{my_mutex};","{m};","{name};","{new","{new{7}};","{nm};","{nullptr,","{nullptr};","{p,","{p11};","{pi};","{program::getversion()};","{program::isfirstversion()};","{program::version1::getversion()};","{r1,","{res,","{return","{shade,","{short,","{sm.copy_circle()};","{sm};","{some_float};","{some_int32};","{std::string,double}","{s};","{v},","{worker};","{x};","{yy,","{{0,","{{1,","{{thing{1},","{}","{}\"","{});","{},","{}.","{};","{}};","|","||","||,","}","}();","})","}),","}).base());","});","},","};","};)","};).","~,","~5.85987","~base","~base()","~base(),","~base();","~c;","~connection()","~d()","~d(),","~derived()","~final_action()","~foo()","~immortal()","~itream()","~m2()","~my_interface()","~my_policy();","~myclass()","~nefarious()","~pb","~point2();","~port()","~quad_word;","~smart_ptr2()","~smart_ptr3()","~value();","~vector()","~widget();","~x()","~x();","~x2()","~x;","§10.3.5,","§10.4,","§11,","§12.4.2,","§13,","§14,","§14.4.7,","§15.2(3)","§15.2(3),","§15.4.3,","§16,","§17.4.4.8(3)","§17.4.4.8(3),","§18","§2.1.3,","§21.06,","§22.03","§27,","§3,","§30.01","§4,","§46,","§47","§5.5,","§52","§75,","§8,","§e.2","©","–hard","–mix","–soft","—","⬆","。","一天学会","一定要先测试命令的效果后，再用于工作环境中，以防造成不能弥补的后果！到时候别拿着砍刀来找我","一次性推送所有标签，同步到远程仓库：","一般上线之前都会打tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：","下面的内容就是列举了常用的git命令和一些小技巧，可以通过\"页面内查找\"的方式进行快速查询：ctrl/command+f。","不仅有diff的信息，还有提交者，时间等等，直接可以发送的","不会影响tracked的文件的改动，只会删除untracked的文件","不再将文件的权限变化视作改动","不支持","不添加参数，默认是","与","之前的状态","也就是把所有的改动都重新放回工作区，并清空所有的commit，这样就可以重新提交第一个commit了","从stash中拿出某个文件的修改","从stash中拿出某个文件的修改1.10.1.48.","从包中导入分支","从包中导入分支1.10.1.56.","从远程仓库根据id，拉下某一状态，到本地分支","从远程仓库根据id，拉下某一状态，到本地分支1.10.1.58.","代码片段","代码片段1.3.1.1.","以revid为parents，对树","以最后提交的顺序列出所有git分支","以最后提交的顺序列出所有git分支1.10.1.71.","使用subtree合并策略","例子","例子1.3.2.","依次对每个提交执行下面的操作：","保存当前状态，包括untracked的文件","保存当前状态，包括untracked的文件1.10.1.43.","修改上一个commit的描述","修改上一个commit的描述1.10.1.31.","修改作者名","修改作者名1.10.1.35.","修改远程仓库的url","修改远程仓库的url1.10.1.36.","关联之后，git","关联远程分支","关联远程分支1.10.1.13.","关闭","准备库","切回到某个标签","切回到某个标签1.10.1.26.","列出所有远程仓库","列出所有远程仓库1.10.1.38.","列出所有远程分支","列出所有远程分支1.10.1.14.","列出本地和远程分支","列出本地和远程分支1.10.1.15.","创建并切换到本地分支","创建并切换到本地分支1.10.1.16.","创建并切换到远程分支","创建并切换到远程分支1.10.1.17.","删除全局设置","删除全局设置1.10.1.65.","删除已经合并到master的分支","删除已经合并到master的分支1.10.1.11.","删除所有的stash","删除所有的stash1.10.1.47.","删除本地分支","删除本地分支1.10.1.18.","删除本地标签","删除本地标签1.10.1.24.","删除远程分支","删除远程分支1.10.1.19.","删除远程标签","删除远程标签1.10.1.25.","删除远程标签需要先删除本地标签，再执行下面的命令：","利用子树合并跟踪上游改动","博客园：削微寒","反向过程异常复杂,子树拆分的大致过程是：","发布(描述)\"","可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的untracked文件。clean命令，注意两点：","可以用来删除新建的目录，注意:这个命令也可以用来删除untracked的文件。详情见上一条","合并为子目录","吾日三省吾身","命令","和revert的区别：reset命令会抹去某个commit","和本地最近的版本(commit)的different(不同)。","回到最后一个stash的状态，并删除这个stash","回到最后一个stash的状态，并删除这个stash1.10.1.46.","回到某一个commit的状态，并重新增添一个commit","回到某一个commit的状态，并重新增添一个commit1.10.1.29.","回到某个commit的状态，并删除后面的commit","回到某个commit的状态，并删除后面的commit1.10.1.30.","回到某个stash的状态","回到某个stash的状态1.10.1.45.","回到远程仓库的状态","回到远程仓库的状态1.10.1.5.","图解","在commit","增加远程仓库","增加远程仓库1.10.1.37.","如果之前未使用过git，可以学习git小白教程入门","如果喜欢这个项目，欢迎star、提交pr、反馈问题&#x1f60a;","子","子树拆分","子目录方式合并外部版本库","存储当前的修改，但不用提交commit","存储当前的修改，但不用提交commit1.10.1.42.","对该","将不会在记录这个文件的改动","就像shell的history一样","展示任意分支某一文件的内容","展示任意分支某一文件的内容1.10.1.67.","展示工作区和暂存区的不同","展示工作区和暂存区的不同1.10.1.7.","展示帮助信息","展示帮助信息1.10.1.4.","展示当前分支的最近的tag","展示忽略的文件","展示忽略的文件1.10.1.62.","展示所有alias和config","展示所有alias和configs1.10.1.61.","展示所有stash","展示所有stashes1.10.1.44.","展示所有tracked的文件","展示所有tracked的文件1.10.1.49.","展示所有untracked的文件","展示所有untracked的文件1.10.1.50.","展示所有忽略的文件","展示所有忽略的文件1.10.1.51.","展示暂存区、工作区和最近版本的不同","展示暂存区、工作区和最近版本的不同1.10.1.9.","展示暂存区和最近版本的不同","展示暂存区和最近版本的不同1.10.1.8.","展示本地分支关联远程仓库的情况","展示本地分支关联远程仓库的情况1.10.1.12.","展示简化的commit历史","展示简化的commit历史1.10.1.54.","工作区：改动（增删文件和内容）","工作截图","工作日志","工具","广播搜索","广播搜索1.8.1.","开卷必读","开卷必读1.10.1.2.","引入外部版本库","强制删除untracked的文件","强制删除untracked的文件1.10.1.52.","强制删除untracked的目录","强制删除untracked的目录1.10.1.53.","强制推送","强制推送1.10.1.74.","快速切换分支","快速切换分支1.10.1.10.","忽略文件的权限变化","忽略文件的权限变化1.10.1.70.","忽略某个文件的改动","忽略某个文件的改动1.10.1.69.","恢复","恢复删除的文件","恢复删除的文件1.10.1.28.","或者","或者在push时加上","或者直接提pr，issu","所有的命令都在git","打开文件","打开文件1.8.1.5.","执行","执行rebase之前自动stash","执行rebase之前自动stash1.10.1.57.","执行提交","找出提交中导出目录对应的","找到要导出的目录的提交历史，并反向排序。","把a分支的某一个commit，放到b分支上","把a分支的某一个commit，放到b分支上1.10.1.40.","把暂存区的指定file放到工作区中","把暂存区的指定file放到工作区中1.10.1.73.","把某一个分支到导出成一个文件","把某一个分支到导出成一个文件1.10.1.55.","抛弃本地所有的修改，回到远程仓库的状态。","指定文件的改动","指定文件的改动，也就是","推送标签到远程仓库","推送标签到远程仓库1.10.1.23.","改动的文件名，此次改动就放到了‘暂存区’","改成","放弃工作区的修改","放弃工作区的修改1.10.1.27.","放弃所有修改：","新建一个分支，分支内容就是上面git","新建并切换到新分支上，同时这个分支没有任何commit","新建并切换到新分支上，同时这个分支没有任何commit1.10.1.66.","显示parent","显示本地执行过git命令","显示本地执行过git命令1.10.1.34.","暂存区：输入命令：git","更新index，检出到子目录(工作区)，保存index(暂存区)","最新的放在最上面","本地仓库(简称：本地)：输入命令：git","本地创建标签","本地创建标签1.10.1.22.","本地检出","查看commit历史","查看commit历史1.10.1.32.","查看两个星期内的改动","查看两个星期内的改动1.10.1.39.","查看某段代码是谁写的","查看某段代码是谁写的1.10.1.33.","查看标签","查看标签1.10.1.21.","检出为分支","此次修改的描述，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。","比如：git","注册远程版本库，&fetch","注意：","测试","测试1.9.1.","清除.gitignore文件中记录的文件","清除gitignore文件中记录的文件","清除gitignore文件中记录的文件1.10.1.60.","目录","目录1.1.1.","目录1.10.1.3.","相当于保存修改，但是重写commit历史","简介","简化命令","绑定数据显示","绑定数据显示1.8.2.","给git命令起别名","给git命令起别名1.10.1.41.","统一概念：","编码转换","编码转换1.8.1.4.","联系我","联系我1.10.1.","获取","获取远程版本库改动","补丁","补丁1.11.3.1.","要保持提交信息还要重新设置提交的","计划","详细展示一行中的修改","详细展示一行中的修改1.10.1.59.","详解可以参考廖雪峰老师的git教程","转换","输出工作区、暂存区","输出工作区和暂存区的different(不同)。","输出暂存区和本地最近的版本(commit)的different(不同)。","返回顶部","还可以展示本地仓库中任意两个commit之间的文件变动：","这个过程需要cherri","远程仓库(简称：远程)：输入命令：git","远程仓库，此次改动就放到了‘远程仓库’（github等)","通过grep查找，given","配置","重命名本地分支","重命名本地分支1.10.1.20.","重置为master","重设第一个commit","重设第一个commit1.10.1.6.","首先要保证本地创建好了标签才可以推送标签到远程仓库：","默认tag是打在最近的一次commit上，如果需要指定commit打tag："],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"简介","keywords":"","body":"1.1.1. 工作日志 1.1.2. 目录1.1.1. 工作日志 \nwalker.zheng  mykulou@gmail.com\n\n子  吾日三省吾身\n\nIf you sexy then flaunt it, If you freaky then own it.\n1.1.2. 目录\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-10 16:15:43\n"},"SUMMARY.html":{"url":"SUMMARY.html","title":"目录","keywords":"","body":"1.2.1. Summary1.2.1. Summary\n\n简介\n目录\ncode\nCPP11\nCPP14\nCPP17\nCppCoreGuidelines\nfaq\nGif图\ngit-tips\ngit\ngoogle_C++_Sytle_Guide\nGuidelines\nidioms\niptv\nmarkdown\nmodern-cpp-features\npython速查\nsourcetree\nusefull_c++_idioms\nwork\n一天学会\n图解\n工作截图\n工具\n计划\n配置\n\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 17:16:38\n"},"code.html":{"url":"code.html","title":"code","keywords":"","body":"1.3.1. 代码片段1.3.1.1. json 例子1.3.2. json & redis 转换 hmset/hgetall(非数组)1.3.2.1. to_redis1.3.2.2. from_redis1.3.2.3. to_lower1.3.2.4. to_upper1.3.2.5. join1.3.2.6. trim1.3.2.7. split1.3.1. 代码片段\n1.3.1.1. json 例子\n{% raw %}\nusing nlohmann::json;\nnamespace ns {\n    void to_json(json& j, const person& p) {\n        j = json{\n        {\"name\", p.name}, {\"address\", p.address}, {\"age\", p.age}\n        };\n    }\n\n    void from_json(const json& j, person& p) {\n        p.name = j.at(\"name\").get();\n        p.address = j.at(\"address\").get();\n        p.age = j.at(\"age\").get();\n    }\n} // namespace ns\n{% endraw %}\n1.3.2. json & redis 转换 hmset/hgetall(非数组)\n1.3.2.1. to_redis\nstd::list to_redis(nlohmann::json const & value, std::string const & pref)\n{\n    std::list args;\n    auto prefix = pref;\n\n    if (value.is_object())\n    {\n        if (!prefix.empty()) { prefix += \".\"; }\n\n        for (auto elem = value.begin(); elem != value.end(); ++elem)\n        {\n            if ((*elem).is_object())\n            {\n                auto keyvalue = to_redis(*elem, prefix + elem.key());\n                std::copy(keyvalue.begin(), keyvalue.end(), std::back_inserter(args));\n            }\n            else if ((*elem).is_array())\n            {\n                logger.error(u8\"to_redis 不支持 json array\");\n                // auto keyvalue = to_redis(*elem, prefix + elem.key());\n                // std::copy(keyvalue.begin(), keyvalue.end(), std::back_inserter(args));\n            }\n            else if ((*elem).is_number())\n            {\n                args.push_back(prefix + elem.key());\n                int64_t num = elem.value();\n                args.push_back(std::to_string(num));\n            }\n            else if ((*elem).is_string())\n            {\n                args.push_back(prefix + elem.key());\n                args.push_back(elem.value());\n            }\n            else if ((*elem).is_boolean())\n            {\n                args.push_back(prefix + elem.key());\n                auto boolean = elem.value();\n\n                if (boolean)\n                {\n                    args.push_back(\"true\");\n                }\n                else\n                {\n                    args.push_back(\"false\");\n                }\n            }\n        }\n    }\n    return args;\n}\n1.3.2.2. from_redis\nnlohmann::json from_redis(std::vector const & values)\n{\n    nlohmann::json data;\n\n    if (!(values.size() % 2))\n    {\n        for (auto i = 0; i + 1 1.3.2.3. to_lower\nstd::string tolower(const std::string & data)\n{\n    std::string tmp(data);\n    std::transform(data.begin(), data.end(), tmp.begin(), (int(*)(int))std::tolower);\n    return tmp;\n}\n1.3.2.4. to_upper\nstd::string toupper(const std::string & data)\n{\n    std::string tmp(data);\n    std::transform(data.begin(), data.end(), tmp.begin(), (int(*)(int))std::toupper);\n    return tmp;\n}\n1.3.2.5. join\nstd::string join(const std::vector & s, const std::string & token)\n{\n    size_t count{ 0 };\n    std::string tmp;\n\n    for (const auto & str : s)\n    {\n        count++;\n        tmp += str;\n\n        if (count != s.size())\n        {\n            tmp += token;\n        }\n    }\n\n    return tmp;\n}\n1.3.2.6. trim\nstd::string trimDir(const std::string & s, char ch)\n{\n    return std::string(s.begin(),\n    std::find_if(s.rbegin(), s.rend(), [ = ](int c) {return ch == c; }).base());\n}\nstd::string trim(const std::string & s, char ch)\n{\n    return std::string(std::find_if_not(s.begin(), s.end(), [ = ](int c) {return ch == c; }),\n    std::find_if_not(s.rbegin(), s.rend(), [ = ](int c) {return ch == c; }).base());\n}\nstd::string trim(const std::string & s)\n{\n    return trim(s, ' ');\n}\n1.3.2.7. split\nstd::vector split(const std::string & s, char delim)\n{\n    std::stringstream ss(s);\n    std::string item;\n    std::vector elems;\n\n    while (std::getline(ss, item, delim))\n    {\n        elems.push_back(item);\n    }\n\n    return elems;\n}\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-10 16:05:16\n"},"CPP11.html":{"url":"CPP11.html","title":"CPP11","keywords":"","body":"1.4.1. C++111.4.1.1. Overview1.4.1.2. C++11 Language Features1.4.1.2.1. Move semantics1.4.1.2.2. Rvalue references1.4.1.2.3. Variadic templates1.4.1.2.4. Initializer lists1.4.1.2.5. Static assertions1.4.1.2.6. auto1.4.1.2.7. Lambda expressions1.4.1.2.8. decltype1.4.1.2.9. Template aliases1.4.1.2.10. nullptr1.4.1.2.11. Strongly-typed enums1.4.1.2.12. Attributes1.4.1.2.13. constexpr1.4.1.2.14. Delegating constructors1.4.1.2.15. User-defined literals1.4.1.2.16. Explicit virtual overrides1.4.1.2.17. Final specifier1.4.1.2.18. Default functions1.4.1.2.19. Deleted functions1.4.1.2.20. Range-based for loops1.4.1.2.21. Special member functions for move semantics1.4.1.2.22. Converting constructors1.4.1.2.23. Explicit conversion functions1.4.1.2.24. Inline namespaces1.4.1.2.25. Non-static data member initializers1.4.1.2.26. Right angle Brackets1.4.1.3. C++11 Library Features1.4.1.3.1. std::move1.4.1.3.2. std::forward1.4.1.3.3. std::to_string1.4.1.3.4. Type traits1.4.1.3.5. Smart pointers1.4.1.3.6. std::chrono1.4.1.3.7. Tuples1.4.1.3.8. std::tie1.4.1.3.9. std::array1.4.1.3.10. Unordered containers1.4.1.3.11. std::make_shared1.4.1.3.12. Memory model1.4.1.4. Acknowledgements1.4.1.5. Author1.4.1.6. Content Contributors1.4.1.7. License1.4.1. C++11\n1.4.1.1. Overview\nMany of these descriptions and examples come from various resources (see Acknowledgements section), summarized in my own words.\nC++11 includes the following new language features:\n\nmove semantics\nvariadic templates\nrvalue references\ninitializer lists\nstatic assertions\nauto\nlambda expressions\ndecltype\ntemplate aliases\nnullptr\nstrongly-typed enums\nattributes\nconstexpr\ndelegating constructors\nuser-defined literals\nexplicit virtual overrides\nfinal specifier\ndefault functions\ndeleted functions\nrange-based for loops\nspecial member functions for move semantics\nconverting constructors\nexplicit conversion functions\ninline-namespaces\nnon-static data member initializers\nright angle brackets\n\nC++11 includes the following new library features:\n\nstd::move\nstd::forward\nstd::to_string\ntype traits\nsmart pointers\nstd::chrono\ntuples\nstd::tie\nstd::array\nunordered containers\nstd::make_shared\nmemory model\n\n1.4.1.2. C++11 Language Features\n1.4.1.2.1. Move semantics\nMove semantics is mostly about performance optimization: the ability to move an object without the expensive overhead of copying. The difference between a copy and a move is that a copy leaves the source unchanged, and a move will leave the source either unchanged or radically different -- depending on what the source is. For plain old data, a move is the same as a copy.\nTo move an object means to transfer ownership of some resource it manages to another object. You could think of this as changing pointers held by the source object to be moved, or now held, by the destination object; the resource remains in its location in memory. Such an inexpensive transfer of resources is extremely useful when the source is an rvalue, where the potentially dangerous side-effect of changing the source after the move is redundant since the source is a temporary object that won't be accessible later.\nMoves also make it possible to transfer objects such as std::unique_ptrs, smart pointers that are designed to hold a pointer to a unique object, from one scope to another.\nSee the sections on: rvalue references, defining move special member functions, std::move, std::forward.\n1.4.1.2.2. Rvalue references\nC++11 introduces a new reference termed the rvalue reference. An rvalue reference to A is created with the syntax A&&. This enables two major features: move semantics; and perfect forwarding, the ability to pass arguments while maintaining information about them as lvalues/rvalues in a generic way.\nauto type deduction with lvalues and rvalues:\nint x = 0; // `x` is an lvalue of type `int`\nint& xl = x; // `xl` is an lvalue of type `int&`\nint&& xr = x; // compiler error -- `x` is an lvalue\nint&& xr2 = 0; // `xr2` is an lvalue of type `int&&`\nauto& al = x; // `al` is an lvalue of type `int&`\nauto&& al2 = x; // `al2` is an lvalue of type `int&`\nauto&& ar = 0; // `ar` is an lvalue of type `int&&`\n\nSee also: std::move, std::forward.\n1.4.1.2.3. Variadic templates\nThe ... syntax creates a parameter pack or expands one. A template parameter pack is a template parameter that accepts zero or more template arguments (non-types, types, or templates). A template with at least one parameter pack is called a variadic template.\ntemplate \nstruct arity {\n  constexpr static int value = sizeof...(T);\n};\nstatic_assert(arity<>::value == 0);\nstatic_assert(arity::value == 3);\n\n1.4.1.2.4. Initializer lists\nA lightweight array-like container of elements created using a \"braced list\" syntax. For example, { 1, 2, 3 } creates a sequences of integers, that has type std::initializer_list. Useful as a replacement to passing a vector of objects to a function.\nint sum(const std::initializer_list& list) {\n  int total = 0;\n  for (auto& e : list) {\n    total += e;\n  }\n\n  return total;\n}\n\nauto list = { 1, 2, 3 };\nsum(list); // == 6\nsum({ 1, 2, 3 }); // == 6\nsum({}); // == 0\n\n1.4.1.2.5. Static assertions\nAssertions that are evaluated at compile-time.\nconstexpr int x = 0;\nconstexpr int y = 1;\nstatic_assert(x == y, \"x != y\");\n\n1.4.1.2.6. auto\nauto-typed variables are deduced by the compiler according to the type of their initializer.\nauto a = 3.14; // double\nauto b = 1; // int\nauto& c = b; // int&\nauto d = { 0 }; // std::initializer_list\nauto&& e = 1; // int&&\nauto&& f = b; // int&\nauto g = new auto(123); // int*\nconst auto h = 1; // const int\nauto i = 1, j = 2, k = 3; // int, int, int\nauto l = 1, m = true, n = 1.61; // error -- `l` deduced to be int, `m` is bool\nauto o; // error -- `o` requires initializer\n\nExtremely useful for readability, especially for complicated types:\nstd::vector v = ...;\nstd::vector::const_iterator cit = v.cbegin();\n// vs.\nauto cit = v.cbegin();\n\nFunctions can also deduce the return type using auto. In C++11, a return type must be specified either explicitly, or using decltype like so:\ntemplate \nauto add(X x, Y y) -> decltype(x + y) {\n  return x + y;\n}\nadd(1, 2); // == 3\nadd(1, 2.0); // == 3.0\nadd(1.5, 1.5); // == 3.0\n\nThe trailing return type in the above example is the declared type (see section on decltype) of the expression x + y. For example, if x is an integer and y is a double, decltype(x + y) is a double. Therefore, the above function will deduce the type depending on what type the expression x + y yields. Notice that the trailing return type has access to its parameters, and this when appropriate.\n1.4.1.2.7. Lambda expressions\nA lambda is an unnamed function object capable of capturing variables in scope. It features: a capture list; an optional set of parameters with an optional trailing return type; and a body. Examples of capture lists:\n\n[] - captures nothing.\n[=] - capture local objects (local variables, parameters) in scope by value.\n[&] - capture local objects (local variables, parameters) in scope by reference.\n[this] - capture this pointer by value.\n[a, &b] - capture objects a by value, b by reference.\n\nint x = 1;\n\nauto getX = [=]{ return x; };\ngetX(); // == 1\n\nauto addX = [=](int y) { return x + y; };\naddX(1); // == 2\n\nauto getXRef = [&]() -> int& { return x; };\ngetXRef(); // int& to `x`\n\nBy default, value-captures cannot be modified inside the lambda because the compiler-generated method is marked as const. The mutable keyword allows modifying captured variables. The keyword is placed after the parameter-list (which must be present even if it is empty).\nint x = 1;\n\nauto f1 = [&x] { x = 2; }; // OK: x is a reference and modifies the original\n\nauto f2 = [x] { x = 2; }; // ERROR: the lambda can only perform const-operations on the captured value\n// vs.\nauto f3 = [x] () mutable { x = 2; }; // OK: the lambda can perform any operations on the captured value\n\n1.4.1.2.8. decltype\ndecltype is an operator which returns the declared type of an expression passed to it. Examples of decltype:\nint a = 1; // `a` is declared as type `int`\ndecltype(a) b = a; // `decltype(a)` is `int`\nconst int& c = a; // `c` is declared as type `const int&`\ndecltype(c) d = a; // `decltype(c)` is `const int&`\ndecltype(123) e = 123; // `decltype(123)` is `int`\nint&& f = 1; // `f` is declared as type `int&&`\ndecltype(f) g = 1; // `decltype(f) is `int&&`\ndecltype((a)) h = g; // `decltype((a))` is int&\n\ntemplate \nauto add(X x, Y y) -> decltype(x + y) {\n  return x + y;\n}\nadd(1, 2.0); // `decltype(x + y)` => `decltype(3.0)` => `double`\n\n1.4.1.2.9. Template aliases\nSemantically similar to using a typedef however, template aliases with using are easier to read and are compatible with templates.\ntemplate \nusing Vec = std::vector;\nVec v{}; // std::vector\n\nusing String = std::string;\nString s{\"foo\"};\n\n1.4.1.2.10. nullptr\nC++11 introduces a new null pointer type designed to replace C's NULL macro. nullptr itself is of type std::nullptr_t and can be implicitly converted into pointer types, and unlike NULL, not convertible to integral types except bool.\nvoid foo(int);\nvoid foo(char*);\nfoo(NULL); // error -- ambiguous\nfoo(nullptr); // calls foo(char*)\n\n1.4.1.2.11. Strongly-typed enums\nType-safe enums that solve a variety of problems with C-style enums including: implicit conversions, inability to specify the underlying type, scope pollution.\n// Specifying underlying type as `unsigned int`\nenum class Color : unsigned int { Red = 0xff0000, Green = 0xff00, Blue = 0xff };\n// `Red`/`Green` in `Alert` don't conflict with `Color`\nenum class Alert : bool { Red, Green };\nColor c = Color::Red;\n\n1.4.1.2.12. Attributes\nAttributes provide a universal syntax over __attribute__(...), __declspec, etc.\n// `noreturn` attribute indicates `f` doesn't return.\n[[ noreturn ]] void f() {\n  throw \"error\";\n}\n\n1.4.1.2.13. constexpr\nConstant expressions are expressions evaluated by the compiler at compile-time. Only non-complex computations can be carried out in a constant expression. Use the constexpr specifier to indicate the variable, function, etc. is a constant expression.\nconstexpr int square(int x) {\n  return x * x;\n}\n\nint square2(int x) {\n  return x * x;\n}\n\nint a = square(2);  // mov DWORD PTR [rbp-4], 4\n\nint b = square2(2); // mov edi, 2\n                    // call square2(int)\n                    // mov DWORD PTR [rbp-8], eax\n\nconstexpr values are those that the compiler can evaluate at compile-time:\nconst int x = 123;\nconstexpr const int& y = x; // error -- constexpr variable `y` must be initialized by a constant expression\n\nConstant expressions with classes:\nstruct Complex {\n  constexpr Complex(double r, double i) : re(r), im(i) { }\n  constexpr double real() { return re; }\n  constexpr double imag() { return im; }\n\nprivate:\n  double re;\n  double im;\n};\n\nconstexpr Complex I(0, 1);\n\n1.4.1.2.14. Delegating constructors\nConstructors can now call other constructors in the same class using an initializer list.\nstruct Foo {\n  int foo;\n  Foo(int foo) : foo(foo) {}\n  Foo() : Foo(0) {}\n};\n\nFoo foo{};\nfoo.foo; // == 0\n\n1.4.1.2.15. User-defined literals\nUser-defined literals allow you to extend the language and add your own syntax. To create a literal, define a T operator \"\" X(...) { ... } function that returns a type T, with a name X. Note that the name of this function defines the name of the literal. Any literal names not starting with an underscore are reserved and won't be invoked. There are rules on what parameters a user-defined literal function should accept, according to what type the literal is called on.\nConverting Celsius to Fahrenheit:\n// `unsigned long long` parameter required for integer literal.\nlong long operator \"\" _celsius(unsigned long long tempCelsius) {\n  return std::llround(tempCelsius * 1.8 + 32);\n}\n24_celsius; // == 75\n\nString to integer conversion:\n// `const char*` and `std::size_t` required as parameters.\nint operator \"\" _int(const char* str, std::size_t) {\n  return std::stoi(str);\n}\n\n\"123\"_int; // == 123, with type `int`\n\n1.4.1.2.16. Explicit virtual overrides\nSpecifies that a virtual function overrides another virtual function. If the virtual function does not override a parent's virtual function, throws a compiler error.\nstruct A {\n  virtual void foo();\n  void bar();\n};\n\nstruct B : A {\n  void foo() override; // correct -- B::foo overrides A::foo\n  void bar() override; // error -- A::bar is not virtual\n  void baz() override; // error -- B::baz does not override A::baz\n};\n\n1.4.1.2.17. Final specifier\nSpecifies that a virtual function cannot be overridden in a derived class or that a class cannot be inherited from.\nstruct A {\n  virtual void foo();\n};\n\nstruct B : A {\n  virtual void foo() final;\n};\n\nstruct C : B {\n  virtual void foo(); // error -- declaration of 'foo' overrides a 'final' function\n};\n\nClass cannot be inherited from.\nstruct A final {\n\n};\n\nstruct B : A { // error -- base 'A' is marked 'final'\n\n};\n\n1.4.1.2.18. Default functions\nA more elegant, efficient way to provide a default implementation of a function, such as a constructor.\nstruct A {\n  A() = default;\n  A(int x) : x(x) {}\n  int x{ 1 };\n};\nA a{}; // a.x == 1\nA a2{ 123 }; // a.x == 123\n\nWith inheritance:\nstruct B {\n  B() : x(1);\n  int x;\n};\n\nstruct C : B {\n  // Calls B::B\n  C() = default;\n};\n\nC c{}; // c.x == 1\n\n1.4.1.2.19. Deleted functions\nA more elegant, efficient way to provide a deleted implementation of a function. Useful for preventing copies on objects.\nclass A {\n  int x;\n\npublic:\n  A(int x) : x(x) {};\n  A(const A&) = delete;\n  A& operator=(const A&) = delete;\n};\n\nA x{ 123 };\nA y = x; // error -- call to deleted copy constructor\ny = x; // error -- operator= deleted\n\n1.4.1.2.20. Range-based for loops\nSyntactic sugar for iterating over a container's elements.\nstd::array a{ 1, 2, 3, 4, 5 };\nfor (int& x : a) x *= 2;\n// a == { 2, 4, 6, 8, 10 }\n\nNote the difference when using int as opposed to int&:\nstd::array a{ 1, 2, 3, 4, 5 };\nfor (int x : a) x *= 2;\n// a == { 1, 2, 3, 4, 5 }\n\n1.4.1.2.21. Special member functions for move semantics\nThe copy constructor and copy assignment operator are called when copies are made, and with C++11's introduction of move semantics, there is now a move constructor and move assignment operator for moves.\nstruct A {\n  std::string s;\n  A() : s(\"test\") {}\n  A(const A& o) : s(o.s) {}\n  A(A&& o) : s(std::move(o.s)) {}\n  A& operator=(A&& o) {\n   s = std::move(o.s);\n   return *this;\n  }\n};\n\nA f(A a) {\n  return a;\n}\n\nA a1 = f(A{}); // move-constructed from rvalue temporary\nA a2 = std::move(a1); // move-constructed using std::move\nA a3 = A{};\na2 = std::move(a3); // move-assignment using std::move\na1 = f(A{}); // move-assignment from rvalue temporary\n\n1.4.1.2.22. Converting constructors\nConverting constructors will convert values of braced list syntax into constructor arguments.\nstruct A {\n  A(int) {}\n  A(int, int) {}\n  A(int, int, int) {}\n};\n\nA a{0, 0}; // calls A::A(int, int)\nA b(0, 0); // calls A::A(int, int)\nA c = {0, 0}; // calls A::A(int, int)\nA d{0, 0, 0}; // calls A::A(int, int, int)\n\nNote that the braced list syntax does not allow narrowing:\nstruct A {\n  A(int) {}\n};\n\nA a(1.1); // OK\nA b{1.1}; // Error narrowing conversion from double to int\n\nNote that if a constructor accepts a std::initializer_list, it will be called instead:\nstruct A {\n  A(int) {}\n  A(int, int) {}\n  A(int, int, int) {}\n  A(std::initializer_list) {}\n};\n\nA a{0, 0}; // calls A::A(std::initializer_list)\nA b(0, 0); // calls A::A(int, int)\nA c = {0, 0}; // calls A::A(std::initializer_list)\nA d{0, 0, 0}; // calls A::A(std::initializer_list)\n\n1.4.1.2.23. Explicit conversion functions\nConversion functions can now be made explicit using the explicit specifier.\nstruct A {\n  operator bool() const { return true; }\n};\n\nstruct B {\n  explicit operator bool() const { return true; }\n};\n\nA a{};\nif (a); // OK calls A::operator bool()\nbool ba = a; // OK copy-initialization selects A::operator bool()\n\nB b{};\nif (b); // OK calls B::operator bool()\nbool bb = b; // error copy-initialization does not consider B::operator bool()\n\n1.4.1.2.24. Inline namespaces\nAll members of an inline namespace are treated as if they were part of its parent namespace, allowing specialization of functions and easing the process of versioning. This is a transitive property, if A contains B, which in turn contains C and both B and C are inline namespaces, C's members can be used as if they were on A.\nnamespace Program {\n  namespace Version1 {\n    int getVersion() { return 1; }\n    bool isFirstVersion() { return true; }\n  }\n  inline namespace Version2 {\n    int getVersion() { return 2; }\n  }\n}\n\nint version {Program::getVersion()};              // Uses getVersion() from Version2\nint oldVersion {Program::Version1::getVersion()}; // Uses getVersion() from Version1\nbool firstVersion {Program::isFirstVersion()};    // Does not compile when Version2 is added\n\n1.4.1.2.25. Non-static data member initializers\nAllows non-static data members to be initialized where they are declared, potentially cleaning up constructors of default initializations.\n// Default initialization prior to C++11\nclass Human {\n    Human() : age(0) {}\n  private:\n    unsigned age;\n};\n// Default initialization on C++11\nclass Human {\n  private:\n    unsigned age{0};\n};\n\n1.4.1.2.26. Right angle Brackets\nC++11 is now able to infer when a series of right angle brackets is used as an operator or as a closing statement of typedef, without having to add whitespace.\ntypedef std::map > > cpp98LongTypedef;\ntypedef std::map>>   cpp11LongTypedef;\n\n1.4.1.3. C++11 Library Features\n1.4.1.3.1. std::move\nstd::move indicates that the object passed to it may be moved, or in other words, moved from one object to another without a copy. The object passed in should not be used after the move in certain situations.\nA definition of std::move (performing a move is nothing more than casting to an rvalue):\ntemplate \ntypename remove_reference::type&& move(T&& arg) {\n  return static_cast::type&&>(arg);\n}\n\nTransferring std::unique_ptrs:\nstd::unique_ptr p1{ new int };\nstd::unique_ptr p2 = p1; // error -- cannot copy unique pointers\nstd::unique_ptr p3 = std::move(p1); // move `p1` into `p2`\n                                         // now unsafe to dereference object held by `p1`\n\n1.4.1.3.2. std::forward\nReturns the arguments passed to it as-is, either as an lvalue or rvalue references, and includes cv-qualification. Useful for generic code that need a reference (either lvalue or rvalue) when appropriate, e.g factories. Forwarding gets its power from template argument deduction:\n\nT& & becomes T&\nT& && becomes T&\nT&& & becomes T&\nT&& && becomes T&&\n\nA definition of std::forward:\ntemplate \nT&& forward(typename remove_reference::type& arg) {\n  return static_cast(arg);\n}\n\nAn example of a function wrapper which just forwards other A objects to a new A object's copy or move constructor:\nstruct A {\n  A() = default;\n  A(const A& o) { std::cout \nA wrapper(T&& arg) {\n  return A{ std::forward(arg) };\n}\n\nwrapper(A{}); // moved\nA a{};\nwrapper(a); // copied\nwrapper(std::move(a)); // moved\n\n1.4.1.3.3. std::to_string\nConverts a numeric argument to a std::string.\nstd::to_string(1.2); // == \"1.2\"\nstd::to_string(123); // == \"123\"\n\n1.4.1.3.4. Type traits\nType traits defines a compile-time template-based interface to query or modify the properties of types.\nstatic_assert(std::is_integral::value == 1);\nstatic_assert(std::is_same::value == 1);\nstatic_assert(std::is_same::type, int>::value == 1);\n\n1.4.1.3.5. Smart pointers\nC++11 introduces new smart(er) pointers: std::unique_ptr, std::shared_ptr, std::weak_ptr. std::auto_ptr now becomes deprecated and then eventually removed in C++17.\nstd::unique_ptr is a non-copyable, movable smart pointer that properly manages arrays and STL containers. Note: Prefer using the std::make_X helper functions as opposed to using constructors. See the sections for std::make_unique and std::make_shared.\nstd::unique_ptr p1 { new Foo{} };  // `p1` owns `Foo`\nif (p1) p1->bar();\n\n{\n  std::unique_ptr p2 { std::move(p1) };  // Now `p2` owns `Foo`\n  f(*p2);\n\n  p1 = std::move(p2);  // Ownership returns to `p1` -- `p2` gets destroyed\n}\n\nif (p1) p1->bar();\n// `Foo` instance is destroyed when `p1` goes out of scope\n\nA std::shared_ptr is a smart pointer that manages a resource that is shared across multiple owners. A shared pointer holds a control block which has a few components such as the managed object and a reference counter. All control block access is thread-safe, however, manipulating the managed object itself is not thread-safe.\nvoid foo(std::shared_ptr t) {\n  // Do something with `t`...\n}\n\nvoid bar(std::shared_ptr t) {\n  // Do something with `t`...\n}\n\nvoid baz(std::shared_ptr t) {\n  // Do something with `t`...\n}\n\nstd::shared_ptr p1 { new T{} };\n// Perhaps these take place in another threads?\nfoo(p1);\nbar(p1);\nbaz(p1);\n\n1.4.1.3.6. std::chrono\nThe chrono library contains a set of utility functions and types that deal with durations, clocks, and time points. One use case of this library is benchmarking code:\nstd::chrono::time_point start, end;\nstart = std::chrono::system_clock::now();\n// Some computations...\nend = std::chrono::system_clock::now();\n\nstd::chrono::duration elapsed_seconds = end-start;\n\nelapsed_seconds.count(); // t number of seconds, represented as a `double`\n\n1.4.1.3.7. Tuples\nTuples are a fixed-size collection of heterogeneous values. Access the elements of a std::tuple by unpacking using std::tie, or using std::get.\n// `playerProfile` has type `std::tuple`.\nauto playerProfile = std::make_tuple(51, \"Frans Nielsen\", \"NYI\");\nstd::get(playerProfile); // 51\nstd::get(playerProfile); // \"Frans Nielsen\"\nstd::get(playerProfile); // \"NYI\"\n\n1.4.1.3.8. std::tie\nCreates a tuple of lvalue references. Useful for unpacking std::pair and std::tuple objects. Use std::ignore as a placeholder for ignored values. In C++17, structured bindings should be used instead.\n// With tuples...\nstd::string playerName;\nstd::tie(std::ignore, playerName, std::ignore) = std::make_tuple(91, \"John Tavares\", \"NYI\");\n\n// With pairs...\nstd::string yes, no;\nstd::tie(yes, no) = std::make_pair(\"yes\", \"no\");\n\n1.4.1.3.9. std::array\nstd::array is a container built on top of a C-style array. Supports common container operations such as sorting.\nstd::array a = {2, 1, 3};\nstd::sort(a.begin(), a.end()); // a == { 1, 2, 3 }\nfor (int& x : a) x *= 2; // a == { 2, 4, 6 }\n\n1.4.1.3.10. Unordered containers\nThese containers maintain average constant-time complexity for search, insert, and remove operations. In order to achieve constant-time complexity, sacrifices order for speed by hashing elements into buckets. There are four unordered containers:\n\nunordered_set\nunordered_multiset\nunordered_map\nunordered_multimap\n\n1.4.1.3.11. std::make_shared\nstd::make_shared is the recommended way to create instances of std::shared_ptrs due to the following reasons:\n\nAvoid having to use the new operator.\nPrevents code repetition when specifying the underlying type the pointer shall hold.\nIt provides exception-safety. Suppose we were calling a function foo like so:foo(std::shared_ptr{ new T{} }, function_that_throws(), std::shared_ptr{ new T{} });\n\nThe compiler is free to call new T{}, then function_that_throws(), and so on... Since we have allocated data on the heap in the first construction of a T, we have introduced a leak here. With std::make_shared, we are given exception-safety:foo(std::make_shared(), function_that_throws(), std::make_shared());\n\n\nPrevents having to do two allocations. When calling std::shared_ptr{ new T{} }, we have to allocate memory for T, then in the shared pointer we have to allocate memory for the control block within the pointer.\n\nSee the section on smart pointers for more information on std::unique_ptr and std::shared_ptr.\n1.4.1.3.12. Memory model\nC++11 introduces a memory model for C++, which means library support for threading and atomic operations. Some of these operations include (but aren't limited to) atomic loads/stores, compare-and-swap, atomic flags, promises, futures, locks, and condition variables.\n1.4.1.4. Acknowledgements\n\ncppreference - especially useful for finding examples and documentation of new library features.\nC++ Rvalue References Explained - a great introduction I used to understand rvalue references, perfect forwarding, and move semantics.\nclang and gcc's standards support pages. Also included here are the proposals for language/library features that I used to help find a description of, what it's meant to fix, and some examples.\nCompiler explorer\nScott Meyers' Effective Modern C++ - highly recommended book!\nJason Turner's C++ Weekly - nice collection of C++-related videos.\nWhat can I do with a moved-from object?\nWhat are some uses of decltype(auto)?\nAnd many more SO posts I'm forgetting...\n\n1.4.1.5. Author\nAnthony Calandra\n1.4.1.6. Content Contributors\nSee: https://github.com/AnthonyCalandra/modern-cpp-features/graphs/contributors\n1.4.1.7. License\nMIT\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 16:37:45\n"},"CPP14.html":{"url":"CPP14.html","title":"CPP14","keywords":"","body":"1.5.1. C++141.5.1.1. Overview1.5.1.2. C++14 Language Features1.5.1.2.1. Binary literals1.5.1.2.2. Generic lambda expressions1.5.1.2.3. Lambda capture initializers1.5.1.2.4. Return type deduction1.5.1.2.5. decltype(auto)1.5.1.2.6. Relaxing constraints on constexpr functions1.5.1.2.7. Variable Templates1.5.1.3. C++14 Library Features1.5.1.3.1. User-defined literals for standard library types1.5.1.3.2. Compile-time integer sequences1.5.1.3.3. std::make_unique1.5.1.4. Acknowledgements1.5.1.5. Author1.5.1.6. Content Contributors1.5.1.7. License1.5.1. C++14\n1.5.1.1. Overview\nMany of these descriptions and examples come from various resources (see Acknowledgements section), summarized in my own words.\nC++14 includes the following new language features:\n\nbinary literals\ngeneric lambda expressions\nlambda capture initializers\nreturn type deduction\ndecltype(auto)\nrelaxing constraints on constexpr functions\nvariable templates\n\nC++14 includes the following new library features:\n\nuser-defined literals for standard library types\ncompile-time integer sequences\nstd::make_unique\n\n1.5.1.2. C++14 Language Features\n1.5.1.2.1. Binary literals\nBinary literals provide a convenient way to represent a base-2 number.\nIt is possible to separate digits with '.\n0b110 // == 6\n0b1111'1111 // == 255\n\n1.5.1.2.2. Generic lambda expressions\nC++14 now allows the auto type-specifier in the parameter list, enabling polymorphic lambdas.\nauto identity = [](auto x) { return x; };\nint three = identity(3); // == 3\nstd::string foo = identity(\"foo\"); // == \"foo\"\n\n1.5.1.2.3. Lambda capture initializers\nThis allows creating lambda captures initialized with arbitrary expressions. The name given to the captured value does not need to be related to any variables in the enclosing scopes and introduces a new name inside the lambda body. The initializing expression is evaluated when the lambda is created (not when it is invoked).\nint factory(int i) { return i * 10; }\nauto f = [x = factory(2)] { return x; }; // returns 20\n\nauto generator = [x = 0] () mutable {\n  // this would not compile without 'mutable' as we are modifying x on each call\n  return x++;\n};\nauto a = generator(); // == 0\nauto b = generator(); // == 1\nauto c = generator(); // == 2\n\nBecause it is now possible to move (or forward) values into a lambda that could previously be only captured by copy or reference we can now capture move-only types in a lambda by value. Note that in the below example the p in the capture-list of task2 on the left-hand-side of = is a new variable private to the lambda body and does not refer to the original p.\nauto p = std::make_unique(1);\n\nauto task1 = [=] { *p = 5; }; // ERROR: std::unique_ptr cannot be copied\n// vs.\nauto task2 = [p = std::move(p)] { *p = 5; }; // OK: p is move-constructed into the closure object\n// the original p is empty after task2 is created\n\nUsing this reference-captures can have different names than the referenced variable.\nauto x = 1;\nauto f = [&r = x, x = x * 10] {\n  ++r;\n  return r + x;\n};\nf(); // sets x to 2 and returns 12\n\n1.5.1.2.4. Return type deduction\nUsing an auto return type in C++14, the compiler will attempt to deduce the type for you. With lambdas, you can now deduce its return type using auto, which makes returning a deduced reference or rvalue reference possible.\n// Deduce return type as `int`.\nauto f(int i) {\n return i;\n}\n\ntemplate \nauto& f(T& t) {\n  return t;\n}\n\n// Returns a reference to a deduced type.\nauto g = [](auto& x) -> auto& { return f(x); };\nint y = 123;\nint& z = g(y); // reference to `y`\n\n1.5.1.2.5. decltype(auto)\nThe decltype(auto) type-specifier also deduces a type like auto does. However, it deduces return types while keeping their references or \"const-ness\", while auto will not.\nconst int x = 0;\nauto x1 = x; // int\ndecltype(auto) x2 = x; // const int\nint y = 0;\nint& y1 = y;\nauto y2 = y1; // int\ndecltype(auto) y3 = y1; // int&\nint&& z = 0;\nauto z1 = std::move(z); // int\ndecltype(auto) z2 = std::move(z); // int&&\n\n// Note: Especially useful for generic code!\n\n// Return type is `int`.\nauto f(const int& i) {\n return i;\n}\n\n// Return type is `const int&`.\ndecltype(auto) g(const int& i) {\n return i;\n}\n\nint x = 123;\nstatic_assert(std::is_same::value == 0);\nstatic_assert(std::is_same::value == 1);\nstatic_assert(std::is_same::value == 1);\n\n1.5.1.2.6. Relaxing constraints on constexpr functions\nIn C++11, constexpr function bodies could only contain a very limited set of syntaxes, including (but not limited to): typedefs, usings, and a single return statement. In C++14, the set of allowable syntaxes expands greatly to include the most common syntax such as if statements, multiple returns, loops, etc.\nconstexpr int factorial(int n) {\n  if (n \n1.5.1.2.7. Variable Templates\nC++14 allows variables to be templated:\ntemplate\nconstexpr T pi = T(3.1415926535897932385);\ntemplate\nconstexpr T e  = T(2.7182818284590452353);\n\n1.5.1.3. C++14 Library Features\n1.5.1.3.1. User-defined literals for standard library types\nNew user-defined literals for standard library types, including new built-in literals for chrono and basic_string. These can be constexpr meaning they can be used at compile-time. Some uses for these literals include compile-time integer parsing, binary literals, and imaginary number literals.\nusing namespace std::chrono_literals;\nauto day = 24h;\nday.count(); // == 24\nstd::chrono::duration_cast(day).count(); // == 1440\n\n1.5.1.3.2. Compile-time integer sequences\nThe class template std::integer_sequence represents a compile-time sequence of integers. There are a few helpers built on top:\n\nstd::make_integer_sequence - creates a sequence of 0, ..., N - 1 with type T.\nstd::index_sequence_for - converts a template parameter pack into an integer sequence.\n\nConvert an array into a tuple:\ntemplate\ndecltype(auto) a2t_impl(const Array& a, std::integer_sequence) {\n  return std::make_tuple(a[I]...);\n}\n\ntemplate>\ndecltype(auto) a2t(const std::array& a) {\n  return a2t_impl(a, Indices());\n}\n\n1.5.1.3.3. std::make_unique\nstd::make_unique is the recommended way to create instances of std::unique_ptrs due to the following reasons:\n\nAvoid having to use the new operator.\nPrevents code repetition when specifying the underlying type the pointer shall hold.\nMost importantly, it provides exception-safety. Suppose we were calling a function foo like so:foo(std::unique_ptr{ new T{} }, function_that_throws(), std::unique_ptr{ new T{} });\n\nThe compiler is free to call new T{}, then function_that_throws(), and so on... Since we have allocated data on the heap in the first construction of a T, we have introduced a leak here. With std::make_unique, we are given exception-safety:foo(std::make_unique(), function_that_throws(), std::make_unique());\n\n\n\nSee the C++11 section on smart pointers for more information on std::unique_ptr and std::shared_ptr.\n1.5.1.4. Acknowledgements\n\ncppreference - especially useful for finding examples and documentation of new library features.\nC++ Rvalue References Explained - a great introduction I used to understand rvalue references, perfect forwarding, and move semantics.\nclang and gcc's standards support pages. Also included here are the proposals for language/library features that I used to help find a description of, what it's meant to fix, and some examples.\nCompiler explorer\nScott Meyers' Effective Modern C++ - highly recommended book!\nJason Turner's C++ Weekly - nice collection of C++-related videos.\nWhat can I do with a moved-from object?\nWhat are some uses of decltype(auto)?\nAnd many more SO posts I'm forgetting...\n\n1.5.1.5. Author\nAnthony Calandra\n1.5.1.6. Content Contributors\nSee: https://github.com/AnthonyCalandra/modern-cpp-features/graphs/contributors\n1.5.1.7. License\nMIT\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 16:37:45\n"},"CPP17.html":{"url":"CPP17.html","title":"CPP17","keywords":"","body":"1.6.1. C++171.6.1.1. Overview1.6.1.2. C++17 Language Features1.6.1.2.1. Template argument deduction for class templates1.6.1.2.2. Declaring non-type template parameters with auto1.6.1.2.3. Folding expressions1.6.1.2.4. New rules for auto deduction from braced-init-list1.6.1.2.5. constexpr lambda1.6.1.2.6. Lambda capture this by value1.6.1.2.7. Inline variables1.6.1.2.8. Nested namespaces1.6.1.2.9. Structured bindings1.6.1.2.10. Selection statements with initializer1.6.1.2.11. constexpr if1.6.1.2.12. UTF-8 Character Literals1.6.1.2.13. Direct List Initialization of Enums1.6.1.3. C++17 Library Features1.6.1.3.1. std::variant1.6.1.3.2. std::optional1.6.1.3.3. std::any1.6.1.3.4. std::string_view1.6.1.3.5. std::invoke1.6.1.3.6. std::apply1.6.1.3.7. Splicing for maps and sets1.6.1.4. Acknowledgements1.6.1.5. Author1.6.1.6. Content Contributors1.6.1.7. License1.6.1. C++17\n1.6.1.1. Overview\nMany of these descriptions and examples come from various resources (see Acknowledgements section), summarized in my own words.\nC++17 includes the following new language features:\n\ntemplate argument deduction for class templates\ndeclaring non-type template parameters with auto\nfolding expressions\nnew rules for auto deduction from braced-init-list\nconstexpr lambda\nlambda capture this by value\ninline variables\nnested namespaces\nstructured bindings\nselection statements with initializer\nconstexpr if\nutf-8 character literals\ndirect-list-initialization of enums\n\nC++17 includes the following new library features:\n\nstd::variant\nstd::optional\nstd::any\nstd::string_view\nstd::invoke\nstd::apply\nsplicing for maps and sets\n\n1.6.1.2. C++17 Language Features\n1.6.1.2.1. Template argument deduction for class templates\nAutomatic template argument deduction much like how it's done for functions, but now including class constructors.\ntemplate \nstruct MyContainer {\n  T val;\n  MyContainer() : val() {}\n  MyContainer(T val) : val(val) {}\n  // ...\n};\nMyContainer c1{ 1 }; // OK MyContainer\nMyContainer c2; // OK MyContainer\n\n1.6.1.2.2. Declaring non-type template parameters with auto\nFollowing the deduction rules of auto, while respecting the non-type template parameter list of allowable types[*], template arguments can be deduced from the types of its arguments:\ntemplate \nstruct my_integer_sequence {\n  // Implementation here ...\n};\n\n// Explicitly pass type `int` as template argument.\nauto seq = std::integer_sequence();\n// Type is deduced to be `int`.\nauto seq2 = my_integer_sequence();\n\n* - For example, you cannot use a double as a template parameter type, which also makes this an invalid deduction using auto.\n1.6.1.2.3. Folding expressions\nA fold expression performs a fold of a template parameter pack over a binary operator.\n\nAn expression of the form (... op e) or (e op ...), where op is a fold-operator and e is an unexpanded parameter pack, are called unary folds.\nAn expression of the form (e1 op ... op e2), where op are fold-operators, is called a binary fold. Either e1 or e2 are unexpanded parameter packs, but not both.template\nbool logicalAnd(Args... args) {\n  // Binary folding.\n  return (true && ... && args);\n}\nbool b = true;\nbool& b2 = b;\nlogicalAnd(b, b2, true); // == true\n\ntemplate\nauto sum(Args... args) {\n  // Unary folding.\n  return (... + args);\n}\nsum(1.0, 2.0f, 3); // == 6.0\n\n\n\n1.6.1.2.4. New rules for auto deduction from braced-init-list\nChanges to auto deduction when used with the uniform initialization syntax. Previously, auto x{ 3 }; deduces a std::initializer_list, which now deduces to int.\nauto x1{ 1, 2, 3 }; // error: not a single element\nauto x2 = { 1, 2, 3 }; // decltype(x2) is std::initializer_list\nauto x3{ 3 }; // decltype(x3) is int\nauto x4{ 3.0 }; // decltype(x4) is double\n\n1.6.1.2.5. constexpr lambda\nCompile-time lambdas using constexpr.\nauto identity = [] (int n) constexpr { return n; };\nstatic_assert(identity(123) == 123);\n\nconstexpr auto add = [] (int x, int y) {\n  auto L = [=] { return x; };\n  auto R = [=] { return y; };\n  return [=] { return L() + R(); };\n};\n\nstatic_assert(add(1, 2)() == 3);\n\nconstexpr int addOne(int n) {\n  return [n] { return n + 1; }();\n}\n\nstatic_assert(addOne(1) == 2);\n\n1.6.1.2.6. Lambda capture this by value\nCapturing this in a lambda's environment was previously reference-only. An example of where this is problematic is asynchronous code using callbacks that require an object to be available, potentially past its lifetime. *this (C++17) will now make a copy of the current object, while this (C++11) continues to capture by reference.\nstruct MyObj {\n  int value{ 123 };\n  auto getValueCopy() {\n    return [*this] { return value; };\n  }\n  auto getValueRef() {\n    return [this] { return value; };\n  }\n};\nMyObj mo;\nauto valueCopy = mo.getValueCopy();\nauto valueRef = mo.getValueRef();\nmo.value = 321;\nvalueCopy(); // 123\nvalueRef(); // 321\n\n1.6.1.2.7. Inline variables\nThe inline specifier can be applied to variables as well as to functions. A variable declared inline has the same semantics as a function declared inline.\n// Disassembly example using compiler explorer.\nstruct S { int x; };\ninline S x1 = S{321}; // mov esi, dword ptr [x1]\n                      // x1: .long 321\n\nS x2 = S{123};        // mov eax, dword ptr [.L_ZZ4mainE2x2]\n                      // mov dword ptr [rbp - 8], eax\n                      // .L_ZZ4mainE2x2: .long 123\n\n1.6.1.2.8. Nested namespaces\nUsing the namespace resolution operator to create nested namespace definitions.\nnamespace A {\n  namespace B {\n    namespace C {\n      int i;\n    }\n  }\n}\n// vs.\nnamespace A::B::C {\n  int i;\n}\n\n1.6.1.2.9. Structured bindings\nA proposal for de-structuring initialization, that would allow writing auto [ x, y, z ] = expr; where the type of expr was a tuple-like object, whose elements would be bound to the variables x, y, and z (which this construct declares). Tuple-like objects include std::tuple, std::pair, std::array, and aggregate structures.\nusing Coordinate = std::pair;\nCoordinate origin() {\n  return Coordinate{0, 0};\n}\n\nconst auto [ x, y ] = origin();\nx; // == 0\ny; // == 0\n\n1.6.1.2.10. Selection statements with initializer\nNew versions of the if and switch statements which simplify common code patterns and help users keep scopes tight.\n{\n  std::lock_guard lk(mx);\n  if (v.empty()) v.push_back(val);\n}\n// vs.\nif (std::lock_guard lk(mx); v.empty()) {\n  v.push_back(val);\n}\n\nFoo gadget(args);\nswitch (auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n// vs.\nswitch (Foo gadget(args); auto s = gadget.status()) {\n  case OK: gadget.zip(); break;\n  case Bad: throw BadFoo(s.message());\n}\n\n1.6.1.2.11. constexpr if\nWrite code that is instantiated depending on a compile-time condition.\ntemplate \nconstexpr bool isIntegral() {\n  if constexpr (std::is_integral::value) {\n    return true;\n  } else {\n    return false;\n  }\n}\nstatic_assert(isIntegral() == true);\nstatic_assert(isIntegral() == true);\nstatic_assert(isIntegral() == false);\nstruct S {};\nstatic_assert(isIntegral() == false);\n\n1.6.1.2.12. UTF-8 Character Literals\nA character literal that begins with u8 is a character literal of type char. The value of a UTF-8 character literal is equal to its ISO 10646 code point value.\nchar x = u8'x';\n\n1.6.1.2.13. Direct List Initialization of Enums\nEnums can now be initialized using braced syntax.\nenum byte : unsigned char {};\nbyte b{0}; // OK\nbyte c{-1}; // ERROR\nbyte d = byte{1}; // OK\nbyte e = byte{256}; // ERROR\n\n1.6.1.3. C++17 Library Features\n1.6.1.3.1. std::variant\nThe class template std::variant represents a type-safe union. An instance of std::variant at any given time holds a value of one of its alternative types (it's also possible for it to be valueless).\nstd::variant v{ 12 };\nstd::get(v); // == 12\nstd::get(v); // == 12\nv = 12.0;\nstd::get(v); // == 12.0\nstd::get(v); // == 12.0\n\n1.6.1.3.2. std::optional\nThe class template std::optional manages an optional contained value, i.e. a value that may or may not be present. A common use case for optional is the return value of a function that may fail.\nstd::optional create(bool b) {\n  if (b) {\n    return \"Godzilla\";\n  } else {\n    return {};\n  }\n}\n\ncreate(false).value_or(\"empty\"); // == \"empty\"\ncreate(true).value(); // == \"Godzilla\"\n// optional-returning factory functions are usable as conditions of while and if\nif (auto str = create(true)) {\n  // ...\n}\n\n1.6.1.3.3. std::any\nA type-safe container for single values of any type.\nstd::any x{ 5 };\nx.has_value() // == true\nstd::any_cast(x) // == 5\nstd::any_cast(x) = 10;\nstd::any_cast(x) // == 10\n\n1.6.1.3.4. std::string_view\nA non-owning reference to a string. Useful for providing an abstraction on top of strings (e.g. for parsing).\n// Regular strings.\nstd::string_view cppstr{ \"foo\" };\n// Wide strings.\nstd::wstring_view wcstr_v{ L\"baz\" };\n// Character arrays.\nchar array[3] = {'b', 'a', 'r'};\nstd::string_view array_v(array, sizeof array);\n\nstd::string str{ \"   trim me\" };\nstd::string_view v{ str };\nv.remove_prefix(std::min(v.find_first_not_of(\" \"), v.size()));\nstr; //  == \"   trim me\"\nv; // == \"trim me\"\n\n1.6.1.3.5. std::invoke\nInvoke a Callable object with parameters. Examples of Callable objects are std::function or std::bind where an object can be called similarly to a regular function.\ntemplate \nclass Proxy {\n    Callable c;\npublic:\n    Proxy(Callable c): c(c) {}\n    template \n    decltype(auto) operator()(Args&&... args) {\n        // ...\n        return std::invoke(c, std::forward(args)...);\n    }\n};\nauto add = [] (int x, int y) {\n  return x + y;\n};\nProxy p{ add };\np(1, 2); // == 3\n\n1.6.1.3.6. std::apply\nInvoke a Callable object with a tuple of arguments.\nauto add = [] (int x, int y) {\n  return x + y;\n};\nstd::apply(add, std::make_tuple( 1, 2 )); // == 3\n\n1.6.1.3.7. Splicing for maps and sets\nMoving nodes and merging containers without the overhead of expensive copies, moves, or heap allocations/deallocations.\nMoving elements from one map to another:\nstd::map src{ { 1, \"one\" }, { 2, \"two\" }, { 3, \"buckle my shoe\" } };\nstd::map dst{ { 3, \"three\" } };\ndst.insert(src.extract(src.find(1))); // Cheap remove and insert of { 1, \"one\" } from `src` to `dst`.\ndst.insert(src.extract(2)); // Cheap remove and insert of { 2, \"two\" } from `src` to `dst`.\n// dst == { { 1, \"one\" }, { 2, \"two\" }, { 3, \"three\" } };\n\nInserting an entire set:\nstd::set src{1, 3, 5};\nstd::set dst{2, 4, 5};\ndst.merge(src);\n// src == { 5 }\n// dst == { 1, 2, 3, 4, 5 }\n\nInserting elements which outlive the container:\nauto elementFactory() {\n  std::set s;\n  s.emplace(...);\n  return s.extract(s.begin());\n}\ns2.insert(elementFactory());\n\nChanging the key of a map element:\nstd::map m{ { 1, \"one\" }, { 2, \"two\" }, { 3, \"three\" } };\nauto e = m.extract(2);\ne.key() = 4;\nm.insert(std::move(e));\n// m == { { 1, \"one\" }, { 3, \"three\" }, { 4, \"two\" } }\n\n1.6.1.4. Acknowledgements\n\ncppreference - especially useful for finding examples and documentation of new library features.\nC++ Rvalue References Explained - a great introduction I used to understand rvalue references, perfect forwarding, and move semantics.\nclang and gcc's standards support pages. Also included here are the proposals for language/library features that I used to help find a description of, what it's meant to fix, and some examples.\nCompiler explorer\nScott Meyers' Effective Modern C++ - highly recommended book!\nJason Turner's C++ Weekly - nice collection of C++-related videos.\nWhat can I do with a moved-from object?\nWhat are some uses of decltype(auto)?\nAnd many more SO posts I'm forgetting...\n\n1.6.1.5. Author\nAnthony Calandra\n1.6.1.6. Content Contributors\nSee: https://github.com/AnthonyCalandra/modern-cpp-features/graphs/contributors\n1.6.1.7. License\nMIT\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 16:37:45\n"},"CppCoreGuidelines.html":{"url":"CppCoreGuidelines.html","title":"CppCoreGuidelines","keywords":"","body":"1.7.1. C++ Core Guidelines1.7.2. Abstract1.7.3. In: Introduction1.7.3.1. In.target: Target readership1.7.3.2. In.aims: Aims1.7.3.2.1. In.0: Don't panic!1.7.3.3. In.not: Non-aims1.7.3.4. In.force: Enforcement1.7.3.5. In.struct: The structure of this document1.7.3.6. In.sec: Major sections1.7.4. P: Philosophy1.7.5. I: Interfaces1.7.6. F: Functions1.7.6.1. F.def: Function definitions1.7.6.1.1. F.1: \"Package\" meaningful operations as carefully named functions1.7.6.1.2. F.2: A function should perform a single logical operation1.7.6.1.3. F.3: Keep functions short and simple1.7.6.1.4. F.4: If a function may have to be evaluated at compile time, declare it constexpr1.7.6.1.5. F.5: If a function is very small and time-critical, declare it inline1.7.6.1.6. F.6: If your function may not throw, declare it noexcept1.7.6.1.7. F.7: For general use, take T* or T& arguments rather than smart pointers1.7.6.1.8. F.8: Prefer pure functions1.7.6.1.9. F.9: Unused parameters should be unnamed1.7.6.2. F.call: Parameter passing1.7.6.2.1. F.15: Prefer simple and conventional ways of passing information1.7.6.2.2. F.16: For \"in\" parameters, pass cheaply-copied types by value and others by reference to const1.7.6.2.3. F.17: For \"in-out\" parameters, pass by reference to non-const1.7.6.2.4. F.18: For \"consume\" parameters, pass by X&& and std::move the parameter1.7.6.2.5. F.19: For \"forward\" parameters, pass by TP&& and only std::forward the parameter1.7.6.2.6. F.20: For \"out\" output values, prefer return values to output parameters1.7.6.2.7. F.21: To return multiple \"out\" values, prefer returning a tuple or struct1.7.6.2.8. F.22: Use T* or owner to designate a single object1.7.6.2.9. F.23: Use a not_null to indicate that \"null\" is not a valid value1.7.6.2.10. F.24: Use a span or a span_p to designate a half-open sequence1.7.6.2.11. F.25: Use a zstring or a not_null to designate a C-style string1.7.6.2.12. F.26: Use a unique_ptr to transfer ownership where a pointer is needed1.7.6.2.13. F.27: Use a shared_ptr to share ownership1.7.6.2.14. F.60: Prefer T* over T& when \"no argument\" is a valid option1.7.6.2.15. F.42: Return a T* to indicate a position (only)1.7.6.2.16. F.43: Never (directly or indirectly) return a pointer or a reference to a local object1.7.6.2.17. F.44: Return a T& when copy is undesirable and \"returning no object\" isn't needed1.7.6.2.18. F.45: Don't return a T&&1.7.6.2.19. F.46: int is the return type for main()1.7.6.2.20. F.47: Return T& from assignment operators1.7.6.2.21. F.50: Use a lambda when a function won't do (to capture local variables, or to write a local function)1.7.6.2.22. F.51: Where there is a choice, prefer default arguments over overloading1.7.6.2.23. F.52: Prefer capturing by reference in lambdas that will be used locally, including passed to algorithms1.7.6.2.24. F.53: Avoid capturing by reference in lambdas that will be used nonlocally, including returned, stored on the heap, or passed to another thread1.7.6.2.25. F.54: If you capture this, capture all variables explicitly (no default capture)1.7.6.2.26. F.55: Don't use va_arg arguments1.7.7. C: Classes and Class Hierarchies1.7.7.1. C.concrete: Concrete types1.7.7.1.1. C.10: Prefer concrete types over class hierarchies1.7.7.1.2. C.11: Make concrete types regular1.7.7.2. C.ctor: Constructors, assignments, and destructors1.7.7.3. C.defop: Default Operations1.7.7.3.1. C.20: If you can avoid defining default operations, do1.7.7.3.2. C.21: If you define or =delete any default operation, define or =delete them all1.7.7.3.3. C.22: Make default operations consistent1.7.7.4. C.dtor: Destructors1.7.7.4.1. C.30: Define a destructor if a class needs an explicit action at object destruction1.7.7.4.2. C.31: All resources acquired by a class must be released by the class's destructor1.7.7.4.3. C.32: If a class has a raw pointer (T*) or reference (T&), consider whether it might be owning1.7.7.4.4. C.33: If a class has an owning pointer member, define a destructor1.7.7.4.5. C.35: A base class destructor should be either public and virtual, or protected and nonvirtual1.7.7.4.6. C.36: A destructor may not fail1.7.7.4.7. C.37: Make destructors noexcept1.7.7.5. C.ctor: Constructors1.7.7.5.1. C.40: Define a constructor if a class has an invariant1.7.7.5.2. C.41: A constructor should create a fully initialized object1.7.7.5.3. C.42: If a constructor cannot construct a valid object, throw an exception1.7.7.5.4. C.43: Ensure that a value type class has a default constructor1.7.7.5.5. C.44: Prefer default constructors to be simple and non-throwing1.7.7.5.6. C.45: Don't define a default constructor that only initializes data members; use in-class member initializers instead1.7.7.5.7. C.46: By default, declare single-argument constructors explicit1.7.7.5.8. C.47: Define and initialize member variables in the order of member declaration1.7.7.5.9. C.48: Prefer in-class initializers to member initializers in constructors for constant initializers1.7.7.5.10. C.49: Prefer initialization to assignment in constructors1.7.7.5.11. C.50: Use a factory function if you need \"virtual behavior\" during initialization1.7.7.5.12. C.51: Use delegating constructors to represent common actions for all constructors of a class1.7.7.5.13. C.52: Use inheriting constructors to import constructors into a derived class that does not need further explicit initialization1.7.7.6. C.copy: Copy and move1.7.7.6.1. C.60: Make copy assignment non-virtual, take the parameter by const&, and return by non-const&1.7.7.6.2. C.61: A copy operation should copy1.7.7.6.3. C.62: Make copy assignment safe for self-assignment1.7.7.6.4. C.63: Make move assignment non-virtual, take the parameter by &&, and return by non-const &1.7.7.6.5. C.64: A move operation should move and leave its source in a valid state1.7.7.6.6. C.65: Make move assignment safe for self-assignment1.7.7.6.7. C.66: Make move operations noexcept1.7.7.6.8. C.67: A base class should suppress copying, and provide a virtual clone instead if \"copying\" is desired1.7.7.7. C.other: Other default operation rules1.7.7.7.1. C.80: Use =default if you have to be explicit about using the default semantics1.7.7.7.2. C.81: Use =delete when you want to disable default behavior (without wanting an alternative)1.7.7.7.3. C.82: Don't call virtual functions in constructors and destructors1.7.7.7.4. C.83: For value-like types, consider providing a noexcept swap function1.7.7.7.5. C.84: A swap function may not fail1.7.7.7.6. C.85: Make swap noexcept1.7.7.7.7. C.86: Make == symmetric with respect to operand types and noexcept1.7.7.7.8. C.87: Beware of == on base classes1.7.7.7.9. C.89: Make a hash noexcept1.7.7.8. C.con: Containers and other resource handles1.7.7.9. C.lambdas: Function objects and lambdas1.7.7.10. C.hier: Class hierarchies (OOP)1.7.7.10.1. C.120: Use class hierarchies to represent concepts with inherent hierarchical structure (only)1.7.7.10.2. C.121: If a base class is used as an interface, make it a pure abstract class1.7.7.10.3. C.122: Use abstract classes as interfaces when complete separation of interface and implementation is needed1.7.7.11. C.hierclass: Designing classes in a hierarchy:1.7.7.11.1. C.126: An abstract class typically doesn't need a constructor1.7.7.11.2. C.127: A class with a virtual function should have a virtual or protected destructor1.7.7.11.3. C.128: Virtual functions should specify exactly one of virtual, override, or final1.7.7.11.4. C.129: When designing a class hierarchy, distinguish between implementation inheritance and interface inheritance1.7.7.11.5. C.130: Redefine or prohibit copying for a base class; prefer a virtual clone function instead1.7.7.11.6. C.131: Avoid trivial getters and setters1.7.7.11.7. C.132: Don't make a function virtual without reason1.7.7.11.8. C.133: Avoid protected data1.7.7.11.9. C.134: Ensure all non-const data members have the same access level1.7.7.11.10. C.135: Use multiple inheritance to represent multiple distinct interfaces1.7.7.11.11. C.136: Use multiple inheritance to represent the union of implementation attributes1.7.7.11.12. C.137: Use virtual bases to avoid overly general base classes1.7.7.11.13. C.138: Create an overload set for a derived class and its bases with using1.7.7.11.14. C.139: Use final sparingly1.7.7.12. C.140: Do not provide different default arguments for a virtual function and an overrider1.7.7.13. C.hier-access: Accessing objects in a hierarchy1.7.7.13.1. C.145: Access polymorphic objects through pointers and references1.7.7.13.2. C.146: Use dynamic_cast where class hierarchy navigation is unavoidable1.7.7.13.3. C.147: Use dynamic_cast to a reference type when failure to find the required class is considered an error1.7.7.13.4. C.148: Use dynamic_cast to a pointer type when failure to find the required class is considered a valid alternative1.7.7.13.5. C.149: Use unique_ptr or shared_ptr to avoid forgetting to delete objects created using new1.7.7.13.6. C.150: Use make_unique() to construct objects owned by unique_ptrs1.7.7.13.7. C.151: Use make_shared() to construct objects owned by shared_ptrs1.7.7.13.8. C.152: Never assign a pointer to an array of derived class objects to a pointer to its base1.7.7.13.9. C.153: Prefer virtual function to casting1.7.7.14. C.over: Overloading and overloaded operators1.7.7.14.1. C.160: Define operators primarily to mimic conventional usage1.7.7.14.2. C.161: Use nonmember functions for symmetric operators1.7.7.14.3. C.162: Overload operations that are roughly equivalent1.7.7.14.4. C.163: Overload only for operations that are roughly equivalent1.7.7.14.5. C.164: Avoid conversion operators1.7.7.14.6. C.165: Use using for customization points1.7.7.14.7. C.166: Overload unary & only as part of a system of smart pointers and references1.7.7.14.8. C.167: Use an operator for an operation with its conventional meaning1.7.7.14.9. C.168: Define overloaded operators in the namespace of their operands1.7.7.14.10. C.170: If you feel like overloading a lambda, use a generic lambda1.7.7.15. C.union: Unions1.7.7.15.1. C.180: Use unions to save memory1.7.7.15.2. C.181: Avoid \"naked\" unions1.7.7.15.3. C.182: Use anonymous unions to implement tagged unions1.7.7.15.4. C.183: Don't use a union for type punning1.7.8. Enum: Enumerations1.7.9. R: Resource management1.7.9.1. R.alloc: Allocation and deallocation1.7.9.1.1. R.10: Avoid malloc() and free()1.7.9.1.2. R.11: Avoid calling new and delete explicitly1.7.9.1.3. R.12: Immediately give the result of an explicit resource allocation to a manager object1.7.9.1.4. R.13: Perform at most one explicit resource allocation in a single expression statement1.7.9.1.5. R.14: ??? array vs. pointer parameter1.7.9.1.6. R.15: Always overload matched allocation/deallocation pairs1.7.9.2. R.smart: Smart pointers1.7.9.2.1. R.20: Use unique_ptr or shared_ptr to represent ownership1.7.9.2.2. R.21: Prefer unique_ptr over shared_ptr unless you need to share ownership1.7.9.2.3. R.22: Use make_shared() to make shared_ptrs1.7.9.2.4. R.23: Use make_unique() to make unique_ptrs1.7.9.2.5. R.24: Use std::weak_ptr to break cycles of shared_ptrs1.7.9.2.6. R.30: Take smart pointers as parameters only to explicitly express lifetime semantics1.7.9.2.7. R.31: If you have non-std smart pointers, follow the basic pattern from std1.7.9.2.8. R.32: Take a unique_ptr parameter to express that a function assumes ownership of a widget1.7.9.2.9. R.33: Take a unique_ptr& parameter to express that a function reseats thewidget1.7.9.2.10. R.34: Take a shared_ptr parameter to express that a function is part owner1.7.9.2.11. R.35: Take a shared_ptr& parameter to express that a function might reseat the shared pointer1.7.9.2.12. R.36: Take a const shared_ptr& parameter to express that it might retain a reference count to the object ???1.7.9.2.13. R.37: Do not pass a pointer or reference obtained from an aliased smart pointer1.7.10. ES: Expressions and Statements1.7.10.1. ES.dcl: Declarations1.7.10.1.1. ES.5: Keep scopes small1.7.10.1.2. ES.6: Declare names in for-statement initializers and conditions to limit scope1.7.10.1.3. ES.7: Keep common and local names short, and keep uncommon and nonlocal names longer1.7.10.1.4. ES.8: Avoid similar-looking names1.7.10.1.5. ES.9: Avoid ALL_CAPS names1.7.10.1.6. ES.10: Declare one name (only) per declaration1.7.10.1.7. ES.11: Use auto to avoid redundant repetition of type names1.7.10.1.8. ES.12: Do not reuse names in nested scopes1.7.10.1.9. ES.20: Always initialize an object1.7.10.1.10. ES.21: Don't introduce a variable (or constant) before you need to use it1.7.10.1.11. ES.22: Don't declare a variable until you have a value to initialize it with1.7.10.1.12. ES.23: Prefer the {} initializer syntax1.7.10.1.13. ES.24: Use a unique_ptr to hold pointers1.7.10.1.14. ES.25: Declare an object const or constexpr unless you want to modify its value later on1.7.10.1.15. ES.26: Don't use a variable for two unrelated purposes1.7.10.1.16. ES.27: Use std::array or stack_array for arrays on the stack1.7.10.1.17. ES.28: Use lambdas for complex initialization, especially of const variables1.7.10.1.18. ES.30: Don't use macros for program text manipulation1.7.10.1.19. ES.31: Don't use macros for constants or \"functions\"1.7.10.1.20. ES.32: Use ALL_CAPS for all macro names1.7.10.1.21. ES.33: If you must use macros, give them unique names1.7.10.1.22.  ES.34: Don't define a (C-style) variadic function1.7.10.2. ES.stmt: Statements1.7.10.2.1. ES.70: Prefer a switch-statement to an if-statement when there is a choice1.7.10.2.2. ES.71: Prefer a range-for-statement to a for-statement when there is a choice1.7.10.2.3. ES.72: Prefer a for-statement to a while-statement when there is an obvious loop variable1.7.10.2.4. ES.73: Prefer a while-statement to a for-statement when there is no obvious loop variable1.7.10.2.5. ES.74: Prefer to declare a loop variable in the initializer part of a for-statement1.7.10.2.6. ES.75: Avoid do-statements1.7.10.2.7. ES.76: Avoid goto1.7.10.2.8. ES.77: Minimize the use of break and continue in loops1.7.10.2.9. ES.78: Always end a non-empty case with a break1.7.10.2.10. ES.79: Use default to handle common cases (only)1.7.10.2.11. ES.84: Don't (try to) declare a local variable with no name1.7.10.2.12. ES.85: Make empty statements visible1.7.10.2.13. ES.86: Avoid modifying loop control variables inside the body of raw for-loops1.7.10.2.14. ES.87: Don't add redundant == or != to conditions1.7.10.3. ES.expr: Expressions1.7.10.3.1. ES.40: Avoid complicated expressions1.7.10.3.2. ES.41: If in doubt about operator precedence, parenthesize1.7.10.3.3. ES.42: Keep use of pointers simple and straightforward1.7.10.3.4. ES.43: Avoid expressions with undefined order of evaluation1.7.10.3.5. ES.44: Don't depend on order of evaluation of function arguments1.7.10.3.6. ES.45: Avoid \"magic constants\"; use symbolic constants1.7.10.3.7. ES.46: Avoid lossy (narrowing, truncating) arithmetic conversions1.7.10.3.8. ES.47: Use nullptr rather than 0 or NULL1.7.10.3.9. ES.48: Avoid casts1.7.10.3.10. ES.49: If you must use a cast, use a named cast1.7.10.3.11. ES.50: Don't cast away const1.7.10.3.12. ES.55: Avoid the need for range checking1.7.10.3.13. ES.56: Write std::move() only when you need to explicitly move an object to another scope1.7.10.3.14. ES.60: Avoid new and delete outside resource management functions1.7.10.3.15. ES.61: Delete arrays using delete[] and non-arrays using delete1.7.10.3.16. ES.62: Don't compare pointers into different arrays1.7.10.3.17. ES.63: Don't slice1.7.10.3.18. ES.64: Use the T{e}notation for construction1.7.10.3.19. ES.65: Don't dereference an invalid pointer1.7.10.4. Arithmetic1.7.10.4.1. ES.100: Don't mix signed and unsigned arithmetic1.7.10.4.2. ES.101: Use unsigned types for bit manipulation1.7.10.4.3. ES.102: Use signed types for arithmetic1.7.10.4.4. ES.103: Don't overflow1.7.10.4.5. ES.104: Don't underflow1.7.10.4.6. ES.105: Don't divide by zero1.7.10.4.7. ES.106: Don't try to avoid negative values by using unsigned1.7.10.4.8. ES.107: Don't use unsigned for subscripts1.7.11. Per: Performance1.7.12. CP: Concurrency and Parallelism1.7.12.1. CP.con: Concurrency1.7.12.1.1. CP.20: Use RAII, never plain lock()/unlock()1.7.12.1.2. CP.21: Use std::lock() or std::scoped_lock to acquire multiple mutexes1.7.12.1.3. CP.22: Never call unknown code while holding a lock (e.g., a callback)1.7.12.1.4. CP.23: Think of a joining thread as a scoped container1.7.12.1.5. CP.24: Think of a thread as a global container1.7.12.1.6. CP.25: Prefer gsl::joining_thread over std::thread1.7.12.1.7. CP.26: Don't detach() a thread1.7.12.1.8. CP.31: Pass small amounts of data between threads by value, rather than by reference or pointer1.7.12.1.9. CP.32: To share ownership between unrelated threads use shared_ptr1.7.12.1.10. CP.40: Minimize context switching1.7.12.1.11. CP.41: Minimize thread creation and destruction1.7.12.1.12. CP.42: Don't wait without a condition1.7.12.1.13. CP.43: Minimize time spent in a critical section1.7.12.1.14. CP.44: Remember to name your lock_guards and unique_locks1.7.12.1.15. P.50: Define a mutex together with the data it guards. Use synchronized_value where possible1.7.12.2. CP.par: Parallelism1.7.12.3. CP.mess: Message passing1.7.12.3.1. CP.60: Use a future to return a value from a concurrent task1.7.12.3.2. CP.61: Use a async() to spawn a concurrent task1.7.12.4. CP.vec: Vectorization1.7.12.5. CP.free: Lock-free programming1.7.12.5.1. CP.100: Don't use lock-free programming unless you absolutely have to1.7.12.5.2. CP.101: Distrust your hardware/compiler combination1.7.12.5.3. CP.102: Carefully study the literature1.7.12.5.4. CP.110: Do not write your own double-checked locking for initialization1.7.12.5.5. CP.111: Use a conventional pattern if you really need double-checked locking1.7.12.6. CP.etc: Etc. concurrency rules1.7.12.6.1. CP.200: Use volatile only to talk to non-C++ memory1.7.12.6.2. CP.201: ??? Signals1.7.13. E: Error handling1.7.14. Con: Constants and Immutability1.7.15. T: Templates and generic programming1.7.15.1. T.gp: Generic programming1.7.15.1.1. T.1: Use templates to raise the level of abstraction of code1.7.15.1.2. T.2: Use templates to express algorithms that apply to many argument types1.7.15.1.3. T.3: Use templates to express containers and ranges1.7.15.1.4. T.4: Use templates to express syntax tree manipulation1.7.15.1.5. T.5: Combine generic and OO techniques to amplify their strengths, not their costs1.7.15.2. T.concepts: Concept rules1.7.15.3. T.con-use: Concept use1.7.15.3.1. T.10: Specify concepts for all template arguments1.7.15.3.2. T.11: Whenever possible use standard concepts1.7.15.3.3. T.12: Prefer concept names over auto for local variables1.7.15.3.4. T.13: Prefer the shorthand notation for simple, single-type argument concepts1.7.15.4. T.concepts.def: Concept definition rules1.7.15.4.1. T.20: Avoid \"concepts\" without meaningful semantics1.7.15.4.2. T.21: Require a complete set of operations for a concept1.7.15.4.3. T.22: Specify axioms for concepts1.7.15.4.4. T.23: Differentiate a refined concept from its more general case by adding new use patterns.1.7.15.4.5. T.24: Use tag classes or traits to differentiate concepts that differ only in semantics.1.7.15.4.6. T.25: Avoid complementary constraints1.7.15.4.7. T.26: Prefer to define concepts in terms of use-patterns rather than simple syntax1.7.15.5. Template interfaces1.7.15.5.1. T.40: Use function objects to pass operations to algorithms1.7.15.5.2. T.41: Require only essential properties in a template's concepts1.7.15.5.3. T.42: Use template aliases to simplify notation and hide implementation details1.7.15.5.4. T.43: Prefer using over typedef for defining aliases1.7.15.5.5. T.44: Use function templates to deduce class template argument types (where feasible)1.7.15.5.6. T.46: Require template arguments to be at least Regular or SemiRegular1.7.15.5.7. T.47: Avoid highly visible unconstrained templates with common names1.7.15.5.8. T.48: If your compiler does not support concepts, fake them with enable_if1.7.15.5.9. T.49: Where possible, avoid type-erasure1.7.15.6. T.def: Template definitions1.7.15.6.1. T.60: Minimize a template's context dependencies1.7.15.6.2. T.61: Do not over-parameterize members (SCARY)1.7.15.6.3. T.62: Place non-dependent class template members in a non-templated base class1.7.15.6.4. T.64: Use specialization to provide alternative implementations of class templates1.7.15.6.5. T.65: Use tag dispatch to provide alternative implementations of a function1.7.15.6.6. T.67: Use specialization to provide alternative implementations for irregular types1.7.15.6.7. T.68: Use {} rather than () within templates to avoid ambiguities1.7.15.6.8. T.69: Inside a template, don't make an unqualified nonmember function call unless you intend it to be a customization point1.7.15.7. T.temp-hier: Template and hierarchy rules:1.7.15.7.1. T.80: Do not naively templatize a class hierarchy1.7.15.7.2. T.81: Do not mix hierarchies and arrays1.7.15.7.3. T.82: Linearize a hierarchy when virtual functions are undesirable1.7.15.7.4. T.83: Do not declare a member function template virtual1.7.15.7.5. T.84: Use a non-template core implementation to provide an ABI-stable interface1.7.15.8. T.var: Variadic template rules1.7.15.8.1. T.100: Use variadic templates when you need a function that takes a variable number of arguments of a variety of types1.7.15.8.2. T.101: ??? How to pass arguments to a variadic template ???1.7.15.8.3. T.102: How to process arguments to a variadic template1.7.15.8.4. T.103: Don't use variadic templates for homogeneous argument lists1.7.15.9. T.meta: Template metaprogramming (TMP)1.7.15.9.1. T.120: Use template metaprogramming only when you really need to1.7.15.9.2. T.121: Use template metaprogramming primarily to emulate concepts1.7.15.9.3. T.122: Use templates (usually template aliases) to compute types at compile time1.7.15.9.4. T.123: Use constexpr functions to compute values at compile time1.7.15.9.5. T.124: Prefer to use standard-library TMP facilities1.7.15.9.6. T.125: If you need to go beyond the standard-library TMP facilities, use an existing library1.7.15.10. Other template rules1.7.15.10.1. T.140: Name all operations with potential for reuse1.7.15.10.2. T.141: Use an unnamed lambda if you need a simple function object in one place only1.7.15.10.3. T.142?: Use template variables to simplify notation1.7.15.10.4. T.143: Don't write unintentionally nongeneric code1.7.15.10.5. T.144: Don't specialize function templates1.7.15.10.6. T.150: Check that a class matches a concept using static_assert1.7.16. CPL: C-style programming1.7.17. SF: Source files1.7.18. SL: The Standard Library1.7.18.1. SL.con: Containers1.7.18.1.1. SL.con.1: Prefer using STL array or vector instead of a C array1.7.18.1.2. SL.con.2: Prefer using STL vector by default unless you have a reason to use a different container1.7.18.1.3. SL.con.3: Avoid bounds errors1.7.18.2. SL.str: String1.7.18.2.1. SL.str.1: Use std::string to own character sequences1.7.18.2.2. SL.str.2: Use std::string_view or gsl::string_span to refer to character sequences1.7.18.2.3. SL.str.3: Use zstring or czstring to refer to a C-style, zero-terminated, sequence of characters1.7.18.2.4. SL.str.4: Use char* to refer to a single character1.7.18.2.5. SL.str.5: Use std::byte to refer to byte values that do not necessarily represent characters1.7.18.2.6. SL.str.10: Use std::string when you need to perform locale-sensitive string operations1.7.18.2.7. SL.str.11: Use gsl::string_span rather than std::string_view when you need to mutate a string1.7.18.2.8. SL.str.12: Use the s suffix for string literals meant to be standard-library strings1.7.18.3. SL.io: Iostream1.7.18.3.1. SL.io.1: Use character-level input only when you have to1.7.18.3.2. SL.io.2: When reading, always consider ill-formed input1.7.18.3.3. SL.io.3: Prefer iostreams for I/O1.7.18.3.4. SL.io.10: Unless you use printf-family functions call ios_base::sync_with_stdio(false)1.7.18.3.5. SL.io.50: Avoid endl1.7.18.3.6. Reason1.7.18.4. SL.regex: Regex1.7.18.5. SL.chrono: Time1.7.18.6. SL.C: The C standard library1.7.18.6.1. SL.C.1: Don't use setjmp/longjmp1.7.19. A: Architectural Ideas1.7.20. NR: Non-Rules and myths1.7.21. RF: References1.7.21.1. RF.rules: Coding rules1.7.21.2. RF.books: Books with coding guidelines1.7.21.3. RF.C++: C++ Programming (C++11/C++14)1.7.21.4. RF.web: Websites1.7.21.5. RS.video: Videos about \"modern C++\"1.7.21.6. RF.man: Manuals1.7.21.7. RF.core: Core Guidelines materials1.7.21.8. Acknowledgements1.7.22. Pro: Profiles1.7.22.1. Pro.safety: Type-safety profile1.7.22.2. Pro.bounds: Bounds safety profile1.7.22.3. Pro.lifetime: Lifetime safety profile1.7.23. GSL: Guideline support library1.7.23.1. GSL.view: Views1.7.23.2. GSL.owner: Ownership pointers1.7.23.3. GSL.assert: Assertions1.7.23.4. GSL.util: Utilities1.7.23.5. GSL.concept: Concepts1.7.23.5.1. GSL.ptr: Smart pointer concepts1.7.24. NL: Naming and layout rules1.7.25. FAQ: Answers to frequently asked questions1.7.26. Appendix A: Libraries1.7.27. Appendix B: Modernizing code1.7.28. Appendix C: Discussion1.7.28.1. Define Copy, move, and destroy consistently1.7.28.1.1. Discussion: Provide strong resource safety; that is, never leak anything that you think of as a resource1.7.28.1.2. Discussion: Never throw while holding a resource not owned by a handle1.7.28.1.3. Discussion: A \"raw\" pointer or reference is never a resource handle1.7.28.1.4. Discussion: Never let a pointer outlive the object it points to1.7.28.1.5. Discussion: Use templates to express containers (and other resource handles)1.7.28.1.6. Discussion: Return containers by value (relying on move or copy elision for efficiency)1.7.28.1.7. Discussion: If a class is a resource handle, it needs a constructor, a destructor, and copy and/or move operations1.7.28.1.8. Discussion: If a class is a container, give it an initializer-list constructor1.7.29. Appendix D: Supporting tools1.7.30. Glossary1.7.31. To-do: Unclassified proto-rules1.7.32. Bibliography1.7.1. C++ Core Guidelines\nOctober 5, 2017\nEditors:\n\nBjarne Stroustrup\nHerb Sutter\n\nThis document is an early draft. It's known to be incomplet, incorrekt, and has lots of bad for~mat~ting.\nHad it been an open-source (code) project, this would have been release 0.8.\nCopying, use, modification, and creation of derivative works from this project is licensed under an MIT-style license.\nContributing to this project requires agreeing to a Contributor License. See the accompanying LICENSE file for details.\nWe make this project available to \"friendly users\" to use, copy, modify, and derive from, hoping for constructive input.\nComments and suggestions for improvements are most welcome.\nWe plan to modify and extend this document as our understanding improves and the language and the set of available libraries improve.\nWhen commenting, please note the introduction that outlines our aims and general approach.\nThe list of contributors is here.\nProblems:\n\nThe sets of rules have not been thoroughly checked for completeness, consistency, or enforceability.\nTriple question marks (???) mark known missing information\nUpdate reference sections; many pre-C++11 sources are too old.\nFor a more-or-less up-to-date to-do list see: To-do: Unclassified proto-rules\n\nYou can read an explanation of the scope and structure of this Guide or just jump straight in:\n\nIn: Introduction\nP: Philosophy\nI: Interfaces\nF: Functions\nC: Classes and class hierarchies\nEnum: Enumerations\nR: Resource management\nES: Expressions and statements\nPer: Performance\nCP: Concurrency\nE: Error handling\nCon: Constants and immutability\nT: Templates and generic programming\nCPL: C-style programming\nSF: Source files\nSL: The Standard library\n\nSupporting sections:\n\nA: Architectural Ideas\nN: Non-Rules and myths\nRF: References\nPro: Profiles\nGSL: Guideline support library\nNL: Naming and layout\nFAQ: Answers to frequently asked questions\nAppendix A: Libraries\nAppendix B: Modernizing code\nAppendix C: Discussion\nAppendix D: Tools support\nGlossary\nTo-do: Unclassified proto-rules\n\nYou can sample rules for specific language features:\n\nassignment:\nregular types --\nprefer initialization --\ncopy --\nmove --\nother operations --\ndefault\nclass:\ndata --\ninvariant --\nmembers --\nhelpers --\nconcrete types --\nctors, =, and dtors --\nhierarchy --\noperators\nconcept:\nrules --\nin generic programming --\ntemplate arguments --\nsemantics\nconstructor:\ninvariant --\nestablish invariant --\nthrow --\ndefault --\nnot needed --\nexplicit --\ndelegating --\nvirtual\nderived class:\nwhen to use --\nas interface --\ndestructors --\ncopy --\ngetters and setters --\nmultiple inheritance --\noverloading --\nslicing --\ndynamic_cast\ndestructor:\nand constructors --\nwhen needed? --\nmay not fail\nexception:\nerrors --\nthrow --\nfor errors only --\nnoexcept --\nminimize try --\nwhat if no exceptions?\nfor:\nrange-for and for --\nfor and while --\nfor-initializer --\nempty body --\nloop variable --\nloop variable type ???\nfunction:\nnaming --\nsingle operation --\nno throw --\narguments --\nargument passing --\nmultiple return values --\npointers --\nlambdas\ninline:\nsmall functions --\nin headers\ninitialization:\nalways --\nprefer {} --\nlambdas --\nin-class initializers --\nclass members --\nfactory functions\nlambda expression:\nwhen to use\noperator:\nconventional --\navoid conversion operators --\nand lambdas\npublic, private, and protected:\ninformation hiding --\nconsistency --\nprotected\nstatic_assert:\ncompile-time checking --\nand concepts\nstruct:\nfor organizing data --\nuse if no invariant --\nno private members\ntemplate:\nabstraction --\ncontainers --\nconcepts\nunsigned:\nand signed --\nbit manipulation\nvirtual:\ninterfaces --\nnot virtual --\ndestructor --\nnever fail\n\nYou can look at design concepts used to express the rules:\n\nassertion: ???\nerror: ???\nexception: exception guarantee (???)\nfailure: ???\ninvariant: ???\nleak: ???\nlibrary: ???\nprecondition: ???\npostcondition: ???\nresource: ???\n\n1.7.2. Abstract\nThis document is a set of guidelines for using C++ well.\nThe aim of this document is to help people to use modern C++ effectively.\nBy \"modern C++\" we mean C++11 and C++14 (and soon C++17).\nIn other words, what would you like your code to look like in 5 years' time, given that you can start now? In 10 years' time?\nThe guidelines are focused on relatively high-level issues, such as interfaces, resource management, memory management, and concurrency.\nSuch rules affect application architecture and library design.\nFollowing the rules will lead to code that is statically type safe, has no resource leaks, and catches many more programming logic errors than is common in code today.\nAnd it will run fast -- you can afford to do things right.\nWe are less concerned with low-level issues, such as naming conventions and indentation style.\nHowever, no topic that can help a programmer is out of bounds.\nOur initial set of rules emphasizes safety (of various forms) and simplicity.\nThey may very well be too strict.\nWe expect to have to introduce more exceptions to better accommodate real-world needs.\nWe also need more rules.\nYou will find some of the rules contrary to your expectations or even contrary to your experience.\nIf we haven't suggested you change your coding style in any way, we have failed!\nPlease try to verify or disprove rules!\nIn particular, we'd really like to have some of our rules backed up with measurements or better examples.\nYou will find some of the rules obvious or even trivial.\nPlease remember that one purpose of a guideline is to help someone who is less experienced or coming from a different background or language to get up to speed.\nMany of the rules are designed to be supported by an analysis tool.\nViolations of rules will be flagged with references (or links) to the relevant rule.\nWe do not expect you to memorize all the rules before trying to write code.\nOne way of thinking about these guidelines is as a specification for tools that happens to be readable by humans.\nThe rules are meant for gradual introduction into a code base.\nWe plan to build tools for that and hope others will too.\nComments and suggestions for improvements are most welcome.\nWe plan to modify and extend this document as our understanding improves and the language and the set of available libraries improve.\n1.7.3. In: Introduction\nThis is a set of core guidelines for modern C++, C++14, taking likely future enhancements and ISO Technical Specifications (TSs) into account.\nThe aim is to help C++ programmers to write simpler, more efficient, more maintainable code.\nIntroduction summary:\n\nIn.target: Target readership\nIn.aims: Aims\nIn.not: Non-aims\nIn.force: Enforcement\nIn.struct: The structure of this document\nIn.sec: Major sections\n\n1.7.3.1. In.target: Target readership\nAll C++ programmers. This includes programmers who might consider C.\n1.7.3.2. In.aims: Aims\nThe purpose of this document is to help developers to adopt modern C++ (C++11, C++14, and soon C++17) and to achieve a more uniform style across code bases.\nWe do not suffer the delusion that every one of these rules can be effectively applied to every code base. Upgrading old systems is hard. However, we do believe that a program that uses a rule is less error-prone and more maintainable than one that does not. Often, rules also lead to faster/easier initial development.\nAs far as we can tell, these rules lead to code that performs as well or better than older, more conventional techniques; they are meant to follow the zero-overhead principle (\"what you don't use, you don't pay for\" or \"when you use an abstraction mechanism appropriately, you get at least as good performance as if you had handcoded using lower-level language constructs\").\nConsider these rules ideals for new code, opportunities to exploit when working on older code, and try to approximate these ideals as closely as feasible.\nRemember:\n1.7.3.2.1. In.0: Don't panic!\nTake the time to understand the implications of a guideline rule on your program.\nThese guidelines are designed according to the \"subset of superset\" principle (Stroustrup05).\nThey do not simply define a subset of C++ to be used (for reliability, safety, performance, or whatever).\nInstead, they strongly recommend the use of a few simple \"extensions\" (library components)\nthat make the use of the most error-prone features of C++ redundant, so that they can be banned (in our set of rules).\nThe rules emphasize static type safety and resource safety.\nFor that reason, they emphasize possibilities for range checking, for avoiding dereferencing nullptr, for avoiding dangling pointers, and the systematic use of exceptions (via RAII).\nPartly to achieve that and partly to minimize obscure code as a source of errors, the rules also emphasize simplicity and the hiding of necessary complexity behind well-specified interfaces.\nMany of the rules are prescriptive.\nWe are uncomfortable with rules that simply state \"don't do that!\" without offering an alternative.\nOne consequence of that is that some rules can be supported only by heuristics, rather than precise and mechanically verifiable checks.\nOther rules articulate general principles. For these more general rules, more detailed and specific rules provide partial checking.\nThese guidelines address the core of C++ and its use.\nWe expect that most large organizations, specific application areas, and even large projects will need further rules, possibly further restrictions, and further library support.\nFor example, hard-real-time programmers typically can't use free store (dynamic memory) freely and will be restricted in their choice of libraries.\nWe encourage the development of such more specific rules as addenda to these core guidelines.\nBuild your ideal small foundation library and use that, rather than lowering your level of programming to glorified assembly code.\nThe rules are designed to allow gradual adoption.\nSome rules aim to increase various forms of safety while others aim to reduce the likelihood of accidents, many do both.\nThe guidelines aimed at preventing accidents often ban perfectly legal C++.\nHowever, when there are two ways of expressing an idea and one has shown itself a common source of errors and the other has not, we try to guide programmers towards the latter.\n1.7.3.3. In.not: Non-aims\nThe rules are not intended to be minimal or orthogonal.\nIn particular, general rules can be simple, but unenforceable.\nAlso, it is often hard to understand the implications of a general rule.\nMore specialized rules are often easier to understand and to enforce, but without general rules, they would just be a long list of special cases.\nWe provide rules aimed at helping novices as well as rules supporting expert use.\nSome rules can be completely enforced, but others are based on heuristics.\nThese rules are not meant to be read serially, like a book.\nYou can browse through them using the links.\nHowever, their main intended use is to be targets for tools.\nThat is, a tool looks for violations and the tool returns links to violated rules.\nThe rules then provide reasons, examples of potential consequences of the violation, and suggested remedies.\nThese guidelines are not intended to be a substitute for a tutorial treatment of C++.\nIf you need a tutorial for some given level of experience, see the references.\nThis is not a guide on how to convert old C++ code to more modern code.\nIt is meant to articulate ideas for new code in a concrete fashion.\nHowever, see the modernization section for some possible approaches to modernizing/rejuvenating/upgrading.\nImportantly, the rules support gradual adoption: It is typically infeasible to completely convert a large code base all at once.\nThese guidelines are not meant to be complete or exact in every language-technical detail.\nFor the final word on language definition issues, including every exception to general rules and every feature, see the ISO C++ standard.\nThe rules are not intended to force you to write in an impoverished subset of C++.\nThey are emphatically not meant to define a, say, Java-like subset of C++.\nThey are not meant to define a single \"one true C++\" language.\nWe value expressiveness and uncompromised performance.\nThe rules are not value-neutral.\nThey are meant to make code simpler and more correct/safer than most existing C++ code, without loss of performance.\nThey are meant to inhibit perfectly valid C++ code that correlates with errors, spurious complexity, and poor performance.\nThe rules are not perfect.\nA rule can do harm by prohibiting something that is useful in a given situation.\nA rule can do harm by failing to prohibit something that enables a serious error in a given situation.\nA rule can do a lot of harm by being vague, ambiguous, unenforceable, or by enabling every solution to a problem.\nIt is impossible to completely meet the \"do no harm\" criteria.\nInstead, our aim is the less ambitious: \"Do the most good for most programmers\";\nif you cannot live with a rule, object to it, ignore it, but don't water it down until it becomes meaningless.\nAlso, suggest an improvement.\n1.7.3.4. In.force: Enforcement\nRules with no enforcement are unmanageable for large code bases.\nEnforcement of all rules is possible only for a small weak set of rules or for a specific user community.\n\nBut we want lots of rules, and we want rules that everybody can use.\nBut different people have different needs.\nBut people don't like to read lots of rules.\nBut people can't remember many rules.\n\nSo, we need subsetting to meet a variety of needs.\n\nBut arbitrary subsetting leads to chaos.\n\nWe want guidelines that help a lot of people, make code more uniform, and strongly encourage people to modernize their code.\nWe want to encourage best practices, rather than leave all to individual choices and management pressures.\nThe ideal is to use all rules; that gives the greatest benefits.\nThis adds up to quite a few dilemmas.\nWe try to resolve those using tools.\nEach rule has an Enforcement section listing ideas for enforcement.\nEnforcement might be done by code review, by static analysis, by compiler, or by run-time checks.\nWherever possible, we prefer \"mechanical\" checking (humans are slow, inaccurate, and bore easily) and static checking.\nRun-time checks are suggested only rarely where no alternative exists; we do not want to introduce \"distributed fat\".\nWhere appropriate, we label a rule (in the Enforcement sections) with the name of groups of related rules (called \"profiles\").\nA rule can be part of several profiles, or none.\nFor a start, we have a few profiles corresponding to common needs (desires, ideals):\n\ntype: No type violations (reinterpreting a T as a U through casts, unions, or varargs)\nbounds: No bounds violations (accessing beyond the range of an array)\nlifetime: No leaks (failing to delete or multiple delete) and no access to invalid objects (dereferencing nullptr, using a dangling reference).\n\nThe profiles are intended to be used by tools, but also serve as an aid to the human reader.\nWe do not limit our comment in the Enforcement sections to things we know how to enforce; some comments are mere wishes that might inspire some tool builder.\nTools that implement these rules shall respect the following syntax to explicitly suppress a rule:\n[[gsl::suppress(tag)]]\nwhere \"tag\" is the anchor name of the item where the Enforcement rule appears (e.g., for C.134 it is \"Rh-public\"), the\nname of a profile group-of-rules (\"type\", \"bounds\", or \"lifetime\"),\nor a specific rule in a profile (type.4, or bounds.2).\n1.7.3.5. In.struct: The structure of this document\nEach rule (guideline, suggestion) can have several parts:\n\nThe rule itself -- e.g., no naked new\nA rule reference number -- e.g., C.7 (the 7th rule related to classes).\nSince the major sections are not inherently ordered, we use letters as the first part of a rule reference \"number\".\nWe leave gaps in the numbering to minimize \"disruption\" when we add or remove rules.\nReasons (rationales) -- because programmers find it hard to follow rules they don't understand\nExamples -- because rules are hard to understand in the abstract; can be positive or negative\nAlternatives -- for \"don't do this\" rules\nExceptions -- we prefer simple general rules. However, many rules apply widely, but not universally, so exceptions must be listed\nEnforcement -- ideas about how the rule might be checked \"mechanically\"\nSee alsos -- references to related rules and/or further discussion (in this document or elsewhere)\nNotes (comments) -- something that needs saying that doesn't fit the other classifications\nDiscussion -- references to more extensive rationale and/or examples placed outside the main lists of rules\n\nSome rules are hard to check mechanically, but they all meet the minimal criteria that an expert programmer can spot many violations without too much trouble.\nWe hope that \"mechanical\" tools will improve with time to approximate what such an expert programmer notices.\nAlso, we assume that the rules will be refined over time to make them more precise and checkable.\nA rule is aimed at being simple, rather than carefully phrased to mention every alternative and special case.\nSuch information is found in the Alternative paragraphs and the Discussion sections.\nIf you don't understand a rule or disagree with it, please visit its Discussion.\nIf you feel that a discussion is missing or incomplete, enter an Issue\nexplaining your concerns and possibly a corresponding PR.\nThis is not a language manual.\nIt is meant to be helpful, rather than complete, fully accurate on technical details, or a guide to existing code.\nRecommended information sources can be found in the references.\n1.7.3.6. In.sec: Major sections\n\nIn: Introduction\nP: Philosophy\nI: Interfaces\nF: Functions\nC: Classes and class hierarchies\nEnum: Enumerations\nR: Resource management\nES: Expressions and statements\nE: Error handling\nCon: Constants and immutability\nT: Templates and generic programming\nCP: Concurrency\nSL: The Standard library\nSF: Source files\nCPL: C-style programming\nPro: Profiles\nGSL: Guideline support library\nFAQ: Answers to frequently asked questions\n\nSupporting sections:\n\nNL: Naming and layout\nPer: Performance\nN: Non-Rules and myths\nRF: References\nAppendix A: Libraries\nAppendix B: Modernizing code\nAppendix C: Discussion\nAppendix D: Tools support\nGlossary\nTo-do: Unclassified proto-rules\n\nThese sections are not orthogonal.\nEach section (e.g., \"P\" for \"Philosophy\") and each subsection (e.g., \"C.hier\" for \"Class Hierarchies (OOP)\") have an abbreviation for ease of searching and reference.\nThe main section abbreviations are also used in rule numbers (e.g., \"C.11\" for \"Make concrete types regular\").\n1.7.4. P: Philosophy\nThe rules in this section are very general.\nPhilosophy rules summary:\n\nP.1: Express ideas directly in code\nP.2: Write in ISO Standard C++\nP.3: Express intent\nP.4: Ideally, a program should be statically type safe\nP.5: Prefer compile-time checking to run-time checking\nP.6: What cannot be checked at compile time should be checkable at run time\nP.7: Catch run-time errors early\nP.8: Don't leak any resources\nP.9: Don't waste time or space\nP.10: Prefer immutable data to mutable data\nP.11: Encapsulate messy constructs, rather than spreading through the code\nP.12: Use supporting tools as appropriate\nP.13: Use support libraries as appropriate\n\nPhilosophical rules are generally not mechanically checkable.\nHowever, individual rules reflecting these philosophical themes are.\nWithout a philosophical basis, the more concrete/specific/checkable rules lack rationale.\nP.1: Express ideas directly in code\nReason\nCompilers don't read comments (or design documents) and neither do many programmers (consistently).\nWhat is expressed in code has defined semantics and can (in principle) be checked by compilers and other tools.\nExample\nclass Date {\n    // ...\npublic:\n    Month month() const;  // do\n    int month();          // don't\n    // ...\n};\nThe first declaration of month is explicit about returning a Month and about not modifying the state of the Date object.\nThe second version leaves the reader guessing and opens more possibilities for uncaught bugs.\nExample\nvoid f(vector& v)\n{\n    string val;\n    cin >> val;\n    // ...\n    int index = -1;                    // bad\n    for (int i = 0; i That loop is a restricted form of std::find.\nA much clearer expression of intent would be:\nvoid f(vector& v)\n{\n    string val;\n    cin >> val;\n    // ...\n    auto p = find(begin(v), end(v), val);  // better\n    // ...\n}\nA well-designed library expresses intent (what is to be done, rather than just how something is being done) far better than direct use of language features.\nA C++ programmer should know the basics of the standard library, and use it where appropriate.\nAny programmer should know the basics of the foundation libraries of the project being worked on, and use them appropriately.\nAny programmer using these guidelines should know the guideline support library, and use it appropriately.\nExample\nchange_speed(double s);   // bad: what does s signify?\n// ...\nchange_speed(2.3);\nA better approach is to be explicit about the meaning of the double (new speed or delta on old speed?) and the unit used:\nchange_speed(Speed s);    // better: the meaning of s is specified\n// ...\nchange_speed(2.3);        // error: no unit\nchange_speed(23m / 10s);  // meters per second\nWe could have accepted a plain (unit-less) double as a delta, but that would have been error-prone.\nIf we wanted both absolute speed and deltas, we would have defined a Delta type.\nEnforcement\nVery hard in general.\n\nuse const consistently (check if member functions modify their object; check if functions modify arguments passed by pointer or reference)\nflag uses of casts (casts neuter the type system)\ndetect code that mimics the standard library (hard)\n\nP.2: Write in ISO Standard C++\nReason\nThis is a set of guidelines for writing ISO Standard C++.\nNote\nThere are environments where extensions are necessary, e.g., to access system resources.\nIn such cases, localize the use of necessary extensions and control their use with non-core Coding Guidelines.  If possible, build interfaces that encapsulate the extensions so they can be turned off or compiled away on systems that do not support those extensions.\nExtensions often do not have rigorously defined semantics.  Even extensions that\nare common and implemented by multiple compilers may have slightly different\nbehaviors and edge case behavior as a direct result of not having a rigorous\nstandard definition.  With sufficient use of any such extension, expected\nportability will be impacted.\nNote\nUsing valid ISO C++ does not guarantee portability (let alone correctness).\nAvoid dependence on undefined behavior (e.g., undefined order of evaluation)\nand be aware of constructs with implementation defined meaning (e.g., sizeof(int)).\nNote\nThere are environments where restrictions on use of standard C++ language or library features are necessary, e.g., to avoid dynamic memory allocation as required by aircraft control software standards.\nIn such cases, control their (dis)use with an extension of these Coding Guidelines customized to the specific environment.\nEnforcement\nUse an up-to-date C++ compiler (currently C++11 or C++14) with a set of options that do not accept extensions.\nP.3: Express intent\nReason\nUnless the intent of some code is stated (e.g., in names or comments), it is impossible to tell whether the code does what it is supposed to do.\nExample\nint i = 0;\nwhile (i The intent of \"just\" looping over the elements of v is not expressed here. The implementation detail of an index is exposed (so that it might be misused), and i outlives the scope of the loop, which may or may not be intended. The reader cannot know from just this section of code.\nBetter:\nfor (const auto& x : v) { /* do something with the value of x */ }\nNow, there is no explicit mention of the iteration mechanism, and the loop operates on a reference to const elements so that accidental modification cannot happen. If modification is desired, say so:\nfor (auto& x : v) { /* modify x */ }\nFor more details about for-statements, see ES.71.\nSometimes better still, use a named algorithm:\nfor_each(v, [](int x) { /* do something with the value of x */ });\nfor_each(par, v, [](int x) { /* do something with the value of x */ });\nThe last variant makes it clear that we are not interested in the order in which the elements of v are handled.\nA programmer should be familiar with\n\nThe guideline support library\nThe ISO C++ standard library\nWhatever foundation libraries are used for the current project(s)\n\nNote\nAlternative formulation: Say what should be done, rather than just how it should be done.\nNote\nSome language constructs express intent better than others.\nExample\nIf two ints are meant to be the coordinates of a 2D point, say so:\ndraw_line(int, int, int, int);  // obscure\ndraw_line(Point, Point);        // clearer\nEnforcement\nLook for common patterns for which there are better alternatives\n\nsimple for loops vs. range-for loops\nf(T*, int) interfaces vs. f(span) interfaces\nloop variables in too large a scope\nnaked new and delete\nfunctions with many parameters of built-in types\n\nThere is a huge scope for cleverness and semi-automated program transformation.\nP.4: Ideally, a program should be statically type safe\nReason\nIdeally, a program would be completely statically (compile-time) type safe.\nUnfortunately, that is not possible. Problem areas:\n\nunions\ncasts\narray decay\nrange errors\nnarrowing conversions\n\nNote\nThese areas are sources of serious problems (e.g., crashes and security violations).\nWe try to provide alternative techniques.\nEnforcement\nWe can ban, restrain, or detect the individual problem categories separately, as required and feasible for individual programs.\nAlways suggest an alternative.\nFor example:\n\nunions -- use variant (in C++17)\ncasts -- minimize their use; templates can help\narray decay -- use span (from the GSL)\nrange errors -- use span\nnarrowing conversions -- minimize their use and use narrow or narrow_cast (from the GSL) where they are necessary\n\nP.5: Prefer compile-time checking to run-time checking\nReason\nCode clarity and performance.\nYou don't need to write error handlers for errors caught at compile time.\nExample\n// Int is an alias used for integers\nint bits = 0;         // don't: avoidable code\nfor (Int i = 1; i; i This example fails to achieve what it is trying to achieve (because overflow is undefined) and should be replaced with a simple static_assert:\n// Int is an alias used for integers\nstatic_assert(sizeof(Int) >= 4);    // do: compile-time check\nOr better still just use the type system and replace Int with int32_t.\nExample\nvoid read(int* p, int n);   // read max n integers into *p\n\nint a[100];\nread(a, 1000);    // bad\nbetter\nvoid read(span r); // read into the range of integers r\n\nint a[100];\nread(a);        // better: let the compiler figure out the number of elements\nAlternative formulation: Don't postpone to run time what can be done well at compile time.\nEnforcement\n\nLook for pointer arguments.\nLook for run-time checks for range violations.\n\nP.6: What cannot be checked at compile time should be checkable at run time\nReason\nLeaving hard-to-detect errors in a program is asking for crashes and bad results.\nNote\nIdeally, we catch all errors (that are not errors in the programmer's logic) at either compile time or run time. It is impossible to catch all errors at compile time and often not affordable to catch all remaining errors at run time. However, we should endeavor to write programs that in principle can be checked, given sufficient resources (analysis programs, run-time checks, machine resources, time).\nExample, bad\n// separately compiled, possibly dynamically loaded\nextern void f(int* p);\n\nvoid g(int n)\n{\n    // bad: the number of elements is not passed to f()\n    f(new int[n]);\n}\nHere, a crucial bit of information (the number of elements) has been so thoroughly \"obscured\" that static analysis is probably rendered infeasible and dynamic checking can be very difficult when f() is part of an ABI so that we cannot \"instrument\" that pointer. We could embed helpful information into the free store, but that requires global changes to a system and maybe to the compiler. What we have here is a design that makes error detection very hard.\nExample, bad\nWe can of course pass the number of elements along with the pointer:\n// separately compiled, possibly dynamically loaded\nextern void f2(int* p, int n);\n\nvoid g2(int n)\n{\n    f2(new int[n], m);  // bad: a wrong number of elements can be passed to f()\n}\nPassing the number of elements as an argument is better (and far more common) than just passing the pointer and relying on some (unstated) convention for knowing or discovering the number of elements. However (as shown), a simple typo can introduce a serious error. The connection between the two arguments of f2() is conventional, rather than explicit.\nAlso, it is implicit that f2() is supposed to delete its argument (or did the caller make a second mistake?).\nExample, bad\nThe standard library resource management pointers fail to pass the size when they point to an object:\n// separately compiled, possibly dynamically loaded\n// NB: this assumes the calling code is ABI-compatible, using a\n// compatible C++ compiler and the same stdlib implementation\nextern void f3(unique_ptr, int n);\n\nvoid g3(int n)\n{\n    f3(make_unique(n), m);    // bad: pass ownership and size separately\n}\nExample\nWe need to pass the pointer and the number of elements as an integral object:\nextern void f4(vector&);   // separately compiled, possibly dynamically loaded\nextern void f4(span);      // separately compiled, possibly dynamically loaded\n                                // NB: this assumes the calling code is ABI-compatible, using a\n                                // compatible C++ compiler and the same stdlib implementation\n\nvoid g3(int n)\n{\n    vector v(n);\n    f4(v);                     // pass a reference, retain ownership\n    f4(span{v});          // pass a view, retain ownership\n}\nThis design carries the number of elements along as an integral part of an object, so that errors are unlikely and dynamic (run-time) checking is always feasible, if not always affordable.\nExample\nHow do we transfer both ownership and all information needed for validating use?\nvector f5(int n)    // OK: move\n{\n    vector v(n);\n    // ... initialize v ...\n    return v;\n}\n\nunique_ptr f6(int n)    // bad: loses n\n{\n    auto p = make_unique(n);\n    // ... initialize *p ...\n    return p;\n}\n\nowner f7(int n)    // bad: loses n and we might forget to delete\n{\n    owner p = new int[n];\n    // ... initialize *p ...\n    return p;\n}\nExample\n\n???\nshow how possible checks are avoided by interfaces that pass polymorphic base classes around, when they actually know what they need?\nOr strings as \"free-style\" options\n\nEnforcement\n\nFlag (pointer, count)-style interfaces (this will flag a lot of examples that can't be fixed for compatibility reasons)\n???\n\nP.7: Catch run-time errors early\nReason\nAvoid \"mysterious\" crashes.\nAvoid errors leading to (possibly unrecognized) wrong results.\nExample\nvoid increment1(int* p, int n)    // bad: error-prone\n{\n    for (int i = 0; i Here we made a small error in use1 that will lead to corrupted data or a crash.\nThe (pointer, count)-style interface leaves increment1() with no realistic way of defending itself against out-of-range errors.\nIf we could check subscripts for out of range access, then the error would not be discovered until p[10] was accessed.\nWe could check earlier and improve the code:\nvoid increment2(span p)\n{\n    for (int& x : p) ++x;\n}\n\nvoid use2(int m)\n{\n    const int n = 10;\n    int a[n] = {};\n    // ...\n    increment2({a, m});    // maybe typo, maybe m Now, m  can be checked at the point of call (early) rather than later.\nIf all we had was a typo so that we meant to use n as the bound, the code could be further simplified (eliminating the possibility of an error):\nvoid use3(int m)\n{\n    const int n = 10;\n    int a[n] = {};\n    // ...\n    increment2(a);   // the number of elements of a need not be repeated\n    // ...\n}\nExample, bad\nDon't repeatedly check the same value. Don't pass structured data as strings:\nDate read_date(istream& is);    // read date from istream\n\nDate extract_date(const string& s);    // extract date from string\n\nvoid user1(const string& date)    // manipulate date\n{\n    auto d = extract_date(date);\n    // ...\n}\n\nvoid user2()\n{\n    Date d = read_date(cin);\n    // ...\n    user1(d.to_string());\n    // ...\n}\nThe date is validated twice (by the Date constructor) and passed as a character string (unstructured data).\nExample\nExcess checking can be costly.\nThere are cases where checking early is dumb because you may not ever need the value, or may only need part of the value that is more easily checked than the whole.  Similarly, don't add validity checks that change the asymptotic behavior of your interface (e.g., don't add a O(n) check to an interface with an average complexity of O(1)).\nclass Jet {    // Physics says: e * e The physical law for a jet (e * e ) is not an invariant because of the possibility for measurement errors.\n???\nEnforcement\n\nLook at pointers and arrays: Do range-checking early and not repeatedly\nLook at conversions: Eliminate or mark narrowing conversions\nLook for unchecked values coming from input\nLook for structured data (objects of classes with invariants) being converted into strings\n???\n\nP.8: Don't leak any resources\nReason\nEven a slow growth in resources will, over time, exhaust the availability of those resources.\nThis is particularly important for long-running programs, but is an essential piece of responsible programming behavior.\nExample, bad\nvoid f(char* name)\n{\n    FILE* input = fopen(name, \"r\");\n    // ...\n    if (something) return;   // bad: if something == true, a file handle is leaked\n    // ...\n    fclose(input);\n}\nPrefer RAII:\nvoid f(char* name)\n{\n    ifstream input {name};\n    // ...\n    if (something) return;   // OK: no leak\n    // ...\n}\nSee also: The resource management section\nNote\nA leak is colloquially \"anything that isn't cleaned up.\"\nThe more important classification is \"anything that can no longer be cleaned up.\"\nFor example, allocating an object on the heap and then losing the last pointer that points to that allocation.\nThis rule should not be taken as requiring that allocations within long-lived objects must be returned during program shutdown.\nFor example, relying on system guaranteed cleanup such as file closing and memory deallocation upon process shutdown can simplify code.\nHowever, relying on abstractions that implicitly clean up can be as simple, and often safer.\nNote\nEnforcing the lifetime profile eliminates leaks.\nWhen combined with resource safety provided by RAII, it eliminates the need for \"garbage collection\" (by generating no garbage).\nCombine this with enforcement of the type and bounds profiles and you get complete type- and resource-safety, guaranteed by tools.\nEnforcement\n\nLook at pointers: Classify them into non-owners (the default) and owners.\nWhere feasible, replace owners with standard-library resource handles (as in the example above).\nAlternatively, mark an owner as such using owner from the GSL.\nLook for naked new and delete\nLook for known resource allocating functions returning raw pointers (such as fopen, malloc, and strdup)\n\nP.9: Don't waste time or space\nReason\nThis is C++.\nNote\nTime and space that you spend well to achieve a goal (e.g., speed of development, resource safety, or simplification of testing) is not wasted.\n\"Another benefit of striving for efficiency is that the process forces you to understand the problem in more depth.\" - Alex Stepanov\nExample, bad\nstruct X {\n    char ch;\n    int i;\n    string s;\n    char ch2;\n\n    X& operator=(const X& a);\n    X(const X&);\n};\n\nX waste(const char* p)\n{\n    if (p == nullptr) throw Nullptr_error{};\n    int n = strlen(p);\n    auto buf = new char[n];\n    if (buf == nullptr) throw Allocation_error{};\n    for (int i = 0; i Yes, this is a caricature, but we have seen every individual mistake in production code, and worse.\nNote that the layout of X guarantees that at least 6 bytes (and most likely more) are wasted.\nThe spurious definition of copy operations disables move semantics so that the return operation is slow\n(please note that the Return Value Optimization, RVO, is not guaranteed here).\nThe use of new and delete for buf is redundant; if we really needed a local string, we should use a local string.\nThere are several more performance bugs and gratuitous complication.\nExample, bad\nvoid lower(zstring s)\n{\n    for (int i = 0; i Yes, this is an example from production code.\nWe leave it to the reader to figure out what's wasted.\nNote\nAn individual example of waste is rarely significant, and where it is significant, it is typically easily eliminated by an expert.\nHowever, waste spread liberally across a code base can easily be significant and experts are not always as available as we would like.\nThe aim of this rule (and the more specific rules that support it) is to eliminate most waste related to the use of C++ before it happens.\nAfter that, we can look at waste related to algorithms and requirements, but that is beyond the scope of these guidelines.\nEnforcement\nMany more specific rules aim at the overall goals of simplicity and elimination of gratuitous waste.\nP.10: Prefer immutable data to mutable data\nReason\nIt is easier to reason about constants than about variables.\nSomething immutable cannot change unexpectedly.\nSometimes immutability enables better optimization.\nYou can't have a data race on a constant.\nSee Con: Constants and Immutability\nP.11: Encapsulate messy constructs, rather than spreading through the code\nReason\nMessy code is more likely to hide bugs and harder to write.\nA good interface is easier and safer to use.\nMessy, low-level code breeds more such code.\nExample\nint sz = 100;\nint* p = (int*) malloc(sizeof(int) * sz);\nint count = 0;\n// ...\nfor (;;) {\n    // ... read an int into x, exit loop if end of file is reached ...\n    // ... check that x is valid ...\n    if (count == sz)\n        p = (int*) realloc(p, sizeof(int) * sz * 2);\n    p[count++] = x;\n    // ...\n}\nThis is low-level, verbose, and error-prone.\nFor example, we \"forgot\" to test for memory exhaustion.\nInstead, we could use vector:\nvector v;\nv.reserve(100);\n// ...\nfor (int x; cin >> x; ) {\n    // ... check that x is valid ...\n    v.push_back(x);\n}\nNote\nThe standards library and the GSL are examples of this philosophy.\nFor example, instead of messing with the arrays, unions, cast, tricky lifetime issues, gsl::owner, etc.\nthat are needed to implement key abstractions, such as vector, span, lock_guard, and future, we use the libraries\ndesigned and implemented by people with more time and expertise than we usually have.\nSimilarly, we can and should design and implement more specialized libraries, rather than leaving the users (often ourselves)\nwith the challenge of repeatedly getting low-level code well.\nThis is a variant of the subset of superset principle that underlies these guidelines.\nEnforcement\n\nLook for \"messy code\" such as complex pointer manipulation and casting outside the implementation of abstractions.\n\nP.12: Use supporting tools as appropriate\nReason\nThere are many things that are done better \"by machine\".\nComputers don't tire or get bored by repetitive tasks.\nWe typically have better things to do than repeatedly do routine tasks.\nExample\nRun a static analyzer to verify that your code follows the guidelines you want it to follow.\nNote\nSee\n\nStatic analysis tools\nConcurrency tools\nTesting tools\n\nThere are many other kinds of tools, such as source code depositories, build tools, etc.,\nbut those are beyond the scope of these guidelines.\nNote\nBe careful not to become dependent on over-elaborate or over-specialized tool chains.\nThose can make your otherwise portable code non-portable.\nP.13: Use support libraries as appropriate\nReason\nUsing a well-designed, well-documented, and well-supported library saves time and effort;\nits quality and documentation are likely to be greater than what you could do\nif the majority of your time must be spent on an implementation.\nThe cost (time, effort, money, etc.) of a library can be shared over many users.\nA widely used library is more likely to be kept up-to-date and ported to new systems than an individual application.\nKnowledge of a widely-used library can save time on other/future projects.\nSo, if a suitable library exists for your application domain, use it.\nExample\nstd::sort(begin(v), end(v), std::greater<>());\nUnless you are an expert in sorting algorithms and have plenty of time,\nthis is more likely to be correct and to run faster than anything you write for a specific application.\nYou need a reason not to use the standard library (or whatever foundational libraries your application uses) rather than a reason to use it.\nNote\nBy default use\n\nThe ISO C++ standard library\nThe Guidelines Support Library\n\nNote\nIf no well-designed, well-documented, and well-supported library exists for an important domain,\nmaybe you should design and implement it, and then use it.\n1.7.5. I: Interfaces\nAn interface is a contract between two parts of a program. Precisely stating what is expected of a supplier of a service and a user of that service is essential.\nHaving good (easy-to-understand, encouraging efficient use, not error-prone, supporting testing, etc.) interfaces is probably the most important single aspect of code organization.\nInterface rule summary:\n\nI.1: Make interfaces explicit\nI.2: Avoid global variables\nI.3: Avoid singletons\nI.4: Make interfaces precisely and strongly typed\nI.5: State preconditions (if any)\nI.6: Prefer Expects() for expressing preconditions\nI.7: State postconditions\nI.8: Prefer Ensures() for expressing postconditions\nI.9: If an interface is a template, document its parameters using concepts\nI.10: Use exceptions to signal a failure to perform a required task\nI.11: Never transfer ownership by a raw pointer (T*) or reference (T&)\nI.12: Declare a pointer that must not be null as not_null\nI.13: Do not pass an array as a single pointer\nI.22: Avoid complex initialization of global objects\nI.23: Keep the number of function arguments low\nI.24: Avoid adjacent unrelated parameters of the same type\nI.25: Prefer abstract classes as interfaces to class hierarchies\nI.26: If you want a cross-compiler ABI, use a C-style subset\nI.27: For stable library ABI, consider the Pimpl idiom\nI.30: Encapsulate rule violations\n\nSee also\n\nF: Functions\nC.concrete: Concrete types\nC.hier: Class hierarchies\nC.over: Overloading and overloaded operators\nC.con: Containers and other resource handles\nE: Error handling\nT: Templates and generic programming\n\nI.1: Make interfaces explicit\nReason\nCorrectness. Assumptions not stated in an interface are easily overlooked and hard to test.\nExample, bad\nControlling the behavior of a function through a global (namespace scope) variable (a call mode) is implicit and potentially confusing. For example:\nint round(double d)\n{\n    return (round_up) ? ceil(d) : d;    // don't: \"invisible\" dependency\n}\nIt will not be obvious to a caller that the meaning of two calls of round(7.2) might give different results.\nException\nSometimes we control the details of a set of operations by an environment variable, e.g., normal vs. verbose output or debug vs. optimized.\nThe use of a non-local control is potentially confusing, but controls only implementation details of otherwise fixed semantics.\nExample, bad\nReporting through non-local variables (e.g., errno) is easily ignored. For example:\n// don't: no test of printf's return value\nfprintf(connection, \"logging: %d %d %d\\n\", x, y, s);\nWhat if the connection goes down so that no logging output is produced? See I.??.\nAlternative: Throw an exception. An exception cannot be ignored.\nAlternative formulation: Avoid passing information across an interface through non-local or implicit state.\nNote that non-const member functions pass information to other member functions through their object's state.\nAlternative formulation: An interface should be a function or a set of functions.\nFunctions can be template functions and sets of functions can be classes or class templates.\nEnforcement\n\n(Simple) A function should not make control-flow decisions based on the values of variables declared at namespace scope.\n(Simple) A function should not write to variables declared at namespace scope.\n\nI.2: Avoid global variables\nReason\nNon-const global variables hide dependencies and make the dependencies subject to unpredictable changes.\nExample\nstruct Data {\n    // ... lots of stuff ...\n} data;            // non-const data\n\nvoid compute()     // don't\n{\n    // ... use data ...\n}\n\nvoid output()     // don't\n{\n    // ... use data ...\n}\nWho else might modify data?\nNote\nGlobal constants are useful.\nNote\nThe rule against global variables applies to namespace scope variables as well.\nAlternative: If you use global (more generally namespace scope) data to avoid copying, consider passing the data as an object by reference to const.\nAnother solution is to define the data as the state of some object and the operations as member functions.\nWarning: Beware of data races: If one thread can access nonlocal data (or data passed by reference) while another thread executes the callee, we can have a data race.\nEvery pointer or reference to mutable data is a potential data race.\nNote\nYou cannot have a race condition on immutable data.\nReferences: See the rules for calling functions.\nEnforcement\n(Simple) Report all non-const variables declared at namespace scope.\nI.3: Avoid singletons\nReason\nSingletons are basically complicated global objects in disguise.\nExample\nclass Singleton {\n    // ... lots of stuff to ensure that only one Singleton object is created,\n    // that it is initialized properly, etc.\n};\nThere are many variants of the singleton idea.\nThat's part of the problem.\nNote\nIf you don't want a global object to change, declare it const or constexpr.\nException\nYou can use the simplest \"singleton\" (so simple that it is often not considered a singleton) to get initialization on first use, if any:\nX& myX()\n{\n    static X my_x {3};\n    return my_x;\n}\nThis is one of the most effective solutions to problems related to initialization order.\nIn a multi-threaded environment, the initialization of the static object does not introduce a race condition\n(unless you carelessly access a shared object from within its constructor).\nNote that the initialization of a local static does not imply a race condition.\nHowever, if the destruction of X involves an operation that needs to be synchronized we must use a less simple solution.\nFor example:\nX& myX()\n{\n    static auto p = new X {3};\n    return *p;  // potential leak\n}\nNow someone must delete that object in some suitably thread-safe way.\nThat's error-prone, so we don't use that technique unless\n\nmyX is in multi-threaded code,\nthat X object needs to be destroyed (e.g., because it releases a resource), and\nX's destructor's code needs to be synchronized.\n\nIf you, as many do, define a singleton as a class for which only one object is created, functions like myX are not singletons, and this useful technique is not an exception to the no-singleton rule.\nEnforcement\nVery hard in general.\n\nLook for classes with names that include singleton.\nLook for classes for which only a single object is created (by counting objects or by examining constructors).\nIf a class X has a public static function that contains a function-local static of the class' type X and returns a pointer or reference to it, ban that.\n\nI.4: Make interfaces precisely and strongly typed\nReason\nTypes are the simplest and best documentation, have well-defined meaning, and are guaranteed to be checked at compile time.\nAlso, precisely typed code is often optimized better.\nExample, don't\nConsider:\nvoid pass(void* data);    // void* is suspicious\nNow the callee must cast the data pointer (back) to a correct type to use it. That is error-prone and often verbose.\nAvoid void*, especially in interfaces.\nConsider using a variant or a pointer to base instead.\nAlternative: Often, a template parameter can eliminate the void* turning it into a T* or T&.\nFor generic code these Ts can be general or concept constrained template parameters.\nExample, bad\nConsider:\nvoid draw_rect(int, int, int, int);   // great opportunities for mistakes\n\ndraw_rect(p.x, p.y, 10, 20);          // what does 10, 20 mean?\nAn int can carry arbitrary forms of information, so we must guess about the meaning of the four ints.\nMost likely, the first two are an x,y coordinate pair, but what are the last two?\nComments and parameter names can help, but we could be explicit:\nvoid draw_rectangle(Point top_left, Point bottom_right);\nvoid draw_rectangle(Point top_left, Size height_width);\n\ndraw_rectangle(p, Point{10, 20});  // two corners\ndraw_rectangle(p, Size{10, 20});   // one corner and a (height, width) pair\nObviously, we cannot catch all errors through the static type system\n(e.g., the fact that a first argument is supposed to be a top-left point is left to convention (naming and comments)).\nExample, bad\nIn the following example, it is not clear from the interface what time_to_blink means: Seconds? Milliseconds?\nvoid blink_led(int time_to_blink) // bad -- the unit is ambiguous\n{\n    // ...\n    // do something with time_to_blink\n    // ...\n}\n\nvoid use()\n{\n    blink_led(2);\n}\nExample, good\nstd::chrono::duration types (C++11) helps making the unit of time duration explicit.\nvoid blink_led(milliseconds time_to_blink) // good -- the unit is explicit\n{\n    // ...\n    // do something with time_to_blink\n    // ...\n}\n\nvoid use()\n{\n    blink_led(1500ms);\n}\nThe function can also be written in such a way that it will accept any time duration unit.\ntemplate\nvoid blink_led(duration time_to_blink) // good -- accepts any unit\n{\n    // assuming that millisecond is the smallest relevant unit\n    auto milliseconds_to_blink = duration_cast(time_to_blink);\n    // ...\n    // do something with milliseconds_to_blink\n    // ...\n}\n\nvoid use()\n{\n    blink_led(2s);\n    blink_led(1500ms);\n}\nEnforcement\n\n(Simple) Report the use of void* as a parameter or return type.\n(Hard to do well) Look for member functions with many built-in type arguments.\n\nI.5: State preconditions (if any)\nReason\nArguments have meaning that may constrain their proper use in the callee.\nExample\nConsider:\ndouble sqrt(double x);\nHere x must be nonnegative. The type system cannot (easily and naturally) express that, so we must use other means. For example:\ndouble sqrt(double x); // x must be nonnegative\nSome preconditions can be expressed as assertions. For example:\ndouble sqrt(double x) { Expects(x >= 0); /* ... */ }\nIdeally, that Expects(x >= 0) should be part of the interface of sqrt() but that's not easily done. For now, we place it in the definition (function body).\nReferences: Expects() is described in GSL.\nNote\nPrefer a formal specification of requirements, such as Expects(p != nullptr);.\nIf that is infeasible, use English text in comments, such as // the sequence [p:q) is ordered using .\nNote\nMost member functions have as a precondition that some class invariant holds.\nThat invariant is established by a constructor and must be reestablished upon exit by every member function called from outside the class.\nWe don't need to mention it for each member function.\nEnforcement\n(Not enforceable)\nSee also: The rules for passing pointers. ???\nI.6: Prefer Expects() for expressing preconditions\nReason\nTo make it clear that the condition is a precondition and to enable tool use.\nExample\nint area(int height, int width)\n{\n    Expects(height > 0 && width > 0);            // good\n    if (height Note\nPreconditions can be stated in many ways, including comments, if-statements, and assert().\nThis can make them hard to distinguish from ordinary code, hard to update, hard to manipulate by tools, and may have the wrong semantics (do you always want to abort in debug mode and check nothing in productions runs?).\nNote\nPreconditions should be part of the interface rather than part of the implementation,\nbut we don't yet have the language facilities to do that.\nOnce language support becomes available (e.g., see the contract proposal) we will adopt the standard version of preconditions, postconditions, and assertions.\nNote\nExpects() can also be used to check a condition in the middle of an algorithm.\nNote\nNo, using unsigned is not a good way to sidestep the problem of ensuring that a value is nonnegative.\nEnforcement\n(Not enforceable) Finding the variety of ways preconditions can be asserted is not feasible. Warning about those that can be easily identified (assert()) has questionable value in the absence of a language facility.\nI.7: State postconditions\nReason\nTo detect misunderstandings about the result and possibly catch erroneous implementations.\nExample, bad\nConsider:\nint area(int height, int width) { return height * width; }  // bad\nHere, we (incautiously) left out the precondition specification, so it is not explicit that height and width must be positive.\nWe also left out the postcondition specification, so it is not obvious that the algorithm (height * width) is wrong for areas larger than the largest integer.\nOverflow can happen.\nConsider using:\nint area(int height, int width)\n{\n    auto res = height * width;\n    Ensures(res > 0);\n    return res;\n}\nExample, bad\nConsider a famous security bug:\nvoid f()    // problematic\n{\n    char buffer[MAX];\n    // ...\n    memset(buffer, 0, MAX);\n}\nThere was no postcondition stating that the buffer should be cleared and the optimizer eliminated the apparently redundant memset() call:\nvoid f()    // better\n{\n    char buffer[MAX];\n    // ...\n    memset(buffer, 0, MAX);\n    Ensures(buffer[0] == 0);\n}\nNote\nPostconditions are often informally stated in a comment that states the purpose of a function; Ensures() can be used to make this more systematic, visible, and checkable.\nNote\nPostconditions are especially important when they relate to something that is not directly reflected in a returned result, such as a state of a data structure used.\nExample\nConsider a function that manipulates a Record, using a mutex to avoid race conditions:\nmutex m;\n\nvoid manipulate(Record& r)    // don't\n{\n    m.lock();\n    // ... no m.unlock() ...\n}\nHere, we \"forgot\" to state that the mutex should be released, so we don't know if the failure to ensure release of the mutex was a bug or a feature.\nStating the postcondition would have made it clear:\nvoid manipulate(Record& r)    // postcondition: m is unlocked upon exit\n{\n    m.lock();\n    // ... no m.unlock() ...\n}\nThe bug is now obvious (but only to a human reading comments).\nBetter still, use RAII to ensure that the postcondition (\"the lock must be released\") is enforced in code:\nvoid manipulate(Record& r)    // best\n{\n    lock_guard _ {m};\n    // ...\n}\nNote\nIdeally, postconditions are stated in the interface/declaration so that users can easily see them.\nOnly postconditions related to the users can be stated in the interface.\nPostconditions related only to internal state belongs in the definition/implementation.\nEnforcement\n(Not enforceable) This is a philosophical guideline that is infeasible to check\ndirectly in the general case. Domain specific checkers (like lock-holding\ncheckers) exist for many toolchains.\nI.8: Prefer Ensures() for expressing postconditions\nReason\nTo make it clear that the condition is a postcondition and to enable tool use.\nExample\nvoid f()\n{\n    char buffer[MAX];\n    // ...\n    memset(buffer, 0, MAX);\n    Ensures(buffer[0] == 0);\n}\nNote\nPostconditions can be stated in many ways, including comments, if-statements, and assert().\nThis can make them hard to distinguish from ordinary code, hard to update, hard to manipulate by tools, and may have the wrong semantics.\nAlternative: Postconditions of the form \"this resource must be released\" are best expressed by RAII.\nNote\nIdeally, that Ensures should be part of the interface, but that's not easily done.\nFor now, we place it in the definition (function body).\nOnce language support becomes available (e.g., see the contract proposal) we will adopt the standard version of preconditions, postconditions, and assertions.\nEnforcement\n(Not enforceable) Finding the variety of ways postconditions can be asserted is not feasible. Warning about those that can be easily identified (assert()) has questionable value in the absence of a language facility.\nI.9: If an interface is a template, document its parameters using concepts\nReason\nMake the interface precisely specified and compile-time checkable in the (not so distant) future.\nExample\nUse the ISO Concepts TS style of requirements specification. For example:\ntemplate\n// requires InputIterator && EqualityComparable>, Val>\nIter find(Iter first, Iter last, Val v)\n{\n    // ...\n}\nNote\nSoon (maybe in 2017), most compilers will be able to check requires clauses once the // is removed.\nFor now, the concept TS is supported only in GCC 6.1.\nSee also: Generic programming and concepts.\nEnforcement\n(Not yet enforceable) A language facility is under specification. When the language facility is available, warn if any non-variadic template parameter is not constrained by a concept (in its declaration or mentioned in a requires clause).\nI.10: Use exceptions to signal a failure to perform a required task\nReason\nIt should not be possible to ignore an error because that could leave the system or a computation in an undefined (or unexpected) state.\nThis is a major source of errors.\nExample\nint printf(const char* ...);    // bad: return negative number if output fails\n\ntemplate \n// good: throw system_error if unable to start the new thread\nexplicit thread(F&& f, Args&&... args);\nNote\nWhat is an error?\nAn error means that the function cannot achieve its advertised purpose (including establishing postconditions).\nCalling code that ignores an error could lead to wrong results or undefined systems state.\nFor example, not being able to connect to a remote server is not by itself an error:\nthe server can refuse a connection for all kinds of reasons, so the natural thing is to return a result that the caller should always check.\nHowever, if failing to make a connection is considered an error, then a failure should throw an exception.\nException\nMany traditional interface functions (e.g., UNIX signal handlers) use error codes (e.g., errno) to report what are really status codes, rather than errors. You don't have a good alternative to using such, so calling these does not violate the rule.\nAlternative\nIf you can't use exceptions (e.g. because your code is full of old-style raw-pointer use or because there are hard-real-time constraints), consider using a style that returns a pair of values:\nint val;\nint error_code;\ntie(val, error_code) = do_something();\nif (error_code) {\n    // ... handle the error or exit ...\n}\n// ... use val ...\nThis style unfortunately leads to uninitialized variables.\nA facility structured bindings to deal with that will become available in C++17.\nauto [val, error_code] = do_something();\nif (error_code) {\n    // ... handle the error or exit ...\n}\n// ... use val ...\nNote\nWe don't consider \"performance\" a valid reason not to use exceptions.\n\nOften, explicit error checking and handling consume as much time and space as exception handling.\nOften, cleaner code yields better performance with exceptions (simplifying the tracing of paths through the program and their optimization).\nA good rule for performance critical code is to move checking outside the critical part of the code (checking).\nIn the longer term, more regular code gets better optimized.\nAlways carefully measure before making performance claims.\n\nSee also: I.5 and I.7 for reporting precondition and postcondition violations.\nEnforcement\n\n(Not enforceable) This is a philosophical guideline that is infeasible to check directly.\nLook for errno.\n\nI.11: Never transfer ownership by a raw pointer (T*) or reference (T&)\nReason\nIf there is any doubt whether the caller or the callee owns an object, leaks or premature destruction will occur.\nExample\nConsider:\nX* compute(args)    // don't\n{\n    X* res = new X{};\n    // ...\n    return res;\n}\nWho deletes the returned X? The problem would be harder to spot if compute returned a reference.\nConsider returning the result by value (use move semantics if the result is large):\nvector compute(args)  // good\n{\n    vector res(10000);\n    // ...\n    return res;\n}\nAlternative: Pass ownership using a \"smart pointer\", such as unique_ptr (for exclusive ownership) and shared_ptr (for shared ownership).\nHowever, that is less elegant and often less efficient than returning the object itself,\nso use smart pointers only if reference semantics are needed.\nAlternative: Sometimes older code can't be modified because of ABI compatibility requirements or lack of resources.\nIn that case, mark owning pointers using owner from the guideline support library:\nowner compute(args)    // It is now clear that ownership is transferred\n{\n    owner res = new X{};\n    // ...\n    return res;\n}\nThis tells analysis tools that res is an owner.\nThat is, its value must be deleted or transferred to another owner, as is done here by the return.\nowner is used similarly in the implementation of resource handles.\nNote\nEvery object passed as a raw pointer (or iterator) is assumed to be owned by the\ncaller, so that its lifetime is handled by the caller. Viewed another way:\nownership transferring APIs are relatively rare compared to pointer-passing APIs,\nso the default is \"no ownership transfer.\"\nSee also: Argument passing, use of smart pointer arguments, and value return.\nEnforcement\n\n(Simple) Warn on delete of a raw pointer that is not an owner. Suggest use of standard-library resource handle or use of owner.\n(Simple) Warn on failure to either reset or explicitly delete an owner pointer on every code path.\n(Simple) Warn if the return value of new or a function call with an owner return value is assigned to a raw pointer or non-owner reference.\n\nI.12: Declare a pointer that must not be null as not_null\nReason\nTo help avoid dereferencing nullptr errors.\nTo improve performance by avoiding redundant checks for nullptr.\nExample\nint length(const char* p);            // it is not clear whether length(nullptr) is valid\n\nlength(nullptr);                      // OK?\n\nint length(not_null p);  // better: we can assume that p cannot be nullptr\n\nint length(const char* p);            // we must assume that p can be nullptr\nBy stating the intent in source, implementers and tools can provide better diagnostics, such as finding some classes of errors through static analysis, and perform optimizations, such as removing branches and null tests.\nNote\nnot_null is defined in the guideline support library.\nNote\nThe assumption that the pointer to char pointed to a C-style string (a zero-terminated string of characters) was still implicit, and a potential source of confusion and errors. Use czstring in preference to const char*.\n// we can assume that p cannot be nullptr\n// we can assume that p points to a zero-terminated array of characters\nint length(not_null p);\nNote: length() is, of course, std::strlen() in disguise.\nEnforcement\n\n(Simple) ((Foundation)) If a function checks a pointer parameter against nullptr before access, on all control-flow paths, then warn it should be declared not_null.\n(Complex) If a function with pointer return value ensures it is not nullptr on all return paths, then warn the return type should be declared not_null.\n\nI.13: Do not pass an array as a single pointer\nReason\n (pointer, size)-style interfaces are error-prone. Also, a plain pointer (to array) must rely on some convention to allow the callee to determine the size.\nExample\nConsider:\nvoid copy_n(const T* p, T* q, int n); // copy from [p:p+n) to [q:q+n)\nWhat if there are fewer than n elements in the array pointed to by q? Then, we overwrite some probably unrelated memory.\nWhat if there are fewer than n elements in the array pointed to by p? Then, we read some probably unrelated memory.\nEither is undefined behavior and a potentially very nasty bug.\nAlternative\nConsider using explicit spans:\nvoid copy(span r, span r2); // copy r to r2\nExample, bad\nConsider:\nvoid draw(Shape* p, int n);  // poor interface; poor code\nCircle arr[10];\n// ...\ndraw(arr, 10);\nPassing 10 as the n argument may be a mistake: the most common convention is to assume [0:n) but that is nowhere stated. Worse is that the call of draw() compiled at all: there was an implicit conversion from array to pointer (array decay) and then another implicit conversion from Circle to Shape. There is no way that draw() can safely iterate through that array: it has no way of knowing the size of the elements.\nAlternative: Use a support class that ensures that the number of elements is correct and prevents dangerous implicit conversions. For example:\nvoid draw2(span);\nCircle arr[10];\n// ...\ndraw2(span(arr));  // deduce the number of elements\ndraw2(arr);    // deduce the element type and array size\n\nvoid draw3(span);\ndraw3(arr);    // error: cannot convert Circle[10] to span\nThis draw2() passes the same amount of information to draw(), but makes the fact that it is supposed to be a range of Circles explicit. See ???.\nException\nUse zstring and czstring to represent a C-style, zero-terminated strings.\nBut when doing so, use string_span from the GSL to prevent range errors.\nEnforcement\n\n(Simple) ((Bounds)) Warn for any expression that would rely on implicit conversion of an array type to a pointer type. Allow exception for zstring/czstring pointer types.\n(Simple) ((Bounds)) Warn for any arithmetic operation on an expression of pointer type that results in a value of pointer type. Allow exception for zstring/czstring pointer types.\n\nI.22: Avoid complex initialization of global objects\nReason\nComplex initialization can lead to undefined order of execution.\nExample\n// file1.c\n\nextern const X x;\n\nconst Y y = f(x);   // read x; write y\n\n// file2.c\n\nextern const Y y;\n\nconst X x = g(y);   // read y; write x\nSince x and y are in different translation units the order of calls to f() and g() is undefined;\none will access an uninitialized const.\nThis shows that the order-of-initialization problem for global (namespace scope) objects is not limited to global variables.\nNote\nOrder of initialization problems become particularly difficult to handle in concurrent code.\nIt is usually best to avoid global (namespace scope) objects altogether.\nEnforcement\n\nFlag initializers of globals that call non-constexpr functions\nFlag initializers of globals that access extern objects\n\nI.23: Keep the number of function arguments low\nReason\nHaving many arguments opens opportunities for confusion. Passing lots of arguments is often costly compared to alternatives.\nDiscussion\nThe two most common reasons why functions have too many parameters are:\n\nMissing an abstraction.\nThere is an abstraction missing, so that a compound value is being\npassed as individual elements instead of as a single object that enforces an invariant.\nThis not only expands the parameter list, but it leads to errors because the component values\nare no longer protected by an enforced invariant.\n\nViolating \"one function, one responsibility.\"\nThe function is trying to do more than one job and should probably be refactored.\n\n\nExample\nThe standard-library merge() is at the limit of what we can comfortably handle:\ntemplate\nOutputIterator merge(InputIterator1 first1, InputIterator1 last1,\n                     InputIterator2 first2, InputIterator2 last2,\n                     OutputIterator result, Compare comp);\nNote that this is because of problem 1 above -- missing abstraction. Instead of passing a range (abstraction), STL passed iterator pairs (unencapsulated component values).\nHere, we have four template arguments and six function arguments.\nTo simplify the most frequent and simplest uses, the comparison argument can be defaulted to :\ntemplate\nOutputIterator merge(InputIterator1 first1, InputIterator1 last1,\n                     InputIterator2 first2, InputIterator2 last2,\n                     OutputIterator result);\nThis doesn't reduce the total complexity, but it reduces the surface complexity presented to many users.\nTo really reduce the number of arguments, we need to bundle the arguments into higher-level abstractions:\ntemplate\nOutputIterator merge(InputRange1 r1, InputRange2 r2, OutputIterator result);\nGrouping arguments into \"bundles\" is a general technique to reduce the number of arguments and to increase the opportunities for checking.\nAlternatively, we could use concepts (as defined by the ISO TS) to define the notion of three types that must be usable for merging:\nMergeable{In1, In2, Out}\nOutputIterator merge(In1 r1, In2 r2, Out result);\nExample\nThe safety Profiles recommend replacing\nvoid f(int* some_ints, int some_ints_length);  // BAD: C style, unsafe\nwith\nvoid f(gsl::span some_ints);              // GOOD: safe, bounds-checked\nHere, using an abstraction has safety and robustness benefits, and naturally also reduces the number of parameters.\nNote\nHow many parameters are too many? Try to use fewer than four (4) parameters.\nThere are functions that are best expressed with four individual parameters, but not many.\nAlternative: Use better abstraction: Group arguments into meaningful objects and pass the objects (by value or by reference).\nAlternative: Use default arguments or overloads to allow the most common forms of calls to be done with fewer arguments.\nEnforcement\n\nWarn when a function declares two iterators (including pointers) of the same type instead of a range or a view.\n(Not enforceable) This is a philosophical guideline that is infeasible to check directly.\n\nI.24: Avoid adjacent unrelated parameters of the same type\nReason\nAdjacent arguments of the same type are easily swapped by mistake.\nExample, bad\nConsider:\nvoid copy_n(T* p, T* q, int n);  // copy from [p:p + n) to [q:q + n)\nThis is a nasty variant of a K&R C-style interface. It is easy to reverse the \"to\" and \"from\" arguments.\nUse const for the \"from\" argument:\nvoid copy_n(const T* p, T* q, int n);  // copy from [p:p + n) to [q:q + n)\nException\nIf the order of the parameters is not important, there is no problem:\nint max(int a, int b);\nAlternative\nDon't pass arrays as pointers, pass an object representing a range (e.g., a span):\nvoid copy_n(span p, span q);  // copy from p to q\nAlternative\nDefine a struct as the parameter type and name the fields for those parameters accordingly:\nstruct SystemParams {\n    string config_file;\n    string output_path;\n    seconds timeout;\n};\nvoid initialize(SystemParams p);\nThis tends to make invocations of this clear to future readers, as the parameters\nare often filled in by name at the call site.\nEnforcement\n(Simple) Warn if two consecutive parameters share the same type.\nI.25: Prefer abstract classes as interfaces to class hierarchies\nReason\nAbstract classes are more likely to be stable than base classes with state.\nExample, bad\nYou just knew that Shape would turn up somewhere :-)\nclass Shape {  // bad: interface class loaded with data\npublic:\n    Point center() const { return c; }\n    virtual void draw() const;\n    virtual void rotate(int);\n    // ...\nprivate:\n    Point c;\n    vector outline;\n    Color col;\n};\nThis will force every derived class to compute a center -- even if that's non-trivial and the center is never used. Similarly, not every Shape has a Color, and many Shapes are best represented without an outline defined as a sequence of Points. Abstract classes were invented to discourage users from writing such classes:\nclass Shape {    // better: Shape is a pure interface\npublic:\n    virtual Point center() const = 0;   // pure virtual function\n    virtual void draw() const = 0;\n    virtual void rotate(int) = 0;\n    // ...\n    // ... no data members ...\n};\nEnforcement\n(Simple) Warn if a pointer/reference to a class C is assigned to a pointer/reference to a base of C and the base class contains data members.\nI.26: If you want a cross-compiler ABI, use a C-style subset\nReason\nDifferent compilers implement different binary layouts for classes, exception handling, function names, and other implementation details.\nException\nYou can carefully craft an interface using a few carefully selected higher-level C++ types. See ???.\nException\nCommon ABIs are emerging on some platforms freeing you from the more draconian restrictions.\nNote\nIf you use a single compiler, you can use full C++ in interfaces. That may require recompilation after an upgrade to a new compiler version.\nEnforcement\n(Not enforceable) It is difficult to reliably identify where an interface forms part of an ABI.\nI.27: For stable library ABI, consider the Pimpl idiom\nReason\nBecause private data members participate in class layout and private member functions participate in overload resolution, changes to those\nimplementation details require recompilation of all users of a class that uses them. A non-polymorphic interface class holding a pointer to\nimplementation (Pimpl) can isolate the users of a class from changes in its implementation at the cost of an indirection.\nExample\ninterface (widget.h)\nclass widget {\n    class impl;\n    std::unique_ptr pimpl;\npublic:\n    void draw(); // public API that will be forwarded to the implementation\n    widget(int); // defined in the implementation file\n    ~widget();   // defined in the implementation file, where impl is a complete type\n    widget(widget&&) = default;\n    widget(const widget&) = delete;\n    widget& operator=(widget&&); // defined in the implementation file\n    widget& operator=(const widget&) = delete;\n};\nimplementation (widget.cpp)\nclass widget::impl {\n    int n; // private data\npublic:\n    void draw(const widget& w) { /* ... */ }\n    impl(int n) : n(n) {}\n};\nvoid widget::draw() { pimpl->draw(*this); }\nwidget::widget(int n) : pimpl{std::make_unique(n)} {}\nwidget::~widget() = default;\nwidget& widget::operator=(widget&&) = default;\nNotes\nSee GOTW #100 and cppreference for the trade-offs and additional implementation details associated with this idiom.\nEnforcement\n(Not enforceable) It is difficult to reliably identify where an interface forms part of an ABI.\nI.30: Encapsulate rule violations\nReason\nTo keep code simple and safe.\nSometimes, ugly, unsafe, or error-prone techniques are necessary for logical or performance reasons.\nIf so, keep them local, rather than \"infecting\" interfaces so that larger groups of programmers have to be aware of the\nsubtleties.\nImplementation complexity should, if at all possible, not leak through interfaces into user code.\nExample\nConsider a program that, depending on some form of input (e.g., arguments to main), should consume input\nfrom a file, from the command line, or from standard input.\nWe might write\nbool owned;\nowner inp;\nswitch (source) {\ncase std_in:        owned = false; inp = &cin;                       break;\ncase command_line:  owned = true;  inp = new istringstream{argv[2]}; break;\ncase file:          owned = true;  inp = new ifstream{argv[2]};      break;\n}\nistream& in = *inp;\nThis violated the rule against uninitialized variables,\nthe rule against ignoring ownership,\nand the rule against magic constants .\nIn particular, someone has to remember to somewhere write\nif (owned) delete inp;\nWe could handle this particular example by using unique_ptr with a special deleter that does nothing for cin,\nbut that's complicated for novices (who can easily encounter this problem) and the example is an example of a more general\nproblem where a property that we would like to consider static (here, ownership) needs infrequently be addressed\nat run time.\nThe common, most frequent, and safest examples can be handled statically, so we don't want to add cost and complexity to those.\nBut we must also cope with the uncommon, less-safe, and necessarily more expensive cases.\nSuch examples are discussed in [Str15].\nSo, we write a class\nclass Istream { [[gsl::suppress(lifetime)]]\npublic:\n    enum Opt { from_line = 1 };\n    Istream() { }\n    Istream(zstring p) :owned{true}, inp{new ifstream{p}} {}            // read from file\n    Istream(zstring p, Opt) :owned{true}, inp{new istringstream{p}} {}  // read from command line\n    ~Itream() { if (owned) delete inp; }\n    operator istream& () { return *inp; }\nprivate:\n    bool owned = false;\n    istream* inp = &cin;\n};\nNow, the dynamic nature of istream ownership has been encapsulated.\nPresumably, a bit of checking for potential errors would be added in real code.\nEnforcement\n\nHard, it is hard to decide what rule-breaking code is essential\nflag rule suppression that enable rule-violations to cross interfaces\n\n1.7.6. F: Functions\nA function specifies an action or a computation that takes the system from one consistent state to the next. It is the fundamental building block of programs.\nIt should be possible to name a function meaningfully, to specify the requirements of its argument, and clearly state the relationship between the arguments and the result. An implementation is not a specification. Try to think about what a function does as well as about how it does it.\nFunctions are the most critical part in most interfaces, so see the interface rules.\nFunction rule summary:\nFunction definition rules:\n\nF.1: \"Package\" meaningful operations as carefully named functions\nF.2: A function should perform a single logical operation\nF.3: Keep functions short and simple\nF.4: If a function may have to be evaluated at compile time, declare it constexpr\nF.5: If a function is very small and time-critical, declare it inline\nF.6: If your function may not throw, declare it noexcept\nF.7: For general use, take T* or T& arguments rather than smart pointers\nF.8: Prefer pure functions\nF.9: Unused parameters should be unnamed\n\nParameter passing expression rules:\n\nF.15: Prefer simple and conventional ways of passing information\nF.16: For \"in\" parameters, pass cheaply-copied types by value and others by reference to const\nF.17: For \"in-out\" parameters, pass by reference to non-const\nF.18: For \"consume\" parameters, pass by X&& and std::move the parameter\nF.19: For \"forward\" parameters, pass by TP&& and only std::forward the parameter\nF.20: For \"out\" output values, prefer return values to output parameters\nF.21: To return multiple \"out\" values, prefer returning a tuple or struct\nF.60: Prefer T* over T& when \"no argument\" is a valid option\n\nParameter passing semantic rules:\n\nF.22: Use T* or owner to designate a single object\nF.23: Use a not_null to indicate \"null\" is not a valid value\nF.24: Use a span or a span_p to designate a half-open sequence\nF.25: Use a zstring or a not_null to designate a C-style string\nF.26: Use a unique_ptr to transfer ownership where a pointer is needed\nF.27: Use a shared_ptr to share ownership\n\nValue return semantic rules:\n\nF.42: Return a T* to indicate a position (only)\nF.43: Never (directly or indirectly) return a pointer or a reference to a local object\nF.44: Return a T& when copy is undesirable and \"returning no object\" isn't an option\nF.45: Don't return a T&&\nF.46: int is the return type for main()\nF.47: Return T& from assignment operators.\n\nOther function rules:\n\nF.50: Use a lambda when a function won't do (to capture local variables, or to write a local function)\nF.51: Where there is a choice, prefer default arguments over overloading\nF.52: Prefer capturing by reference in lambdas that will be used locally, including passed to algorithms\nF.53: Avoid capturing by reference in lambdas that will be used nonlocally, including returned, stored on the heap, or passed to another thread\nF.54: If you capture this, capture all variables explicitly (no default capture)\nF.55: Don't use va_arg arguments\n\nFunctions have strong similarities to lambdas and function objects so see also Section ???.\n1.7.6.1. F.def: Function definitions\nA function definition is a function declaration that also specifies the function's implementation, the function body.\n1.7.6.1.1. F.1: \"Package\" meaningful operations as carefully named functions\nReason\nFactoring out common code makes code more readable, more likely to be reused, and limit errors from complex code.\nIf something is a well-specified action, separate it out from its surrounding code and give it a name.\nExample, don't\nvoid read_and_print(istream& is)    // read and print an int\n{\n    int x;\n    if (is >> x)\n        cout Almost everything is wrong with read_and_print.\nIt reads, it writes (to a fixed ostream), it writes error messages (to a fixed ostream), it handles only ints.\nThere is nothing to reuse, logically separate operations are intermingled and local variables are in scope after the end of their logical use.\nFor a tiny example, this looks OK, but if the input operation, the output operation, and the error handling had been more complicated the tangled\nmess could become hard to understand.\nNote\nIf you write a non-trivial lambda that potentially can be used in more than one place, give it a name by assigning it to a (usually non-local) variable.\nExample\nsort(a, b, [](T x, T y) { return x.rank() Naming that lambda breaks up the expression into its logical parts and provides a strong hint to the meaning of the lambda.\nauto lessT = [](T x, T y) { return x.rank() The shortest code is not always the best for performance or maintainability.\nException\nLoop bodies, including lambdas used as loop bodies, rarely need to be named.\nHowever, large loop bodies (e.g., dozens of lines or dozens of pages) can be a problem.\nThe rule Keep functions short implies \"Keep loop bodies short.\"\nSimilarly, lambdas used as callback arguments are sometimes non-trivial, yet unlikely to be reusable.\nEnforcement\n\nSee Keep functions short\nFlag identical and very similar lambdas used in different places.\n\n1.7.6.1.2. F.2: A function should perform a single logical operation\nReason\nA function that performs a single operation is simpler to understand, test, and reuse.\nExample\nConsider:\nvoid read_and_print()    // bad\n{\n    int x;\n    cin >> x;\n    // check for errors\n    cout This is a monolith that is tied to a specific input and will never find another (different) use. Instead, break functions up into suitable logical parts and parameterize:\nint read(istream& is)    // better\n{\n    int x;\n    is >> x;\n    // check for errors\n    return x;\n}\n\nvoid print(ostream& os, int x)\n{\n    os These can now be combined where needed:\nvoid read_and_print()\n{\n    auto x = read(cin);\n    print(cout, x);\n}\nIf there was a need, we could further templatize read() and print() on the data type, the I/O mechanism, the response to errors, etc. Example:\nauto read = [](auto& input, auto& value)    // better\n{\n    input >> value;\n    // check for errors\n};\n\nauto print(auto& output, const auto& value)\n{\n    output Enforcement\n\nConsider functions with more than one \"out\" parameter suspicious. Use return values instead, including tuple for multiple return values.\nConsider \"large\" functions that don't fit on one editor screen suspicious. Consider factoring such a function into smaller well-named suboperations.\nConsider functions with 7 or more parameters suspicious.\n\n1.7.6.1.3. F.3: Keep functions short and simple\nReason\nLarge functions are hard to read, more likely to contain complex code, and more likely to have variables in larger than minimal scopes.\nFunctions with complex control structures are more likely to be long and more likely to hide logical errors\nExample\nConsider:\ndouble simple_func(double val, int flag1, int flag2)\n    // simple_func: takes a value and calculates the expected ASIC output,\n    // given the two mode flags.\n{\n    double intermediate;\n    if (flag1 > 0) {\n        intermediate = func1(val);\n        if (flag2 % 2)\n             intermediate = sqrt(intermediate);\n    }\n    else if (flag1 == -1) {\n        intermediate = func1(-val);\n        if (flag2 % 2)\n             intermediate = sqrt(-intermediate);\n        flag1 = -flag1;\n    }\n    if (abs(flag2) > 10) {\n        intermediate = func2(intermediate);\n    }\n    switch (flag2 / 10) {\n    case 1: if (flag1 == -1) return finalize(intermediate, 1.171);\n            break;\n    case 2: return finalize(intermediate, 13.1);\n    default: break;\n    }\n    return finalize(intermediate, 0.);\n}\nThis is too complex (and long).\nHow would you know if all possible alternatives have been correctly handled?\nYes, it breaks other rules also.\nWe can refactor:\ndouble func1_muon(double val, int flag)\n{\n    // ???\n}\n\ndouble funct1_tau(double val, int flag1, int flag2)\n{\n    // ???\n}\n\ndouble simple_func(double val, int flag1, int flag2)\n    // simple_func: takes a value and calculates the expected ASIC output,\n    // given the two mode flags.\n{\n    if (flag1 > 0)\n        return func1_muon(val, flag2);\n    if (flag1 == -1)\n        // handled by func1_tau: flag1 = -flag1;\n        return func1_tau(-val, flag1, flag2);\n    return 0.;\n}\nNote\n\"It doesn't fit on a screen\" is often a good practical definition of \"far too large.\"\nOne-to-five-line functions should be considered normal.\nNote\nBreak large functions up into smaller cohesive and named functions.\nSmall simple functions are easily inlined where the cost of a function call is significant.\nEnforcement\n\nFlag functions that do not \"fit on a screen.\"\nHow big is a screen? Try 60 lines by 140 characters; that's roughly the maximum that's comfortable for a book page.\nFlag functions that are too complex. How complex is too complex?\nYou could use cyclomatic complexity. Try \"more than 10 logical path through.\" Count a simple switch as one path.\n\n1.7.6.1.4. F.4: If a function may have to be evaluated at compile time, declare it constexpr\nReason\n constexpr is needed to tell the compiler to allow compile-time evaluation.\nExample\nThe (in)famous factorial:\nconstexpr int fac(int n)\n{\n    constexpr int max_exp = 17;      // constexpr enables max_exp to be used in Expects\n    Expects(0 This is C++14.\nFor C++11, use a recursive formulation of fac().\nNote\nconstexpr does not guarantee compile-time evaluation;\nit just guarantees that the function can be evaluated at compile time for constant expression arguments if the programmer requires it or the compiler decides to do so to optimize.\nconstexpr int min(int x, int y) { return x Note\nconstexpr functions are pure: they can have no side effects.\nint dcount = 0;\nconstexpr int double(int v)\n{\n    ++dcount;   // error: attempted side effect from constexpr function\n    return v + v;\n}\nThis is usually a very good thing.\nWhen given a non-constant argument, a constexpr function can throw.\nIf you consider exiting by throwing a side effect, a constexpr function isn't completely pure;\nif not, this is not an issue.\n??? A question for the committee: can a constructor for an exception thrown by a constexpr function modify state?\n\"No\" would be a nice answer that matches most practice.\nNote\nDon't try to make all functions constexpr.\nMost computation is best done at run time.\nNote\nAny API that may eventually depend on high-level run-time configuration or\nbusiness logic should not be made constexpr. Such customization can not be\nevaluated by the compiler, and any constexpr functions that depended upon\nthat API would have to be refactored or drop constexpr.\nEnforcement\nImpossible and unnecessary.\nThe compiler gives an error if a non-constexpr function is called where a constant is required.\n1.7.6.1.5. F.5: If a function is very small and time-critical, declare it inline\nReason\nSome optimizers are good at inlining without hints from the programmer, but don't rely on it.\nMeasure! Over the last 40 years or so, we have been promised compilers that can inline better than humans without hints from humans.\nWe are still waiting.\nSpecifying inline encourages the compiler to do a better job.\nExample\ninline string cat(const string& s, const string& s2) { return s + s2; }\nException\nDo not put an inline function in what is meant to be a stable interface unless you are certain that it will not change.\nAn inline function is part of the ABI.\nNote\nconstexpr implies inline.\nNote\nMember functions defined in-class are inline by default.\nException\nTemplate functions (incl. template member functions) are normally defined in headers and therefore inline.\nEnforcement\nFlag inline functions that are more than three statements and could have been declared out of line (such as class member functions).\n1.7.6.1.6. F.6: If your function may not throw, declare it noexcept\nReason\nIf an exception is not supposed to be thrown, the program cannot be assumed to cope with the error and should be terminated as soon as possible. Declaring a function noexcept helps optimizers by reducing the number of alternative execution paths. It also speeds up the exit after failure.\nExample\nPut noexcept on every function written completely in C or in any other language without exceptions.\nThe C++ standard library does that implicitly for all functions in the C standard library.\nNote\nconstexpr functions can throw when evaluated at run time, so you may need noexcept for some of those.\nExample\nYou can use noexcept even on functions that can throw:\nvector collect(istream& is) noexcept\n{\n    vector res;\n    for (string s; is >> s;)\n        res.push_back(s);\n    return res;\n}\nIf collect() runs out of memory, the program crashes.\nUnless the program is crafted to survive memory exhaustion, that may be just the right thing to do;\nterminate() may generate suitable error log information (but after memory runs out it is hard to do anything clever).\nNote\nYou must be aware of the execution environment that your code is running when\ndeciding whether to tag a function noexcept, especially because of the issue\nof throwing and allocation.  Code that is intended to be perfectly general (like\nthe standard library and other utility code of that sort) needs to support\nenvironments where a bad_alloc exception may be handled meaningfully.\nHowever, most programs and execution environments cannot meaningfully\nhandle a failure to allocate, and aborting the program is the cleanest and\nsimplest response to an allocation failure in those cases.  If you know that\nyour application code cannot respond to an allocation failure, it may be\nappropriate to add noexcept even on functions that allocate.\nPut another way: In most programs, most functions can throw (e.g., because they\nuse new, call functions that do, or use library functions that reports failure\nby throwing), so don't just sprinkle noexcept all over the place without\nconsidering whether the possible exceptions can be handled.\nnoexcept is most useful (and most clearly correct) for frequently used,\nlow-level functions.\nNote\nDestructors, swap functions, move operations, and default constructors should never throw.\nEnforcement\n\nFlag functions that are not noexcept, yet cannot throw.\nFlag throwing swap, move, destructors, and default constructors.\n\n1.7.6.1.7. F.7: For general use, take T* or T& arguments rather than smart pointers\nReason\nPassing a smart pointer transfers or shares ownership and should only be used when ownership semantics are intended (see R.30).\nPassing by smart pointer restricts the use of a function to callers that use smart pointers.\nPassing a shared smart pointer (e.g., std::shared_ptr) implies a run-time cost.\nExample\n// accepts any int*\nvoid f(int*);\n\n// can only accept ints for which you want to transfer ownership\nvoid g(unique_ptr);\n\n// can only accept ints for which you are willing to share ownership\nvoid g(shared_ptr);\n\n// doesn't change ownership, but requires a particular ownership of the caller\nvoid h(const unique_ptr&);\n\n// accepts any int\nvoid h(int&);\nExample, bad\n// callee\nvoid f(shared_ptr& w)\n{\n    // ...\n    use(*w); // only use of w -- the lifetime is not used at all\n    // ...\n};\nSee further in R.30.\nNote\nWe can catch dangling pointers statically, so we don't need to rely on resource management to avoid violations from dangling pointers.\nSee also: when to prefer T* and when to prefer T&.\nSee also: Discussion of smart pointer use.\nEnforcement\nFlag a parameter of a smart pointer type (a type that overloads operator-> or operator*) for which the ownership semantics are not used;\nthat is\n\ncopyable but never copied/moved from or movable but never moved\nand that is never modified or passed along to another function that could do so.\n\n1.7.6.1.8. F.8: Prefer pure functions\nReason\nPure functions are easier to reason about, sometimes easier to optimize (and even parallelize), and sometimes can be memoized.\nExample\ntemplate\nauto square(T t) { return t * t; }\nNote\nconstexpr functions are pure.\nWhen given a non-constant argument, a constexpr function can throw.\nIf you consider exiting by throwing a side effect, a constexpr function isn't completely pure;\nif not, this is not an issue.\n??? A question for the committee: can a constructor for an exception thrown by a constexpr function modify state?\n\"No\" would be a nice answer that matches most practice.\nEnforcement\nNot possible.\n1.7.6.1.9. F.9: Unused parameters should be unnamed\nReason\nReadability.\nSuppression of unused parameter warnings.\nExample\nX* find(map& m, const string& s, Hint);   // once upon a time, a hint was used\nNote\nAllowing parameters to be unnamed was introduced in the early 1980 to address this problem.\nEnforcement\nFlag named unused parameters.\n1.7.6.2. F.call: Parameter passing\nThere are a variety of ways to pass parameters to a function and to return values.\n1.7.6.2.1. F.15: Prefer simple and conventional ways of passing information\nReason\nUsing \"unusual and clever\" techniques causes surprises, slows understanding by other programmers, and encourages bugs.\nIf you really feel the need for an optimization beyond the common techniques, measure to ensure that it really is an improvement, and document/comment because the improvement may not be portable.\nThe following tables summarize the advice in the following Guidelines, F.16-21.\nNormal parameter passing:\n\nAdvanced parameter passing:\n\nUse the advanced techniques only after demonstrating need, and document that need in a comment.\n1.7.6.2.2. F.16: For \"in\" parameters, pass cheaply-copied types by value and others by reference to const\nReason\nBoth let the caller know that a function will not modify the argument, and both allow initialization by rvalues.\nWhat is \"cheap to copy\" depends on the machine architecture, but two or three words (doubles, pointers, references) are usually best passed by value.\nWhen copying is cheap, nothing beats the simplicity and safety of copying, and for small objects (up to two or three words) it is also faster than passing by reference because it does not require an extra indirection to access from the function.\nExample\nvoid f1(const string& s);  // OK: pass by reference to const; always cheap\n\nvoid f2(string s);         // bad: potentially expensive\n\nvoid f3(int x);            // OK: Unbeatable\n\nvoid f4(const int& x);     // bad: overhead on access in f4()\nFor advanced uses (only), where you really need to optimize for rvalues passed to \"input-only\" parameters:\n\nIf the function is going to unconditionally move from the argument, take it by &&. See F.18.\nIf the function is going to keep a copy of the argument, in addition to passing by const& (for lvalues),\nadd an overload that passes the parameter by && (for rvalues) and in the body std::moves it to its destination. Essentially this overloads a \"consume\"; see F.18.\nIn special cases, such as multiple \"input + copy\" parameters, consider using perfect forwarding. See F.19.\n\nExample\nint multiply(int, int); // just input ints, pass by value\n\n// suffix is input-only but not as cheap as an int, pass by const&\nstring& concatenate(string&, const string& suffix);\n\nvoid sink(unique_ptr);  // input only, and consumes the widget\nAvoid \"esoteric techniques\" such as:\n\nPassing arguments as T&& \"for efficiency\".\nMost rumors about performance advantages from passing by && are false or brittle (but see F.18 and F.19).\nReturning const T& from assignments and similar operations (see F.47.)\n\nExample\nAssuming that Matrix has move operations (possibly by keeping its elements in a std::vector):\nMatrix operator+(const Matrix& a, const Matrix& b)\n{\n    Matrix res;\n    // ... fill res with the sum ...\n    return res;\n}\n\nMatrix x = m1 + m2;  // move constructor\n\ny = m3 + m3;         // move assignment\nNotes\nThe return value optimization doesn't handle the assignment case, but the move assignment does.\nA reference may be assumed to refer to a valid object (language rule).\nThere is no (legitimate) \"null reference.\"\nIf you need the notion of an optional value, use a pointer, std::optional, or a special value used to denote \"no value.\"\nEnforcement\n\n(Simple) ((Foundation)) Warn when a parameter being passed by value has a size greater than 4 * sizeof(int).\nSuggest using a reference to const instead.\n(Simple) ((Foundation)) Warn when a const parameter being passed by reference has a size less than 3 * sizeof(int). Suggest passing by value instead.\n(Simple) ((Foundation)) Warn when a const parameter being passed by reference is moved.\n\n1.7.6.2.3. F.17: For \"in-out\" parameters, pass by reference to non-const\nReason\nThis makes it clear to callers that the object is assumed to be modified.\nExample\nvoid update(Record& r);  // assume that update writes to r\nNote\nA T& argument can pass information into a function as well as out of it.\nThus T& could be an in-out-parameter. That can in itself be a problem and a source of errors:\nvoid f(string& s)\n{\n    s = \"New York\";  // non-obvious error\n}\n\nvoid g()\n{\n    string buffer = \".................................\";\n    f(buffer);\n    // ...\n}\nHere, the writer of g() is supplying a buffer for f() to fill, but f() simply replaces it (at a somewhat higher cost than a simple copy of the characters).\nA bad logic error can happen if the writer of g() incorrectly assumes the size of the buffer.\nEnforcement\n\n(Moderate) ((Foundation)) Warn about functions regarding reference to non-const parameters that do not write to them.\n(Simple) ((Foundation)) Warn when a non-const parameter being passed by reference is moved.\n\n1.7.6.2.4. F.18: For \"consume\" parameters, pass by X&& and std::move the parameter\nReason\nIt's efficient and eliminates bugs at the call site: X&& binds to rvalues, which requires an explicit std::move at the call site if passing an lvalue.\nExample\nvoid sink(vector&& v) {   // sink takes ownership of whatever the argument owned\n    // usually there might be const accesses of v here\n    store_somewhere(std::move(v));\n    // usually no more use of v here; it is moved-from\n}\nNote that the std::move(v) makes it possible for store_somewhere() to leave v in a moved-from state.\nThat could be dangerous.\nException\nUnique owner types that are move-only and cheap-to-move, such as unique_ptr, can also be passed by value which is simpler to write and achieves the same effect. Passing by value does generate one extra (cheap) move operation, but prefer simplicity and clarity first.\nFor example:\ntemplate \nvoid sink(std::unique_ptr p) {\n    // use p ... possibly std::move(p) onward somewhere else\n}   // p gets destroyed\nEnforcement\n\nFlag all X&& parameters (where X is not a template type parameter name) where the function body uses them without std::move.\nFlag access to moved-from objects.\nDon't conditionally move from objects\n\n1.7.6.2.5. F.19: For \"forward\" parameters, pass by TP&& and only std::forward the parameter\nReason\nIf the object is to be passed onward to other code and not directly used by this function, we want to make this function agnostic to the argument const-ness and rvalue-ness.\nIn that case, and only that case, make the parameter TP&& where TP is a template type parameter -- it both ignores and preserves const-ness and rvalue-ness. Therefore any code that uses a TP&& is implicitly declaring that it itself doesn't care about the variable's const-ness and rvalue-ness (because it is ignored), but that intends to pass the value onward to other code that does care about const-ness and rvalue-ness (because it is preserved). When used as a parameter TP&& is safe because any temporary objects passed from the caller will live for the duration of the function call. A parameter of type TP&& should essentially always be passed onward via std::forward in the body of the function.\nExample\ntemplate \ninline auto invoke(F f, Args&&... args) {\n    return f(forward(args)...);\n}\n\n??? calls ???\nEnforcement\n\nFlag a function that takes a TP&& parameter (where TP is a template type parameter name) and does anything with it other than std::forwarding it exactly once on every static path.\n\n1.7.6.2.6. F.20: For \"out\" output values, prefer return values to output parameters\nReason\nA return value is self-documenting, whereas a & could be either in-out or out-only and is liable to be misused.\nThis includes large objects like standard containers that use implicit move operations for performance and to avoid explicit memory management.\nIf you have multiple values to return, use a tuple or similar multi-member type.\nExample\n// OK: return pointers to elements with the value x\nvector find_all(const vector&, int x);\n\n// Bad: place pointers to elements with value x in-out\nvoid find_all(const vector&, vector& out, int x);\nNote\nA struct of many (individually cheap-to-move) elements may be in aggregate expensive to move.\nIt is not recommended to return a const value.\nSuch older advice is now obsolete; it does not add value, and it interferes with move semantics.\nconst vector fct();    // bad: that \"const\" is more trouble than it is worth\n\nvector g(const vector& vx)\n{\n    // ...\n    f() = vx;   // prevented by the \"const\"\n    // ...\n    return f(); // expensive copy: move semantics suppressed by the \"const\"\n}\nThe argument for adding const to a return value is that it prevents (very rare) accidental access to a temporary.\nThe argument against is prevents (very frequent) use of move semantics.\nExceptions\n\nFor non-value types, such as types in an inheritance hierarchy, return the object by unique_ptr or shared_ptr.\nIf a type is expensive to move (e.g., array), consider allocating it on the free store and return a handle (e.g., unique_ptr), or passing it in a reference to non-const target object to fill (to be used as an out-parameter).\nTo reuse an object that carries capacity (e.g., std::string, std::vector) across multiple calls to the function in an inner loop: treat it as an in/out parameter and pass by reference.\n\nExample\nstruct Package {      // exceptional case: expensive-to-move object\n    char header[16];\n    char load[2024 - 16];\n};\n\nPackage fill();       // Bad: large return value\nvoid fill(Package&);  // OK\n\nint val();            // OK\nvoid val(int&);       // Bad: Is val reading its argument\nEnforcement\n\nFlag reference to non-const parameters that are not read before being written to and are a type that could be cheaply returned; they should be \"out\" return values.\nFlag returning a const value. To fix: Remove const to return a non-const value instead.\n\n1.7.6.2.7. F.21: To return multiple \"out\" values, prefer returning a tuple or struct\nReason\nA return value is self-documenting as an \"output-only\" value.\nNote that C++ does have multiple return values, by convention of using a tuple (including pair),\npossibly with the extra convenience of tie at the call site.\nExample\n// BAD: output-only parameter documented in a comment\nint f(const string& input, /*output only*/ string& output_data)\n{\n    // ...\n    output_data = something();\n    return status;\n}\n\n// GOOD: self-documenting\ntuple f(const string& input)\n{\n    // ...\n    return make_tuple(status, something());\n}\nC++98's standard library already used this style, because a pair is like a two-element tuple.\nFor example, given a set my_set, consider:\n// C++98\nresult = my_set.insert(\"Hello\");\nif (result.second) do_something_with(result.first);    // workaround\nWith C++11 we can write this, putting the results directly in existing local variables:\nSometype iter;                                // default initialize if we haven't already\nSomeothertype success;                        // used these variables for some other purpose\n\ntie(iter, success) = my_set.insert(\"Hello\");   // normal return value\nif (success) do_something_with(iter);\nWith C++17 we should be able to use \"structured bindings\" to declare and initialize the multiple variables:\nif (auto [ iter, success ] = my_set.insert(\"Hello\"); success) do_something_with(iter);\nException\nSometimes, we need to pass an object to a function to manipulate its state.\nIn such cases, passing the object by reference T& is usually the right technique.\nExplicitly passing an in-out parameter back out again as a return value is often not necessary.\nFor example:\nistream& operator>>(istream& is, string& s);    // much like std::operator>>()\n\nfor (string s; cin >> s; ) {\n    // do something with line\n}\nHere, both s and cin are used as in-out parameters.\nWe pass cin by (non-const) reference to be able to manipulate its state.\nWe pass s to avoid repeated allocations.\nBy reusing s (passed by reference), we allocate new memory only when we need to expand s's capacity.\nThis technique is sometimes called the \"caller-allocated out\" pattern and is particularly useful for types,\nsuch as string and vector, that needs to do free store allocations.\nTo compare, if we passed out all values as return values, we would something like this:\npair get_string(istream& is);  // not recommended\n{\n    string s;\n    cin >> s;\n    return {is, s};\n}\n\nfor (auto p = get_string(cin); p.first; ) {\n    // do something with p.second\n}\nWe consider that significantly less elegant with significantly less performance.\nFor a truly strict reading of this rule (F.21), the exception isn't really an exception because it relies on in-out parameters,\nrather than the plain out parameters mentioned in the rule.\nHowever, we prefer to be explicit, rather than subtle.\nNote\nIn many cases, it may be useful to return a specific, user-defined type.\nFor example:\nstruct Distance {\n    int value;\n    int unit = 1;   // 1 means meters\n};\n\nDistance d1 = measure(obj1);        // access d1.value and d1.unit\nauto d2 = measure(obj2);            // access d2.value and d2.unit\nauto [value, unit] = measure(obj3); // access value and unit; somewhat redundant\n                                    // to people who know measure()\nauto [x, y] = measure(obj4);        // don't; it's likely to be confusing\nThe overly-generic pair and tuple should be used only when the value returned represents to independent entities rather than an abstraction.\nAnother example, use a specific type along the lines of variant, rather than using the generic tuple.\nEnforcement\n\nOutput parameters should be replaced by return values.\nAn output parameter is one that the function writes to, invokes a non-const member function, or passes on as a non-const.\n\n1.7.6.2.8. F.22: Use T* or owner to designate a single object\nReason\nReadability: it makes the meaning of a plain pointer clear.\nEnables significant tool support.\nNote\nIn traditional C and C++ code, plain T* is used for many weakly-related purposes, such as:\n\nIdentify a (single) object (not to be deleted by this function)\nPoint to an object allocated on the free store (and delete it later)\nHold the nullptr\nIdentify a C-style string (zero-terminated array of characters)\nIdentify an array with a length specified separately\nIdentify a location in an array\n\nThis makes it hard to understand what the code does and is supposed to do.\nIt complicates checking and tool support.\nExample\nvoid use(int* p, int n, char* s, int* q)\n{\n    p[n - 1] = 666; // Bad: we don't know if p points to n elements;\n                    // assume it does not or use span\n    cout better\nvoid use2(span p, zstring s, owner q)\n{\n    p[p.size() - 1] = 666; // OK, a range error can be caught\n    cout Note\nowner represents ownership, zstring represents a C-style string.\nAlso: Assume that a T* obtained from a smart pointer to T (e.g., unique_ptr) points to a single element.\nSee also: Support library.\nEnforcement\n\n(Simple) ((Bounds)) Warn for any arithmetic operation on an expression of pointer type that results in a value of pointer type.\n\n1.7.6.2.9. F.23: Use a not_null to indicate that \"null\" is not a valid value\nReason\nClarity. A function with a not_null parameter makes it clear that the caller of the function is responsible for any nullptr checks that may be necessary.\nSimilarly, a function with a return value of not_null makes it clear that the caller of the function does not need to check for nullptr.\nExample\nnot_null makes it obvious to a reader (human or machine) that a test for nullptr is not necessary before dereference.\nAdditionally, when debugging, owner and not_null can be instrumented to check for correctness.\nConsider:\nint length(Record* p);\nWhen I call length(p) should I test for p == nullptr first? Should the implementation of length() test for p == nullptr?\n// it is the caller's job to make sure p != nullptr\nint length(not_null p);\n\n// the implementor of length() must assume that p == nullptr is possible\nint length(Record* p);\nNote\nA not_null is assumed not to be the nullptr; a T* may be the nullptr; both can be represented in memory as a T* (so no run-time overhead is implied).\nNote\nnot_null is not just for built-in pointers. It works for unique_ptr, shared_ptr, and other pointer-like types.\nEnforcement\n\n(Simple) Warn if a raw pointer is dereferenced without being tested against nullptr (or equivalent) within a function, suggest it is declared not_null instead.\n(Simple) Error if a raw pointer is sometimes dereferenced after first being tested against nullptr (or equivalent) within the function and sometimes is not.\n(Simple) Warn if a not_null pointer is tested against nullptr within a function.\n\n1.7.6.2.10. F.24: Use a span or a span_p to designate a half-open sequence\nReason\nInformal/non-explicit ranges are a source of errors.\nExample\nX* find(span r, const X& v);    // find v in r\n\nvector vec;\n// ...\nauto p = find({vec.begin(), vec.end()}, X{});  // find X{} in vec\nNote\nRanges are extremely common in C++ code. Typically, they are implicit and their correct use is very hard to ensure.\nIn particular, given a pair of arguments (p, n) designating an array [p:p+n),\nit is in general impossible to know if there really are n elements to access following *p.\nspan and span_p are simple helper classes designating a [p:q) range and a range starting with p and ending with the first element for which a predicate is true, respectively.\nExample\nA span represents a range of elements, but how do we manipulate elements of that range?\nvoid f(span s)\n{\n    // range traversal (guaranteed correct)\n    for (int x : s) cout Note\nA span object does not own its elements and is so small that it can be passed by value.\nPassing a span object as an argument is exactly as efficient as passing a pair of pointer arguments or passing a pointer and an integer count.\nSee also: Support library.\nEnforcement\n(Complex) Warn where accesses to pointer parameters are bounded by other parameters that are integral types and suggest they could use span instead.\n1.7.6.2.11. F.25: Use a zstring or a not_null to designate a C-style string\nReason\nC-style strings are ubiquitous. They are defined by convention: zero-terminated arrays of characters.\nWe must distinguish C-style strings from a pointer to a single character or an old-fashioned pointer to an array of characters.\nExample\nConsider:\nint length(const char* p);\nWhen I call length(s) should I test for s == nullptr first? Should the implementation of length() test for p == nullptr?\n// the implementor of length() must assume that p == nullptr is possible\nint length(zstring p);\n\n// it is the caller's job to make sure p != nullptr\nint length(not_null p);\nNote\nzstring do not represent ownership.\nSee also: Support library.\n1.7.6.2.12. F.26: Use a unique_ptr to transfer ownership where a pointer is needed\nReason\nUsing unique_ptr is the cheapest way to pass a pointer safely.\nSee also C.50 regarding when to return a shared_ptr from a factory.\nExample\nunique_ptr get_shape(istream& is)  // assemble shape from input stream\n{\n    auto kind = read_header(is); // read header and identify the next shape on input\n    switch (kind) {\n    case kCircle:\n        return make_unique(is);\n    case kTriangle:\n        return make_unique(is);\n    // ...\n    }\n}\nNote\nYou need to pass a pointer rather than an object if what you are transferring is an object from a class hierarchy that is to be used through an interface (base class).\nEnforcement\n(Simple) Warn if a function returns a locally allocated raw pointer. Suggest using either unique_ptr or shared_ptr instead.\n1.7.6.2.13. F.27: Use a shared_ptr to share ownership\nReason\nUsing std::shared_ptr is the standard way to represent shared ownership. That is, the last owner deletes the object.\nExample\nshared_ptr im { read_image(somewhere) };\n\nstd::thread t0 {shade, args0, top_left, im};\nstd::thread t1 {shade, args1, top_right, im};\nstd::thread t2 {shade, args2, bottom_left, im};\nstd::thread t3 {shade, args3, bottom_right, im};\n\n// detach threads\n// last thread to finish deletes the image\nNote\nPrefer a unique_ptr over a shared_ptr if there is never more than one owner at a time.\nshared_ptr is for shared ownership.\nNote that pervasive use of shared_ptr has a cost (atomic operations on the shared_ptr's reference count have a measurable aggregate cost).\nAlternative\nHave a single object own the shared object (e.g. a scoped object) and destroy that (preferably implicitly) when all users have completed.\nEnforcement\n(Not enforceable) This is a too complex pattern to reliably detect.\n1.7.6.2.14. F.60: Prefer T* over T& when \"no argument\" is a valid option\nReason\nA pointer (T*) can be a nullptr and a reference (T&) cannot, there is no valid \"null reference\".\nSometimes having nullptr as an alternative to indicated \"no object\" is useful, but if it is not, a reference is notationally simpler and might yield better code.\nExample\nstring zstring_to_string(zstring p) // zstring is a char*; that is a C-style string\n{\n    if (p == nullptr) return string{};    // p might be nullptr; remember to check\n    return string{p};\n}\n\nvoid print(const vector& r)\n{\n    // r refers to a vector; no check needed\n}\nNote\nIt is possible, but not valid C++ to construct a reference that is essentially a nullptr (e.g., T* p = nullptr; T& r = (T&)*p;).\nThat error is very uncommon.\nNote\nIf you prefer the pointer notation (-> and/or * vs. .), not_null provides the same guarantee as T&.\nEnforcement\n\nFlag ???\n\n1.7.6.2.15. F.42: Return a T* to indicate a position (only)\nReason\nThat's what pointers are good for.\nReturning a T* to transfer ownership is a misuse.\nExample\nNode* find(Node* t, const string& s)  // find s in a binary tree of Nodes\n{\n    if (t == nullptr || t->name == s) return t;\n    if ((auto p = find(t->left, s))) return p;\n    if ((auto p = find(t->right, s))) return p;\n    return nullptr;\n}\nIf it isn't the nullptr, the pointer returned by find indicates a Node holding s.\nImportantly, that does not imply a transfer of ownership of the pointed-to object to the caller.\nNote\nPositions can also be transferred by iterators, indices, and references.\nA reference is often a superior alternative to a pointer if there is no need to use nullptr or if the object referred to should not change.\nNote\nDo not return a pointer to something that is not in the caller's scope; see F.43.\nSee also: discussion of dangling pointer prevention.\nEnforcement\n\nFlag delete, std::free(), etc. applied to a plain T*.\nOnly owners should be deleted.\nFlag new, malloc(), etc. assigned to a plain T*.\nOnly owners should be responsible for deletion.\n\n1.7.6.2.16. F.43: Never (directly or indirectly) return a pointer or a reference to a local object\nReason\nTo avoid the crashes and data corruption that can result from the use of such a dangling pointer.\nExample, bad\nAfter the return from a function its local objects no longer exist:\nint* f()\n{\n    int fx = 9;\n    return &fx;  // BAD\n}\n\nvoid g(int* p)   // looks innocent enough\n{\n    int gx;\n    cout Here on one popular implementation I got the output:\n*p == 999\ngx == 999\nI expected that because the call of g() reuses the stack space abandoned by the call of f() so *p refers to the space now occupied by gx.\n\nImagine what would happen if fx and gx were of different types.\nImagine what would happen if fx or gx was a type with an invariant.\nImagine what would happen if more that dangling pointer was passed around among a larger set of functions.\nImagine what a cracker could do with that dangling pointer.\n\nFortunately, most (all?) modern compilers catch and warn against this simple case.\nNote\nThis applies to references as well:\nint& f()\n{\n    int x = 7;\n    // ...\n    return x;  // Bad: returns reference to object that is about to be destroyed\n}\nNote\nThis applies only to non-static local variables.\nAll static variables are (as their name indicates) statically allocated, so that pointers to them cannot dangle.\nExample, bad\nNot all examples of leaking a pointer to a local variable are that obvious:\nint* glob;       // global variables are bad in so many ways\n\ntemplate\nvoid steal(T x)\n{\n    glob = x();  // BAD\n}\n\nvoid f()\n{\n    int i = 99;\n    steal([&] { return &i; });\n}\n\nint main()\n{\n    f();\n    cout Here I managed to read the location abandoned by the call of f.\nThe pointer stored in glob could be used much later and cause trouble in unpredictable ways.\nNote\nThe address of a local variable can be \"returned\"/leaked by a return statement, by a T& out-parameter, as a member of a returned object, as an element of a returned array, and more.\nNote\nSimilar examples can be constructed \"leaking\" a pointer from an inner scope to an outer one;\nsuch examples are handled equivalently to leaks of pointers out of a function.\nA slightly different variant of the problem is placing pointers in a container that outlives the objects pointed to.\nSee also: Another way of getting dangling pointers is pointer invalidation.\nIt can be detected/prevented with similar techniques.\nEnforcement\n\nCompilers tend to catch return of reference to locals and could in many cases catch return of pointers to locals.\nStatic analysis can catch many common patterns of the use of pointers indicating positions (thus eliminating dangling pointers)\n\n1.7.6.2.17. F.44: Return a T& when copy is undesirable and \"returning no object\" isn't needed\nReason\nThe language guarantees that a T& refers to an object, so that testing for nullptr isn't necessary.\nSee also: The return of a reference must not imply transfer of ownership:\ndiscussion of dangling pointer prevention and discussion of ownership.\nExample\nclass Car\n{\n    array w;\n    // ...\npublic:\n    wheel& get_wheel(size_t i) { Expects(i Enforcement\nFlag functions where no return expression could yield nullptr\n1.7.6.2.18. F.45: Don't return a T&&\nReason\nIt's asking to return a reference to a destroyed temporary object. A && is a magnet for temporary objects. This is fine when the reference to the temporary is being passed \"downward\" to a callee, because the temporary is guaranteed to outlive the function call (see F.18 and F.19). However, it's not fine when passing such a reference \"upward\" to a larger caller scope. See also ???.\nFor passthrough functions that pass in parameters (by ordinary reference or by perfect forwarding) and want to return values, use simple auto return type deduction (not auto&&).\nExample, bad\nIf F returns by value, this function returns a reference to a temporary.\ntemplate\nauto&& wrapper(F f)\n{\n    log_call(typeid(f)); // or whatever instrumentation\n    return f();\n}\nExample, good\nBetter:\ntemplate\nauto wrapper(F f)\n{\n    log_call(typeid(f)); // or whatever instrumentation\n    return f();\n}\nException\nstd::move and std::forward do return &&, but they are just casts -- used by convention only in expression contexts where a reference to a temporary object is passed along within the same expression before the temporary is destroyed. We don't know of any other good examples of returning &&.\nEnforcement\nFlag any use of && as a return type, except in std::move and std::forward.\n1.7.6.2.19. F.46: int is the return type for main()\nReason\nIt's a language rule, but violated through \"language extensions\" so often that it is worth mentioning.\nDeclaring main (the one global main of a program) void limits portability.\nExample\n    void main() { /* ... */ };  // bad, not C++\n\n    int main()\n    {\n        std::cout Note\nWe mention this only because of the persistence of this error in the community.\nEnforcement\n\nThe compiler should do it\nIf the compiler doesn't do it, let tools flag it\n\n1.7.6.2.20. F.47: Return T& from assignment operators\nReason\nThe convention for operator overloads (especially on value types) is for\noperator=(const T&) to perform the assignment and then return (non-const)\n*this.  This ensures consistency with standard-library types and follows the\nprinciple of \"do as the ints do.\"\nNote\nHistorically there was some guidance to make the assignment operator return const T&.\nThis was primarily to avoid code of the form (a = b) = c -- such code is not common enough to warrant violating consistency with standard types.\nExample\nclass Foo\n{\n public:\n    ...\n    Foo& operator=(const Foo& rhs) {\n      // Copy members.\n      ...\n      return *this;\n    }\n};\nEnforcement\nThis should be enforced by tooling by checking the return type (and return\nvalue) of any assignment operator.\n1.7.6.2.21. F.50: Use a lambda when a function won't do (to capture local variables, or to write a local function)\nReason\nFunctions can't capture local variables or be declared at local scope; if you need those things, prefer a lambda where possible, and a handwritten function object where not. On the other hand, lambdas and function objects don't overload; if you need to overload, prefer a function (the workarounds to make lambdas overload are ornate). If either will work, prefer writing a function; use the simplest tool necessary.\nExample\n// writing a function that should only take an int or a string\n// -- overloading is natural\nvoid f(int);\nvoid f(const string&);\n\n// writing a function object that needs to capture local state and appear\n// at statement or expression scope -- a lambda is natural\nvector v = lots_of_work();\nfor (int tasknum = 0; tasknum Exception\nGeneric lambdas offer a concise way to write function templates and so can be useful even when a normal function template would do equally well with a little more syntax. This advantage will probably disappear in the future once all functions gain the ability to have Concept parameters.\nEnforcement\n\nWarn on use of a named non-generic lambda (e.g., auto x = [](int i){ /*...*/; };) that captures nothing and appears at global scope. Write an ordinary function instead.\n\n1.7.6.2.22. F.51: Where there is a choice, prefer default arguments over overloading\nReason\nDefault arguments simply provides alternative interfaces to a single implementation.\nThere is no guarantee that a set of overloaded functions all implement the same semantics.\nThe use of default arguments can avoid code replication.\nNote\nThere is a choice between using default argument and overloading when the alternatives are from a set of arguments of the same types.\nFor example:\nvoid print(const string& s, format f = {});\nas opposed to\nvoid print(const string& s);  // use default format\nvoid print(const string& s, format f);\nThere is not a choice when a set of functions are used to do a semantically equivalent operation to a set of types. For example:\nvoid print(const char&);\nvoid print(int);\nvoid print(zstring);\nSee also\nDefault arguments for virtual functions\nEnforcement\n???\n1.7.6.2.23. F.52: Prefer capturing by reference in lambdas that will be used locally, including passed to algorithms\nReason\nFor efficiency and correctness, you nearly always want to capture by reference when using the lambda locally. This includes when writing or calling parallel algorithms that are local because they join before returning.\nDiscussion\nThe efficiency consideration is that most types are cheaper to pass by reference than by value.\nThe correctness consideration is that many calls want to perform side effects on the original object at the call site (see example below). Passing by value prevents this.\nNote\nUnfortunately, there is no simple way to capture by reference to const to get the efficiency for a local call but also prevent side effects.\nExample\nHere, a large object (a network message) is passed to an iterative algorithm, and is it not efficient or correct to copy the message (which may not be copyable):\nstd::for_each(begin(sockets), end(sockets), [&message](auto& socket)\n{\n    socket.send(message);\n});\nExample\nThis is a simple three-stage parallel pipeline. Each stage object encapsulates a worker thread and a queue, has a process function to enqueue work, and in its destructor automatically blocks waiting for the queue to empty before ending the thread.\nvoid send_packets(buffers& bufs)\n{\n    stage encryptor([] (buffer& b){ encrypt(b); });\n    stage compressor([&](buffer& b){ compress(b); encryptor.process(b); });\n    stage decorator([&](buffer& b){ decorate(b); compressor.process(b); });\n    for (auto& b : bufs) { decorator.process(b); }\n}  // automatically blocks waiting for pipeline to finish\nEnforcement\nFlag a lambda that captures by reference, but is used other than locally within the function scope or passed to a function by reference. (Note: This rule is an approximation, but does flag passing by pointer as those are more likely to be stored by the callee, writing to a heap location accessed via a parameter, returning the lambda, etc. The Lifetime rules will also provide general rules that flag escaping pointers and references including via lambdas.)\n1.7.6.2.24. F.53: Avoid capturing by reference in lambdas that will be used nonlocally, including returned, stored on the heap, or passed to another thread\nReason\nPointers and references to locals shouldn't outlive their scope. Lambdas that capture by reference are just another place to store a reference to a local object, and shouldn't do so if they (or a copy) outlive the scope.\nExample, bad\nint local = 42;\n\n// Want a reference to local.\n// Note, that after program exits this scope,\n// local no longer exists, therefore\n// process() call will have undefined behavior!\nthread_pool.queue_work([&]{ process(local); });\nExample, good\nint local = 42;\n// Want a copy of local.\n// Since a copy of local is made, it will\n// always be available for the call.\nthread_pool.queue_work([=]{ process(local); });\nEnforcement\n\n(Simple) Warn when capture-list contains a reference to a locally declared variable\n(Complex) Flag when capture-list contains a reference to a locally declared variable and the lambda is passed to a non-const and non-local context\n\n1.7.6.2.25. F.54: If you capture this, capture all variables explicitly (no default capture)\nReason\nIt's confusing. Writing [=] in a member function appears to capture by value, but actually captures data members by reference because it actually captures the invisible this pointer by value. If you meant to do that, write this explicitly.\nExample\nclass My_class {\n    int x = 0;\n    // ...\n\n    void f() {\n        int i = 0;\n        // ...\n\n        auto lambda = [=]{ use(i, x); };   // BAD: \"looks like\" copy/value capture\n        // [&] has identical semantics and copies the this pointer under the current rules\n        // [=,this] and [&,this] are not much better, and confusing\n\n        x = 42;\n        lambda(); // calls use(42);\n        x = 43;\n        lambda(); // calls use(43);\n\n        // ...\n\n        auto lambda2 = [i, this]{ use(i, x); }; // ok, most explicit and least confusing\n\n        // ...\n    }\n};\nNote\nThis is under active discussion in standardization, and may be addressed in a future version of the standard by adding a new capture mode or possibly adjusting the meaning of [=]. For now, just be explicit.\nEnforcement\n\nFlag any lambda capture-list that specifies a default capture and also captures this (whether explicitly or via default capture)\n\n1.7.6.2.26. F.55: Don't use va_arg arguments\nReason\nReading from a va_arg assumes that the correct type was actually passed.\nPassing to varargs assumes the correct type will be read.\nThis is fragile because it cannot generally be enforced to be safe in the language and so relies on programmer discipline to get it right.\nExample\nint sum(...) {\n    // ...\n    while (/*...*/)\n        result += va_arg(list, int); // BAD, assumes it will be passed ints\n    // ...\n}\n\nsum(3, 2); // ok\nsum(3.14159, 2.71828); // BAD, undefined\n\ntemplate\nauto sum(Args... args) { // GOOD, and much more flexible\n    return (... + args); // note: C++17 \"fold expression\"\n}\n\nsum(3, 2); // ok: 5\nsum(3.14159, 2.71828); // ok: ~5.85987\nAlternatives\n\noverloading\nvariadic templates\nvariant arguments\ninitializer_list (homogeneous)\n\nNote\nDeclaring a ... parameter is sometimes useful for techniques that don't involve actual argument passing, notably to declare \"take-anything\" functions so as to disable \"everything else\" in an overload set or express a catchall case in a template metaprogram.\nEnforcement\n\nIssue a diagnostic for using va_list, va_start, or va_arg.\nIssue a diagnostic for passing an argument to a vararg parameter of a function that does not offer an overload for a more specific type in the position of the vararg. To fix: Use a different function, or [[suppress(types)]].\n\n1.7.7. C: Classes and Class Hierarchies\nA class is a user-defined type, for which a programmer can define the representation, operations, and interfaces.\nClass hierarchies are used to organize related classes into hierarchical structures.\nClass rule summary:\n\nC.1: Organize related data into structures (structs or classes)\nC.2: Use class if the class has an invariant; use struct if the data members can vary independently\nC.3: Represent the distinction between an interface and an implementation using a class\nC.4: Make a function a member only if it needs direct access to the representation of a class\nC.5: Place helper functions in the same namespace as the class they support\nC.7: Don't define a class or enum and declare a variable of its type in the same statement\nC.8: Use class rather than struct if any member is non-public\nC.9: Minimize exposure of members\n\nSubsections:\n\nC.concrete: Concrete types\nC.ctor: Constructors, assignments, and destructors\nC.con: Containers and other resource handles\nC.lambdas: Function objects and lambdas\nC.hier: Class hierarchies (OOP)\nC.over: Overloading and overloaded operators\nC.union: Unions\n\nC.1: Organize related data into structures (structs or classes)\nReason\nEase of comprehension.\nIf data is related (for fundamental reasons), that fact should be reflected in code.\nExample\nvoid draw(int x, int y, int x2, int y2);  // BAD: unnecessary implicit relationships\nvoid draw(Point from, Point to);          // better\nNote\nA simple class without virtual functions implies no space or time overhead.\nNote\nFrom a language perspective class and struct differ only in the default visibility of their members.\nEnforcement\nProbably impossible. Maybe a heuristic looking for data items used together is possible.\nC.2: Use class if the class has an invariant; use struct if the data members can vary independently\nReason\nReadability.\nEase of comprehension.\nThe use of class alerts the programmer to the need for an invariant.\nThis is a useful convention.\nNote\nAn invariant is a logical condition for the members of an object that a constructor must establish for the public member functions to assume.\nAfter the invariant is established (typically by a constructor) every member function can be called for the object.\nAn invariant can be stated informally (e.g., in a comment) or more formally using Expects.\nIf all data members can vary independently of each other, no invariant is possible.\nExample\nstruct Pair {  // the members can vary independently\n    string name;\n    int volume;\n};\nbut:\nclass Date {\npublic:\n    // validate that {yy, mm, dd} is a valid date and initialize\n    Date(int yy, Month mm, char dd);\n    // ...\nprivate:\n    int y;\n    Month m;\n    char d;    // day\n};\nNote\nIf a class has any private data, a user cannot completely initialize an object without the use of a constructor.\nHence, the class definer will provide a constructor and must specify its meaning.\nThis effectively means the definer need to define an invariant.\n\nSee also define a class with private data as class.\nSee also Prefer to place the interface first in a class.\nSee also minimize exposure of members.\nSee also Avoid protected data.\n\nEnforcement\nLook for structs with all data private and classes with public members.\nC.3: Represent the distinction between an interface and an implementation using a class\nReason\nAn explicit distinction between interface and implementation improves readability and simplifies maintenance.\nExample\nclass Date {\n    // ... some representation ...\npublic:\n    Date();\n    // validate that {yy, mm, dd} is a valid date and initialize\n    Date(int yy, Month mm, char dd);\n\n    int day() const;\n    Month month() const;\n    // ...\n};\nFor example, we can now change the representation of a Date without affecting its users (recompilation is likely, though).\nNote\nUsing a class in this way to represent the distinction between interface and implementation is of course not the only way.\nFor example, we can use a set of declarations of freestanding functions in a namespace, an abstract base class, or a template function with concepts to represent an interface.\nThe most important issue is to explicitly distinguish between an interface and its implementation \"details.\"\nIdeally, and typically, an interface is far more stable than its implementation(s).\nEnforcement\n???\nC.4: Make a function a member only if it needs direct access to the representation of a class\nReason\nLess coupling than with member functions, fewer functions that can cause trouble by modifying object state, reduces the number of functions that needs to be modified after a change in representation.\nExample\nclass Date {\n    // ... relatively small interface ...\n};\n\n// helper functions:\nDate next_weekday(Date);\nbool operator==(Date, Date);\nThe \"helper functions\" have no need for direct access to the representation of a Date.\nNote\nThis rule becomes even better if C++ gets \"uniform function call\".\nException\nThe language requires virtual functions to be members, and not all virtual functions directly access data.\nIn particular, members of an abstract class rarely do.\nNote multi-methods.\nException\nThe language requires operators =, (), [], and -> to be members.\nException\nAn overload set may have some members that do not directly access private data:\nclass Foobar {\n    void foo(int x)    { /* manipulate private data */ }\n    void foo(double x) { foo(std::round(x)); }\n    // ...\nprivate:\n    // ...\n};\nSimilarly, a set of functions may be designed to be used in a chain:\nx.scale(0.5).rotate(45).set_color(Color::red);\nTypically, some but not all of such functions directly access private data.\nEnforcement\n\nLook for non-virtual member functions that do not touch data members directly.\nThe snag is that many member functions that do not need to touch data members directly do.\nIgnore virtual functions.\nIgnore functions that are part of an overload set out of which at least one function accesses private members.\nIgnore functions returning this.\n\nC.5: Place helper functions in the same namespace as the class they support\nReason\nA helper function is a function (usually supplied by the writer of a class) that does not need direct access to the representation of the class, yet is seen as part of the useful interface to the class.\nPlacing them in the same namespace as the class makes their relationship to the class obvious and allows them to be found by argument dependent lookup.\nExample\nnamespace Chrono { // here we keep time-related services\n\n    class Time { /* ... */ };\n    class Date { /* ... */ };\n\n    // helper functions:\n    bool operator==(Date, Date);\n    Date next_weekday(Date);\n    // ...\n}\nNote\nThis is especially important for overloaded operators.\nEnforcement\n\nFlag global functions taking argument types from a single namespace.\n\nC.7: Don't define a class or enum and declare a variable of its type in the same statement\nReason\nMixing a type definition and the definition of another entity in the same declaration is confusing and unnecessary.\nExample; bad\nstruct Data { /*...*/ } data{ /*...*/ };\nExample; good\nstruct Data { /*...*/ };\nData data{ /*...*/ };\nEnforcement\n\nFlag if the } of a class or enumeration definition is not followed by a ;. The ; is missing.\n\nC.8: Use class rather than struct if any member is non-public\nReason\nReadability.\nTo make it clear that something is being hidden/abstracted.\nThis is a useful convention.\nExample, bad\nstruct Date {\n    int d, m;\n\n    Date(int i, Month m);\n    // ... lots of functions ...\nprivate:\n    int y;  // year\n};\nThere is nothing wrong with this code as far as the C++ language rules are concerned,\nbut nearly everything is wrong from a design perspective.\nThe private data is hidden far from the public data.\nThe data is split in different parts of the class declaration.\nDifferent parts of the data have different access.\nAll of this decreases readability and complicates maintenance.\nNote\nPrefer to place the interface first in a class see.\nEnforcement\nFlag classes declared with struct if there is a private or protected member.\nC.9: Minimize exposure of members\nReason\nEncapsulation.\nInformation hiding.\nMinimize the chance of untended access.\nThis simplifies maintenance.\nExample\ntemplate\nstruct pair {\n    T a;\n    U b;\n    // ...\n};\nWhatever we do in the //-part, an arbitrary user of a pair can arbitrarily and independently change its a and b.\nIn a large code base, we cannot easily find which code does what to the members of pair.\nThis may be exactly what we want, but if we want to enforce a relation among members, we need to make them private\nand enforce that relation (invariant) through constructors and member functions.\nFor example:\nstruct Distance {\npublic:\n    // ...\n    double meters() const { return magnitude*unit; }\n    void set_unit(double u)\n    {\n            // ... check that u is a factor of 10 ...\n            // ... change magnitude appropriately ...\n            unit = u;\n    }\n    // ...\nprivate:\n    double magnitude;\n    double unit;    // 1 is meters, 1000 is kilometers, 0.0001 is millimeters, etc.\n};\nNote\nIf the set of direct users of a set of variables cannot be easily determined, the type or usage of that set cannot be (easily) changed/improved.\nFor public and protected data, that's usually the case.\nExample\nA class can provide two interfaces to its users.\nOne for derived classes (protected) and one for general users (public).\nFor example, a derived class might be allowed to skip a run-time check because it has already guaranteed correctness:\nclass Foo {\npublic:\n    int bar(int x) { check(x); return do_bar(x); }\n    // ...\nprotected:\n    int do_bar(int x); // do some operation on the data\n    // ...\nprivate:\n    // ... data ...\n};\n\nclass Dir : public Foo {\n    //...\n    int mem(int x, int y)\n    {\n        /* ... do something ... */\n        return do_bar(x + y); // OK: derived class can bypass check\n    }\n};\n\nvoid user(Foo& x)\n{\n    int r1 = x.bar(1);      // OK, will check\n    int r2 = x.do_bar(2);   // error: would bypass check\n    // ...\n}\nNote\nprotected data is a bad idea.\nNote\nPrefer the order public members before protected members before private members see.\nEnforcement\n\nFlag protected data.\nFlag mixtures of public and private data\n\n1.7.7.1. C.concrete: Concrete types\nOne ideal for a class is to be a regular type.\nThat means roughly \"behaves like an int.\" A concrete type is the simplest kind of class.\nA value of regular type can be copied and the result of a copy is an independent object with the same value as the original.\nIf a concrete type has both = and ==, a = b should result in a == b being true.\nConcrete classes without assignment and equality can be defined, but they are (and should be) rare.\nThe C++ built-in types are regular, and so are standard-library classes, such as string, vector, and map.\nConcrete types are also often referred to as value types to distinguish them from types used as part of a hierarchy.\nConcrete type rule summary:\n\nC.10: Prefer concrete types over class hierarchies\nC.11: Make concrete types regular\n\n1.7.7.1.1. C.10: Prefer concrete types over class hierarchies\nReason\nA concrete type is fundamentally simpler than a hierarchy:\neasier to design, easier to implement, easier to use, easier to reason about, smaller, and faster.\nYou need a reason (use cases) for using a hierarchy.\nExample\nclass Point1 {\n    int x, y;\n    // ... operations ...\n    // ... no virtual functions ...\n};\n\nclass Point2 {\n    int x, y;\n    // ... operations, some virtual ...\n    virtual ~Point2();\n};\n\nvoid use()\n{\n    Point1 p11 {1, 2};   // make an object on the stack\n    Point1 p12 {p11};    // a copy\n\n    auto p21 = make_unique(1, 2);   // make an object on the free store\n    auto p22 = p21.clone();                 // make a copy\n    // ...\n}\nIf a class can be part of a hierarchy, we (in real code if not necessarily in small examples) must manipulate its objects through pointers or references.\nThat implies more memory overhead, more allocations and deallocations, and more run-time overhead to perform the resulting indirections.\nNote\nConcrete types can be stack-allocated and be members of other classes.\nNote\nThe use of indirection is fundamental for run-time polymorphic interfaces.\nThe allocation/deallocation overhead is not (that's just the most common case).\nWe can use a base class as the interface of a scoped object of a derived class.\nThis is done where dynamic allocation is prohibited (e.g. hard-real-time) and to provide a stable interface to some kinds of plug-ins.\nEnforcement\n???\n1.7.7.1.2. C.11: Make concrete types regular\nReason\nRegular types are easier to understand and reason about than types that are not regular (irregularities requires extra effort to understand and use).\nExample\nstruct Bundle {\n    string name;\n    vector vr;\n};\n\nbool operator==(const Bundle& a, const Bundle& b)\n{\n    return a.name == b.name && a.vr == b.vr;\n}\n\nBundle b1 { \"my bundle\", {r1, r2, r3}};\nBundle b2 = b1;\nif (!(b1 == b2)) error(\"impossible!\");\nb2.name = \"the other bundle\";\nif (b1 == b2) error(\"No!\");\nIn particular, if a concrete type has an assignment also give it an equals operator so that a = b implies a == b.\nEnforcement\n???\n1.7.7.2. C.ctor: Constructors, assignments, and destructors\nThese functions control the lifecycle of objects: creation, copy, move, and destruction.\nDefine constructors to guarantee and simplify initialization of classes.\nThese are default operations:\n\na default constructor: X()\na copy constructor: X(const X&)\na copy assignment: operator=(const X&)\na move constructor: X(X&&)\na move assignment: operator=(X&&)\na destructor: ~X()\n\nBy default, the compiler defines each of these operations if it is used, but the default can be suppressed.\nThe default operations are a set of related operations that together implement the lifecycle semantics of an object.\nBy default, C++ treats classes as value-like types, but not all types are value-like.\nSet of default operations rules:\n\nC.20: If you can avoid defining any default operations, do\nC.21: If you define or =delete any default operation, define or =delete them all\nC.22: Make default operations consistent\n\nDestructor rules:\n\nC.30: Define a destructor if a class needs an explicit action at object destruction\nC.31: All resources acquired by a class must be released by the class's destructor\nC.32: If a class has a raw pointer (T*) or reference (T&), consider whether it might be owning\nC.33: If a class has an owning pointer member, define or =delete a destructor\nC.35: A base class with a virtual function needs a virtual destructor\nC.36: A destructor may not fail\nC.37: Make destructors noexcept\n\nConstructor rules:\n\nC.40: Define a constructor if a class has an invariant\nC.41: A constructor should create a fully initialized object\nC.42: If a constructor cannot construct a valid object, throw an exception\nC.43: Ensure that a value type class has a default constructor\nC.44: Prefer default constructors to be simple and non-throwing\nC.45: Don't define a default constructor that only initializes data members; use member initializers instead\nC.46: By default, declare single-argument constructors explicit\nC.47: Define and initialize member variables in the order of member declaration\nC.48: Prefer in-class initializers to member initializers in constructors for constant initializers\nC.49: Prefer initialization to assignment in constructors\nC.50: Use a factory function if you need \"virtual behavior\" during initialization\nC.51: Use delegating constructors to represent common actions for all constructors of a class\nC.52: Use inheriting constructors to import constructors into a derived class that does not need further explicit initialization\n\nCopy and move rules:\n\nC.60: Make copy assignment non-virtual, take the parameter by const&, and return by non-const&\nC.61: A copy operation should copy\nC.62: Make copy assignment safe for self-assignment\nC.63: Make move assignment non-virtual, take the parameter by &&, and return by non-const&\nC.64: A move operation should move and leave its source in a valid state\nC.65: Make move assignment safe for self-assignment\nC.66: Make move operations noexcept\nC.67: A base class should suppress copying, and provide a virtual clone instead if \"copying\" is desired\n\nOther default operations rules:\n\nC.80: Use =default if you have to be explicit about using the default semantics\nC.81: Use =delete when you want to disable default behavior (without wanting an alternative)\nC.82: Don't call virtual functions in constructors and destructors\nC.83: For value-like types, consider providing a noexcept swap function\nC.84: A swap may not fail\nC.85: Make swap noexcept\nC.86: Make == symmetric with respect of operand types and noexcept\nC.87: Beware of == on base classes\nC.89: Make a hash noexcept\n\n1.7.7.3. C.defop: Default Operations\nBy default, the language supplies the default operations with their default semantics.\nHowever, a programmer can disable or replace these defaults.\n1.7.7.3.1. C.20: If you can avoid defining default operations, do\nReason\nIt's the simplest and gives the cleanest semantics.\nExample\nstruct Named_map {\npublic:\n    // ... no default operations declared ...\nprivate:\n    string name;\n    map rep;\n};\n\nNamed_map nm;        // default construct\nNamed_map nm2 {nm};  // copy construct\nSince std::map and string have all the special functions, no further work is needed.\nNote\nThis is known as \"the rule of zero\".\nEnforcement\n(Not enforceable) While not enforceable, a good static analyzer can detect patterns that indicate a possible improvement to meet this rule.\nFor example, a class with a (pointer, size) pair of member and a destructor that deletes the pointer could probably be converted to a vector.\n1.7.7.3.2. C.21: If you define or =delete any default operation, define or =delete them all\nReason\nThe semantics of the special functions are closely related, so if one needs to be non-default, the odds are that others need modification too.\nExample, bad\nstruct M2 {   // bad: incomplete set of default operations\npublic:\n    // ...\n    // ... no copy or move operations ...\n    ~M2() { delete[] rep; }\nprivate:\n    pair* rep;  // zero-terminated set of pairs\n};\n\nvoid use()\n{\n    M2 x;\n    M2 y;\n    // ...\n    x = y;   // the default assignment\n    // ...\n}\nGiven that \"special attention\" was needed for the destructor (here, to deallocate), the likelihood that copy and move assignment (both will implicitly destroy an object) are correct is low (here, we would get double deletion).\nNote\nThis is known as \"the rule of five\" or \"the rule of six\", depending on whether you count the default constructor.\nNote\nIf you want a default implementation of a default operation (while defining another), write =default to show you're doing so intentionally for that function.\nIf you don't want a default operation, suppress it with =delete.\nNote\nCompilers enforce much of this rule and ideally warn about any violation.\nNote\nRelying on an implicitly generated copy operation in a class with a destructor is deprecated.\nEnforcement\n(Simple) A class should have a declaration (even a =delete one) for either all or none of the special functions.\n1.7.7.3.3. C.22: Make default operations consistent\nReason\nThe default operations are conceptually a matched set. Their semantics are interrelated.\nUsers will be surprised if copy/move construction and copy/move assignment do logically different things. Users will be surprised if constructors and destructors do not provide a consistent view of resource management. Users will be surprised if copy and move don't reflect the way constructors and destructors work.\nExample, bad\nclass Silly {   // BAD: Inconsistent copy operations\n    class Impl {\n        // ...\n    };\n    shared_ptr p;\npublic:\n    Silly(const Silly& a) : p{a.p} { *p = *a.p; }   // deep copy\n    Silly& operator=(const Silly& a) { p = a.p; }   // shallow copy\n    // ...\n};\nThese operations disagree about copy semantics. This will lead to confusion and bugs.\nEnforcement\n\n(Complex) A copy/move constructor and the corresponding copy/move assignment operator should write to the same member variables at the same level of dereference.\n(Complex) Any member variables written in a copy/move constructor should also be initialized by all other constructors.\n(Complex) If a copy/move constructor performs a deep copy of a member variable, then the destructor should modify the member variable.\n(Complex) If a destructor is modifying a member variable, that member variable should be written in any copy/move constructors or assignment operators.\n\n1.7.7.4. C.dtor: Destructors\n\"Does this class need a destructor?\" is a surprisingly powerful design question.\nFor most classes the answer is \"no\" either because the class holds no resources or because destruction is handled by the rule of zero;\nthat is, its members can take care of themselves as concerns destruction.\nIf the answer is \"yes\", much of the design of the class follows (see the rule of five).\n1.7.7.4.1. C.30: Define a destructor if a class needs an explicit action at object destruction\nReason\nA destructor is implicitly invoked at the end of an object's lifetime.\nIf the default destructor is sufficient, use it.\nOnly define a non-default destructor if a class needs to execute code that is not already part of its members' destructors.\nExample\ntemplate\nstruct final_action {   // slightly simplified\n    A act;\n    final_action(A a) :act{a} {}\n    ~final_action() { act(); }\n};\n\ntemplate\nfinal_action finally(A act)   // deduce action type\n{\n    return final_action{act};\n}\n\nvoid test()\n{\n    auto act = finally([]{ cout The whole purpose of final_action is to get a piece of code (usually a lambda) executed upon destruction.\nNote\nThere are two general categories of classes that need a user-defined destructor:\n\nA class with a resource that is not already represented as a class with a destructor, e.g., a vector or a transaction class.\nA class that exists primarily to execute an action upon destruction, such as a tracer or final_action.\n\nExample, bad\nclass Foo {   // bad; use the default destructor\npublic:\n    // ...\n    ~Foo() { s = \"\"; i = 0; vi.clear(); }  // clean up\nprivate:\n    string s;\n    int i;\n    vector vi;\n};\nThe default destructor does it better, more efficiently, and can't get it wrong.\nNote\nIf the default destructor is needed, but its generation has been suppressed (e.g., by defining a move constructor), use =default.\nEnforcement\nLook for likely \"implicit resources\", such as pointers and references. Look for classes with destructors even though all their data members have destructors.\n1.7.7.4.2. C.31: All resources acquired by a class must be released by the class's destructor\nReason\nPrevention of resource leaks, especially in error cases.\nNote\nFor resources represented as classes with a complete set of default operations, this happens automatically.\nExample\nclass X {\n    ifstream f;   // may own a file\n    // ... no default operations defined or =deleted ...\n};\nX's ifstream implicitly closes any file it may have open upon destruction of its X.\nExample, bad\nclass X2 {     // bad\n    FILE* f;   // may own a file\n    // ... no default operations defined or =deleted ...\n};\nX2 may leak a file handle.\nNote\nWhat about a sockets that won't close? A destructor, close, or cleanup operation should never fail.\nIf it does nevertheless, we have a problem that has no really good solution.\nFor starters, the writer of a destructor does not know why the destructor is called and cannot \"refuse to act\" by throwing an exception.\nSee discussion.\nTo make the problem worse, many \"close/release\" operations are not retryable.\nMany have tried to solve this problem, but no general solution is known.\nIf at all possible, consider failure to close/cleanup a fundamental design error and terminate.\nNote\nA class can hold pointers and references to objects that it does not own.\nObviously, such objects should not be deleted by the class's destructor.\nFor example:\nPreprocessor pp { /* ... */ };\nParser p { pp, /* ... */ };\nType_checker tc { p, /* ... */ };\nHere p refers to pp but does not own it.\nEnforcement\n\n(Simple) If a class has pointer or reference member variables that are owners\n(e.g., deemed owners by using gsl::owner), then they should be referenced in its destructor.\n(Hard) Determine if pointer or reference member variables are owners when there is no explicit statement of ownership\n(e.g., look into the constructors).\n\n1.7.7.4.3. C.32: If a class has a raw pointer (T*) or reference (T&), consider whether it might be owning\nReason\nThere is a lot of code that is non-specific about ownership.\nExample\n???\nNote\nIf the T* or T& is owning, mark it owning. If the T* is not owning, consider marking it ptr.\nThis will aid documentation and analysis.\nEnforcement\nLook at the initialization of raw member pointers and member references and see if an allocation is used.\n1.7.7.4.4. C.33: If a class has an owning pointer member, define a destructor\nReason\nAn owned object must be deleted upon destruction of the object that owns it.\nExample\nA pointer member may represent a resource.\nA T* should not do so, but in older code, that's common.\nConsider a T* a possible owner and therefore suspect.\ntemplate\nclass Smart_ptr {\n    T* p;   // BAD: vague about ownership of *p\n    // ...\npublic:\n    // ... no user-defined default operations ...\n};\n\nvoid use(Smart_ptr p1)\n{\n    // error: p2.p leaked (if not nullptr and not owned by some other code)\n    auto p2 = p1;\n}\nNote that if you define a destructor, you must define or delete all default operations:\ntemplate\nclass Smart_ptr2 {\n    T* p;   // BAD: vague about ownership of *p\n    // ...\npublic:\n    // ... no user-defined copy operations ...\n    ~Smart_ptr2() { delete p; }  // p is an owner!\n};\n\nvoid use(Smart_ptr2 p1)\n{\n    auto p2 = p1;   // error: double deletion\n}\nThe default copy operation will just copy the p1.p into p2.p leading to a double destruction of p1.p. Be explicit about ownership:\ntemplate\nclass Smart_ptr3 {\n    owner p;   // OK: explicit about ownership of *p\n    // ...\npublic:\n    // ...\n    // ... copy and move operations ...\n    ~Smart_ptr3() { delete p; }\n};\n\nvoid use(Smart_ptr3 p1)\n{\n    auto p2 = p1;   // error: double deletion\n}\nNote\nOften the simplest way to get a destructor is to replace the pointer with a smart pointer (e.g., std::unique_ptr) and let the compiler arrange for proper destruction to be done implicitly.\nNote\nWhy not just require all owning pointers to be \"smart pointers\"?\nThat would sometimes require non-trivial code changes and may affect ABIs.\nEnforcement\n\nA class with a pointer data member is suspect.\nA class with an owner should define its default operations.\n\n1.7.7.4.5. C.35: A base class destructor should be either public and virtual, or protected and nonvirtual\nReason\nTo prevent undefined behavior.\nIf the destructor is public, then calling code can attempt to destroy a derived class object through a base class pointer, and the result is undefined if the base class's destructor is non-virtual.\nIf the destructor is protected, then calling code cannot destroy through a base class pointer and the destructor does not need to be virtual; it does need to be protected, not private, so that derived destructors can invoke it.\nIn general, the writer of a base class does not know the appropriate action to be done upon destruction.\nDiscussion\nSee this in the Discussion section.\nExample, bad\nstruct Base {  // BAD: no virtual destructor\n    virtual void f();\n};\n\nstruct D : Base {\n    string s {\"a resource needing cleanup\"};\n    ~D() { /* ... do some cleanup ... */ }\n    // ...\n};\n\nvoid use()\n{\n    unique_ptr p = make_unique();\n    // ...\n} // p's destruction calls ~Base(), not ~D(), which leaks D::s and possibly more\nNote\nA virtual function defines an interface to derived classes that can be used without looking at the derived classes.\nIf the interface allows destroying, it should be safe to do so.\nNote\nA destructor must be nonprivate or it will prevent using the type :\nclass X {\n    ~X();   // private destructor\n    // ...\n};\n\nvoid use()\n{\n    X a;                        // error: cannot destroy\n    auto p = make_unique();  // error: cannot destroy\n}\nException\nWe can imagine one case where you could want a protected virtual destructor: When an object of a derived type (and only of such a type) should be allowed to destroy another object (not itself) through a pointer to base. We haven't seen such a case in practice, though.\nEnforcement\n\nA class with any virtual functions should have a destructor that is either public and virtual or else protected and nonvirtual.\n\n1.7.7.4.6. C.36: A destructor may not fail\nReason\nIn general we do not know how to write error-free code if a destructor should fail.\nThe standard library requires that all classes it deals with have destructors that do not exit by throwing.\nExample\nclass X {\npublic:\n    ~X() noexcept;\n    // ...\n};\n\nX::~X() noexcept\n{\n    // ...\n    if (cannot_release_a_resource) terminate();\n    // ...\n}\nNote\nMany have tried to devise a fool-proof scheme for dealing with failure in destructors.\nNone have succeeded to come up with a general scheme.\nThis can be a real practical problem: For example, what about a socket that won't close?\nThe writer of a destructor does not know why the destructor is called and cannot \"refuse to act\" by throwing an exception.\nSee discussion.\nTo make the problem worse, many \"close/release\" operations are not retryable.\nIf at all possible, consider failure to close/cleanup a fundamental design error and terminate.\nNote\nDeclare a destructor noexcept. That will ensure that it either completes normally or terminate the program.\nNote\nIf a resource cannot be released and the program may not fail, try to signal the failure to the rest of the system somehow\n(maybe even by modifying some global state and hope something will notice and be able to take care of the problem).\nBe fully aware that this technique is special-purpose and error-prone.\nConsider the \"my connection will not close\" example.\nProbably there is a problem at the other end of the connection and only a piece of code responsible for both ends of the connection can properly handle the problem.\nThe destructor could send a message (somehow) to the responsible part of the system, consider that to have closed the connection, and return normally.\nNote\nIf a destructor uses operations that may fail, it can catch exceptions and in some cases still complete successfully\n(e.g., by using a different clean-up mechanism from the one that threw an exception).\nEnforcement\n(Simple) A destructor should be declared noexcept if it could throw.\n1.7.7.4.7. C.37: Make destructors noexcept\nReason\n A destructor may not fail. If a destructor tries to exit with an exception, it's a bad design error and the program had better terminate.\nNote\nA destructor (either user-defined or compiler-generated) is implicitly declared noexcept (independently of what code is in its body) if all of the members of its class have noexcept destructors. By explicitly marking destructors noexcept, an author guards against the destructor becoming implicitly noexcept(false) through the addition or modification of a class member.\nEnforcement\n(Simple) A destructor should be declared noexcept if it could throw.\n1.7.7.5. C.ctor: Constructors\nA constructor defines how an object is initialized (constructed).\n1.7.7.5.1. C.40: Define a constructor if a class has an invariant\nReason\nThat's what constructors are for.\nExample\nclass Date {  // a Date represents a valid date\n              // in the January 1, 1900 to December 31, 2100 range\n    Date(int dd, int mm, int yy)\n        :d{dd}, m{mm}, y{yy}\n    {\n        if (!is_valid(d, m, y)) throw Bad_date{};  // enforce invariant\n    }\n    // ...\nprivate:\n    int d, m, y;\n};\nIt is often a good idea to express the invariant as an Ensures on the constructor.\nNote\nA constructor can be used for convenience even if a class does not have an invariant. For example:\nstruct Rec {\n    string s;\n    int i {0};\n    Rec(const string& ss) : s{ss} {}\n    Rec(int ii) :i{ii} {}\n};\n\nRec r1 {7};\nRec r2 {\"Foo bar\"};\nNote\nThe C++11 initializer list rule eliminates the need for many constructors. For example:\nstruct Rec2{\n    string s;\n    int i;\n    Rec2(const string& ss, int ii = 0) :s{ss}, i{ii} {}   // redundant\n};\n\nRec2 r1 {\"Foo\", 7};\nRec2 r2 {\"Bar\"};\nThe Rec2 constructor is redundant.\nAlso, the default for int would be better done as a member initializer.\nSee also: construct valid object and constructor throws.\nEnforcement\n\nFlag classes with user-defined copy operations but no constructor (a user-defined copy is a good indicator that the class has an invariant)\n\n1.7.7.5.2. C.41: A constructor should create a fully initialized object\nReason\nA constructor establishes the invariant for a class. A user of a class should be able to assume that a constructed object is usable.\nExample, bad\nclass X1 {\n    FILE* f;   // call init() before any other function\n    // ...\npublic:\n    X1() {}\n    void init();   // initialize f\n    void read();   // read from f\n    // ...\n};\n\nvoid f()\n{\n    X1 file;\n    file.read();   // crash or bad read!\n    // ...\n    file.init();   // too late\n    // ...\n}\nCompilers do not read comments.\nException\nIf a valid object cannot conveniently be constructed by a constructor, use a factory function.\nEnforcement\n\n(Simple) Every constructor should initialize every member variable (either explicitly, via a delegating ctor call or via default construction).\n(Unknown) If a constructor has an Ensures contract, try to see if it holds as a postcondition.\n\nNote\nIf a constructor acquires a resource (to create a valid object), that resource should be released by the destructor.\nThe idiom of having constructors acquire resources and destructors release them is called RAII (\"Resource Acquisition Is Initialization\").\n1.7.7.5.3. C.42: If a constructor cannot construct a valid object, throw an exception\nReason\nLeaving behind an invalid object is asking for trouble.\nExample\nclass X2 {\n    FILE* f;   // call init() before any other function\n    // ...\npublic:\n    X2(const string& name)\n        :f{fopen(name.c_str(), \"r\")}\n    {\n        if (f == nullptr) throw runtime_error{\"could not open\" + name};\n        // ...\n    }\n\n    void read();      // read from f\n    // ...\n};\n\nvoid f()\n{\n    X2 file {\"Zeno\"}; // throws if file isn't open\n    file.read();      // fine\n    // ...\n}\nExample, bad\nclass X3 {     // bad: the constructor leaves a non-valid object behind\n    FILE* f;   // call init() before any other function\n    bool valid;\n    // ...\npublic:\n    X3(const string& name)\n        :f{fopen(name.c_str(), \"r\")}, valid{false}\n    {\n        if (f) valid = true;\n        // ...\n    }\n\n    bool is_valid() { return valid; }\n    void read();   // read from f\n    // ...\n};\n\nvoid f()\n{\n    X3 file {\"Heraclides\"};\n    file.read();   // crash or bad read!\n    // ...\n    if (file.is_valid()) {\n        file.read();\n        // ...\n    }\n    else {\n        // ... handle error ...\n    }\n    // ...\n}\nNote\nFor a variable definition (e.g., on the stack or as a member of another object) there is no explicit function call from which an error code could be returned.\nLeaving behind an invalid object and relying on users to consistently check an is_valid() function before use is tedious, error-prone, and inefficient.\nException\nThere are domains, such as some hard-real-time systems (think airplane controls) where (without additional tool support) exception handling is not sufficiently predictable from a timing perspective.\nThere the is_valid() technique must be used. In such cases, check is_valid() consistently and immediately to simulate RAII.\nAlternative\nIf you feel tempted to use some \"post-constructor initialization\" or \"two-stage initialization\" idiom, try not to do that.\nIf you really have to, look at factory functions.\nNote\nOne reason people have used init() functions rather than doing the initialization work in a constructor has been to avoid code replication.\nDelegating constructors and default member initialization do that better.\nAnother reason is been to delay initialization until an object is needed; the solution to that is often not to declare a variable until it can be properly initialized\nEnforcement\n???\n1.7.7.5.4. C.43: Ensure that a value type class has a default constructor\nReason\nMany language and library facilities rely on default constructors to initialize their elements, e.g. T a[10] and std::vector v(10).\nA default constructor often simplifies the task of defining a suitable moved-from state.\nNote\nWe have not (yet) formally defined value type, but think of it as a class that behaves much as an int:\nit can be copied using = and usually compared using ==.\nIt is closely related to the notion of Regular type from EoP and the Palo Alto TR.\nExample\nclass Date { // BAD: no default constructor\npublic:\n    Date(int dd, int mm, int yyyy);\n    // ...\n};\n\nvector vd1(1000);   // default Date needed here\nvector vd2(1000, Date{Month::October, 7, 1885});   // alternative\nThe default constructor is only auto-generated if there is no user-declared constructor, hence it's impossible to initialize the vector vd1 in the example above.\nThe absence of a default value can cause surprises for users and complicate its use, so if one can be reasonably defined, it should be.\nDate is chosen to encourage thought:\nThere is no \"natural\" default date (the big bang is too far back in time to be useful for most people), so this example is non-trivial.\n{0, 0, 0} is not a valid date in most calendar systems, so choosing that would be introducing something like floating-point's NaN.\nHowever, most realistic Date classes have a \"first date\" (e.g. January 1, 1970 is popular), so making that the default is usually trivial.\nclass Date {\npublic:\n    Date(int dd, int mm, int yyyy);\n    Date() = default; // [See also](#Rc-default)\n    // ...\nprivate:\n    int dd = 1;\n    int mm = 1;\n    int yyyy = 1970;\n    // ...\n};\n\nvector vd1(1000);\nNote\nA class with members that all have default constructors implicitly gets a default constructor:\nstruct X {\n    string s;\n    vector v;\n};\n\nX x; // means X{{}, {}}; that is the empty string and the empty vector\nBeware that built-in types are not properly default constructed:\nstruct X {\n    string s;\n    int i;\n};\n\nvoid f()\n{\n    X x;    // x.s is initialized to the empty string; x.i is uninitialized\n\n    cout Statically allocated objects of built-in types are by default initialized to 0, but local built-in variables are not.\nBeware that your compiler may default initialize local built-in variables, whereas an optimized build will not.\nThus, code like the example above may appear to work, but it relies on undefined behavior.\nAssuming that you want initialization, an explicit default initialization can help:\nstruct X {\n    string s;\n    int i {};   // default initialize (to 0)\n};\nExample\nThere are classes that simply don't have a reasonable default.\nA class designed to be useful only as a base does not need a default constructor because it cannot be constructed by itself:\nstruct Shape {  // pure interface: all members are pure virtual functions\n        void draw() = 0;\n        void rotate(int) = 0;\n        // ...\n};\nA class that must acquire a resource during construction:\nlock_guard g {mx};  // guard the mutex mx\nlock_guard g2;      // error: guarding nothing\nNote\nA class that has a \"special state\" that must be handled separately from other states by member functions or users causes extra work\n(and most likely more errors). For example\nofstream out {\"Foobar\"};\n// ...\nout If Foobar couldn't be opened for writing and out wasn't set to throw exceptions upon errors, the output operations become no-ops.\nThe implementation must take care of that case, and users must remember to test for success.\nPointers, even smart pointers, that can point to nothing (null pointers) are an example of this.\nHaving a default constructor is not a panacea; ideally it defaults to a meaningful state such as std::strings \"\" and std::vectors {}.\nEnforcement\n\nFlag classes that are copyable by = or comparable with == without a default constructor\n\n1.7.7.5.5. C.44: Prefer default constructors to be simple and non-throwing\nReason\nBeing able to set a value to \"the default\" without operations that might fail simplifies error handling and reasoning about move operations.\nExample, problematic\ntemplate\n// elem points to space-elem element allocated using new\nclass Vector0 {\npublic:\n    Vector0() :Vector0{0} {}\n    Vector0(int n) :elem{new T[n]}, space{elem + n}, last{elem} {}\n    // ...\nprivate:\n    own elem;\n    T* space;\n    T* last;\n};\nThis is nice and general, but setting a Vector0 to empty after an error involves an allocation, which may fail.\nAlso, having a default Vector represented as {new T[0], 0, 0} seems wasteful.\nFor example, Vector0 v(100) costs 100 allocations.\nExample\ntemplate\n// elem is nullptr or elem points to space-elem element allocated using new\nclass Vector1 {\npublic:\n    // sets the representation to {nullptr, nullptr, nullptr}; doesn't throw\n    Vector1() noexcept {}\n    Vector1(int n) :elem{new T[n]}, space{elem + n}, last{elem} {}\n    // ...\nprivate:\n    own elem = nullptr;\n    T* space = nullptr;\n    T* last = nullptr;\n};\nUsing {nullptr, nullptr, nullptr} makes Vector1{} cheap, but a special case and implies run-time checks.\nSetting a Vector1 to empty after detecting an error is trivial.\nEnforcement\n\nFlag throwing default constructors\n\n1.7.7.5.6. C.45: Don't define a default constructor that only initializes data members; use in-class member initializers instead\nReason\nUsing in-class member initializers lets the compiler generate the function for you. The compiler-generated function can be more efficient.\nExample, bad\nclass X1 { // BAD: doesn't use member initializers\n    string s;\n    int i;\npublic:\n    X1() :s{\"default\"}, i{1} { }\n    // ...\n};\nExample\nclass X2 {\n    string s = \"default\";\n    int i = 1;\npublic:\n    // use compiler-generated default constructor\n    // ...\n};\nEnforcement\n(Simple) A default constructor should do more than just initialize member variables with constants.\n1.7.7.5.7. C.46: By default, declare single-argument constructors explicit\nReason\nTo avoid unintended conversions.\nExample, bad\nclass String {\n    // ...\npublic:\n    String(int);   // BAD\n    // ...\n};\n\nString s = 10;   // surprise: string of size 10\nException\nIf you really want an implicit conversion from the constructor argument type to the class type, don't use explicit:\nclass Complex {\n    // ...\npublic:\n    Complex(double d);   // OK: we want a conversion from d to {d, 0}\n    // ...\n};\n\nComplex z = 10.7;   // unsurprising conversion\nSee also: Discussion of implicit conversions.\nEnforcement\n(Simple) Single-argument constructors should be declared explicit. Good single argument non-explicit constructors are rare in most code based. Warn for all that are not on a \"positive list\".\n1.7.7.5.8. C.47: Define and initialize member variables in the order of member declaration\nReason\nTo minimize confusion and errors. That is the order in which the initialization happens (independent of the order of member initializers).\nExample, bad\nclass Foo {\n    int m1;\n    int m2;\npublic:\n    Foo(int x) :m2{x}, m1{++x} { }   // BAD: misleading initializer order\n    // ...\n};\n\nFoo x(1); // surprise: x.m1 == x.m2 == 2\nEnforcement\n(Simple) A member initializer list should mention the members in the same order they are declared.\nSee also: Discussion\n1.7.7.5.9. C.48: Prefer in-class initializers to member initializers in constructors for constant initializers\nReason\nMakes it explicit that the same value is expected to be used in all constructors. Avoids repetition. Avoids maintenance problems. It leads to the shortest and most efficient code.\nExample, bad\nclass X {   // BAD\n    int i;\n    string s;\n    int j;\npublic:\n    X() :i{666}, s{\"qqq\"} { }   // j is uninitialized\n    X(int ii) :i{ii} {}         // s is \"\" and j is uninitialized\n    // ...\n};\nHow would a maintainer know whether j was deliberately uninitialized (probably a poor idea anyway) and whether it was intentional to give s the default value \"\" in one case and qqq in another (almost certainly a bug)? The problem with j (forgetting to initialize a member) often happens when a new member is added to an existing class.\nExample\nclass X2 {\n    int i {666};\n    string s {\"qqq\"};\n    int j {0};\npublic:\n    X2() = default;        // all members are initialized to their defaults\n    X2(int ii) :i{ii} {}   // s and j initialized to their defaults\n    // ...\n};\nAlternative: We can get part of the benefits from default arguments to constructors, and that is not uncommon in older code. However, that is less explicit, causes more arguments to be passed, and is repetitive when there is more than one constructor:\nclass X3 {   // BAD: inexplicit, argument passing overhead\n    int i;\n    string s;\n    int j;\npublic:\n    X3(int ii = 666, const string& ss = \"qqq\", int jj = 0)\n        :i{ii}, s{ss}, j{jj} { }   // all members are initialized to their defaults\n    // ...\n};\nEnforcement\n\n(Simple) Every constructor should initialize every member variable (either explicitly, via a delegating ctor call or via default construction).\n(Simple) Default arguments to constructors suggest an in-class initializer may be more appropriate.\n\n1.7.7.5.10. C.49: Prefer initialization to assignment in constructors\nReason\nAn initialization explicitly states that initialization, rather than assignment, is done and can be more elegant and efficient. Prevents \"use before set\" errors.\nExample, good\nclass A {   // Good\n    string s1;\npublic:\n    A() : s1{\"Hello, \"} { }    // GOOD: directly construct\n    // ...\n};\nExample, bad\nclass B {   // BAD\n    string s1;\npublic:\n    B() { s1 = \"Hello, \"; }   // BAD: default constructor followed by assignment\n    // ...\n};\n\nclass C {   // UGLY, aka very bad\n    int* p;\npublic:\n    C() { cout 1.7.7.5.11. C.50: Use a factory function if you need \"virtual behavior\" during initialization\nReason\nIf the state of a base class object must depend on the state of a derived part of the object, we need to use a virtual function (or equivalent) while minimizing the window of opportunity to misuse an imperfectly constructed object.\nNote\nThe return type of the factory should normally be unique_ptr by default; if some uses are shared, the caller can move the unique_ptr into a shared_ptr. However, if the factory author knows that all uses of the returned object will be shared uses, return shared_ptr and use make_shared in the body to save an allocation.\nExample, bad\nclass B {\npublic:\n    B()\n    {\n        // ...\n        f();   // BAD: virtual call in constructor\n        // ...\n    }\n\n    virtual void f() = 0;\n\n    // ...\n};\nExample\nclass B {\nprotected:\n    B() { /* ... */ }              // create an imperfectly initialized object\n\n    virtual void PostInitialize()  // to be called right after construction\n    {\n        // ...\n        f();    // GOOD: virtual dispatch is safe\n        // ...\n    }\n\npublic:\n    virtual void f() = 0;\n\n    template\n    static shared_ptr Create()  // interface for creating shared objects\n    {\n        auto p = make_shared();\n        p->PostInitialize();\n        return p;\n    }\n};\n\nclass D : public B { /* ... */ };  // some derived class\n\nshared_ptr p = D::Create();  // creating a D object\nBy making the constructor protected we avoid an incompletely constructed object escaping into the wild.\nBy providing the factory function Create(), we make construction (on the free store) convenient.\nNote\nConventional factory functions allocate on the free store, rather than on the stack or in an enclosing object.\nSee also: Discussion\n1.7.7.5.12. C.51: Use delegating constructors to represent common actions for all constructors of a class\nReason\nTo avoid repetition and accidental differences.\nExample, bad\nclass Date {   // BAD: repetitive\n    int d;\n    Month m;\n    int y;\npublic:\n    Date(int ii, Month mm, year yy)\n        :i{ii}, m{mm}, y{yy}\n        { if (!valid(i, m, y)) throw Bad_date{}; }\n\n    Date(int ii, Month mm)\n        :i{ii}, m{mm} y{current_year()}\n        { if (!valid(i, m, y)) throw Bad_date{}; }\n    // ...\n};\nThe common action gets tedious to write and may accidentally not be common.\nExample\nclass Date2 {\n    int d;\n    Month m;\n    int y;\npublic:\n    Date2(int ii, Month mm, year yy)\n        :i{ii}, m{mm}, y{yy}\n        { if (!valid(i, m, y)) throw Bad_date{}; }\n\n    Date2(int ii, Month mm)\n        :Date2{ii, mm, current_year()} {}\n    // ...\n};\nSee also: If the \"repeated action\" is a simple initialization, consider an in-class member initializer.\nEnforcement\n(Moderate) Look for similar constructor bodies.\n1.7.7.5.13. C.52: Use inheriting constructors to import constructors into a derived class that does not need further explicit initialization\nReason\nIf you need those constructors for a derived class, re-implementing them is tedious and error-prone.\nExample\nstd::vector has a lot of tricky constructors, so if I want my own vector, I don't want to reimplement them:\nclass Rec {\n    // ... data and lots of nice constructors ...\n};\n\nclass Oper : public Rec {\n    using Rec::Rec;\n    // ... no data members ...\n    // ... lots of nice utility functions ...\n};\nExample, bad\nstruct Rec2 : public Rec {\n    int x;\n    using Rec::Rec;\n};\n\nRec2 r {\"foo\", 7};\nint val = r.x;   // uninitialized\nEnforcement\nMake sure that every member of the derived class is initialized.\n1.7.7.6. C.copy: Copy and move\nValue types should generally be copyable, but interfaces in a class hierarchy should not.\nResource handles may or may not be copyable.\nTypes can be defined to move for logical as well as performance reasons.\n1.7.7.6.1. C.60: Make copy assignment non-virtual, take the parameter by const&, and return by non-const&\nReason\nIt is simple and efficient. If you want to optimize for rvalues, provide an overload that takes a && (see F.18).\nExample\nclass Foo {\npublic:\n    Foo& operator=(const Foo& x)\n    {\n        // GOOD: no need to check for self-assignment (other than performance)\n        auto tmp = x;\n        std::swap(*this, tmp);\n        return *this;\n    }\n    // ...\n};\n\nFoo a;\nFoo b;\nFoo f();\n\na = b;    // assign lvalue: copy\na = f();  // assign rvalue: potentially move\nNote\nThe swap implementation technique offers the strong guarantee.\nExample\nBut what if you can get significantly better performance by not making a temporary copy? Consider a simple Vector intended for a domain where assignment of large, equal-sized Vectors is common. In this case, the copy of elements implied by the swap implementation technique could cause an order of magnitude increase in cost:\ntemplate\nclass Vector {\npublic:\n    Vector& operator=(const Vector&);\n    // ...\nprivate:\n    T* elem;\n    int sz;\n};\n\nVector& Vector::operator=(const Vector& a)\n{\n    if (a.sz > sz) {\n        // ... use the swap technique, it can't be bettered ...\n        return *this\n    }\n    // ... copy sz elements from *a.elem to elem ...\n    if (a.sz By writing directly to the target elements, we will get only the basic guarantee rather than the strong guarantee offered by the swap technique. Beware of self-assignment.\nAlternatives: If you think you need a virtual assignment operator, and understand why that's deeply problematic, don't call it operator=. Make it a named function like virtual void assign(const Foo&).\nSee copy constructor vs. clone().\nEnforcement\n\n(Simple) An assignment operator should not be virtual. Here be dragons!\n(Simple) An assignment operator should return T& to enable chaining, not alternatives like const T& which interfere with composability and putting objects in containers.\n(Moderate) An assignment operator should (implicitly or explicitly) invoke all base and member assignment operators.\nLook at the destructor to determine if the type has pointer semantics or value semantics.\n\n1.7.7.6.2. C.61: A copy operation should copy\nReason\nThat is the generally assumed semantics. After x = y, we should have x == y.\nAfter a copy x and y can be independent objects (value semantics, the way non-pointer built-in types and the standard-library types work) or refer to a shared object (pointer semantics, the way pointers work).\nExample\nclass X {   // OK: value semantics\npublic:\n    X();\n    X(const X&);     // copy X\n    void modify();   // change the value of X\n    // ...\n    ~X() { delete[] p; }\nprivate:\n    T* p;\n    int sz;\n};\n\nbool operator==(const X& a, const X& b)\n{\n    return a.sz == b.sz && equal(a.p, a.p + a.sz, b.p, b.p + b.sz);\n}\n\nX::X(const X& a)\n    :p{new T[a.sz]}, sz{a.sz}\n{\n    copy(a.p, a.p + sz, p);\n}\n\nX x;\nX y = x;\nif (x != y) throw Bad{};\nx.modify();\nif (x == y) throw Bad{};   // assume value semantics\nExample\nclass X2 {  // OK: pointer semantics\npublic:\n    X2();\n    X2(const X&) = default; // shallow copy\n    ~X2() = default;\n    void modify();          // change the value of X\n    // ...\nprivate:\n    T* p;\n    int sz;\n};\n\nbool operator==(const X2& a, const X2& b)\n{\n    return a.sz == b.sz && a.p == b.p;\n}\n\nX2 x;\nX2 y = x;\nif (x != y) throw Bad{};\nx.modify();\nif (x != y) throw Bad{};  // assume pointer semantics\nNote\nPrefer copy semantics unless you are building a \"smart pointer\". Value semantics is the simplest to reason about and what the standard-library facilities expect.\nEnforcement\n(Not enforceable)\n1.7.7.6.3. C.62: Make copy assignment safe for self-assignment\nReason\nIf x = x changes the value of x, people will be surprised and bad errors will occur (often including leaks).\nExample\nThe standard-library containers handle self-assignment elegantly and efficiently:\nstd::vector v = {3, 1, 4, 1, 5, 9};\nv = v;\n// the value of v is still {3, 1, 4, 1, 5, 9}\nNote\nThe default assignment generated from members that handle self-assignment correctly handles self-assignment.\nstruct Bar {\n    vector> v;\n    map m;\n    string s;\n};\n\nBar b;\n// ...\nb = b;   // correct and efficient\nNote\nYou can handle self-assignment by explicitly testing for self-assignment, but often it is faster and more elegant to cope without such a test (e.g., using swap).\nclass Foo {\n    string s;\n    int i;\npublic:\n    Foo& operator=(const Foo& a);\n    // ...\n};\n\nFoo& Foo::operator=(const Foo& a)   // OK, but there is a cost\n{\n    if (this == &a) return *this;\n    s = a.s;\n    i = a.i;\n    return *this;\n}\nThis is obviously safe and apparently efficient.\nHowever, what if we do one self-assignment per million assignments?\nThat's about a million redundant tests (but since the answer is essentially always the same, the computer's branch predictor will guess right essentially every time).\nConsider:\nFoo& Foo::operator=(const Foo& a)   // simpler, and probably much better\n{\n    s = a.s;\n    i = a.i;\n    return *this;\n}\nstd::string is safe for self-assignment and so are int. All the cost is carried by the (rare) case of self-assignment.\nEnforcement\n(Simple) Assignment operators should not contain the pattern if (this == &a) return *this; ???\n1.7.7.6.4. C.63: Make move assignment non-virtual, take the parameter by &&, and return by non-const &\nReason\nIt is simple and efficient.\nSee: The rule for copy-assignment.\nEnforcement\nEquivalent to what is done for copy-assignment.\n\n(Simple) An assignment operator should not be virtual. Here be dragons!\n(Simple) An assignment operator should return T& to enable chaining, not alternatives like const T& which interfere with composability and putting objects in containers.\n(Moderate) A move assignment operator should (implicitly or explicitly) invoke all base and member move assignment operators.\n\n1.7.7.6.5. C.64: A move operation should move and leave its source in a valid state\nReason\nThat is the generally assumed semantics.\nAfter y = std::move(x) the value of y should be the value x had and x should be in a valid state.\nExample\ntemplate\nclass X {   // OK: value semantics\npublic:\n    X();\n    X(X&& a) noexcept;  // move X\n    void modify();     // change the value of X\n    // ...\n    ~X() { delete[] p; }\nprivate:\n    T* p;\n    int sz;\n};\n\n\nX::X(X&& a)\n    :p{a.p}, sz{a.sz}  // steal representation\n{\n    a.p = nullptr;     // set to \"empty\"\n    a.sz = 0;\n}\n\nvoid use()\n{\n    X x{};\n    // ...\n    X y = std::move(x);\n    x = X{};   // OK\n} // OK: x can be destroyed\nNote\nIdeally, that moved-from should be the default value of the type.\nEnsure that unless there is an exceptionally good reason not to.\nHowever, not all types have a default value and for some types establishing the default value can be expensive.\nThe standard requires only that the moved-from object can be destroyed.\nOften, we can easily and cheaply do better: The standard library assumes that it is possible to assign to a moved-from object.\nAlways leave the moved-from object in some (necessarily specified) valid state.\nNote\nUnless there is an exceptionally strong reason not to, make x = std::move(y); y = z; work with the conventional semantics.\nEnforcement\n(Not enforceable) Look for assignments to members in the move operation. If there is a default constructor, compare those assignments to the initializations in the default constructor.\n1.7.7.6.6. C.65: Make move assignment safe for self-assignment\nReason\nIf x = x changes the value of x, people will be surprised and bad errors may occur. However, people don't usually directly write a self-assignment that turn into a move, but it can occur. However, std::swap is implemented using move operations so if you accidentally do swap(a, b) where a and b refer to the same object, failing to handle self-move could be a serious and subtle error.\nExample\nclass Foo {\n    string s;\n    int i;\npublic:\n    Foo& operator=(Foo&& a);\n    // ...\n};\n\nFoo& Foo::operator=(Foo&& a) noexcept  // OK, but there is a cost\n{\n    if (this == &a) return *this;  // this line is redundant\n    s = std::move(a.s);\n    i = a.i;\n    return *this;\n}\nThe one-in-a-million argument against if (this == &a) return *this; tests from the discussion of self-assignment is even more relevant for self-move.\nNote\nThere is no known general way of avoiding a if (this == &a) return *this; test for a move assignment and still get a correct answer (i.e., after x = x the value of x is unchanged).\nNote\nThe ISO standard guarantees only a \"valid but unspecified\" state for the standard-library containers. Apparently this has not been a problem in about 10 years of experimental and production use. Please contact the editors if you find a counter example. The rule here is more caution and insists on complete safety.\nExample\nHere is a way to move a pointer without a test (imagine it as code in the implementation a move assignment):\n// move from other.ptr to this->ptr\nT* temp = other.ptr;\nother.ptr = nullptr;\ndelete ptr;\nptr = temp;\nEnforcement\n\n(Moderate) In the case of self-assignment, a move assignment operator should not leave the object holding pointer members that have been deleted or set to nullptr.\n(Not enforceable) Look at the use of standard-library container types (incl. string) and consider them safe for ordinary (not life-critical) uses.\n\n1.7.7.6.7. C.66: Make move operations noexcept\nReason\nA throwing move violates most people's reasonably assumptions.\nA non-throwing move will be used more efficiently by standard-library and language facilities.\nExample\ntemplate\nclass Vector {\n    // ...\n    Vector(Vector&& a) noexcept :elem{a.elem}, sz{a.sz} { a.sz = 0; a.elem = nullptr; }\n    Vector& operator=(Vector&& a) noexcept { elem = a.elem; sz = a.sz; a.sz = 0; a.elem = nullptr; }\n    // ...\npublic:\n    T* elem;\n    int sz;\n};\nThese operations do not throw.\nExample, bad\ntemplate\nclass Vector2 {\n    // ...\n    Vector2(Vector2&& a) { *this = a; }             // just use the copy\n    Vector2& operator=(Vector2&& a) { *this = a; }  // just use the copy\n    // ...\npublic:\n    T* elem;\n    int sz;\n};\nThis Vector2 is not just inefficient, but since a vector copy requires allocation, it can throw.\nEnforcement\n(Simple) A move operation should be marked noexcept.\n1.7.7.6.8. C.67: A base class should suppress copying, and provide a virtual clone instead if \"copying\" is desired\nReason\nTo prevent slicing, because the normal copy operations will copy only the base portion of a derived object.\nExample, bad\nclass B { // BAD: base class doesn't suppress copying\n    int data;\n    // ... nothing about copy operations, so uses default ...\n};\n\nclass D : public B {\n    string more_data; // add a data member\n    // ...\n};\n\nauto d = make_unique();\n\n// oops, slices the object; gets only d.data but drops d.more_data\nauto b = make_unique(d);\nExample\nclass B { // GOOD: base class suppresses copying\n    B(const B&) = delete;\n    B& operator=(const B&) = delete;\n    virtual unique_ptr clone() { return /* B object */; }\n    // ...\n};\n\nclass D : public B {\n    string more_data; // add a data member\n    unique_ptr clone() override { return /* D object */; }\n    // ...\n};\n\nauto d = make_unique();\nauto b = d.clone(); // ok, deep clone\nNote\nIt's good to return a smart pointer, but unlike with raw pointers the return type cannot be covariant (for example, D::clone can't return a unique_ptr. Don't let this tempt you into returning an owning raw pointer; this is a minor drawback compared to the major robustness benefit delivered by the owning smart pointer.\nException\nIf you need covariant return types, return an owner. See C.130.\nEnforcement\nA class with any virtual function should not have a copy constructor or copy assignment operator (compiler-generated or handwritten).\n1.7.7.7. C.other: Other default operation rules\nIn addition to the operations for which the language offer default implementations,\nthere are a few operations that are so foundational that it rules for their definition are needed:\ncomparisons, swap, and hash.\n1.7.7.7.1. C.80: Use =default if you have to be explicit about using the default semantics\nReason\nThe compiler is more likely to get the default semantics right and you cannot implement these functions better than the compiler.\nExample\nclass Tracer {\n    string message;\npublic:\n    Tracer(const string& m) : message{m} { cerr Because we defined the destructor, we must define the copy and move operations. The = default is the best and simplest way of doing that.\nExample, bad\nclass Tracer2 {\n    string message;\npublic:\n    Tracer2(const string& m) : message{m} { cerr Writing out the bodies of the copy and move operations is verbose, tedious, and error-prone. A compiler does it better.\nEnforcement\n(Moderate) The body of a special operation should not have the same accessibility and semantics as the compiler-generated version, because that would be redundant\n1.7.7.7.2. C.81: Use =delete when you want to disable default behavior (without wanting an alternative)\nReason\nIn a few cases, a default operation is not desirable.\nExample\nclass Immortal {\npublic:\n    ~Immortal() = delete;   // do not allow destruction\n    // ...\n};\n\nvoid use()\n{\n    Immortal ugh;   // error: ugh cannot be destroyed\n    Immortal* p = new Immortal{};\n    delete p;       // error: cannot destroy *p\n}\nExample\nA unique_ptr can be moved, but not copied. To achieve that its copy operations are deleted. To avoid copying it is necessary to =delete its copy operations from lvalues:\ntemplate > class unique_ptr {\npublic:\n    // ...\n    constexpr unique_ptr() noexcept;\n    explicit unique_ptr(pointer p) noexcept;\n    // ...\n    unique_ptr(unique_ptr&& u) noexcept;   // move constructor\n    // ...\n    unique_ptr(const unique_ptr&) = delete; // disable copy from lvalue\n    // ...\n};\n\nunique_ptr make();   // make \"something\" and return it by moving\n\nvoid f()\n{\n    unique_ptr pi {};\n    auto pi2 {pi};      // error: no move constructor from lvalue\n    auto pi3 {make()};  // OK, move: the result of make() is an rvalue\n}\nEnforcement\nThe elimination of a default operation is (should be) based on the desired semantics of the class. Consider such classes suspect, but maintain a \"positive list\" of classes where a human has asserted that the semantics is correct.\n1.7.7.7.3. C.82: Don't call virtual functions in constructors and destructors\nReason\nThe function called will be that of the object constructed so far, rather than a possibly overriding function in a derived class.\nThis can be most confusing.\nWorse, a direct or indirect call to an unimplemented pure virtual function from a constructor or destructor results in undefined behavior.\nExample, bad\nclass Base {\npublic:\n    virtual void f() = 0;   // not implemented\n    virtual void g();       // implemented with Base version\n    virtual void h();       // implemented with Base version\n};\n\nclass Derived : public Base {\npublic:\n    void g() override;   // provide Derived implementation\n    void h() final;      // provide Derived implementation\n\n    Derived()\n    {\n        // BAD: attempt to call an unimplemented virtual function\n        f();\n\n        // BAD: will call Derived::g, not dispatch further virtually\n        g();\n\n        // GOOD: explicitly state intent to call only the visible version\n        Derived::g();\n\n        // ok, no qualification needed, h is final\n        h();\n    }\n};\nNote that calling a specific explicitly qualified function is not a virtual call even if the function is virtual.\nSee also factory functions for how to achieve the effect of a call to a derived class function without risking undefined behavior.\nNote\nThere is nothing inherently wrong with calling virtual functions from constructors and destructors.\nThe semantics of such calls is type safe.\nHowever, experience shows that such calls are rarely needed, easily confuse maintainers, and become a source of errors when used by novices.\nEnforcement\n\nFlag calls of virtual functions from constructors and destructors.\n\n1.7.7.7.4. C.83: For value-like types, consider providing a noexcept swap function\nReason\nA swap can be handy for implementing a number of idioms, from smoothly moving objects around to implementing assignment easily to providing a guaranteed commit function that enables strongly error-safe calling code. Consider using swap to implement copy assignment in terms of copy construction. See also destructors, deallocation, and swap must never fail.\nExample, good\nclass Foo {\n    // ...\npublic:\n    void swap(Foo& rhs) noexcept\n    {\n        m1.swap(rhs.m1);\n        std::swap(m2, rhs.m2);\n    }\nprivate:\n    Bar m1;\n    int m2;\n};\nProviding a nonmember swap function in the same namespace as your type for callers' convenience.\nvoid swap(Foo& a, Foo& b)\n{\n    a.swap(b);\n}\nEnforcement\n\n(Simple) A class without virtual functions should have a swap member function declared.\n(Simple) When a class has a swap member function, it should be declared noexcept.\n\n1.7.7.7.5. C.84: A swap function may not fail\nReason\n swap is widely used in ways that are assumed never to fail and programs cannot easily be written to work correctly in the presence of a failing swap. The standard-library containers and algorithms will not work correctly if a swap of an element type fails.\nExample, bad\nvoid swap(My_vector& x, My_vector& y)\n{\n    auto tmp = x;   // copy elements\n    x = y;\n    y = tmp;\n}\nThis is not just slow, but if a memory allocation occurs for the elements in tmp, this swap may throw and would make STL algorithms fail if used with them.\nEnforcement\n(Simple) When a class has a swap member function, it should be declared noexcept.\n1.7.7.7.6. C.85: Make swap noexcept\nReason\n A swap may not fail.\nIf a swap tries to exit with an exception, it's a bad design error and the program had better terminate.\nEnforcement\n(Simple) When a class has a swap member function, it should be declared noexcept.\n1.7.7.7.7. C.86: Make == symmetric with respect to operand types and noexcept\nReason\nAsymmetric treatment of operands is surprising and a source of errors where conversions are possible.\n== is a fundamental operations and programmers should be able to use it without fear of failure.\nExample\nstruct X {\n    string name;\n    int number;\n};\n\nbool operator==(const X& a, const X& b) noexcept {\n    return a.name == b.name && a.number == b.number;\n}\nExample, bad\nclass B {\n    string name;\n    int number;\n    bool operator==(const B& a) const {\n        return name == a.name && number == a.number;\n    }\n    // ...\n};\nB's comparison accepts conversions for its second operand, but not its first.\nNote\nIf a class has a failure state, like double's NaN, there is a temptation to make a comparison against the failure state throw.\nThe alternative is to make two failure states compare equal and any valid state compare false against the failure state.\nNote\nThis rule applies to all the usual comparison operators: !=, , , >, and >=.\nEnforcement\n\nFlag an operator==() for which the argument types differ; same for other comparison operators: !=, , , >, and >=.\nFlag member operator==()s; same for other comparison operators: !=, , , >, and >=.\n\n1.7.7.7.8. C.87: Beware of == on base classes\nReason\nIt is really hard to write a foolproof and useful == for a hierarchy.\nExample, bad\nclass B {\n    string name;\n    int number;\n    virtual bool operator==(const B& a) const\n    {\n         return name == a.name && number == a.number;\n    }\n    // ...\n};\nB's comparison accepts conversions for its second operand, but not its first.\nclass D :B {\n    char character;\n    virtual bool operator==(const D& a) const\n    {\n        return name == a.name && number == a.number && character == a.character;\n    }\n    // ...\n};\n\nB b = ...\nD d = ...\nb == d;    // compares name and number, ignores d's character\nd == b;    // error: no == defined\nD d2;\nd == d2;   // compares name, number, and character\nB& b2 = d2;\nb2 == d;   // compares name and number, ignores d2's and d's character\nOf course there are ways of making == work in a hierarchy, but the naive approaches do not scale\nNote\nThis rule applies to all the usual comparison operators: !=, , , >, and >=.\nEnforcement\n\nFlag a virtual operator==(); same for other comparison operators: !=, , , >, and >=.\n\n1.7.7.7.9. C.89: Make a hash noexcept\nReason\nUsers of hashed containers use hash indirectly and don't expect simple access to throw.\nIt's a standard-library requirement.\nExample, bad\ntemplate<>\nstruct hash {  // thoroughly bad hash specialization\n    using result_type = size_t;\n    using argument_type = My_type;\n\n    size_t operator() (const My_type & x) const\n    {\n        size_t xs = x.s.size();\n        if (xs ()(x.s.size()) ^ trim(x.s);\n    }\n};\n\nint main()\n{\n    unordered_map m;\n    My_type mt{ \"asdfg\" };\n    m[mt] = 7;\n    cout If you have to define a hash specialization, try simply to let it combine standard-library hash specializations with ^ (xor).\nThat tends to work better than \"cleverness\" for non-specialists.\nEnforcement\n\nFlag throwing hashes.\n\n1.7.7.8. C.con: Containers and other resource handles\nA container is an object holding a sequence of objects of some type; std::vector is the archetypical container.\nA resource handle is a class that owns a resource; std::vector is the typical resource handle; its resource is its sequence of elements.\nSummary of container rules:\n\nC.100: Follow the STL when defining a container\nC.101: Give a container value semantics\nC.102: Give a container move operations\nC.103: Give a container an initializer list constructor\nC.104: Give a container a default constructor that sets it to empty\nC.105: Give a constructor and Extent constructor\n???\nC.109: If a resource handle has pointer semantics, provide * and ->\n\nSee also: Resources\n1.7.7.9. C.lambdas: Function objects and lambdas\nA function object is an object supplying an overloaded () so that you can call it.\nA lambda expression (colloquially often shortened to \"a lambda\") is a notation for generating a function object.\nFunction objects should be cheap to copy (and therefore passed by value).\nSummary:\n\nF.50: Use a lambda when a function won't do (to capture local variables, or to write a local function)\nF.52: Prefer capturing by reference in lambdas that will be used locally, including passed to algorithms\nF.53: Avoid capturing by reference in lambdas that will be used nonlocally, including returned, stored on the heap, or passed to another thread\nES.28: Use lambdas for complex initialization, especially of const variables\n\n1.7.7.10. C.hier: Class hierarchies (OOP)\nA class hierarchy is constructed to represent a set of hierarchically organized concepts (only).\nTypically base classes act as interfaces.\nThere are two major uses for hierarchies, often named implementation inheritance and interface inheritance.\nClass hierarchy rule summary:\n\nC.120: Use class hierarchies to represent concepts with inherent hierarchical structure (only)\nC.121: If a base class is used as an interface, make it a pure abstract class\nC.122: Use abstract classes as interfaces when complete separation of interface and implementation is needed\n\nDesigning rules for classes in a hierarchy summary:\n\nC.126: An abstract class typically doesn't need a constructor\nC.127: A class with a virtual function should have a virtual or protected destructor\nC.128: Virtual functions should specify exactly one of virtual, override, or final\nC.129: When designing a class hierarchy, distinguish between implementation inheritance and interface inheritance\nC.130: Redefine or prohibit copying for a base class; prefer a virtual clone function instead\nC.131: Avoid trivial getters and setters\nC.132: Don't make a function virtual without reason\nC.133: Avoid protected data\nC.134: Ensure all non-const data members have the same access level\nC.135: Use multiple inheritance to represent multiple distinct interfaces\nC.136: Use multiple inheritance to represent the union of implementation attributes\nC.137: Use virtual bases to avoid overly general base classes\nC.138: Create an overload set for a derived class and its bases with using\nC.139: Use final sparingly\nC.140: Do not provide different default arguments for a virtual function and an overrider\n\nAccessing objects in a hierarchy rule summary:\n\nC.145: Access polymorphic objects through pointers and references\nC.146: Use dynamic_cast where class hierarchy navigation is unavoidable\nC.147: Use dynamic_cast to a reference type when failure to find the required class is considered an error\nC.148: Use dynamic_cast to a pointer type when failure to find the required class is considered a valid alternative\nC.149: Use unique_ptr or shared_ptr to avoid forgetting to delete objects created using new\nC.150: Use make_unique() to construct objects owned by unique_ptrs\nC.151: Use make_shared() to construct objects owned by shared_ptrs\nC.152: Never assign a pointer to an array of derived class objects to a pointer to its base\nC.153: Prefer virtual function to casting\n\n1.7.7.10.1. C.120: Use class hierarchies to represent concepts with inherent hierarchical structure (only)\nReason\nDirect representation of ideas in code eases comprehension and maintenance. Make sure the idea represented in the base class exactly matches all derived types and there is not a better way to express it than using the tight coupling of inheritance.\nDo not use inheritance when simply having a data member will do. Usually this means that the derived type needs to override a base virtual function or needs access to a protected member.\nExample\nclass DrawableUIElement {\npublic:\n    virtual void render() const = 0;\n    // ...\n};\n\nclass AbstractButton : public DrawableUIElement {\npublic:\n    virtual void onClick() = 0;\n    // ...\n};\n\nclass PushButton : public AbstractButton {\n    virtual void render() const override;\n    virtual void onClick() override;\n    // ...\n};\n\nclass Checkbox : public AbstractButton {\n// ...\n};\nExample, bad\nDo not represent non-hierarchical domain concepts as class hierarchies.\ntemplate\nclass Container {\npublic:\n    // list operations:\n    virtual T& get() = 0;\n    virtual void put(T&) = 0;\n    virtual void insert(Position) = 0;\n    // ...\n    // vector operations:\n    virtual T& operator[](int) = 0;\n    virtual void sort() = 0;\n    // ...\n    // tree operations:\n    virtual void balance() = 0;\n    // ...\n};\nHere most overriding classes cannot implement most of the functions required in the interface well.\nThus the base class becomes an implementation burden.\nFurthermore, the user of Container cannot rely on the member functions actually performing a meaningful operations reasonably efficiently;\nit may throw an exception instead.\nThus users have to resort to run-time checking and/or\nnot using this (over)general interface in favor of a particular interface found by a run-time type inquiry (e.g., a dynamic_cast).\nEnforcement\n\nLook for classes with lots of members that do nothing but throw.\nFlag every use of a nonpublic base class B where the derived class D does not override a virtual function or access a protected member in B, and B is not one of the following: empty, a template parameter or parameter pack of D, a class template specialized with D.\n\n1.7.7.10.2. C.121: If a base class is used as an interface, make it a pure abstract class\nReason\nA class is more stable (less brittle) if it does not contain data.\nInterfaces should normally be composed entirely of public pure virtual functions and a default/empty virtual destructor.\nExample\nclass My_interface {\npublic:\n    // ...only pure virtual functions here ...\n    virtual ~My_interface() {}   // or =default\n};\nExample, bad\nclass Goof {\npublic:\n    // ...only pure virtual functions here ...\n    // no virtual destructor\n};\n\nclass Derived : public Goof {\n    string s;\n    // ...\n};\n\nvoid use()\n{\n    unique_ptr p {new Derived{\"here we go\"}};\n    f(p.get()); // use Derived through the Goof interface\n    g(p.get()); // use Derived through the Goof interface\n} // leak\nThe Derived is deleted through its Goof interface, so its string is leaked.\nGive Goof a virtual destructor and all is well.\nEnforcement\n\nWarn on any class that contains data members and also has an overridable (non-final) virtual function.\n\n1.7.7.10.3. C.122: Use abstract classes as interfaces when complete separation of interface and implementation is needed\nReason\nSuch as on an ABI (link) boundary.\nExample\nstruct Device {\n    virtual void write(span outbuf) = 0;\n    virtual void read(span inbuf) = 0;\n};\n\nclass D1 : public Device {\n    // ... data ...\n\n    void write(span outbuf) override;\n    void read(span inbuf) override;\n};\n\nclass D2 : public Device {\n    // ... different data ...\n\n    void write(span outbuf) override;\n    void read(span inbuf) override;\n};\nA user can now use D1s and D2s interchangeably through the interface provided by Device.\nFurthermore, we can update D1 and D2 in a ways that are not binary compatible with older versions as long as all access goes through Device.\nEnforcement\n???\n1.7.7.11. C.hierclass: Designing classes in a hierarchy:\n1.7.7.11.1. C.126: An abstract class typically doesn't need a constructor\nReason\nAn abstract class typically does not have any data for a constructor to initialize.\nExample\n???\nException\n\nA base class constructor that does work, such as registering an object somewhere, may need a constructor.\nIn extremely rare cases, you might find it reasonable for an abstract class to have a bit of data shared by all derived classes\n(e.g., use statistics data, debug information, etc.); such classes tend to have constructors. But be warned: Such classes also tend to be prone to requiring virtual inheritance.\n\nEnforcement\nFlag abstract classes with constructors.\n1.7.7.11.2. C.127: A class with a virtual function should have a virtual or protected destructor\nReason\nA class with a virtual function is usually (and in general) used via a pointer to base. Usually, the last user has to call delete on a pointer to base, often via a smart pointer to base, so the destructor should be public and virtual. Less commonly, if deletion through a pointer to base is not intended to be supported, the destructor should be protected and nonvirtual; see C.35.\nExample, bad\nstruct B {\n    virtual int f() = 0;\n    // ... no user-written destructor, defaults to public nonvirtual ...\n};\n\n// bad: derived from a class without a virtual destructor\nstruct D : B {\n    string s {\"default\"};\n};\n\nvoid use()\n{\n    unique_ptr p = make_unique();\n    // ...\n} // undefined behavior. May call B::~B only and leak the string\nNote\nThere are people who don't follow this rule because they plan to use a class only through a shared_ptr: std::shared_ptr p = std::make_shared(args); Here, the shared pointer will take care of deletion, so no leak will occur from an inappropriate delete of the base. People who do this consistently can get a false positive, but the rule is important -- what if one was allocated using make_unique? It's not safe unless the author of B ensures that it can never be misused, such as by making all constructors private and providing a factory function to enforce the allocation with make_shared.\nEnforcement\n\nA class with any virtual functions should have a destructor that is either public and virtual or else protected and nonvirtual.\nFlag delete of a class with a virtual function but no virtual destructor.\n\n1.7.7.11.3. C.128: Virtual functions should specify exactly one of virtual, override, or final\nReason\nReadability.\nDetection of mistakes.\nWriting explicit virtual, override, or final is self-documenting and enables the compiler to catch mismatch of types and/or names between base and derived classes. However, writing more than one of these three is both redundant and a potential source of errors.\nUse virtual only when declaring a new virtual function. Use override only when declaring an overrider. Use final only when declaring a final overrider. If a base class destructor is declared virtual, one should avoid declaring derived class destructors  virtual or override. Some code base and tools might insist on override for destructors, but that is not the recommendation of these guidelines.\nExample, bad\nstruct B {\n    void f1(int);\n    virtual void f2(int) const;\n    virtual void f3(int);\n    // ...\n};\n\nstruct D : B {\n    void f1(int);        // bad (hope for a warning): D::f1() hides B::f1()\n    void f2(int) const;  // bad (but conventional and valid): no explicit override\n    void f3(double);     // bad (hope for a warning): D::f3() hides B::f3()\n    // ...\n};\nExample, good\nstruct Better : B {\n    void f1(int) override;        // error (caught): D::f1() hides B::f1()\n    void f2(int) const override;\n    void f3(double) override;     // error (caught): D::f3() hides B::f3()\n    // ...\n};\nEnforcement\n\nCompare names in base and derived classes and flag uses of the same name that does not override.\nFlag overrides with neither override nor final.\nFlag function declarations that use more than one of virtual, override, and final.\n\n1.7.7.11.4. C.129: When designing a class hierarchy, distinguish between implementation inheritance and interface inheritance\nReason\nImplementation details in an interface makes the interface brittle;\nthat is, makes its users vulnerable to having to recompile after changes in the implementation.\nData in a base class increases the complexity of implementing the base and can lead to replication of code.\nNote\nDefinition:\n\ninterface inheritance is the use of inheritance to separate users from implementations,\nin particular to allow derived classes to be added and changed without affecting the users of base classes.\nimplementation inheritance is the use of inheritance to simplify implementation of new facilities\nby making useful operations available for implementers of related new operations (sometimes called \"programming by difference\").\n\nA pure interface class is simply a set of pure virtual functions; see I.25.\nIn early OOP (e.g., in the 1980s and 1990s), implementation inheritance and interface inheritance were often mixed\nand bad habits die hard.\nEven now, mixtures are not uncommon in old code bases and in old-style teaching material.\nThe importance of keeping the two kinds of inheritance increases\n\nwith the size of a hierarchy (e.g., dozens of derived classes),\nwith the length of time the hierarchy is used (e.g., decades), and\nwith the number of distinct organizations in which a hierarchy is used\n(e.g., it can be difficult to distribute an update to a base class)\n\nExample, bad\nclass Shape {   // BAD, mixed interface and implementation\npublic:\n    Shape();\n    Shape(Point ce = {0, 0}, Color co = none): cent{ce}, col {co} { /* ... */}\n\n    Point center() const { return cent; }\n    Color color() const { return col; }\n\n    virtual void rotate(int) = 0;\n    virtual void move(Point p) { cent = p; redraw(); }\n\n    virtual void redraw();\n\n    // ...\npublic:\n    Point cent;\n    Color col;\n};\n\nclass Circle : public Shape {\npublic:\n    Circle(Point c, int r) :Shape{c}, rad{r} { /* ... */ }\n\n    // ...\nprivate:\n    int rad;\n};\n\nclass Triangle : public Shape {\npublic:\n    Triangle(Point p1, Point p2, Point p3); // calculate center\n    // ...\n};\nProblems:\n\nAs the hierarchy grows and more data is added to Shape, the constructors gets harder to write and maintain.\nWhy calculate the center for the Triangle? we may never us it.\nAdd a data member to Shape (e.g., drawing style or canvas)\nand all derived classes and all users needs to be reviewed, possibly changes, and probably recompiled.\n\nThe implementation of Shape::move() is an example of implementation inheritance:\nwe have defined move() once and for all for all derived classes.\nThe more code there is in such base class member function implementations and the more data is shared by placing it in the base,\nthe more benefits we gain - and the less stable the hierarchy is.\nExample\nThis Shape hierarchy can be rewritten using interface inheritance:\nclass Shape {  // pure interface\npublic:\n    virtual Point center() const = 0;\n    virtual Color color() const = 0;\n\n    virtual void rotate(int) = 0;\n    virtual void move(Point p) = 0;\n\n    virtual void redraw() = 0;\n\n    // ...\n};\nNote that a pure interface rarely have constructors: there is nothing to construct.\nclass Circle : public Shape {\npublic:\n    Circle(Point c, int r, Color c) :cent{c}, rad{r}, col{c} { /* ... */ }\n\n    Point center() const override { return cent; }\n    Color color() const override { return col; }\n\n    // ...\nprivate:\n    Point cent;\n    int rad;\n    Color col;\n};\nThe interface is now less brittle, but there is more work in implementing the member functions.\nFor example, center has to be implemented by every class derived from Shape.\nExample, dual hierarchy\nHow can we gain the benefit of the stable hierarchies from implementation hierarchies and the benefit of implementation reuse from implementation inheritance.\nOne popular technique is dual hierarchies.\nThere are many ways of implementing the idea of dual hierarchies; here, we use a multiple-inheritance variant.\nFirst we devise a hierarchy of interface classes:\nclass Shape {   // pure interface\npublic:\n    virtual Point center() const = 0;\n    virtual Color color() const = 0;\n\n    virtual void rotate(int) = 0;\n    virtual void move(Point p) = 0;\n\n    virtual void redraw() = 0;\n\n    // ...\n};\n\nclass Circle : public Shape {   // pure interface\npublic:\n    virtual int radius() = 0;\n    // ...\n};\nTo make this interface useful, we must provide its implementation classes (here, named equivalently, but in the Impl namespace):\nclass Impl::Shape : public Shape { // implementation\npublic:\n    // constructors, destructor\n    // ...\n    Point center() const override { /* ... */ }\n    Color color() const override { /* ... */ }\n\n    void rotate(int) override { /* ... */ }\n    void move(Point p) override { /* ... */ }\n\n    void redraw() override { /* ... */ }\n\n    // ...\n};\nNow Shape is a poor example of a class with an implementation,\nbut bear with us because this is just a simple example of a technique aimed at more complex hierarchies.\nclass Impl::Circle : public Circle, public Impl::Shape {   // implementation\npublic:\n    // constructors, destructor\n\n    int radius() override { /* ... */ }\n    // ...\n};\nAnd we could extend the hierarchies by adding a Smiley class (:-)):\nclass Smiley : public Circle { // pure interface\npublic:\n    // ...\n};\n\nclass Impl::Smiley : public Smiley, public Impl::Circle {   // implementation\npublic:\n    // constructors, destructor\n    // ...\n}\nThere are now two hierarchies:\n\ninterface: Smiley -> Circle -> Shape\nimplementation: Impl::Smiley -> Impl::Circle -> Impl::Shape\n\nSince each implementation derived from its interface as well as its implementation base class we get a lattice (DAG):\nSmiley     ->         Circle     ->  Shape\n  ^                     ^               ^\n  |                     |               |\nImpl::Smiley -> Impl::Circle -> Impl::Shape\nAs mentioned, this is just one way to construct a dual hierarchy.\nAnother (related) technique for separating interface and implementation is Pimpl.\nNote\nThere is often a choice between offering common functionality as (implemented) base class functions and free-standing functions\n(in an implementation namespace).\nBase classes gives a shorter notation and easier access to shared data (in the base)\nat the cost of the functionality being available only to users of the hierarchy.\nEnforcement\n\nFlag a derived to base conversion to a base with both data and virtual functions\n(except for calls from a derived class member to a base class member)\n???\n\n1.7.7.11.5. C.130: Redefine or prohibit copying for a base class; prefer a virtual clone function instead\nReason\nCopying a base is usually slicing. If you really need copy semantics, copy deeply: Provide a virtual clone function that will copy the actual most-derived type and return an owning pointer to the new object, and then in derived classes return the derived type (use a covariant return type).\nExample\nclass Base {\npublic:\n    virtual owner clone() = 0;\n    virtual ~Base() = 0;\n\n    Base(const Base&) = delete;\n    Base& operator=(const Base&) = delete;\n};\n\nclass Derived : public Base {\npublic:\n    owner clone() override;\n    virtual ~Derived() override;\n};\nNote that because of language rules, the covariant return type cannot be a smart pointer. See also C.67.\nEnforcement\n\nFlag a class with a virtual function and a non-user-defined copy operation.\nFlag an assignment of base class objects (objects of a class from which another has been derived).\n\n1.7.7.11.6. C.131: Avoid trivial getters and setters\nReason\nA trivial getter or setter adds no semantic value; the data item could just as well be public.\nExample\nclass Point {   // Bad: verbose\n    int x;\n    int y;\npublic:\n    Point(int xx, int yy) : x{xx}, y{yy} { }\n    int get_x() const { return x; }\n    void set_x(int xx) { x = xx; }\n    int get_y() const { return y; }\n    void set_y(int yy) { y = yy; }\n    // no behavioral member functions\n};\nConsider making such a class a struct -- that is, a behaviorless bunch of variables, all public data and no member functions.\nstruct Point {\n    int x {0};\n    int y {0};\n};\nNote that we can put default initializers on member variables: C.49: Prefer initialization to assignment in constructors.\nNote\nThe key to this rule is whether the semantics of the getter/setter are trivial. While it is not a complete definition of \"trivial\", consider whether there would be any difference beyond syntax if the getter/setter was a public data member instead. Examples of non-trivial semantics would be: maintaining a class invariant or converting between an internal type and an interface type.\nEnforcement\nFlag multiple get and set member functions that simply access a member without additional semantics.\n1.7.7.11.7. C.132: Don't make a function virtual without reason\nReason\nRedundant virtual increases run-time and object-code size.\nA virtual function can be overridden and is thus open to mistakes in a derived class.\nA virtual function ensures code replication in a templated hierarchy.\nExample, bad\ntemplate\nclass Vector {\npublic:\n    // ...\n    virtual int size() const { return sz; }   // bad: what good could a derived class do?\nprivate:\n    T* elem;   // the elements\n    int sz;    // number of elements\n};\nThis kind of \"vector\" isn't meant to be used as a base class at all.\nEnforcement\n\nFlag a class with virtual functions but no derived classes.\nFlag a class where all member functions are virtual and have implementations.\n\n1.7.7.11.8. C.133: Avoid protected data\nReason\nprotected data is a source of complexity and errors.\nprotected data complicates the statement of invariants.\nprotected data inherently violates the guidance against putting data in base classes, which usually leads to having to deal with virtual inheritance as well.\nExample, bad\nclass Shape {\npublic:\n    // ... interface functions ...\nprotected:\n    // data for use in derived classes:\n    Color fill_color;\n    Color edge_color;\n    Style st;\n};\nNow it is up to every derived Shape to manipulate the protected data correctly.\nThis has been popular, but also a major source of maintenance problems.\nIn a large class hierarchy, the consistent use of protected data is hard to maintain because there can be a lot of code,\nspread over a lot of classes.\nThe set of classes that can touch that data is open: anyone can derive a new class and start manipulating the protected data.\nOften, it is not possible to examine the complete set of classes, so any change to the representation of the class becomes infeasible.\nThere is no enforced invariant for the protected data; it is much like a set of global variables.\nThe protected data has de facto become global to a large body of code.\nNote\nProtected data often looks tempting to enable arbitrary improvements through derivation.\nOften, what you get is unprincipled changes and errors.\nPrefer private data with a well-specified and enforced invariant.\nAlternative, and often better, keep data out of any class used as an interface.\nNote\nProtected member function can be just fine.\nEnforcement\nFlag classes with protected data.\n1.7.7.11.9. C.134: Ensure all non-const data members have the same access level\nReason\nPrevention of logical confusion leading to errors.\nIf the non-const data members don't have the same access level, the type is confused about what it's trying to do.\nIs it a type that maintains an invariant or simply a collection of values?\nDiscussion\nThe core question is: What code is responsible for maintaining a meaningful/correct value for that variable?\nThere are exactly two kinds of data members:\n\nA: Ones that don't participate in the object's invariant. Any combination of values for these members is valid.\nB: Ones that do participate in the object's invariant. Not every combination of values is meaningful (else there'd be no invariant). Therefore all code that has write access to these variables must know about the invariant, know the semantics, and know (and actively implement and enforce) the rules for keeping the values correct.\n\nData members in category A should just be public (or, more rarely, protected if you only want derived classes to see them). They don't need encapsulation. All code in the system might as well see and manipulate them.\nData members in category B should be private or const. This is because encapsulation is important. To make them non-private and non-const would mean that the object can't control its own state: An unbounded amount of code beyond the class would need to know about the invariant and participate in maintaining it accurately -- if these data members were public, that would be all calling code that uses the object; if they were protected, it would be all the code in current and future derived classes. This leads to brittle and tightly coupled code that quickly becomes a nightmare to maintain. Any code that inadvertently sets the data members to an invalid or unexpected combination of values would corrupt the object and all subsequent uses of the object.\nMost classes are either all A or all B:\n\nAll public: If you're writing an aggregate bundle-of-variables without an invariant across those variables, then all the variables should be public.\nBy convention, declare such classes struct rather than class\nAll private: If you're writing a type that maintains an invariant, then all the non-const variables should be private -- it should be encapsulated.\n\nException\nOccasionally classes will mix A and B, usually for debug reasons. An encapsulated object may contain something like non-const debug instrumentation that isn't part of the invariant and so falls into category A -- it isn't really part of the object's value or meaningful observable state either. In that case, the A parts should be treated as A's (made public, or in rarer cases protected if they should be visible only to derived classes) and the B parts should still be treated like B's (private or const).\nEnforcement\nFlag any class that has non-const data members with different access levels.\n1.7.7.11.10. C.135: Use multiple inheritance to represent multiple distinct interfaces\nReason\nNot all classes will necessarily support all interfaces, and not all callers will necessarily want to deal with all operations.\nEspecially to break apart monolithic interfaces into \"aspects\" of behavior supported by a given derived class.\nExample\nclass iostream : public istream, public ostream {   // very simplified\n    // ...\n};\nistream provides the interface to input operations; ostream provides the interface to output operations.\niostream provides the union of the istream and ostream interfaces and the synchronization needed to allow both on a single stream.\nNote\nThis is a very common use of inheritance because the need for multiple different interfaces to an implementation is common\nand such interfaces are often not easily or naturally organized into a single-rooted hierarchy.\nNote\nSuch interfaces are typically abstract classes.\nEnforcement\n???\n1.7.7.11.11. C.136: Use multiple inheritance to represent the union of implementation attributes\nReason\nSome forms of mixins have state and often operations on that state.\nIf the operations are virtual the use of inheritance is necessary, if not using inheritance can avoid boilerplate and forwarding.\nExample\nclass iostream : public istream, public ostream {   // very simplified\n    // ...\n};\nistream provides the interface to input operations (and some data); ostream provides the interface to output operations (and some data).\niostream provides the union of the istream and ostream interfaces and the synchronization needed to allow both on a single stream.\nNote\nThis a relatively rare use because implementation can often be organized into a single-rooted hierarchy.\nExample\nSometimes, an \"implementation attribute\" is more like a \"mixin\" that determine the behavior of an implementation and inject\nmembers to enable the implementation of the policies it requires.\nFor example, see std::enable_shared_from_this\nor various bases from boost.intrusive (e.g. list_base_hook or intrusive_ref_counter).\nEnforcement\n???\n1.7.7.11.12. C.137: Use virtual bases to avoid overly general base classes\nReason\n Allow separation of shared data and interface.\n To avoid all shared data to being put into an ultimate base class.\nExample\nstruct Interface {\n    virtual void f();\n    virtual int g();\n    // ... no data here ...\n};\n\nclass Utility {  // with data\n    void utility1();\n    virtual void utility2();    // customization point\npublic:\n    int x;\n    int y;\n};\n\nclass Derive1 : public Interface, virtual protected Utility {\n    // override Interface functions\n    // Maybe override Utility virtual functions\n    // ...\n};\n\nclass Derive2 : public Interface, virtual protected Utility {\n    // override Interface functions\n    // Maybe override Utility virtual functions\n    // ...\n};\nFactoring out Utility makes sense if many derived classes share significant \"implementation details.\"\nNote\nObviously, the example is too \"theoretical\", but it is hard to find a small realistic example.\nInterface is the root of an interface hierarchy\nand Utility is the root of an implementation hierarchy.\nHere is a slightly more realistic example with an explanation.\nNote\nOften, linearization of a hierarchy is a better solution.\nEnforcement\nFlag mixed interface and implementation hierarchies.\n1.7.7.11.13. C.138: Create an overload set for a derived class and its bases with using\nReason\nWithout a using declaration, member functions in the derived class hide the entire inherited overload sets.\nExample, bad\n#include \nclass B {\npublic:\n    virtual int f(int i) { std::cout Example, good\nclass D: public B {\npublic:\n    int f(int i) override { std::cout Note\nThis issue affects both virtual and nonvirtual member functions\nFor variadic bases, C++17 introduced a variadic form of the using-declaration,\ntemplate \nstruct Overloader : Ts... {\n    using Ts::operator()...; // exposes operator() from every base\n};\nEnforcement\nDiagnose name hiding\n1.7.7.11.14. C.139: Use final sparingly\nReason\nCapping a hierarchy with final is rarely needed for logical reasons and can be damaging to the extensibility of a hierarchy.\nExample, bad\nclass Widget { /* ... */ };\n\n// nobody will ever want to improve My_widget (or so you thought)\nclass My_widget final : public Widget { /* ... */ };\n\nclass My_improved_widget : public My_widget { /* ... */ };  // error: can't do that\nNote\nNot every class is meant to be a base class.\nMost standard-library classes are examples of that (e.g., std::vector and std::string are not designed to be derived from).\nThis rule is about using final on classes with virtual functions meant to be interfaces for a class hierarchy.\nNote\nCapping an individual virtual function with final is error-prone as final can easily be overlooked when defining/overriding a set of functions.\nFortunately, the compiler catches such mistakes: You cannot re-declare/re-open a final member in a derived class.\nNote\nClaims of performance improvements from final should be substantiated.\nToo often, such claims are based on conjecture or experience with other languages.\nThere are examples where final can be important for both logical and performance reasons.\nOne example is a performance-critical AST hierarchy in a compiler or language analysis tool.\nNew derived classes are not added every year and only by library implementers.\nHowever, misuses are (or at least have been) far more common.\nEnforcement\nFlag uses of final.\n1.7.7.12. C.140: Do not provide different default arguments for a virtual function and an overrider\nReason\nThat can cause confusion: An overrider does not inherit default arguments.\nExample, bad\nclass Base {\npublic:\n    virtual int multiply(int value, int factor = 2) = 0;\n};\n\nclass Derived : public Base {\npublic:\n    int multiply(int value, int factor = 10) override;\n};\n\nDerived d;\nBase& b = d;\n\nb.multiply(10);  // these two calls will call the same function but\nd.multiply(10);  // with different arguments and so different results\nEnforcement\nFlag default arguments on virtual functions if they differ between base and derived declarations.\n1.7.7.13. C.hier-access: Accessing objects in a hierarchy\n1.7.7.13.1. C.145: Access polymorphic objects through pointers and references\nReason\nIf you have a class with a virtual function, you don't (in general) know which class provided the function to be used.\nExample\nstruct B { int a; virtual int f(); };\nstruct D : B { int b; int f() override; };\n\nvoid use(B b)\n{\n    D d;\n    B b2 = d;   // slice\n    B b3 = b;\n}\n\nvoid use2()\n{\n    D d;\n    use(d);   // slice\n}\nBoth ds are sliced.\nException\nYou can safely access a named polymorphic object in the scope of its definition, just don't slice it.\nvoid use3()\n{\n    D d;\n    d.f();   // OK\n}\nEnforcement\nFlag all slicing.\n1.7.7.13.2. C.146: Use dynamic_cast where class hierarchy navigation is unavoidable\nReason\ndynamic_cast is checked at run time.\nExample\nstruct B {   // an interface\n    virtual void f();\n    virtual void g();\n};\n\nstruct D : B {   // a wider interface\n    void f() override;\n    virtual void h();\n};\n\nvoid user(B* pb)\n{\n    if (D* pd = dynamic_cast(pb)) {\n        // ... use D's interface ...\n    }\n    else {\n        // ... make do with B's interface ...\n    }\n}\nUse of the other casts can violate type safety and cause the program to access a variable that is actually of type X to be accessed as if it were of an unrelated type Z:\nvoid user2(B* pb)   // bad\n{\n    D* pd = static_cast(pb);    // I know that pb really points to a D; trust me\n    // ... use D's interface ...\n}\n\nvoid user3(B* pb)    // unsafe\n{\n    if (some_condition) {\n        D* pd = static_cast(pb);   // I know that pb really points to a D; trust me\n        // ... use D's interface ...\n    }\n    else {\n        // ... make do with B's interface ...\n    }\n}\n\nvoid f()\n{\n    B b;\n    user(&b);   // OK\n    user2(&b);  // bad error\n    user3(&b);  // OK *if* the programmer got the some_condition check right\n}\nNote\nLike other casts, dynamic_cast is overused.\nPrefer virtual functions to casting.\nPrefer static polymorphism to hierarchy navigation where it is possible (no run-time resolution necessary)\nand reasonably convenient.\nNote\nSome people use dynamic_cast where a typeid would have been more appropriate;\ndynamic_cast is a general \"is kind of\" operation for discovering the best interface to an object,\nwhereas typeid is a \"give me the exact type of this object\" operation to discover the actual type of an object.\nThe latter is an inherently simpler operation that ought to be faster.\nThe latter (typeid) is easily hand-crafted if necessary (e.g., if working on a system where RTTI is -- for some reason -- prohibited),\nthe former (dynamic_cast) is far harder to implement correctly in general.\nConsider:\nstruct B {\n    const char* name {\"B\"};\n    // if pb1->id() == pb2->id() *pb1 is the same type as *pb2\n    virtual const char* id() const { return name; }\n    // ...\n};\n\nstruct D : B {\n    const char* name {\"D\"};\n    const char* id() const override { return name; }\n    // ...\n};\n\nvoid use()\n{\n    B* pb1 = new B;\n    B* pb2 = new D;\n\n    cout id(); // \"B\"\n    cout id(); // \"D\"\n\n\n    if (pb1->id() == \"D\") {         // looks innocent\n        D* pd = static_cast(pb1);\n        // ...\n    }\n    // ...\n}\nThe result of pb2->id() == \"D\" is actually implementation defined.\nWe added it to warn of the dangers of home-brew RTTI.\nThis code may work as expected for years, just to fail on a new machine, new compiler, or a new linker that does not unify character literals.\nIf you implement your own RTTI, be careful.\nException\nIf your implementation provided a really slow dynamic_cast, you may have to use a workaround.\nHowever, all workarounds that cannot be statically resolved involve explicit casting (typically static_cast) and are error-prone.\nYou will basically be crafting your own special-purpose dynamic_cast.\nSo, first make sure that your dynamic_cast really is as slow as you think it is (there are a fair number of unsupported rumors about)\nand that your use of dynamic_cast is really performance critical.\nWe are of the opinion that current implementations of dynamic_cast are unnecessarily slow.\nFor example, under suitable conditions, it is possible to perform a dynamic_cast in fast constant time.\nHowever, compatibility makes changes difficult even if all agree that an effort to optimize is worthwhile.\nIn very rare cases, if you have measured that the dynamic_cast overhead is material, you have other means to statically guarantee that a downcast will succeed (e.g., you are using CRTP carefully), and there is no virtual inheritance involved, consider tactically resorting static_cast with a prominent comment and disclaimer summarizing this paragraph and that human attention is needed under maintenance because the type system can't verify correctness. Even so, in our experience such \"I know what I'm doing\" situations are still a known bug source.\nException\nConsider:\ntemplate\nclass Dx : B {\n    // ...\n};\nEnforcement\n\nFlag all uses of static_cast for downcasts, including C-style casts that perform a static_cast.\nThis rule is part of the type-safety profile.\n\n1.7.7.13.3. C.147: Use dynamic_cast to a reference type when failure to find the required class is considered an error\nReason\nCasting to a reference expresses that you intend to end up with a valid object, so the cast must succeed. dynamic_cast will then throw if it does not succeed.\nExample\n???\nEnforcement\n???\n1.7.7.13.4. C.148: Use dynamic_cast to a pointer type when failure to find the required class is considered a valid alternative\nReason\nThe dynamic_cast conversion allows to test whether a pointer is pointing at a polymorphic object that has a given class in its hierarchy. Since failure to find the class merely returns a null value, it can be tested during run time. This allows writing code that can choose alternative paths depending on the results.\nContrast with C.147, where failure is an error, and should not be used for conditional execution.\nExample\nThe example below describes the add method of a Shape_owner that takes ownership of constructed Shape objects. The objects are also sorted into views, according to their geometric attributes.\nIn this example, Shape does not inherit from Geometric_attributes. Only its subclasses do.\nvoid add(Shape* const item)\n{\n  // Ownership is always taken\n  owned_shapes.emplace_back(item);\n\n  // Check the Geometric_attributes and add the shape to none/one/some/all of the views\n\n  if (auto even = dynamic_cast(item))\n  {\n    view_of_evens.emplace_back(even);\n  }\n\n  if (auto trisym = dynamic_cast(item))\n  {\n    view_of_trisyms.emplace_back(trisym);\n  }\n}\nNotes\nA failure to find the required class will cause dynamic_cast to return a null value, and de-referencing a null-valued pointer will lead to undefined behavior.\nTherefore the result of the dynamic_cast should always be treated as if it may contain a null value, and tested.\nEnforcement\n\n(Complex) Unless there is a null test on the result of a dynamic_cast of a pointer type, warn upon dereference of the pointer.\n\n1.7.7.13.5. C.149: Use unique_ptr or shared_ptr to avoid forgetting to delete objects created using new\nReason\nAvoid resource leaks.\nExample\nvoid use(int i)\n{\n    auto p = new int {7};           // bad: initialize local pointers with new\n    auto q = make_unique(9);   // ok: guarantee the release of the memory-allocated for 9\n    if (0 Enforcement\n\nFlag initialization of a naked pointer with the result of a new\nFlag delete of local variable\n\n1.7.7.13.6. C.150: Use make_unique() to construct objects owned by unique_ptrs\nReason\n make_unique gives a more concise statement of the construction.\nIt also ensures exception safety in complex expressions.\nExample\nunique_ptr p {new{7}};   // OK: but repetitive\n\nauto q = make_unique(7);      // Better: no repetition of Foo\n\n// Not exception-safe: the compiler may interleave the computations of arguments as follows:\n//\n// 1. allocate memory for Foo,\n// 2. construct Foo,\n// 3. call bar,\n// 4. construct unique_ptr.\n//\n// If bar throws, Foo will not be destroyed, and the memory-allocated for it will leak.\nf(unique_ptr(new Foo()), bar());\n\n// Exception-safe: calls to functions are never interleaved.\nf(make_unique(), bar());\nEnforcement\n\nFlag the repetitive usage of template specialization list \nFlag variables declared to be unique_ptr\n\n1.7.7.13.7. C.151: Use make_shared() to construct objects owned by shared_ptrs\nReason\n make_shared gives a more concise statement of the construction.\nIt also gives an opportunity to eliminate a separate allocation for the reference counts, by placing the shared_ptr's use counts next to its object.\nExample\nvoid test() {\n    // OK: but repetitive; and separate allocations for the Bar and shared_ptr's use count\n    shared_ptr p {new{7}};\n\n    auto q = make_shared(7);   // Better: no repetition of Bar; one object\n}\nEnforcement\n\nFlag the repetitive usage of template specialization list\nFlag variables declared to be shared_ptr\n\n1.7.7.13.8. C.152: Never assign a pointer to an array of derived class objects to a pointer to its base\nReason\nSubscripting the resulting base pointer will lead to invalid object access and probably to memory corruption.\nExample\nstruct B { int x; };\nstruct D : B { int y; };\n\nvoid use(B*);\n\nD a[] = {{1, 2}, {3, 4}, {5, 6}};\nB* p = a;     // bad: a decays to &a[0] which is converted to a B*\np[1].x = 7;   // overwrite D[0].y\n\nuse(a);       // bad: a decays to &a[0] which is converted to a B*\nEnforcement\n\nFlag all combinations of array decay and base to derived conversions.\nPass an array as a span rather than as a pointer, and don't let the array name suffer a derived-to-base conversion before getting into the span\n\n1.7.7.13.9. C.153: Prefer virtual function to casting\nReason\nA virtual function call is safe, whereas casting is error-prone.\nA virtual function call reaches the most derived function, whereas a cast may reach an intermediate class and therefore\ngive a wrong result (especially as a hierarchy is modified during maintenance).\nExample\n???\nEnforcement\nSee C.146 and ???\n1.7.7.14. C.over: Overloading and overloaded operators\nYou can overload ordinary functions, template functions, and operators.\nYou cannot overload function objects.\nOverload rule summary:\n\nC.160: Define operators primarily to mimic conventional usage\nC.161: Use nonmember functions for symmetric operators\nC.162: Overload operations that are roughly equivalent\nC.163: Overload only for operations that are roughly equivalent\nC.164: Avoid conversion operators\nC.165: Use using for customization points\nC.166: Overload unary & only as part of a system of smart pointers and references\nC.167: Use an operator for an operation with its conventional meaning\nC.168: Define overloaded operators in the namespace of their operands\nC.170: If you feel like overloading a lambda, use a generic lambda\n\n1.7.7.14.1. C.160: Define operators primarily to mimic conventional usage\nReason\nMinimize surprises.\nExample\nclass X {\npublic:\n    // ...\n    X& operator=(const X&); // member function defining assignment\n    friend bool operator==(const X&, const X&); // == needs access to representation\n                                                // after a = b we have a == b\n    // ...\n};\nHere, the conventional semantics is maintained: Copies compare equal.\nExample, bad\nX operator+(X a, X b) { return a.v - b.v; }   // bad: makes + subtract\nNote\nNonmember operators should be either friends or defined in the same namespace as their operands.\nBinary operators should treat their operands equivalently.\nEnforcement\nPossibly impossible.\n1.7.7.14.2. C.161: Use nonmember functions for symmetric operators\nReason\nIf you use member functions, you need two.\nUnless you use a nonmember function for (say) ==, a == b and b == a will be subtly different.\nExample\nbool operator==(Point a, Point b) { return a.x == b.x && a.y == b.y; }\nEnforcement\nFlag member operator functions.\n1.7.7.14.3. C.162: Overload operations that are roughly equivalent\nReason\nHaving different names for logically equivalent operations on different argument types is confusing, leads to encoding type information in function names, and inhibits generic programming.\nExample\nConsider:\nvoid print(int a);\nvoid print(int a, int base);\nvoid print(const string&);\nThese three functions all print their arguments (appropriately). Conversely:\nvoid print_int(int a);\nvoid print_based(int a, int base);\nvoid print_string(const string&);\nThese three functions all print their arguments (appropriately). Adding to the name just introduced verbosity and inhibits generic code.\nEnforcement\n???\n1.7.7.14.4. C.163: Overload only for operations that are roughly equivalent\nReason\nHaving the same name for logically different functions is confusing and leads to errors when using generic programming.\nExample\nConsider:\nvoid open_gate(Gate& g);   // remove obstacle from garage exit lane\nvoid fopen(const char* name, const char* mode);   // open file\nThe two operations are fundamentally different (and unrelated) so it is good that their names differ. Conversely:\nvoid open(Gate& g);   // remove obstacle from garage exit lane\nvoid open(const char* name, const char* mode =\"r\");   // open file\nThe two operations are still fundamentally different (and unrelated) but the names have been reduced to their (common) minimum, opening opportunities for confusion.\nFortunately, the type system will catch many such mistakes.\nNote\nBe particularly careful about common and popular names, such as open, move, +, and ==.\nEnforcement\n???\n1.7.7.14.5. C.164: Avoid conversion operators\nReason\nImplicit conversions can be essential (e.g., double to int) but often cause surprises (e.g., String to C-style string).\nNote\nPrefer explicitly named conversions until a serious need is demonstrated.\nBy \"serious need\" we mean a reason that is fundamental in the application domain (such as an integer to complex number conversion)\nand frequently needed. Do not introduce implicit conversions (through conversion operators or non-explicit constructors)\njust to gain a minor convenience.\nExample, bad\nclass String {   // handle ownership and access to a sequence of characters\n    // ...\n    String(czstring p); // copy from *p to *(this->elem)\n    // ...\n    operator zstring() { return elem; }\n    // ...\n};\n\nvoid user(zstring p)\n{\n    if (*p == \"\") {\n        String s {\"Trouble ahead!\"};\n        // ...\n        p = s;\n    }\n    // use p\n}\nThe string allocated for s and assigned to p is destroyed before it can be used.\nEnforcement\nFlag all conversion operators.\n1.7.7.14.6. C.165: Use using for customization points\nReason\nTo find function objects and functions defined in a separate namespace to \"customize\" a common function.\nExample\nConsider swap. It is a general (standard-library) function with a definition that will work for just about any type.\nHowever, it is desirable to define specific swap()s for specific types.\nFor example, the general swap() will copy the elements of two vectors being swapped, whereas a good specific implementation will not copy elements at all.\nnamespace N {\n    My_type X { /* ... */ };\n    void swap(X&, X&);   // optimized swap for N::X\n    // ...\n}\n\nvoid f1(N::X& a, N::X& b)\n{\n    std::swap(a, b);   // probably not what we wanted: calls std::swap()\n}\nThe std::swap() in f1() does exactly what we asked it to do: it calls the swap() in namespace std.\nUnfortunately, that's probably not what we wanted.\nHow do we get N::X considered?\nvoid f2(N::X& a, N::X& b)\n{\n    swap(a, b);   // calls N::swap\n}\nBut that may not be what we wanted for generic code.\nThere, we typically want the specific function if it exists and the general function if not.\nThis is done by including the general function in the lookup for the function:\nvoid f3(N::X& a, N::X& b)\n{\n    using std::swap;  // make std::swap available\n    swap(a, b);        // calls N::swap if it exists, otherwise std::swap\n}\nEnforcement\nUnlikely, except for known customization points, such as swap.\nThe problem is that the unqualified and qualified lookups both have uses.\n1.7.7.14.7. C.166: Overload unary & only as part of a system of smart pointers and references\nReason\nThe & operator is fundamental in C++.\nMany parts of the C++ semantics assumes its default meaning.\nExample\nclass Ptr { // a somewhat smart pointer\n    Ptr(X* pp) :p(pp) { /* check */ }\n    X* operator->() { /* check */ return p; }\n    X operator[](int i);\n    X operator*();\nprivate:\n    T* p;\n};\n\nclass X {\n    Ptr operator&() { return Ptr{this}; }\n    // ...\n};\nNote\nIf you \"mess with\" operator & be sure that its definition has matching meanings for ->, [], *, and . on the result type.\nNote that operator . currently cannot be overloaded so a perfect system is impossible.\nWe hope to remedy that: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4477.pdf.\nNote that std::addressof() always yields a built-in pointer.\nEnforcement\nTricky. Warn if & is user-defined without also defining -> for the result type.\n1.7.7.14.8. C.167: Use an operator for an operation with its conventional meaning\nReason\nReadability. Convention. Reusability. Support for generic code\nExample\nvoid cout_my_class(const My_class& c) // confusing, not conventional,not generic\n{\n    std::cout By itself, cout_my_class would be OK, but it is not usable/composable with code that rely on the  convention for output:\nMy_class var { /* ... */ };\n// ...\ncout Note\nThere are strong and vigorous conventions for the meaning most operators, such as\n\ncomparisons (==, !=, , , >, and >=),\narithmetic operations (+, -, *, /, and %)\naccess operations (., ->, unary *, and [])\nassignment (=)\n\nDon't define those unconventionally and don't invent your own names for them.\nEnforcement\nTricky. Requires semantic insight.\n1.7.7.14.9. C.168: Define overloaded operators in the namespace of their operands\nReason\nReadability.\nAbility for find operators using ADL.\nAvoiding inconsistent definition in different namespaces\nExample\nstruct S { };\nbool operator==(S, S);   // OK: in the same namespace as S, and even next to S\nS s;\n\nbool x = (s == s);\nThis is what a default == would do, if we had such defaults.\nExample\nnamespace N {\n    struct S { };\n    bool operator==(S, S);   // OK: in the same namespace as S, and even next to S\n}\n\nN::S s;\n\nbool x = (s == s);  // finds N::operator==() by ADL\nExample, bad\nstruct S { };\nS s;\n\nnamespace N {\n    S::operator!(S a) { return true; }\n    S not_s = !s;\n}\n\nnamespace M {\n    S::operator!(S a) { return false; }\n    S not_s = !s;\n}\nHere, the meaning of !s differs in N and M.\nThis can be most confusing.\nRemove the definition of namespace M and the confusion is replaced by an opportunity to make the mistake.\nNote\nIf a binary operator is defined for two types that are defined in different namespaces, you cannot follow this rule.\nFor example:\nVec::Vector operator*(const Vec::Vector&, const Mat::Matrix&);\nThis may be something best avoided.\nSee also\nThis is a special case of the rule that helper functions should be defined in the same namespace as their class.\nEnforcement\n\nFlag operator definitions that are not it the namespace of their operands\n\n1.7.7.14.10. C.170: If you feel like overloading a lambda, use a generic lambda\nReason\nYou cannot overload by defining two different lambdas with the same name.\nExample\nvoid f(int);\nvoid f(double);\nauto f = [](char);   // error: cannot overload variable and function\n\nauto g = [](int) { /* ... */ };\nauto g = [](double) { /* ... */ };   // error: cannot overload variables\n\nauto h = [](auto) { /* ... */ };   // OK\nEnforcement\nThe compiler catches the attempt to overload a lambda.\n1.7.7.15. C.union: Unions\nA union is a struct where all members start at the same address so that it can hold only one member at a time.\nA union does not keep track of which member is stored so the programmer has to get it right;\nthis is inherently error-prone, but there are ways to compensate.\nA type that is a union plus an indicator of which member is currently held is called a tagged union, a discriminated union, or a variant.\nUnion rule summary:\n\nC.180: Use unions to save Memory\nC.181: Avoid \"naked\" unions\nC.182: Use anonymous unions to implement tagged unions\nC.183: Don't use a union for type punning\n???\n\n1.7.7.15.1. C.180: Use unions to save memory\nReason\nA union allows a single piece of memory to be used for different types of objects at different times.\nConsequently, it can be used to save memory when we have several objects that are never used at the same time.\nExample\nunion Value {\n    int x;\n    double d;\n};\n\nValue v = { 123 };  // now v holds an int\ncout But heed the warning: Avoid \"naked\" unions\nExample\n// Short-string optimization\n\nconstexpr size_t buffer_size = 16; // Slightly larger than the size of a pointer\n\nclass Immutable_string {\npublic:\n    Immutable_string(const char* str) :\n        size(strlen(str))\n    {\n        if (size = buffer_size)\n            delete string_ptr;\n    }\n\n    const char* get_str() const\n    {\n        return (size Enforcement\n???\n1.7.7.15.2. C.181: Avoid \"naked\" unions\nReason\nA naked union is a union without an associated indicator which member (if any) it holds,\nso that the programmer has to keep track.\nNaked unions are a source of type errors.\nExample, bad\nunion Value {\n    int x;\n    double d;\n};\n\nValue v;\nv.d = 987.654;  // v holds a double\nSo far, so good, but we can easily misuse the union:\ncout Note that the type error happened without any explicit cast.\nWhen we tested that program the last value printed was 1683627180 which it the integer value for the bit pattern for 987.654.\nWhat we have here is an \"invisible\" type error that happens to give a result that could easily look innocent.\nAnd, talking about \"invisible\", this code produced no output:\nv.x = 123;\ncout Alternative\nWrap a union in a class together with a type field.\nThe soon-to-be-standard variant type (to be found in ) does that for you:\nvariant v;\nv = 123;        // v holds an int\nint x = get(v);\nv = 123.456;    // v holds a double\nw = get(v);\nEnforcement\n???\n1.7.7.15.3. C.182: Use anonymous unions to implement tagged unions\nReason\nA well-designed tagged union is type safe.\nAn anonymous union simplifies the definition of a class with a (tag, union) pair.\nExample\nThis example is mostly borrowed from TC++PL4 pp216-218.\nYou can look there for an explanation.\nThe code is somewhat elaborate.\nHandling a type with user-defined assignment and destructor is tricky.\nSaving programmers from having to write such code is one reason for including variant in the standard.\nclass Value { // two alternative representations represented as a union\nprivate:\n    enum class Tag { number, text };\n    Tag type; // discriminant\n\n    union { // representation (note: anonymous union)\n        int i;\n        string s; // string has default constructor, copy operations, and destructor\n    };\npublic:\n    struct Bad_entry { }; // used for exceptions\n\n    ~Value();\n    Value& operator=(const Value&);   // necessary because of the string variant\n    Value(const Value&);\n    // ...\n    int number() const;\n    string text() const;\n\n    void set_number(int n);\n    void set_text(const string&);\n    // ...\n};\n\nint Value::number() const\n{\n    if (type != Tag::number) throw Bad_entry{};\n    return i;\n}\n\nstring Value::text() const\n{\n    if (type != Tag::text) throw Bad_entry{};\n    return s;\n}\n\nvoid Value::set_number(int n)\n{\n    if (type == Tag::text) {\n        s.~string();      // explicitly destroy string\n        type = Tag::number;\n    }\n    i = n;\n}\n\nvoid Value::set_text(const string& ss)\n{\n    if (type == Tag::text)\n        s = ss;\n    else {\n        new(&s) string{ss};   // placement new: explicitly construct string\n        type = Tag::text;\n    }\n}\n\nValue& Value::operator=(const Value& e)   // necessary because of the string variant\n{\n    if (type == Tag::text && e.type == Tag::text) {\n        s = e.s;    // usual string assignment\n        return *this;\n    }\n\n    if (type == Tag::text) s.~string(); // explicit destroy\n\n    switch (e.type) {\n    case Tag::number:\n        i = e.i;\n        break;\n    case Tag::text:\n        new(&s)(e.s);   // placement new: explicit construct\n        type = e.type;\n    }\n\n    return *this;\n}\n\nValue::~Value()\n{\n    if (type == Tag::text) s.~string(); // explicit destroy\n}\nEnforcement\n???\n1.7.7.15.4. C.183: Don't use a union for type punning\nReason\nIt is undefined behavior to read a union member with a different type from the one with which it was written.\nSuch punning is invisible, or at least harder to spot than using a named cast.\nType punning using a union is a source of errors.\nExample, bad\nunion Pun {\n    int x;\n    unsigned char c[sizeof(int)];\n};\nThe idea of Pun is to be able to look at the character representation of an int.\nvoid bad(Pun& u)\n{\n    u.x = 'x';\n    cout If you wanted to see the bytes of an int, use a (named) cast:\nvoid if_you_must_pun(int& x)\n{\n    auto p = reinterpret_cast(&x);\n    cout Accessing the result of an reinterpret_cast to a different type from the objects declared type is defined behavior (even though reinterpret_cast is discouraged),\nbut at least we can see that something tricky is going on.\nNote\nUnfortunately, unions are commonly used for type punning.\nWe don't consider \"sometimes, it works as expected\" a strong argument.\nC++17 introduced a distinct type std::byte to facilitate operations on raw object representation.  Use that type instead of unsigned char or char for these operations.\nEnforcement\n???\n1.7.8. Enum: Enumerations\nEnumerations are used to define sets of integer values and for defining types for such sets of values.\nThere are two kind of enumerations, \"plain\" enums and class enums.\nEnumeration rule summary:\n\nEnum.1: Prefer enumerations over macros\nEnum.2: Use enumerations to represent sets of related named constants\nEnum.3: Prefer enum classes over \"plain\" enums\nEnum.4: Define operations on enumerations for safe and simple use\nEnum.5: Don't use ALL_CAPS for enumerators\nEnum.6: Avoid unnamed enumerations\nEnum.7: Specify the underlying type of an enumeration only when necessary\nEnum.8: Specify enumerator values only when necessary\n\nEnum.1: Prefer enumerations over macros\nReason\nMacros do not obey scope and type rules. Also, macro names are removed during preprocessing and so usually don't appear in tools like debuggers.\nExample\nFirst some bad old code:\n// webcolors.h (third party header)\n#define RED   0xFF0000\n#define GREEN 0x00FF00\n#define BLUE  0x0000FF\n\n// productinfo.h\n// The following define product subtypes based on color\n#define RED    0\n#define PURPLE 1\n#define BLUE   2\n\nint webby = BLUE;   // webby == 2; probably not what was desired\nInstead use an enum:\nenum class Web_color { red = 0xFF0000, green = 0x00FF00, blue = 0x0000FF };\nenum class Product_info { red = 0, purple = 1, blue = 2 };\n\nint webby = blue;   // error: be specific\nWeb_color webby = Web_color::blue;\nWe used an enum class to avoid name clashes.\nEnforcement\nFlag macros that define integer values.\nEnum.2: Use enumerations to represent sets of related named constants\nReason\nAn enumeration shows the enumerators to be related and can be a named type.\nExample\nenum class Web_color { red = 0xFF0000, green = 0x00FF00, blue = 0x0000FF };\nNote\nSwitching on an enumeration is common and the compiler can warn against unusual patterns of case labels. For example:\nenum class Product_info { red = 0, purple = 1, blue = 2 };\n\nvoid print(Product_info inf)\n{\n    switch (inf) {\n    case Product_info::red: cout Such off-by-one switch`statements are often the results of an added enumerator and insufficient testing.\nEnforcement\n\nFlag switch-statements where the cases cover most but not all enumerators of an enumeration.\nFlag switch-statements where the cases cover a few enumerators of an enumeration, but has no default.\n\nEnum.3: Prefer class enums over \"plain\" enums\nReason\nTo minimize surprises: traditional enums convert to int too readily.\nExample\nvoid Print_color(int color);\n\nenum Web_color { red = 0xFF0000, green = 0x00FF00, blue = 0x0000FF };\nenum Product_info { Red = 0, Purple = 1, Blue = 2 };\n\nWeb_color webby = Web_color::blue;\n\n// Clearly at least one of these calls is buggy.\nPrint_color(webby);\nPrint_color(Product_info::Blue);\nInstead use an enum class:\nvoid Print_color(int color);\n\nenum class Web_color { red = 0xFF0000, green = 0x00FF00, blue = 0x0000FF };\nenum class Product_info { red = 0, purple = 1, blue = 2 };\n\nWeb_color webby = Web_color::blue;\nPrint_color(webby);  // Error: cannot convert Web_color to int.\nPrint_color(Product_info::Red);  // Error: cannot convert Product_info to int.\nEnforcement\n(Simple) Warn on any non-class enum definition.\nEnum.4: Define operations on enumerations for safe and simple use\nReason\nConvenience of use and avoidance of errors.\nExample\nenum Day { mon, tue, wed, thu, fri, sat, sun };\n\nDay& operator++(Day& d)\n{\n    return d = (d == Day::sun) ? Day::mon : static_cast(static_cast(d)+1);\n}\n\nDay today = Day::sat;\nDay tomorrow = ++today;\nThe use of a static_cast is not pretty, but\nDay& operator++(Day& d)\n{\n    return d = (d == Day::sun) ? Day::mon : Day{++d};    // error\n}\nis an infinite recursion, and writing it without a cast, using a switch on all cases is long-winded.\nEnforcement\nFlag repeated expressions cast back into an enumeration.\nEnum.5: Don't use ALL_CAPS for enumerators\nReason\nAvoid clashes with macros.\nExample, bad\n // webcolors.h (third party header)\n#define RED   0xFF0000\n#define GREEN 0x00FF00\n#define BLUE  0x0000FF\n\n// productinfo.h\n// The following define product subtypes based on color\n\nenum class Product_info { RED, PURPLE, BLUE };   // syntax error\nEnforcement\nFlag ALL_CAPS enumerators.\nEnum.6: Avoid unnamed enumerations\nReason\nIf you can't name an enumeration, the values are not related\nExample, bad\nenum { red = 0xFF0000, scale = 4, is_signed = 1 };\nSuch code is not uncommon in code written before there were convenient alternative ways of specifying integer constants.\nAlternative\nUse constexpr values instead. For example:\nconstexpr int red = 0xFF0000;\nconstexpr short scale = 4;\nconstexpr bool is_signed = true;\nEnforcement\nFlag unnamed enumerations.\nEnum.7: Specify the underlying type of an enumeration only when necessary\nReason\nThe default is the easiest to read and write.\nint is the default integer type.\nint is compatible with C enums.\nExample\nenum class Direction : char { n, s, e, w,\n                              ne, nw, se, sw };  // underlying type saves space\n\nenum class Web_color : int { red   = 0xFF0000,\n                             green = 0x00FF00,\n                             blue  = 0x0000FF };  // underlying type is redundant\nNote\nSpecifying the underlying type is necessary in forward declarations of enumerations:\nenum Flags : char;\n\nvoid f(Flags);\n\n// ....\n\nenum flags : char { /* ... */ };\nEnforcement\n????\nEnum.8: Specify enumerator values only when necessary\nReason\nIt's the simplest.\nIt avoids duplicate enumerator values.\nThe default gives a consecutive set of values that is good for switch-statement implementations.\nExample\nenum class Col1 { red, yellow, blue };\nenum class Col2 { red = 1, yellow = 2, blue = 2 }; // typo\nenum class Month { jan = 1, feb, mar, apr, may, jun,\n                   jul, august, sep, oct, nov, dec }; // starting with 1 is conventional\nenum class Base_flag { dec = 1, oct = dec Specifying values is necessary to match conventional values (e.g., Month)\nand where consecutive values are undesirable (e.g., to get separate bits as in Base_flag).\nEnforcement\n\nFlag duplicate enumerator values\nFlag explicitly specified all-consecutive enumerator values\n\n1.7.9. R: Resource management\nThis section contains rules related to resources.\nA resource is anything that must be acquired and (explicitly or implicitly) released, such as memory, file handles, sockets, and locks.\nThe reason it must be released is typically that it can be in short supply, so even delayed release may do harm.\nThe fundamental aim is to ensure that we don't leak any resources and that we don't hold a resource longer than we need to.\nAn entity that is responsible for releasing a resource is called an owner.\nThere are a few cases where leaks can be acceptable or even optimal:\nIf you are writing a program that simply produces an output based on an input and the amount of memory needed is proportional to the size of the input, the optimal strategy (for performance and ease of programming) is sometimes simply never to delete anything.\nIf you have enough memory to handle your largest input, leak away, but be sure to give a good error message if you are wrong.\nHere, we ignore such cases.\n\nResource management rule summary:\n\nR.1: Manage resources automatically using resource handles and RAII (Resource Acquisition Is Initialization)\nR.2: In interfaces, use raw pointers to denote individual objects (only)\nR.3: A raw pointer (a T*) is non-owning\nR.4: A raw reference (a T&) is non-owning\nR.5: Prefer scoped objects, don't heap-allocate unnecessarily\nR.6: Avoid non-const global variables\n\n\nAllocation and deallocation rule summary:\n\nR.10: Avoid malloc() and free()\nR.11: Avoid calling new and delete explicitly\nR.12: Immediately give the result of an explicit resource allocation to a manager object\nR.13: Perform at most one explicit resource allocation in a single expression statement\nR.14: ??? array vs. pointer parameter\nR.15: Always overload matched allocation/deallocation pairs\n\n\nSmart pointer rule summary:\n\nR.20: Use unique_ptr or shared_ptr to represent ownership\nR.21: Prefer unique_ptr over shared_ptr unless you need to share ownership\nR.22: Use make_shared() to make shared_ptrs\nR.23: Use make_unique() to make unique_ptrs\nR.24: Use std::weak_ptr to break cycles of shared_ptrs\nR.30: Take smart pointers as parameters only to explicitly express lifetime semantics\nR.31: If you have non-std smart pointers, follow the basic pattern from std\nR.32: Take a unique_ptr parameter to express that a function assumes ownership of a widget\nR.33: Take a unique_ptr& parameter to express that a function reseats the widget\nR.34: Take a shared_ptr parameter to express that a function is part owner\nR.35: Take a shared_ptr& parameter to express that a function might reseat the shared pointer\nR.36: Take a const shared_ptr& parameter to express that it might retain a reference count to the object ???\nR.37: Do not pass a pointer or reference obtained from an aliased smart pointer\n\n\n\nR.1: Manage resources automatically using resource handles and RAII (Resource Acquisition Is Initialization)\nReason\nTo avoid leaks and the complexity of manual resource management.\nC++'s language-enforced constructor/destructor symmetry mirrors the symmetry inherent in resource acquire/release function pairs such as fopen/fclose, lock/unlock, and new/delete.\nWhenever you deal with a resource that needs paired acquire/release function calls, encapsulate that resource in an object that enforces pairing for you -- acquire the resource in its constructor, and release it in its destructor.\nExample, bad\nConsider:\nvoid send(X* x, cstring_span destination)\n{\n    auto port = open_port(destination);\n    my_mutex.lock();\n    // ...\n    send(port, x);\n    // ...\n    my_mutex.unlock();\n    close_port(port);\n    delete x;\n}\nIn this code, you have to remember to unlock, close_port, and delete on all paths, and do each exactly once.\nFurther, if any of the code marked ... throws an exception, then x is leaked and my_mutex remains locked.\nExample\nConsider:\nvoid send(unique_ptr x, cstring_span destination)  // x owns the X\n{\n    Port port{destination};            // port owns the PortHandle\n    lock_guard guard{my_mutex}; // guard owns the lock\n    // ...\n    send(port, x);\n    // ...\n} // automatically unlocks my_mutex and deletes the pointer in x\nNow all resource cleanup is automatic, performed once on all paths whether or not there is an exception. As a bonus, the function now advertises that it takes over ownership of the pointer.\nWhat is Port? A handy wrapper that encapsulates the resource:\nclass Port {\n    PortHandle port;\npublic:\n    Port(cstring_span destination) : port{open_port(destination)} { }\n    ~Port() { close_port(port); }\n    operator PortHandle() { return port; }\n\n    // port handles can't usually be cloned, so disable copying and assignment if necessary\n    Port(const Port&) = delete;\n    Port& operator=(const Port&) = delete;\n};\nNote\nWhere a resource is \"ill-behaved\" in that it isn't represented as a class with a destructor, wrap it in a class or use finally\nSee also: RAII.\nR.2: In interfaces, use raw pointers to denote individual objects (only)\nReason\nArrays are best represented by a container type (e.g., vector (owning)) or a span (non-owning).\nSuch containers and views hold sufficient information to do range checking.\nExample, bad\nvoid f(int* p, int n)   // n is the number of elements in p[]\n{\n    // ...\n    p[2] = 7;   // bad: subscript raw pointer\n    // ...\n}\nThe compiler does not read comments, and without reading other code you do not know whether p really points to n elements.\nUse a span instead.\nExample\nvoid g(int* p, int fmt)   // print *p using format #fmt\n{\n    // ... uses *p and p[0] only ...\n}\nException\nC-style strings are passed as single pointers to a zero-terminated sequence of characters.\nUse zstring rather than char* to indicate that you rely on that convention.\nNote\nMany current uses of pointers to a single element could be references.\nHowever, where nullptr is a possible value, a reference may not be an reasonable alternative.\nEnforcement\n\nFlag pointer arithmetic (including ++) on a pointer that is not part of a container, view, or iterator.\nThis rule would generate a huge number of false positives if applied to an older code base.\nFlag array names passed as simple pointers\n\nR.3: A raw pointer (a T*) is non-owning\nReason\nThere is nothing (in the C++ standard or in most code) to say otherwise and most raw pointers are non-owning.\nWe want owning pointers identified so that we can reliably and efficiently delete the objects pointed to by owning pointers.\nExample\nvoid f()\n{\n    int* p1 = new int{7};           // bad: raw owning pointer\n    auto p2 = make_unique(7);  // OK: the int is owned by a unique pointer\n    // ...\n}\nThe unique_ptr protects against leaks by guaranteeing the deletion of its object (even in the presence of exceptions). The T* does not.\nExample\ntemplate\nclass X {\n    // ...\npublic:\n    T* p;   // bad: it is unclear whether p is owning or not\n    T* q;   // bad: it is unclear whether q is owning or not\n};\nWe can fix that problem by making ownership explicit:\ntemplate\nclass X2 {\n    // ...\npublic:\n    owner p;  // OK: p is owning\n    T* q;         // OK: q is not owning\n};\nException\nA major class of exception is legacy code, especially code that must remain compilable as C or interface with C and C-style C++ through ABIs.\nThe fact that there are billions of lines of code that violate this rule against owning T*s cannot be ignored.\nWe'd love to see program transformation tools turning 20-year-old \"legacy\" code into shiny modern code,\nwe encourage the development, deployment and use of such tools,\nwe hope the guidelines will help the development of such tools,\nand we even contributed (and contribute) to the research and development in this area.\nHowever, it will take time: \"legacy code\" is generated faster than we can renovate old code, and so it will be for a few years.\nThis code cannot all be rewritten (ever assuming good code transformation software), especially not soon.\nThis problem cannot be solved (at scale) by transforming all owning pointers to unique_ptrs and shared_ptrs,\npartly because we need/use owning \"raw pointers\" as well as simple pointers in the implementation of our fundamental resource handles.\nFor example, common vector implementations have one owning pointer and two non-owning pointers.\nMany ABIs (and essentially all interfaces to C code) use T*s, some of them owning.\nSome interfaces cannot be simply annotated with owner because they need to remain compilable as C\n(although this would be a rare good use for a macro, that expands to owner in C++ mode only).\nNote\nowner has no default semantics beyond T*. It can be used without changing any code using it and without affecting ABIs.\nIt is simply a indicator to programmers and analysis tools.\nFor example, if an owner is a member of a class, that class better have a destructor that deletes it.\nExample, bad\nReturning a (raw) pointer imposes a lifetime management uncertainty on the caller; that is, who deletes the pointed-to object?\nGadget* make_gadget(int n)\n{\n    auto p = new Gadget{n};\n    // ...\n    return p;\n}\n\nvoid caller(int n)\n{\n    auto p = make_gadget(n);   // remember to delete p\n    // ...\n    delete p;\n}\nIn addition to suffering from the problem from leak, this adds a spurious allocation and deallocation operation, and is needlessly verbose. If Gadget is cheap to move out of a function (i.e., is small or has an efficient move operation), just return it \"by value\" (see \"out\" return values):\nGadget make_gadget(int n)\n{\n    Gadget g{n};\n    // ...\n    return g;\n}\nNote\nThis rule applies to factory functions.\nNote\nIf pointer semantics are required (e.g., because the return type needs to refer to a base class of a class hierarchy (an interface)), return a \"smart pointer.\"\nEnforcement\n\n(Simple) Warn on delete of a raw pointer that is not an owner.\n(Moderate) Warn on failure to either reset or explicitly delete an owner pointer on every code path.\n(Simple) Warn if the return value of new is assigned to a raw pointer.\n(Simple) Warn if a function returns an object that was allocated within the function but has a move constructor.\nSuggest considering returning it by value instead.\n\nR.4: A raw reference (a T&) is non-owning\nReason\nThere is nothing (in the C++ standard or in most code) to say otherwise and most raw references are non-owning.\nWe want owners identified so that we can reliably and efficiently delete the objects pointed to by owning pointers.\nExample\nvoid f()\n{\n    int& r = *new int{7};  // bad: raw owning reference\n    // ...\n    delete &r;             // bad: violated the rule against deleting raw pointers\n}\nSee also: The raw pointer rule\nEnforcement\nSee the raw pointer rule\nR.5: Prefer scoped objects, don't heap-allocate unnecessarily\nReason\nA scoped object is a local object, a global object, or a member.\nThis implies that there is no separate allocation and deallocation cost in excess of that already used for the containing scope or object.\nThe members of a scoped object are themselves scoped and the scoped object's constructor and destructor manage the members' lifetimes.\nExample\nThe following example is inefficient (because it has unnecessary allocation and deallocation), vulnerable to exception throws and returns in the ... part (leading to leaks), and verbose:\nvoid f(int n)\n{\n    auto p = new Gadget{n};\n    // ...\n    delete p;\n}\nInstead, use a local variable:\nvoid f(int n)\n{\n    Gadget g{n};\n    // ...\n}\nEnforcement\n\n(Moderate) Warn if an object is allocated and then deallocated on all paths within a function. Suggest it should be a local auto stack object instead.\n(Simple) Warn if a local Unique_ptr or Shared_ptr is not moved, copied, reassigned or reset before its lifetime ends.\n\nR.6: Avoid non-const global variables\nReason\nGlobal variables can be accessed from everywhere so they can introduce surprising dependencies between apparently unrelated objects.\nThey are a notable source of errors.\nWarning: The initialization of global objects is not totally ordered.\nIf you use a global object initialize it with a constant.\nNote that it is possible to get undefined initialization order even for const objects.\nException\nA global object is often better than a singleton.\nException\nAn immutable (const) global does not introduce the problems we try to avoid by banning global objects.\nEnforcement\n(??? NM: Obviously we can warn about non-const statics ... do we want to?)\n1.7.9.1. R.alloc: Allocation and deallocation\n1.7.9.1.1. R.10: Avoid malloc() and free()\nReason\n malloc() and free() do not support construction and destruction, and do not mix well with new and delete.\nExample\nclass Record {\n    int id;\n    string name;\n    // ...\n};\n\nvoid use()\n{\n    // p1 may be nullptr\n    // *p1 is not initialized; in particular,\n    // that string isn't a string, but a string-sized bag of bits\n    Record* p1 = static_cast(malloc(sizeof(Record)));\n\n    auto p2 = new Record;\n\n    // unless an exception is thrown, *p2 is default initialized\n    auto p3 = new(nothrow) Record;\n    // p3 may be nullptr; if not, *p3 is default initialized\n\n    // ...\n\n    delete p1;    // error: cannot delete object allocated by malloc()\n    free(p2);    // error: cannot free() object allocated by new\n}\nIn some implementations that delete and that free() might work, or maybe they will cause run-time errors.\nException\nThere are applications and sections of code where exceptions are not acceptable.\nSome of the best such examples are in life-critical hard-real-time code.\nBeware that many bans on exception use are based on superstition (bad)\nor by concerns for older code bases with unsystematic resource management (unfortunately, but sometimes necessary).\nIn such cases, consider the nothrow versions of new.\nEnforcement\nFlag explicit use of malloc and free.\n1.7.9.1.2. R.11: Avoid calling new and delete explicitly\nReason\nThe pointer returned by new should belong to a resource handle (that can call delete).\nIf the pointer returned by new is assigned to a plain/naked pointer, the object can be leaked.\nNote\nIn a large program, a naked delete (that is a delete in application code, rather than part of code devoted to resource management)\nis a likely bug: if you have N deletes, how can you be certain that you don't need N+1 or N-1?\nThe bug may be latent: it may emerge only during maintenance.\nIf you have a naked new, you probably need a naked delete somewhere, so you probably have a bug.\nEnforcement\n(Simple) Warn on any explicit use of new and delete. Suggest using make_unique instead.\n1.7.9.1.3. R.12: Immediately give the result of an explicit resource allocation to a manager object\nReason\nIf you don't, an exception or a return may lead to a leak.\nExample, bad\nvoid f(const string& name)\n{\n    FILE* f = fopen(name, \"r\");            // open the file\n    vector buf(1024);\n    auto _ = finally([f] { fclose(f); });  // remember to close the file\n    // ...\n}\nThe allocation of buf may fail and leak the file handle.\nExample\nvoid f(const string& name)\n{\n    ifstream f{name};   // open the file\n    vector buf(1024);\n    // ...\n}\nThe use of the file handle (in ifstream) is simple, efficient, and safe.\nEnforcement\n\nFlag explicit allocations used to initialize pointers (problem: how many direct resource allocations can we recognize?)\n\n1.7.9.1.4. R.13: Perform at most one explicit resource allocation in a single expression statement\nReason\nIf you perform two explicit resource allocations in one statement, you could leak resources because the order of evaluation of many subexpressions, including function arguments, is unspecified.\nExample\nvoid fun(shared_ptr sp1, shared_ptr sp2);\nThis fun can be called like this:\n// BAD: potential leak\nfun(shared_ptr(new Widget(a, b)), shared_ptr(new Widget(c, d)));\nThis is exception-unsafe because the compiler may reorder the two expressions building the function's two arguments.\nIn particular, the compiler can interleave execution of the two expressions:\nMemory allocation (by calling operator new) could be done first for both objects, followed by attempts to call the two Widget constructors.\nIf one of the constructor calls throws an exception, then the other object's memory will never be released!\nThis subtle problem has a simple solution: Never perform more than one explicit resource allocation in a single expression statement.\nFor example:\nshared_ptr sp1(new Widget(a, b)); // Better, but messy\nfun(sp1, new Widget(c, d));\nThe best solution is to avoid explicit allocation entirely use factory functions that return owning objects:\nfun(make_shared(a, b), make_shared(c, d)); // Best\nWrite your own factory wrapper if there is not one already.\nEnforcement\n\nFlag expressions with multiple explicit resource allocations (problem: how many direct resource allocations can we recognize?)\n\n1.7.9.1.5. R.14: ??? array vs. pointer parameter\nReason\nAn array decays to a pointer, thereby losing its size, opening the opportunity for range errors.\nExample\n??? what do we recommend: f(int*[]) or f(int**) ???\nAlternative: Use span to preserve size information.\nEnforcement\nFlag [] parameters.\n1.7.9.1.6. R.15: Always overload matched allocation/deallocation pairs\nReason\nOtherwise you get mismatched operations and chaos.\nExample\nclass X {\n    // ...\n    void* operator new(size_t s);\n    void operator delete(void*);\n    // ...\n};\nNote\nIf you want memory that cannot be deallocated, =delete the deallocation operation.\nDon't leave it undeclared.\nEnforcement\nFlag incomplete pairs.\n1.7.9.2. R.smart: Smart pointers\n1.7.9.2.1. R.20: Use unique_ptr or shared_ptr to represent ownership\nReason\nThey can prevent resource leaks.\nExample\nConsider:\nvoid f()\n{\n    X x;\n    X* p1 { new X };              // see also ???\n    unique_ptr p2 { new X };   // unique ownership; see also ???\n    shared_ptr p3 { new X };   // shared ownership; see also ???\n    auto p4 = make_unique();   // unique_ownership, preferable to the explicit use \"new\"\n    auto p5 = make_shared();   // shared ownership, preferable to the explicit use \"new\"\n}\nThis will leak the object used to initialize p1 (only).\nEnforcement\n(Simple) Warn if the return value of new or a function call with return value of pointer type is assigned to a raw pointer.\n1.7.9.2.2. R.21: Prefer unique_ptr over shared_ptr unless you need to share ownership\nReason\nA unique_ptr is conceptually simpler and more predictable (you know when destruction happens) and faster (you don't implicitly maintain a use count).\nExample, bad\nThis needlessly adds and maintains a reference count.\nvoid f()\n{\n    shared_ptr base = make_shared();\n    // use base locally, without copying it -- refcount never exceeds 1\n} // destroy base\nExample\nThis is more efficient:\nvoid f()\n{\n    unique_ptr base = make_unique();\n    // use base locally\n} // destroy base\nEnforcement\n(Simple) Warn if a function uses a Shared_ptr with an object allocated within the function, but never returns the Shared_ptr or passes it to a function requiring a Shared_ptr&. Suggest using unique_ptr instead.\n1.7.9.2.3. R.22: Use make_shared() to make shared_ptrs\nReason\nIf you first make an object and then give it to a shared_ptr constructor, you (most likely) do one more allocation (and later deallocation) than if you use make_shared() because the reference counts must be allocated separately from the object.\nExample\nConsider:\nshared_ptr p1 { new X{2} }; // bad\nauto p = make_shared(2);    // good\nThe make_shared() version mentions X only once, so it is usually shorter (as well as faster) than the version with the explicit new.\nEnforcement\n(Simple) Warn if a shared_ptr is constructed from the result of new rather than make_shared.\n1.7.9.2.4. R.23: Use make_unique() to make unique_ptrs\nReason\nFor convenience and consistency with shared_ptr.\nNote\nmake_unique() is C++14, but widely available (as well as simple to write).\nEnforcement\n(Simple) Warn if a unique_ptr is constructed from the result of new rather than make_unique.\n1.7.9.2.5. R.24: Use std::weak_ptr to break cycles of shared_ptrs\nReason\n shared_ptr's rely on use counting and the use count for a cyclic structure never goes to zero, so we need a mechanism to\nbe able to destroy a cyclic structure.\nExample\n???\nNote\n ??? (HS: A lot of people say \"to break cycles\", while I think \"temporary shared ownership\" is more to the point.)\n???(BS: breaking cycles is what you must do; temporarily sharing ownership is how you do it.\nYou could \"temporarily share ownership\" simply by using another shared_ptr.)\nEnforcement\n??? probably impossible. If we could statically detect cycles, we wouldn't need weak_ptr\n1.7.9.2.6. R.30: Take smart pointers as parameters only to explicitly express lifetime semantics\nReason\nAccepting a smart pointer to a widget is wrong if the function just needs the widget itself.\nIt should be able to accept any widget object, not just ones whose lifetimes are managed by a particular kind of smart pointer.\nA function that does not manipulate lifetime should take raw pointers or references instead.\nExample, bad\n// callee\nvoid f(shared_ptr& w)\n{\n    // ...\n    use(*w); // only use of w -- the lifetime is not used at all\n    // ...\n};\n\n// caller\nshared_ptr my_widget = /* ... */;\nf(my_widget);\n\nwidget stack_widget;\nf(stack_widget); // error\nExample, good\n// callee\nvoid f(widget& w)\n{\n    // ...\n    use(w);\n    // ...\n};\n\n// caller\nshared_ptr my_widget = /* ... */;\nf(*my_widget);\n\nwidget stack_widget;\nf(stack_widget); // ok -- now this works\nEnforcement\n\n(Simple) Warn if a function takes a parameter of a smart pointer type (that overloads operator-> or operator*) that is copyable but the function only calls any of: operator*, operator-> or get().\nSuggest using a T* or T& instead.\nFlag a parameter of a smart pointer type (a type that overloads operator-> or operator*) that is copyable/movable but never copied/moved from in the function body, and that is never modified, and that is not passed along to another function that could do so. That means the ownership semantics are not used.\nSuggest using a T* or T& instead.\n\n1.7.9.2.7. R.31: If you have non-std smart pointers, follow the basic pattern from std\nReason\nThe rules in the following section also work for other kinds of third-party and custom smart pointers and are very useful for diagnosing common smart pointer errors that cause performance and correctness problems.\nYou want the rules to work on all the smart pointers you use.\nAny type (including primary template or specialization) that overloads unary * and -> is considered a smart pointer:\n\nIf it is copyable, it is recognized as a reference-counted shared_ptr.\nIf it is not copyable, it is recognized as a unique unique_ptr.\n\nExample\n// use Boost's intrusive_ptr\n#include \nvoid f(boost::intrusive_ptr p)  // error under rule 'sharedptrparam'\n{\n    p->foo();\n}\n\n// use Microsoft's CComPtr\n#include \nvoid f(CComPtr p)               // error under rule 'sharedptrparam'\n{\n    p->foo();\n}\nBoth cases are an error under the sharedptrparam guideline:\np is a Shared_ptr, but nothing about its sharedness is used here and passing it by value is a silent pessimization;\nthese functions should accept a smart pointer only if they need to participate in the widget's lifetime management. Otherwise they should accept a widget*, if it can be nullptr. Otherwise, and ideally, the function should accept a widget&.\nThese smart pointers match the Shared_ptr concept, so these guideline enforcement rules work on them out of the box and expose this common pessimization.\n1.7.9.2.8. R.32: Take a unique_ptr parameter to express that a function assumes ownership of a widget\nReason\nUsing unique_ptr in this way both documents and enforces the function call's ownership transfer.\nExample\nvoid sink(unique_ptr); // consumes the widget\n\nvoid uses(widget*);            // just uses the widget\nExample, bad\nvoid thinko(const unique_ptr&); // usually not what you want\nEnforcement\n\n(Simple) Warn if a function takes a Unique_ptr parameter by lvalue reference and does not either assign to it or call reset() on it on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Unique_ptr parameter by reference to const. Suggest taking a const T* or const T& instead.\n\n1.7.9.2.9. R.33: Take a unique_ptr& parameter to express that a function reseats thewidget\nReason\nUsing unique_ptr in this way both documents and enforces the function call's reseating semantics.\nNote\n\"reseat\" means \"making a pointer or a smart pointer refer to a different object.\"\nExample\nvoid reseat(unique_ptr&); // \"will\" or \"might\" reseat pointer\nExample, bad\nvoid thinko(const unique_ptr&); // usually not what you want\nEnforcement\n\n(Simple) Warn if a function takes a Unique_ptr parameter by lvalue reference and does not either assign to it or call reset() on it on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Unique_ptr parameter by reference to const. Suggest taking a const T* or const T& instead.\n\n1.7.9.2.10. R.34: Take a shared_ptr parameter to express that a function is part owner\nReason\nThis makes the function's ownership sharing explicit.\nExample, good\nvoid share(shared_ptr);            // share -- \"will\" retain refcount\n\nvoid may_share(const shared_ptr&); // \"might\" retain refcount\n\nvoid reseat(shared_ptr&);          // \"might\" reseat ptr\nEnforcement\n\n(Simple) Warn if a function takes a Shared_ptr parameter by lvalue reference and does not either assign to it or call reset() on it on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by value or by reference to const and does not copy or move it to another Shared_ptr on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by rvalue reference. Suggesting taking it by value instead.\n\n1.7.9.2.11. R.35: Take a shared_ptr& parameter to express that a function might reseat the shared pointer\nReason\nThis makes the function's reseating explicit.\nNote\n\"reseat\" means \"making a reference or a smart pointer refer to a different object.\"\nExample, good\nvoid share(shared_ptr);            // share -- \"will\" retain refcount\n\nvoid reseat(shared_ptr&);          // \"might\" reseat ptr\n\nvoid may_share(const shared_ptr&); // \"might\" retain refcount\nEnforcement\n\n(Simple) Warn if a function takes a Shared_ptr parameter by lvalue reference and does not either assign to it or call reset() on it on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by value or by reference to const and does not copy or move it to another Shared_ptr on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by rvalue reference. Suggesting taking it by value instead.\n\n1.7.9.2.12. R.36: Take a const shared_ptr& parameter to express that it might retain a reference count to the object ???\nReason\nThis makes the function's ??? explicit.\nExample, good\nvoid share(shared_ptr);            // share -- \"will\" retain refcount\n\nvoid reseat(shared_ptr&);          // \"might\" reseat ptr\n\nvoid may_share(const shared_ptr&); // \"might\" retain refcount\nEnforcement\n\n(Simple) Warn if a function takes a Shared_ptr parameter by lvalue reference and does not either assign to it or call reset() on it on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by value or by reference to const and does not copy or move it to another Shared_ptr on at least one code path. Suggest taking a T* or T& instead.\n(Simple) ((Foundation)) Warn if a function takes a Shared_ptr by rvalue reference. Suggesting taking it by value instead.\n\n1.7.9.2.13. R.37: Do not pass a pointer or reference obtained from an aliased smart pointer\nReason\nViolating this rule is the number one cause of losing reference counts and finding yourself with a dangling pointer.\nFunctions should prefer to pass raw pointers and references down call chains.\nAt the top of the call tree where you obtain the raw pointer or reference from a smart pointer that keeps the object alive.\nYou need to be sure that the smart pointer cannot inadvertently be reset or reassigned from within the call tree below.\nNote\nTo do this, sometimes you need to take a local copy of a smart pointer, which firmly keeps the object alive for the duration of the function and the call tree.\nExample\nConsider this code:\n// global (static or heap), or aliased local ...\nshared_ptr g_p = ...;\n\nvoid f(widget& w)\n{\n    g();\n    use(w);  // A\n}\n\nvoid g()\n{\n    g_p = ...; // oops, if this was the last shared_ptr to that widget, destroys the widget\n}\nThe following should not pass code review:\nvoid my_code()\n{\n    // BAD: passing pointer or reference obtained from a nonlocal smart pointer\n    //      that could be inadvertently reset somewhere inside f or it callees\n    f(*g_p);\n\n    // BAD: same reason, just passing it as a \"this\" pointer\n     g_p->func();\n}\nThe fix is simple -- take a local copy of the pointer to \"keep a ref count\" for your call tree:\nvoid my_code()\n{\n    // cheap: 1 increment covers this entire function and all the call trees below us\n    auto pin = g_p;\n\n    // GOOD: passing pointer or reference obtained from a local unaliased smart pointer\n    f(*pin);\n\n    // GOOD: same reason\n    pin->func();\n}\nEnforcement\n\n(Simple) Warn if a pointer or reference obtained from a smart pointer variable (Unique_ptr or Shared_ptr) that is nonlocal, or that is local but potentially aliased, is used in a function call. If the smart pointer is a Shared_ptr then suggest taking a local copy of the smart pointer and obtain a pointer or reference from that instead.\n\n1.7.10. ES: Expressions and Statements\nExpressions and statements are the lowest and most direct way of expressing actions and computation. Declarations in local scopes are statements.\nFor naming, commenting, and indentation rules, see NL: Naming and layout.\nGeneral rules:\n\nES.1: Prefer the standard library to other libraries and to \"handcrafted code\"\nES.2: Prefer suitable abstractions to direct use of language features\n\nDeclaration rules:\n\nES.5: Keep scopes small\nES.6: Declare names in for-statement initializers and conditions to limit scope\nES.7: Keep common and local names short, and keep uncommon and nonlocal names longer\nES.8: Avoid similar-looking names\nES.9: Avoid ALL_CAPS names\nES.10: Declare one name (only) per declaration\nES.11: Use auto to avoid redundant repetition of type names\nES.12: Do not reuse names in nested scopes\nES.20: Always initialize an object\nES.21: Don't introduce a variable (or constant) before you need to use it\nES.22: Don't declare a variable until you have a value to initialize it with\nES.23: Prefer the {}-initializer syntax\nES.24: Use a unique_ptr to hold pointers\nES.25: Declare an object const or constexpr unless you want to modify its value later on\nES.26: Don't use a variable for two unrelated purposes\nES.27: Use std::array or stack_array for arrays on the stack\nES.28: Use lambdas for complex initialization, especially of const variables\nES.30: Don't use macros for program text manipulation\nES.31: Don't use macros for constants or \"functions\"\nES.32: Use ALL_CAPS for all macro names\nES.33: If you must use macros, give them unique names\nES.34: Don't define a (C-style) variadic function\n\nExpression rules:\n\nES.40: Avoid complicated expressions\nES.41: If in doubt about operator precedence, parenthesize\nES.42: Keep use of pointers simple and straightforward\nES.43: Avoid expressions with undefined order of evaluation\nES.44: Don't depend on order of evaluation of function arguments\nES.45: Avoid \"magic constants\"; use symbolic constants\nES.46: Avoid narrowing conversions\nES.47: Use nullptr rather than 0 or NULL\nES.48: Avoid casts\nES.49: If you must use a cast, use a named cast\nES.50: Don't cast away const\nES.55: Avoid the need for range checking\nES.56: Write std::move() only when you need to explicitly move an object to another scope\nES.60: Avoid new and delete outside resource management functions\nES.61: Delete arrays using delete[] and non-arrays using delete\nES.62: Don't compare pointers into different arrays\nES.63: Don't slice\nES.64: Use the T{e}notation for construction\nES.65: Don't dereference an invalid pointer\n\nStatement rules:\n\nES.70: Prefer a switch-statement to an if-statement when there is a choice\nES.71: Prefer a range-for-statement to a for-statement when there is a choice\nES.72: Prefer a for-statement to a while-statement when there is an obvious loop variable\nES.73: Prefer a while-statement to a for-statement when there is no obvious loop variable\nES.74: Prefer to declare a loop variable in the initializer part of a for-statement\nES.75: Avoid do-statements\nES.76: Avoid goto\nES.77: Minimize the use of break and continue in loops\nES.78: Always end a non-empty case with a break\nES.79: Use default to handle common cases (only)\nES.84: Don't (try to) declare a local variable with no name\nES.85: Make empty statements visible\nES.86: Avoid modifying loop control variables inside the body of raw for-loops\nES.87: Don't add redundant == or != to conditions\n\nArithmetic rules:\n\nES.100: Don't mix signed and unsigned arithmetic\nES.101: Use unsigned types for bit manipulation\nES.102: Use signed types for arithmetic\nES.103: Don't overflow\nES.104: Don't underflow\nES.105: Don't divide by zero\nES.106: Don't try to avoid negative values by using unsigned\nES.107: Don't use unsigned for subscripts\n\nES.1: Prefer the standard library to other libraries and to \"handcrafted code\"\nReason\nCode using a library can be much easier to write than code working directly with language features, much shorter, tend to be of a higher level of abstraction, and the library code is presumably already tested.\nThe ISO C++ standard library is among the most widely known and best tested libraries.\nIt is available as part of all C++ Implementations.\nExample\nauto sum = accumulate(begin(a), end(a), 0.0);   // good\na range version of accumulate would be even better:\nauto sum = accumulate(v, 0.0); // better\nbut don't hand-code a well-known algorithm:\nint max = v.size();   // bad: verbose, purpose unstated\ndouble sum = 0.0;\nfor (int i = 0; i Exception\nLarge parts of the standard library rely on dynamic allocation (free store). These parts, notably the containers but not the algorithms, are unsuitable for some hard-real-time and embedded applications. In such cases, consider providing/using similar facilities, e.g.,  a standard-library-style container implemented using a pool allocator.\nEnforcement\nNot easy. ??? Look for messy loops, nested loops, long functions, absence of function calls, lack of use of non-built-in types. Cyclomatic complexity?\nES.2: Prefer suitable abstractions to direct use of language features\nReason\nA \"suitable abstraction\" (e.g., library or class) is closer to the application concepts than the bare language, leads to shorter and clearer code, and is likely to be better tested.\nExample\nvector read1(istream& is)   // good\n{\n    vector res;\n    for (string s; is >> s;)\n        res.push_back(s);\n    return res;\n}\nThe more traditional and lower-level near-equivalent is longer, messier, harder to get right, and most likely slower:\nchar** read2(istream& is, int maxelem, int maxstring, int* nread)   // bad: verbose and incomplete\n{\n    auto res = new char*[maxelem];\n    int elemcount = 0;\n    while (is && elemcount Once the checking for overflow and error handling has been added that code gets quite messy, and there is the problem remembering to delete the returned pointer and the C-style strings that array contains.\nEnforcement\nNot easy. ??? Look for messy loops, nested loops, long functions, absence of function calls, lack of use of non-built-in types. Cyclomatic complexity?\n1.7.10.1. ES.dcl: Declarations\nA declaration is a statement. A declaration introduces a name into a scope and may cause the construction of a named object.\n1.7.10.1.1. ES.5: Keep scopes small\nReason\nReadability. Minimize resource retention. Avoid accidental misuse of value.\nAlternative formulation: Don't declare a name in an unnecessarily large scope.\nExample\nvoid use()\n{\n    int i;    // bad: i is needlessly accessible after loop\n    for (i = 0; i (ps)) {  // good: pc is local to if-statement\n        // ... deal with Circle ...\n    }\n    else {\n        // ... handle error ...\n    }\n}\nExample, bad\nvoid use(const string& name)\n{\n    string fn = name + \".txt\";\n    ifstream is {fn};\n    Record r;\n    is >> r;\n    // ... 200 lines of code without intended use of fn or is ...\n}\nThis function is by most measure too long anyway, but the point is that the resources used by fn and the file handle held by is\nare retained for much longer than needed and that unanticipated use of is and fn could happen later in the function.\nIn this case, it might be a good idea to factor out the read:\nRecord load_record(const string& name)\n{\n    string fn = name + \".txt\";\n    ifstream is {fn};\n    Record r;\n    is >> r;\n    return r;\n}\n\nvoid use(const string& name)\n{\n    Record r = load_record(name);\n    // ... 200 lines of code ...\n}\nEnforcement\n\nFlag loop variable declared outside a loop and not used after the loop\nFlag when expensive resources, such as file handles and locks are not used for N-lines (for some suitable N)\n\n1.7.10.1.2. ES.6: Declare names in for-statement initializers and conditions to limit scope\nReason\nReadability. Minimize resource retention.\nExample\nvoid use()\n{\n    for (string s; cin >> s;)\n        v.push_back(s);\n\n    for (int i = 0; i (ps)) {   // good: pc is local to if-statement\n        // ... deal with Circle ...\n    }\n    else {\n        // ... handle error ...\n    }\n}\nEnforcement\n\nFlag loop variables declared before the loop and not used after the loop\n(hard) Flag loop variables declared before the loop and used after the loop for an unrelated purpose.\n\nC++17 example\nNote: C++17 also adds if and switch initializer statements. These require C++17 support.\nmap mymap;\n\nif (auto result = mymap.insert(value); result.second) {\n    // insert succeeded, and result is valid for this block\n    use(result.first);  // ok\n    // ...\n} // result is destroyed here\nC++17 enforcement (if using a C++17 compiler)\n\nFlag selection/loop variables declared before the body and not used after the body\n(hard) Flag selection/loop variables declared before the body and used after the body for an unrelated purpose.\n\n1.7.10.1.3. ES.7: Keep common and local names short, and keep uncommon and nonlocal names longer\nReason\nReadability. Lowering the chance of clashes between unrelated non-local names.\nExample\nConventional short, local names increase readability:\ntemplate    // good\nvoid print(ostream& os, const vector& v)\n{\n    for (int i = 0; i An index is conventionally called i and there is no hint about the meaning of the vector in this generic function, so v is as good name as any. Compare\ntemplate   // bad: verbose, hard to read\nvoid print(ostream& target_stream, const vector& current_vector)\n{\n    for (int current_element_index = 0;\n            current_element_index Yes, it is a caricature, but we have seen worse.\nExample\nUnconventional and short non-local names obscure code:\nvoid use1(const string& s)\n{\n    // ...\n    tt(s);   // bad: what is tt()?\n    // ...\n}\nBetter, give non-local entities readable names:\nvoid use1(const string& s)\n{\n    // ...\n    trim_tail(s);   // better\n    // ...\n}\nHere, there is a chance that the reader knows what trim_tail means and that the reader can remember it after looking it up.\nExample, bad\nArgument names of large functions are de facto non-local and should be meaningful:\nvoid complicated_algorithm(vector& vr, const vector& vi, map& out)\n// read from events in vr (marking used Records) for the indices in\n// vi placing (name, index) pairs into out\n{\n    // ... 500 lines of code using vr, vi, and out ...\n}\nWe recommend keeping functions short, but that rule isn't universally adhered to and naming should reflect that.\nEnforcement\nCheck length of local and non-local names. Also take function length into account.\n1.7.10.1.4. ES.8: Avoid similar-looking names\nReason\nCode clarity and readability. Too-similar names slow down comprehension and increase the likelihood of error.\nExample; bad\nif (readable(i1 + l1 + ol + o1 + o0 + ol + o1 + I0 + l0)) surprise();\nExample; bad\nDo not declare a non-type with the same name as a type in the same scope. This removes the need to disambiguate with a keyword such as struct or enum. It also removes a source of errors, as struct X can implicitly declare X if lookup fails.\nstruct foo { int n; };\nstruct foo foo();       // BAD, foo is a type already in scope\nstruct foo x = foo();   // requires disambiguation\nException\nAntique header files might declare non-types and types with the same name in the same scope.\nEnforcement\n\nCheck names against a list of known confusing letter and digit combinations.\nFlag a declaration of a variable, function, or enumerator that hides a class or enumeration declared in the same scope.\n\n1.7.10.1.5. ES.9: Avoid ALL_CAPS names\nReason\nSuch names are commonly used for macros. Thus, ALL_CAPS name are vulnerable to unintended macro substitution.\nExample\n// somewhere in some header:\n#define NE !=\n\n// somewhere else in some other header:\nenum Coord { N, NE, NW, S, SE, SW, E, W };\n\n// somewhere third in some poor programmer's .cpp:\nswitch (direction) {\ncase N:\n    // ...\ncase NE:\n    // ...\n// ...\n}\nNote\nDo not use ALL_CAPS for constants just because constants used to be macros.\nEnforcement\nFlag all uses of ALL CAPS. For older code, accept ALL CAPS for macro names and flag all non-ALL-CAPS macro names.\n1.7.10.1.6. ES.10: Declare one name (only) per declaration\nReason\nOne-declaration-per line increases readability and avoids mistakes related to\nthe C/C++ grammar. It also leaves room for a more descriptive end-of-line\ncomment.\nExample, bad\nchar *p, c, a[7], *pp[7], **aa[10];   // yuck!\nException\nA function declaration can contain several function argument declarations.\nException\nA structured binding (C++17) is specifically designed to introduce several variables:\nauto [iter, inserted] = m.insert_or_assign(k, val);\nif (inserted) { /* new entry was inserted */ }\nExample\ntemplate \nbool any_of(InputIterator first, InputIterator last, Predicate pred);\nor better using concepts:\nbool any_of(InputIterator first, InputIterator last, Predicate pred);\nExample\ndouble scalbn(double x, int n);   // OK: x * pow(FLT_RADIX, n); FLT_RADIX is usually 2\nor:\ndouble scalbn(    // better: x * pow(FLT_RADIX, n); FLT_RADIX is usually 2\n    double x,     // base value\n    int n         // exponent\n);\nor:\n// better: base * pow(FLT_RADIX, exponent); FLT_RADIX is usually 2\ndouble scalbn(double base, int exponent);\nExample\nint a = 7, b = 9, c, d = 10, e = 3;\nIn a long list of declarators is is easy to overlook an uninitialized variable.\nEnforcement\nFlag variable and constant declarations with multiple declarators (e.g., int* p, q;)\n1.7.10.1.7. ES.11: Use auto to avoid redundant repetition of type names\nReason\n\nSimple repetition is tedious and error-prone.\nWhen you use auto, the name of the declared entity is in a fixed position in the declaration, increasing readability.\nIn a template function declaration the return type can be a member type.\n\nExample\nConsider:\nauto p = v.begin();   // vector::iterator\nauto s = v.size();\nauto h = t.future();\nauto q = make_unique(s);\nauto f = [](int x){ return x + 10; };\nIn each case, we save writing a longish, hard-to-remember type that the compiler already knows but a programmer could get wrong.\nExample\ntemplate\nauto Container::first() -> Iterator;   // Container::Iterator\nException\nAvoid auto for initializer lists and in cases where you know exactly which type you want and where an initializer might require conversion.\nExample\nauto lst = { 1, 2, 3 };   // lst is an initializer list\nauto x{1};   // x is an int (after correction of the C++14 standard; initializer_list in C++11)\nNote\nWhen concepts become available, we can (and should) be more specific about the type we are deducing:\n// ...\nForwardIterator p = algo(x, y, z);\nExample (C++17)\nauto [ quotient, remainder ] = div(123456, 73);   // break out the members of the div_t result\nEnforcement\nFlag redundant repetition of type names in a declaration.\n1.7.10.1.8. ES.12: Do not reuse names in nested scopes\nReason\nIt is easy to get confused about which variable is used.\nCan cause maintenance problems.\nExample, bad\nint d = 0;\n// ...\nif (cond) {\n    // ...\n    d = 9;\n    // ...\n}\nelse {\n    // ...\n    int d = 7;\n    // ...\n    d = value_to_be_returned;\n    // ...\n}\n\nreturn d;\nIf this is a large if-statement, it is easy to overlook that a new d has been introduced in the inner scope.\nThis is a known source of bugs.\nSometimes such reuse of a name in an inner scope is called \"shadowing\".\nNote\nShadowing is primarily a problem when functions are too large and too complex.\nExample\nShadowing of function arguments in the outermost block is disallowed by the language:\nvoid f(int x)\n{\n    int x = 4;  // error: reuse of function argument name\n\n    if (x) {\n        int x = 7;  // allowed, but bad\n        // ...\n    }\n}\nExample, bad\nReuse of a member name as a local variable can also be a problem:\nstruct S {\n    int m;\n    void f(int x);\n};\n\nvoid S::f(int x)\n{\n    m = 7;    // assign to member\n    if (x) {\n        int m = 9;\n        // ...\n        m = 99; // assign to member\n        // ...\n    }\n}\nException\nWe often reuse function names from a base class in a derived class:\nstruct B {\n    void f(int);\n};\n\nstruct D : B {\n    void f(double);\n    using B::f;\n};\nThis is error-prone.\nFor example, had we forgotten the using declaration, a call d.f(1) would not have found the int version of f.\n??? Do we need a specific rule about shadowing/hiding in class hierarchies?\nEnforcement\n\nFlag reuse of a name in nested local scopes\nFlag reuse of a member name as a local variable in a member function\nFlag reuse of a global name as a local variable or a member name\nFlag reuse of a base class member name in a derived class (except for function names)\n\n1.7.10.1.9. ES.20: Always initialize an object\nReason\nAvoid used-before-set errors and their associated undefined behavior.\nAvoid problems with comprehension of complex initialization.\nSimplify refactoring.\nExample\nvoid use(int arg)\n{\n    int i;   // bad: uninitialized variable\n    // ...\n    i = 7;   // initialize i\n}\nNo, i = 7 does not initialize i; it assigns to it. Also, i can be read in the ... part. Better:\nvoid use(int arg)   // OK\n{\n    int i = 7;   // OK: initialized\n    string s;    // OK: default initialized\n    // ...\n}\nNote\nThe always initialize rule is deliberately stronger than the an object must be set before used language rule.\nThe latter, more relaxed rule, catches the technical bugs, but:\n\nIt leads to less readable code\nIt encourages people to declare names in greater than necessary scopes\nIt leads to harder to read code\nIt leads to logic bugs by encouraging complex code\nIt hampers refactoring\n\nThe always initialize rule is a style rule aimed to improve maintainability as well as a rule protecting against used-before-set errors.\nExample\nHere is an example that is often considered to demonstrate the need for a more relaxed rule for initialization\nwidget i;    // \"widget\" a type that's expensive to initialize, possibly a large POD\nwidget j;\n\nif (cond) {  // bad: i and j are initialized \"late\"\n    i = f1();\n    j = f2();\n}\nelse {\n    i = f3();\n    j = f4();\n}\nThis cannot trivially be rewritten to initialize i and j with initializers.\nNote that for types with a default constructor, attempting to postpone initialization simply leads to a default initialization followed by an assignment.\nA popular reason for such examples is \"efficiency\", but a compiler that can detect whether we made a used-before-set error can also eliminate any redundant double initialization.\nAt the cost of repeating cond we could write:\nwidget i = (cond) ? f1() : f3();\nwidget j = (cond) ? f2() : f4();\nAssuming that there is a logical connection between i and j, that connection should probably be expressed in code:\npair make_related_widgets(bool x)\n{\n    return (x) ? {f1(), f2()} : {f3(), f4() };\n}\n\nauto init = make_related_widgets(cond);\nwidget i = init.first;\nwidget j = init.second;\nObviously, what we really would like is a construct that initialized n variables from a tuple. For example:\nauto [i, j] = make_related_widgets(cond);    // C++17, not C++14\nToday, we might approximate that using tie():\nwidget i;       // bad: uninitialized variable\nwidget j;\ntie(i, j) = make_related_widgets(cond);\nThis may be seen as an example of the immediately initialize from input exception below.\nCreating optimal and equivalent code from all of these examples should be well within the capabilities of modern C++ compilers\n(but don't make performance claims without measuring; a compiler may very well not generate optimal code for every example and\nthere may be language rules preventing some optimization that you would have liked in a particular case).\nExample\nThis rule covers member variables.\nclass X {\npublic:\n    X(int i, int ci) : m2{i}, cm2{ci} {}\n    // ...\n\nprivate:\n    int m1 = 7;\n    int m2;\n    int m3;\n\n    const int cm1 = 7;\n    const int cm2;\n    const int cm3;\n};\nThe compiler will flag the uninitialized cm3 because it is a const, but it will not catch the lack of initialization of m3.\nUsually, a rare spurious member initialization is worth the absence of errors from lack of initialization and often an optimizer\ncan eliminate a redundant initialization (e.g., an initialization that occurs immediately before an assignment).\nNote\nComplex initialization has been popular with clever programmers for decades.\nIt has also been a major source of errors and complexity.\nMany such errors are introduced during maintenance years after the initial implementation.\nException\nIf you are declaring an object that is just about to be initialized from input, initializing it would cause a double initialization.\nHowever, beware that this may leave uninitialized data beyond the input -- and that has been a fertile source of errors and security breaches:\nconstexpr int max = 8 * 1024;\nint buf[max];         // OK, but suspicious: uninitialized\nf.read(buf, max);\nThe cost of initializing that array could be significant in some situations.\nHowever, such examples do tend to leave uninitialized variables accessible, so they should be treated with suspicion.\nconstexpr int max = 8 * 1024;\nint buf[max] = {};   // zero all elements; better in some situations\nf.read(buf, max);\nWhen feasible use a library function that is known not to overflow. For example:\nstring s;   // s is default initialized to \"\"\ncin >> s;   // s expands to hold the string\nDon't consider simple variables that are targets for input operations exceptions to this rule:\nint i;   // bad\n// ...\ncin >> i;\nIn the not uncommon case where the input target and the input operation get separated (as they should not) the possibility of used-before-set opens up.\nint i2 = 0;   // better\n// ...\ncin >> i;\nA good optimizer should know about input operations and eliminate the redundant operation.\nExample\nUsing an uninitialized or sentinel value is a symptom of a problem and not a\nsolution:\nwidget i = uninit;  // bad\nwidget j = uninit;\n\n// ...\nuse(i);         // possibly used before set\n// ...\n\nif (cond) {     // bad: i and j are initialized \"late\"\n    i = f1();\n    j = f2();\n}\nelse {\n    i = f3();\n    j = f4();\n}\nNow the compiler cannot even simply detect a used-before-set. Further, we've introduced complexity in the state space for widget: which operations are valid on an uninit widget and which are not?\nNote\nSometimes, a lambda can be used as an initializer to avoid an uninitialized variable:\nerror_code ec;\nValue v = [&] {\n    auto p = get_value();   // get_value() returns a pair\n    ec = p.first;\n    return p.second;\n}();\nor maybe:\nValue v = [] {\n    auto p = get_value();   // get_value() returns a pair\n    if (p.first) throw Bad_value{p.first};\n    return p.second;\n}();\nSee also: ES.28\nEnforcement\n\nFlag every uninitialized variable.\nDon't flag variables of user-defined types with default constructors.\nCheck that an uninitialized buffer is written into immediately after declaration.\nPassing an uninitialized variable as a reference to non-const argument can be assumed to be a write into the variable.\n\n1.7.10.1.10. ES.21: Don't introduce a variable (or constant) before you need to use it\nReason\nReadability. To limit the scope in which the variable can be used.\nExample\nint x = 7;\n// ... no use of x here ...\n++x;\nEnforcement\nFlag declarations that are distant from their first use.\n1.7.10.1.11. ES.22: Don't declare a variable until you have a value to initialize it with\nReason\nReadability. Limit the scope in which a variable can be used. Don't risk used-before-set. Initialization is often more efficient than assignment.\nExample, bad\nstring s;\n// ... no use of s here ...\ns = \"what a waste\";\nExample, bad\nSomeLargeType var;   // ugly CaMeLcAsEvArIaBlE\n\nif (cond)   // some non-trivial condition\n    Set(&var);\nelse if (cond2 || !cond3) {\n    var = Set2(3.14);\n}\nelse {\n    var = 0;\n    for (auto& e : something)\n        var += e;\n}\n\n// use var; that this isn't done too early can be enforced statically with only control flow\nThis would be fine if there was a default initialization for SomeLargeType that wasn't too expensive.\nOtherwise, a programmer might very well wonder if every possible path through the maze of conditions has been covered.\nIf not, we have a \"use before set\" bug. This is a maintenance trap.\nFor initializers of moderate complexity, including for const variables, consider using a lambda to express the initializer; see ES.28.\nEnforcement\n\nFlag declarations with default initialization that are assigned to before they are first read.\nFlag any complicated computation after an uninitialized variable and before its use.\n\n1.7.10.1.12. ES.23: Prefer the {} initializer syntax\nReason\nThe rules for {} initialization are simpler, more general, less ambiguous, and safer than for other forms of initialization.\nExample\nint x {f(99)};\nvector v = {1, 2, 3, 4, 5, 6};\nException\nFor containers, there is a tradition for using {...} for a list of elements and (...) for sizes:\nvector v1(10);    // vector of 10 elements with the default value 0\nvector v2 {10};   // vector of 1 element with the value 10\nNote\n{}-initializers do not allow narrowing conversions.\nExample\nint x {7.9};   // error: narrowing\nint y = 7.9;   // OK: y becomes 7. Hope for a compiler warning\nNote\n{} initialization can be used for all initialization; other forms of initialization can't:\nauto p = new vector {1, 2, 3, 4, 5};   // initialized vector\nD::D(int a, int b) :m{a, b} {   // member initializer (e.g., m might be a pair)\n    // ...\n};\nX var {};   // initialize var to be empty\nstruct S {\n    int m {7};   // default initializer for a member\n    // ...\n};\nNote\nInitialization of a variable declared using auto with a single value, e.g., {v}, had surprising results until C++17.\nThe C++17 rules are somewhat less surprising:\nauto x1 {7};        // x1 is an int with the value 7\nauto x2 = {7};  // x2 is an initializer_list with an element 7\n\nauto x11 {7, 8};    // error: two initializers\nauto x22 = {7, 8};  // x2 is an initializer_list with elements 7 and 8\nSo use ={...} if you really want an initializer_list\nauto fib10 = {1, 1, 2, 3, 5, 8, 13, 21, 34, 55};   // fib10 is a list\nNote\nOld habits die hard, so this rule is hard to apply consistently, especially as there are so many cases where = is innocent.\nExample\ntemplate\nvoid f()\n{\n    T x1(1);    // T initialized with 1\n    T x0();     // bad: function declaration (often a mistake)\n\n    T y1 {1};   // T initialized with 1\n    T y0 {};    // default initialized T\n    // ...\n}\nSee also: Discussion\nEnforcement\nTricky.\n\nDon't flag uses of = for simple initializers.\nLook for = after auto has been seen.\n\n1.7.10.1.13. ES.24: Use a unique_ptr to hold pointers\nReason\nUsing std::unique_ptr is the simplest way to avoid leaks. It is reliable, it\nmakes the type system do much of the work to validate ownership safety, it\nincreases readability, and it has zero or near zero run-time cost.\nExample\nvoid use(bool leak)\n{\n    auto p1 = make_unique(7);   // OK\n    int* p2 = new int{7};            // bad: might leak\n    // ... no assignment to p2 ...\n    if (leak) return;\n    // ... no assignment to p2 ...\n    vector v(7);\n    v.at(7) = 0;                    // exception thrown\n    // ...\n}\nIf leak == true the object pointed to by p2 is leaked and the object pointed to by p1 is not.\nThe same is the case when at() throws.\nEnforcement\nLook for raw pointers that are targets of new, malloc(), or functions that may return such pointers.\n1.7.10.1.14. ES.25: Declare an object const or constexpr unless you want to modify its value later on\nReason\nThat way you can't change the value by mistake. That way may offer the compiler optimization opportunities.\nExample\nvoid f(int n)\n{\n    const int bufmax = 2 * n + 2;  // good: we can't change bufmax by accident\n    int xmax = n;                  // suspicious: is xmax intended to change?\n    // ...\n}\nEnforcement\nLook to see if a variable is actually mutated, and flag it if\nnot. Unfortunately, it may be impossible to detect when a non-const was not\nintended to vary (vs when it merely did not vary).\n1.7.10.1.15. ES.26: Don't use a variable for two unrelated purposes\nReason\nReadability and safety.\nExample, bad\nvoid use()\n{\n    int i;\n    for (i = 0; i Note\nAs an optimization, you may want to reuse a buffer as a scratch pad, but even then prefer to limit the variable's scope as much as possible and be careful not to cause bugs from data left in a recycled buffer as this is a common source of security bugs.\nvoid write_to_file() {\n    std::string buffer;             // to avoid reallocations on every loop iteration\n    for (auto& o : objects)\n    {\n        // First part of the work.\n        generate_first_String(buffer, o);\n        write_to_file(buffer);\n\n        // Second part of the work.\n        generate_second_string(buffer, o);\n        write_to_file(buffer);\n\n        // etc...\n    }\n}\nEnforcement\nFlag recycled variables.\n1.7.10.1.16. ES.27: Use std::array or stack_array for arrays on the stack\nReason\nThey are readable and don't implicitly convert to pointers.\nThey are not confused with non-standard extensions of built-in arrays.\nExample, bad\nconst int n = 7;\nint m = 9;\n\nvoid f()\n{\n    int a1[n];\n    int a2[m];   // error: not ISO C++\n    // ...\n}\nNote\nThe definition of a1 is legal C++ and has always been.\nThere is a lot of such code.\nIt is error-prone, though, especially when the bound is non-local.\nAlso, it is a \"popular\" source of errors (buffer overflow, pointers from array decay, etc.).\nThe definition of a2 is C but not C++ and is considered a security risk\nExample\nconst int n = 7;\nint m = 9;\n\nvoid f()\n{\n    array a1;\n    stack_array a2(m);\n    // ...\n}\nEnforcement\n\nFlag arrays with non-constant bounds (C-style VLAs)\nFlag arrays with non-local constant bounds\n\n1.7.10.1.17. ES.28: Use lambdas for complex initialization, especially of const variables\nReason\nIt nicely encapsulates local initialization, including cleaning up scratch variables needed only for the initialization, without needing to create a needless nonlocal yet nonreusable function. It also works for variables that should be const but only after some initialization work.\nExample, bad\nwidget x;   // should be const, but:\nfor (auto i = 2; i Example, good\nconst widget x = [&]{\n    widget val;                                // assume that widget has a default constructor\n    for (auto i = 2; i Example\nstring var = [&]{\n    if (!in) return \"\";   // default\n    string s;\n    for (char c : in >> c)\n        s += toupper(c);\n    return s;\n}(); // note ()\nIf at all possible, reduce the conditions to a simple set of alternatives (e.g., an enum) and don't mix up selection and initialization.\nEnforcement\nHard. At best a heuristic. Look for an uninitialized variable followed by a loop assigning to it.\n1.7.10.1.18. ES.30: Don't use macros for program text manipulation\nReason\nMacros are a major source of bugs.\nMacros don't obey the usual scope and type rules.\nMacros ensure that the human reader sees something different from what the compiler sees.\nMacros complicate tool building.\nExample, bad\n#define Case break; case   /* BAD */\nThis innocuous-looking macro makes a single lower case c instead of a C into a bad flow-control bug.\nNote\nThis rule does not ban the use of macros for \"configuration control\" use in #ifdefs, etc.\nEnforcement\nScream when you see a macro that isn't just used for source control (e.g., #ifdef)\n1.7.10.1.19. ES.31: Don't use macros for constants or \"functions\"\nReason\nMacros are a major source of bugs.\nMacros don't obey the usual scope and type rules.\nMacros don't obey the usual rules for argument passing.\nMacros ensure that the human reader sees something different from what the compiler sees.\nMacros complicate tool building.\nExample, bad\n#define PI 3.14\n#define SQUARE(a, b) (a * b)\nEven if we hadn't left a well-known bug in SQUARE there are much better behaved alternatives; for example:\nconstexpr double pi = 3.14;\ntemplate T square(T a, T b) { return a * b; }\nEnforcement\nScream when you see a macro that isn't just used for source control (e.g., #ifdef)\n1.7.10.1.20. ES.32: Use ALL_CAPS for all macro names\nReason\nConvention. Readability. Distinguishing macros.\nExample\n#define forever for (;;)   /* very BAD */\n\n#define FOREVER for (;;)   /* Still evil, but at least visible to humans */\nEnforcement\nScream when you see a lower case macro.\n1.7.10.1.21. ES.33: If you must use macros, give them unique names\nReason\nMacros do not obey scope rules.\nExample\n#define MYCHAR        /* BAD, will eventually clash with someone else's MYCHAR*/\n\n#define ZCORP_CHAR    /* Still evil, but less likely to clash */\nNote\nAvoid macros if you can: ES.30, ES.31, and ES.32.\nHowever, there are billions of lines of code littered with macros and a long tradition for using and overusing macros.\nIf you are forced to use macros, use long names and supposedly unique prefixes (e.g., your organization's name) to lower the likelihood of a clash.\nEnforcement\nWarn against short macro names.\n1.7.10.1.22.  ES.34: Don't define a (C-style) variadic function\nReason\nNot type safe.\nRequires messy cast-and-macro-laden code to get working right.\nExample\n#include \n\n// \"severity\" followed by a zero-terminated list of char*s; write the C-style strings to cerr\nvoid error(int severity ...)\n{\n    va_list ap;             // a magic type for holding arguments\n    va_start(ap, severity); // arg startup: \"severity\" is the first argument of error()\n\n    for (;;) {\n        // treat the next var as a char*; no checking: a cast in disguise\n        char* p = va_arg(ap, char*);\n        if (p == nullptr) break;\n        cerr Alternative: Overloading. Templates. Variadic templates.\n#include \n\nvoid error(int severity)\n{\n    std::cerr \nconstexpr void error(int severity, T head, Ts... tail)\n{\n    std::cerr Note\nThis is basically the way printf is implemented.\nEnforcement\n\nFlag definitions of C-style variadic functions.\nFlag #include  and #include \n\n1.7.10.2. ES.stmt: Statements\nStatements control the flow of control (except for function calls and exception throws, which are expressions).\n1.7.10.2.1. ES.70: Prefer a switch-statement to an if-statement when there is a choice\nReason\n\nReadability.\nEfficiency: A switch compares against constants and is usually better optimized than a series of tests in an if-then-else chain.\nA switch enables some heuristic consistency checking. For example, have all values of an enum been covered? If not, is there a default?\n\nExample\nvoid use(int n)\n{\n    switch (n) {   // good\n    case 0:   // ...\n    case 7:   // ...\n    }\n}\nrather than:\nvoid use2(int n)\n{\n    if (n == 0)   // bad: if-then-else chain comparing against a set of constants\n        // ...\n    else if (n == 7)\n        // ...\n}\nEnforcement\nFlag if-then-else chains that check against constants (only).\n1.7.10.2.2. ES.71: Prefer a range-for-statement to a for-statement when there is a choice\nReason\nReadability. Error prevention. Efficiency.\nExample\nfor (int i = 0; i A human or a good static analyzer may determine that there really isn't a side effect on v in f(v, &v[i]) so that the loop can be rewritten.\n\"Messing with the loop variable\" in the body of a loop is typically best avoided.\nNote\nDon't use expensive copies of the loop variable of a range-for loop:\nfor (string s : vs) // ...\nThis will copy each elements of vs into s. Better:\nfor (string& s : vs) // ...\nBetter still, if the loop variable isn't modified or copied:\nfor (const string& s : vs) // ...\nEnforcement\nLook at loops, if a traditional loop just looks at each element of a sequence, and there are no side effects on what it does with the elements, rewrite the loop to a ranged-for loop.\n1.7.10.2.3. ES.72: Prefer a for-statement to a while-statement when there is an obvious loop variable\nReason\nReadability: the complete logic of the loop is visible \"up front\". The scope of the loop variable can be limited.\nExample\nfor (int i = 0; i Example, bad\nint i = 0;\nwhile (i Enforcement\n???\n1.7.10.2.4. ES.73: Prefer a while-statement to a for-statement when there is no obvious loop variable\nReason\nReadability.\nExample\nint events = 0;\nfor (; wait_for_event(); ++events) {  // bad, confusing\n    // ...\n}\nThe \"event loop\" is misleading because the events counter has nothing to do with the loop condition (wait_for_event()).\nBetter\nint events = 0;\nwhile (wait_for_event()) {      // better\n    ++events;\n    // ...\n}\nEnforcement\nFlag actions in for-initializers and for-increments that do not relate to the for-condition.\n1.7.10.2.5. ES.74: Prefer to declare a loop variable in the initializer part of a for-statement\nReason\nLimit the loop variable visibility to the scope of the loop.\nAvoid using the loop variable for other purposes after the loop.\nExample\nfor (int i = 0; i Example, don't\nint j;                            // BAD: j is visible outside the loop\nfor (j = 0; j See also: Don't use a variable for two unrelated purposes\nExample\nfor (string s; cin >> s; ) {\n    cout Enforcement\nWarn when a variable modified inside the for-statement is declared outside the loop and not being used outside the loop.\nDiscussion: Scoping the loop variable to the loop body also helps code optimizers greatly. Recognizing that the induction variable\nis only accessible in the loop body unblocks optimizations such as hoisting, strength reduction, loop-invariant code motion, etc.\n1.7.10.2.6. ES.75: Avoid do-statements\nReason\nReadability, avoidance of errors.\nThe termination condition is at the end (where it can be overlooked) and the condition is not checked the first time through.\nExample\nint x;\ndo {\n    cin >> x;\n    // ...\n} while (x Note\nYes, there are genuine examples where a do-statement is a clear statement of a solution, but also many bugs.\nEnforcement\nFlag do-statements.\n1.7.10.2.7. ES.76: Avoid goto\nReason\nReadability, avoidance of errors. There are better control structures for humans; goto is for machine generated code.\nException\nBreaking out of a nested loop.\nIn that case, always jump forwards.\nfor (int i = 0; i  elem_max) goto finished;\n        // ...\n    }\nfinished:\n// ...\nExample, bad\nThere is a fair amount of use of the C goto-exit idiom:\nvoid f()\n{\n    // ...\n        goto exit;\n    // ...\n        goto exit;\n    // ...\nexit:\n    // ... common cleanup code ...\n}\nThis is an ad-hoc simulation of destructors.\nDeclare your resources with handles with destructors that clean up.\nIf for some reason you cannot handle all cleanup with destructors for the variables used,\nconsider gsl::finally() as a cleaner and more reliable alternative to goto exit\nEnforcement\n\nFlag goto. Better still flag all gotos that do not jump from a nested loop to the statement immediately after a nest of loops.\n\n1.7.10.2.8. ES.77: Minimize the use of break and continue in loops\nReason\n In a non-trivial loop body, it is easy to overlook a break or a continue.\n A break in a loop has a dramatically different meaning than a break in a switch-statement\n (and you can have switch-statement in a loop and a loop in a switch-case).\nExample\n???\nAlternative\nOften, a loop that requires a break is a good candidate for a function (algorithm), in which case the break becomes a return.\n???\nOften. a loop that uses continue can equivalently and as clearly be expressed by an if-statement.\n???\nNote\nIf you really need to break out a loop, a break is typically better than alternatives such as modifying the loop variable or a goto:\nEnforcement\n???\n1.7.10.2.9. ES.78: Always end a non-empty case with a break\nReason\n Accidentally leaving out a break is a fairly common bug.\n A deliberate fallthrough is a maintenance hazard.\nExample\nswitch (eventType) {\ncase Information:\n    update_status_bar();\n    break;\ncase Warning:\n    write_event_log();\ncase Error:\n    display_error_window(); // Bad\n    break;\n}\nIt is easy to overlook the fallthrough. Be explicit:\nswitch (eventType) {\ncase Information:\n    update_status_bar();\n    break;\ncase Warning:\n    write_event_log();\n    // fallthrough\ncase Error:\n    display_error_window(); // Bad\n    break;\n}\nIn C++17, use a [[fallthrough]] annotation:\nswitch (eventType) {\ncase Information:\n    update_status_bar();\n    break;\ncase Warning:\n    write_event_log();\n    [[fallthrough]];        // C++17\ncase Error:\n    display_error_window(); // Bad\n    break;\n}\nNote\nMultiple case labels of a single statement is OK:\nswitch (x) {\ncase 'a':\ncase 'b':\ncase 'f':\n    do_something(x);\n    break;\n}\nEnforcement\nFlag all fallthroughs from non-empty cases.\n1.7.10.2.10. ES.79: Use default to handle common cases (only)\nReason\n Code clarity.\n Improved opportunities for error detection.\nExample\nenum E { a, b, c , d };\n\nvoid f1(E x)\n{\n    switch (x) {\n    case a:\n        do_something();\n        break;\n    case b:\n        do_something_else();\n        break;\n    default:\n        take_the_default_action();\n        break;\n    }\n}\nHere it is clear that there is a default action and that cases a and b are special.\nExample\nBut what if there is no default action and you mean to handle only specific cases?\nIn that case, have an empty default or else it is impossible to know if you meant to handle all cases:\nvoid f2(E x)\n{\n    switch (x) {\n    case a:\n        do_something();\n        break;\n    case b:\n        do_something_else();\n        break;\n    default:\n        // do nothing for the rest of the cases\n        break;\n    }\n}\nIf you leave out the default, a maintainer and/or a compiler may reasonably assume that you intended to handle all cases:\nvoid f2(E x)\n{\n    switch (x) {\n    case a:\n        do_something();\n        break;\n    case b:\n    case c:\n        do_something_else();\n        break;\n    }\n}\nDid you forget case d or deliberately leave it out?\nForgetting a case typically happens when a case is added to an enumeration and the person doing so fails to add it to every\nswitch over the enumerators.\nEnforcement\nFlag switch-statements over an enumeration that don't handle all enumerators and do not have a default.\nThis may yield too many false positives in some code bases; if so, flag only switches that handle most but not all cases\n(that was the strategy of the very first C++ compiler).\n1.7.10.2.11. ES.84: Don't (try to) declare a local variable with no name\nReason\nThere is no such thing.\nWhat looks to a human like a variable without a name is to the compiler a statement consisting of a temporary that immediately goes out of scope.\nTo avoid unpleasant surprises.\nExample, bad\nvoid f()\n{\n    lock{mx};   // Bad\n    // ...\n}\nThis declares an unnamed lock object that immediately goes out of scope at the point of the semicolon.\nThis is not an uncommon mistake.\nIn particular, this particular example can lead to hard-to find race conditions.\nThere are exceedingly clever uses of this \"idiom\", but they are far rarer than the mistakes.\nNote\nUnnamed function arguments are fine.\nEnforcement\nFlag statements that are just a temporary\n1.7.10.2.12. ES.85: Make empty statements visible\nReason\nReadability.\nExample\nfor (i = 0; i Enforcement\nFlag empty statements that are not blocks and don't contain comments.\n1.7.10.2.13. ES.86: Avoid modifying loop control variables inside the body of raw for-loops\nReason\nThe loop control up front should enable correct reasoning about what is happening inside the loop. Modifying loop counters in both the iteration-expression and inside the body of the loop is a perennial source of surprises and bugs.\nExample\nfor (int i = 0; i Enforcement\nFlag variables that are potentially updated (have a non-const use) in both the loop control iteration-expression and the loop body.\n1.7.10.2.14. ES.87: Don't add redundant == or != to conditions\nReason\nDoing so avoids verbosity and eliminates some opportunities for mistakes.\nHelps make style consistent and conventional.\nExample\nBy definition, a condition in an if-statement, while-statement, or a for-statement selects between true and false.\nA numeric value is compared to 0 and a pointer value to nullptr.\n// These all mean \"if `p` is not `nullptr`\"\nif (p) { ... }            // good\nif (p != 0) { ... }       // redundant `!=0`; bad: don't use 0 for pointers\nif (p != nullptr) { ... } // redundant `!=nullptr`, not recommended\nOften, if (p) is read as \"if p is valid\" which is a direct expression of the programmers intent,\nwhereas if (p != nullptr) would be a long-winded workaround.\nExample\nThis rule is especially useful when a declaration is used as a condition\nif (auto pc = dynamic_cast(ps)) { ... } // execute is ps points to a kind of Circle, good\n\nif (auto pc = dynamic_cast(ps); pc != nullptr) { ... } // not recommended\nExample\nNote that implicit conversions to bool are applied in conditions.\nFor example:\nfor (string s; cin >> s; ) v.push_back(s);\nThis invokes istream's operator bool().\nExample, bad\nIt has been noted that\nif(strcmp(p1, p2)) { ... }   // are the two C-style strings equal? (mistake!)\nis a common beginners error.\nIf you use C-style strings, you must know the  functions well.\nBeing verbose and writing \nif(strcmp(p1, p2) != 0) { ... }   // are the two C-style strings equal? (mistake!)\nwould not save you.\nNote\nThe opposite condition is most easily expressed using a negation:\n// These all mean \"if `p` is `nullptr`\"\nif (!p) { ... }           // good\nif (p == 0) { ... }       // redundant `!= 0`; bad: don't use `0` for pointers\nif (p == nullptr) { ... } // redundant `== nullptr`, not recommended\nEnforcement\nEasy, just check for redundant use of != and == in conditions.\n1.7.10.3. ES.expr: Expressions\nExpressions manipulate values.\n1.7.10.3.1. ES.40: Avoid complicated expressions\nReason\nComplicated expressions are error-prone.\nExample\n// bad: assignment hidden in subexpression\nwhile ((c = getc()) != -1)\n\n// bad: two non-local variables assigned in a sub-expressions\nwhile ((cin >> c1, cin >> c2), c1 == c2)\n\n// better, but possibly still too complicated\nfor (char c1, c2; cin >> c1 >> c2 && c1 == c2;)\n\n// OK: if i and j are not aliased\nint x = ++i + ++j;\n\n// OK: if i != j and i != k\nv[i] = v[j] + v[k];\n\n// bad: multiple assignments \"hidden\" in subexpressions\nx = a + (b = f()) + (c = g()) * 7;\n\n// bad: relies on commonly misunderstood precedence rules\nx = a & b + c * d && e ^ f == 7;\n\n// bad: undefined behavior\nx = x++ + x++ + ++x;\nSome of these expressions are unconditionally bad (e.g., they rely on undefined behavior). Others are simply so complicated and/or unusual that even good programmers could misunderstand them or overlook a problem when in a hurry.\nNote\nC++17 tightens up the rules for the order of evaluation\n(left-to-right except right-to-left in assignments, and the order of evaluation of function arguments is unspecified; see ES.43),\nbut that doesn't change the fact that complicated expressions are potentially confusing.\nNote\nA programmer should know and use the basic rules for expressions.\nExample\nx = k * y + z;             // OK\n\nauto t1 = k * y;           // bad: unnecessarily verbose\nx = t1 + z;\n\nif (0 Enforcement\nTricky. How complicated must an expression be to be considered complicated? Writing computations as statements with one operation each is also confusing. Things to consider:\n\nside effects: side effects on multiple non-local variables (for some definition of non-local) can be suspect, especially if the side effects are in separate subexpressions\nwrites to aliased variables\nmore than N operators (and what should N be?)\nreliance of subtle precedence rules\nuses undefined behavior (can we catch all undefined behavior?)\nimplementation defined behavior?\n???\n\n1.7.10.3.2. ES.41: If in doubt about operator precedence, parenthesize\nReason\nAvoid errors. Readability. Not everyone has the operator table memorized.\nExample\nconst unsigned int flag = 2;\nunsigned int a = flag;\n\nif (a & flag != 0)  // bad: means a&(flag != 0)\nNote: We recommend that programmers know their precedence table for the arithmetic operations, the logical operations, but consider mixing bitwise logical operations with other operators in need of parentheses.\nif ((a & flag) != 0)  // OK: works as intended\nNote\nYou should know enough not to need parentheses for:\nif (a Enforcement\n\nFlag combinations of bitwise-logical operators and other operators.\nFlag assignment operators not as the leftmost operator.\n???\n\n1.7.10.3.3. ES.42: Keep use of pointers simple and straightforward\nReason\nComplicated pointer manipulation is a major source of errors.\nNote\nUse gsl::span instead.\nPointers should only refer to single objects.\nPointer arithmetic is fragile and easy to get wrong, the source of many, many bad bugs and security violations.\nspan is a bounds-checked, safe type for accessing arrays of data.\nAccess into an array with known bounds using a constant as a subscript can be validated by the compiler.\nExample, bad\nvoid f(int* p, int count)\n{\n    if (count Example, good\nvoid f(span a) // BETTER: use span in the function declaration\n{\n    if (a.length()  q = a.subspan(1); // OK\n\n    if (a.length() Note\nSubscripting with a variable is difficult for both tools and humans to validate as safe.\nspan is a run-time bounds-checked, safe type for accessing arrays of data.\nat() is another alternative that ensures single accesses are bounds-checked.\nIf iterators are needed to access an array, use the iterators from a span constructed over the array.\nExample, bad\nvoid f(array a, int pos)\n{\n    a[pos / 2] = 1; // BAD\n    a[pos - 1] = 2; // BAD\n    a[-1] = 3;    // BAD (but easily caught by tools) -- no replacement, just don't do this\n    a[10] = 4;    // BAD (but easily caught by tools) -- no replacement, just don't do this\n}\nExample, good\nUse a span:\nvoid f1(span a, int pos) // A1: Change parameter type to use span\n{\n    a[pos / 2] = 1; // OK\n    a[pos - 1] = 2; // OK\n}\n\nvoid f2(array arr, int pos) // A2: Add local span and use that\n{\n    span a = {arr, pos};\n    a[pos / 2] = 1; // OK\n    a[pos - 1] = 2; // OK\n}\nUse a at():\nvoid f3(array a, int pos) // ALTERNATIVE B: Use at() for access\n{\n    at(a, pos / 2) = 1; // OK\n    at(a, pos - 1) = 2; // OK\n}\nExample, bad\nvoid f()\n{\n    int arr[COUNT];\n    for (int i = 0; i Example, good\nUse a span:\nvoid f1()\n{\n    int arr[COUNT];\n    span av = arr;\n    for (int i = 0; i Use a span and range-for:\nvoid f1a()\n{\n     int arr[COUNT];\n     span av = arr;\n     int i = 0;\n     for (auto& e : av)\n         e = i++;\n}\nUse at() for access:\nvoid f2()\n{\n    int arr[COUNT];\n    for (int i = 0; i Use a range-for:\nvoid f3()\n{\n    int arr[COUNT];\n    for (auto& e : arr)\n         e = i++;\n}\nNote\nTooling can offer rewrites of array accesses that involve dynamic index expressions to use at() instead:\nstatic int a[10];\n\nvoid f(int i, int j)\n{\n    a[i + j] = 12;      // BAD, could be rewritten as ...\n    at(a, i + j) = 12;  // OK -- bounds-checked\n}\nExample\nTurning an array into a pointer (as the language does essentially always) removes opportunities for checking, so avoid it\nvoid g(int* p);\n\nvoid f()\n{\n    int a[5];\n    g(a);        // BAD: are we trying to pass an array?\n    g(&a[0]);    // OK: passing one object\n}\nIf you want to pass an array, say so:\nvoid g(int* p, size_t length);  // old (dangerous) code\n\nvoid g1(span av); // BETTER: get g() changed.\n\nvoid f2()\n{\n    int a[5];\n    span av = a;\n\n    g(av.data(), av.length());   // OK, if you have no choice\n    g1(a);                       // OK -- no decay here, instead use implicit span ctor\n}\nEnforcement\n\nFlag any arithmetic operation on an expression of pointer type that results in a value of pointer type.\nFlag any indexing expression on an expression or variable of array type (either static array or std::array) where the indexer is not a compile-time constant expression with a value between 0 or and the upper bound of the array.\nFlag any expression that would rely on implicit conversion of an array type to a pointer type.\n\nThis rule is part of the bounds-safety profile.\n1.7.10.3.4. ES.43: Avoid expressions with undefined order of evaluation\nReason\nYou have no idea what such code does. Portability.\nEven if it does something sensible for you, it may do something different on another compiler (e.g., the next release of your compiler) or with a different optimizer setting.\nNote\nC++17 tightens up the rules for the order of evaluation:\nleft-to-right except right-to-left in assignments, and the order of evaluation of function arguments is unspecified.\nHowever, remember that your code may be compiled with a pre-C++17 compiler (e.g., through cut-and-paste) so don't be too clever.\nExample\nv[i] = ++i;   //  the result is undefined\nA good rule of thumb is that you should not read a value twice in an expression where you write to it.\nEnforcement\nCan be detected by a good analyzer.\n1.7.10.3.5. ES.44: Don't depend on order of evaluation of function arguments\nReason\nBecause that order is unspecified.\nNote\nC++17 tightens up the rules for the order of evaluation, but the order of evaluation of function arguments is still unspecified.\nExample\nint i = 0;\nf(++i, ++i);\nThe call will most likely be f(0, 1) or f(1, 0), but you don't know which.\nTechnically, the behavior is undefined.\nIn C++17, this code does not have undefined behavior, but it is still not specified which argument is evaluated first.\nExample\nOverloaded operators can lead to order of evaluation problems:\nf1()->m(f2());          // m(f1(), f2())\ncout In C++17, these examples work as expected (left to right) and assignments are evaluated right to left (just as ='s binding is right-to-left)\nf1() = f2();    // undefined behavior in C++14; in C++17, f2() is evaluated before f1()\nEnforcement\nCan be detected by a good analyzer.\n1.7.10.3.6. ES.45: Avoid \"magic constants\"; use symbolic constants\nReason\nUnnamed constants embedded in expressions are easily overlooked and often hard to understand:\nExample\nfor (int m = 1; m No, we don't all know that there are 12 months, numbered 1..12, in a year. Better:\n// months are indexed 1..12\nconstexpr int first_month = 1;\nconstexpr int last_month = 12;\n\nfor (int m = first_month; m Better still, don't expose constants:\nfor (auto m : month)\n    cout Enforcement\nFlag literals in code. Give a pass to 0, 1, nullptr, \\n, \"\", and others on a positive list.\n1.7.10.3.7. ES.46: Avoid lossy (narrowing, truncating) arithmetic conversions\nReason\nA narrowing conversion destroys information, often unexpectedly so.\nExample, bad\nA key example is basic narrowing:\ndouble d = 7.9;\nint i = d;    // bad: narrowing: i becomes 7\ni = (int) d;  // bad: we're going to claim this is still not explicit enough\n\nvoid f(int x, long y, double d)\n{\n    char c1 = x;   // bad: narrowing\n    char c2 = y;   // bad: narrowing\n    char c3 = d;   // bad: narrowing\n}\nNote\nThe guideline support library offers a narrow_cast operation for specifying that narrowing is acceptable and a narrow (\"narrow if\") that throws an exception if a narrowing would throw away information:\ni = narrow_cast(d);   // OK (you asked for it): narrowing: i becomes 7\ni = narrow(d);        // OK: throws narrowing_error\nWe also include lossy arithmetic casts, such as from a negative floating point type to an unsigned integral type:\ndouble d = -7.9;\nunsigned u = 0;\n\nu = d;                          // BAD\nu = narrow_cast(d);   // OK (you asked for it): u becomes 0\nu = narrow(d);        // OK: throws narrowing_error\nEnforcement\nA good analyzer can detect all narrowing conversions. However, flagging all narrowing conversions will lead to a lot of false positives. Suggestions:\n\nflag all floating-point to integer conversions (maybe only float->char and double->int. Here be dragons! we need data)\nflag all long->char (I suspect int->char is very common. Here be dragons! we need data)\nconsider narrowing conversions for function arguments especially suspect\n\n1.7.10.3.8. ES.47: Use nullptr rather than 0 or NULL\nReason\nReadability. Minimize surprises: nullptr cannot be confused with an\nint. nullptr also has a well-specified (very restrictive) type, and thus\nworks in more scenarios where type deduction might do the wrong thing on NULL\nor 0.\nExample\nConsider:\nvoid f(int);\nvoid f(char*);\nf(0);         // call f(int)\nf(nullptr);   // call f(char*)\nEnforcement\nFlag uses of 0 and NULL for pointers. The transformation may be helped by simple program transformation.\n1.7.10.3.9. ES.48: Avoid casts\nReason\nCasts are a well-known source of errors. Make some optimizations unreliable.\nExample, bad\ndouble d = 2;\nauto p = (long*)&d;\nauto q = (long long*)&d;\ncout What would you think this fragment prints? The result is at best implementation defined. I got\n2 0 4611686018427387904\nAdding\n*q = 666;\ncout I got\n3.29048e-321 666 666\nSurprised? I'm just glad I didn't crash the program.\nNote\nProgrammers who write casts typically assume that they know what they are doing, \nor that writing a cast makes the program \"easier to read\".\nIn fact, they often disable the general rules for using values.\nOverload resolution and template instantiation usually pick the right function if there is a right function to pick.\nIf there is not, maybe there ought to be, rather than applying a local fix (cast).\nNote\nCasts are necessary in a systems programming language.  For example, how else\nwould we get the address of a device register into a pointer?  However, casts\nare seriously overused as well as a major source of errors.\nNote\nIf you feel the need for a lot of casts, there may be a fundamental design problem.\nAlternatives\nCasts are widely (mis) used. Modern C++ has rules and constructs that eliminate the need for casts in many contexts, such as\n\nUse templates\nUse std::variant\nRely on the well-defined, safe, implicit conversions between pointer types\n\nEnforcement\n\nForce the elimination of C-style casts\nWarn if there are many functional style casts (there is an obvious problem in quantifying 'many')\nThe type profile bans reinterpret_cast.\nWarn against identity casts between pointer types, where the source and target types are the same (#Pro-type-identitycast)\nWarn if a pointer cast could be implicit\n\n1.7.10.3.10. ES.49: If you must use a cast, use a named cast\nReason\nReadability. Error avoidance.\nNamed casts are more specific than a C-style or functional cast, allowing the compiler to catch some errors.\nThe named casts are:\n\nstatic_cast\nconst_cast\nreinterpret_cast\ndynamic_cast\nstd::move         // move(x) is an rvalue reference to x\nstd::forward      // forward(x) is an rvalue reference to x\ngsl::narrow_cast  // narrow_cast(x) is static_cast(x)\ngsl::narrow       // narrow(x) is static_cast(x) if static_cast(x) == x or it throws narrowing_error\n\nExample\nclass B { /* ... */ };\nclass D { /* ... */ };\n\ntemplate D* upcast(B* pb)\n{\n    D* pd0 = pb;                        // error: no implicit conversion from B* to D*\n    D* pd1 = (D*)pb;                    // legal, but what is done?\n    D* pd2 = static_cast(pb);       // error: D is not derived from B\n    D* pd3 = reinterpret_cast(pb);  // OK: on your head be it!\n    D* pd4 = dynamic_cast(pb);      // OK: return nullptr\n    // ...\n}\nThe example was synthesized from real-world bugs where D used to be derived from B, but someone refactored the hierarchy.\nThe C-style cast is dangerous because it can do any kind of conversion, depriving us of any protection from mistakes (now or in the future).\nNote\nWhen converting between types with no information loss (e.g. from float to\ndouble or int64 from int32), brace initialization may be used instead.\ndouble d {some_float};\nint64_t i {some_int32};\nThis makes it clear that the type conversion was intended and also prevents\nconversions between types that might result in loss of precision. (It is a\ncompilation error to try to initialize a float from a double in this fashion,\nfor example.)\nNote\nreinterpret_cast can be essential, but the essential uses (e.g., turning a machine address into pointer) are not type safe:\nauto p = reinterpret_cast(0x800);  // inherently dangerous\nEnforcement\n\nFlag C-style and functional casts.\nThe type profile bans reinterpret_cast.\nThe type profile warns when using static_cast between arithmetic types.\n\n1.7.10.3.11. ES.50: Don't cast away const\nReason\nIt makes a lie out of const.\nIf the variable is actually declared const, the result of \"casting away const\" is undefined behavior.\nExample, bad\nvoid f(const int& i)\n{\n    const_cast(i) = 42;   // BAD\n}\n\nstatic int i = 0;\nstatic const int j = 0;\n\nf(i); // silent side effect\nf(j); // undefined behavior\nExample\nSometimes, you may be tempted to resort to const_cast to avoid code duplication, such as when two accessor functions that differ only in const-ness have similar implementations. For example:\nclass Bar;\n\nclass Foo {\npublic:\n    // BAD, duplicates logic\n    Bar& get_bar() {\n        /* complex logic around getting a non-const reference to my_bar */\n    }\n\n    const Bar& get_bar() const {\n        /* same complex logic around getting a const reference to my_bar */\n    }\nprivate:\n    Bar my_bar;\n};\nInstead, prefer to share implementations. Normally, you can just have the non-const function call the const function. However, when there is complex logic this can lead to the following pattern that still resorts to a const_cast:\nclass Foo {\npublic:\n    // not great, non-const calls const version but resorts to const_cast\n    Bar& get_bar() {\n        return const_cast(static_cast(*this).get_bar());\n    }\n    const Bar& get_bar() const {\n        /* the complex logic around getting a const reference to my_bar */\n    }\nprivate:\n    Bar my_bar;\n};\nAlthough this pattern is safe when applied correctly, because the caller must have had a non-const object to begin with, it's not ideal because the safety is hard to enforce automatically as a checker rule.\nInstead, prefer to put the common code in a common helper function -- and make it a template so that it deduces const. This doesn't use any const_cast at all:\nclass Foo {\npublic:                         // good\n          Bar& get_bar()       { return get_bar_impl(*this); }\n    const Bar& get_bar() const { return get_bar_impl(*this); }\nprivate:\n    Bar my_bar;\n\n    template           // good, deduces whether T is const or non-const\n    static auto get_bar_impl(T& t) -> decltype(t.get_bar())\n        { /* the complex logic around getting a possibly-const reference to my_bar */ }\n};\nException\nYou may need to cast away const when calling const-incorrect functions.\nPrefer to wrap such functions in inline const-correct wrappers to encapsulate the cast in one place.\nExample\nSometimes, \"cast away const\" is to allow the updating of some transient information of an otherwise immutable object.\nExamples are caching, memoization, and precomputation.\nSuch examples are often handled as well or better using mutable or an indirection than with a const_cast.\nConsider keeping previously computed results around for a costly operation:\nint compute(int x); // compute a value for x; assume this to be costly\n\nclass Cache {   // some type implementing a cache for an int->int operation\npublic:\n    pair find(int x) const;   // is there a value for x?\n    void set(int x, int v);             // make y the value for x\n    // ...\nprivate:\n    // ...\n};\n\nclass X {\npublic:\n    int get_val(int x)\n    {\n        auto p = cache.find(x);\n        if (p.first) return p.second;\n        int val = compute(x);\n        cache.set(x, val); // insert value for x\n        return val;\n    }\n    // ...\nprivate:\n    Cache cache;\n};\nHere, get_val() is logically constant, so we would like to make it a const member.\nTo do this we still need to mutate cache, so people sometimes resort to a const_cast:\nclass X {   // Suspicious solution based on casting\npublic:\n    int get_val(int x) const\n    {\n        auto p = cache.find(x);\n        if (p.first) return p.second;\n        int val = compute(x);\n        const_cast(cache).set(x, val);   // ugly\n        return val;\n    }\n    // ...\nprivate:\n    Cache cache;\n};\nFortunately, there is a better solution:\nState that cache is mutable even for a const object:\nclass X {   // better solution\npublic:\n    int get_val(int x) const\n    {\n        auto p = cache.find(x);\n        if (p.first) return p.second;\n        int val = compute(x);\n        cache.set(x, val);\n        return val;\n    }\n    // ...\nprivate:\n    mutable Cache cache;\n};\nAn alternative solution would to store a pointer to the cache:\nclass X {   // OK, but slightly messier solution\npublic:\n    int get_val(int x) const\n    {\n        auto p = cache->find(x);\n        if (p.first) return p.second;\n        int val = compute(x);\n        cache->set(x, val);\n        return val;\n    }\n    // ...\nprivate:\n    unique_ptr cache;\n};\nThat solution is the most flexible, but requires explicit construction and destruction of *cache\n(most likely in the constructor and destructor of X).\nIn any variant, we must guard against data races on the cache in multi-threaded code, possibly using a std::mutex.\nEnforcement\n\nFlag const_casts.\nThis rule is part of the type-safety profile for the related Profile.\n\n1.7.10.3.12. ES.55: Avoid the need for range checking\nReason\nConstructs that cannot overflow do not overflow (and usually run faster):\nExample\nfor (auto& x : v)      // print all elements of v\n    cout Enforcement\nLook for explicit range checks and heuristically suggest alternatives.\n1.7.10.3.13. ES.56: Write std::move() only when you need to explicitly move an object to another scope\nReason\nWe move, rather than copy, to avoid duplication and for improved performance.\nA move typically leaves behind an empty object (C.64), which can be surprising or even dangerous, so we try to avoid moving from lvalues (they might be accessed later).\nNotes\nMoving is done implicitly when the source is an rvalue (e.g., value in a return treatment or a function result), so don't pointlessly complicate code in those cases by writing move explicitly. Instead, write short functions that return values, and both the function's return and the caller's accepting of the return will be optimized naturally.\nIn general, following the guidelines in this document (including not making variables' scopes needlessly large, writing short functions that return values, returning local variables) help eliminate most need for explicit std::move.\nExplicit move is needed to explicitly move an object to another scope, notably to pass it to a \"sink\" function and in the implementations of the move operations themselves (move constructor, move assignment operator) and swap operations.\nExample, bad\nvoid sink(X&& x);   // sink takes ownership of x\n\nvoid user()\n{\n    X x;\n    // error: cannot bind an lvalue to a rvalue reference\n    sink(x);\n    // OK: sink takes the contents of x, x must now be assumed to be empty\n    sink(std::move(x));\n\n    // ...\n\n    // probably a mistake\n    use(x);\n}\nUsually, a std::move() is used as an argument to a && parameter.\nAnd after you do that, assume the object has been moved from (see C.64) and don't read its state again until you first set it to a new value.\nvoid f() {\n    string s1 = \"supercalifragilisticexpialidocious\";\n\n    string s2 = s1;             // ok, takes a copy\n    assert(s1 == \"supercalifragilisticexpialidocious\");  // ok\n\n    // bad, if you want to keep using s1's value\n    string s3 = move(s1);\n\n    // bad, assert will likely fail, s1 likely changed\n    assert(s1 == \"supercalifragilisticexpialidocious\");\n}\nExample\nvoid sink(unique_ptr p);  // pass ownership of p to sink()\n\nvoid f() {\n    auto w = make_unique();\n    // ...\n    sink(std::move(w));               // ok, give to sink()\n    // ...\n    sink(w);    // Error: unique_ptr is carefully designed so that you cannot copy it\n}\nNotes\nstd::move() is a cast to && in disguise; it doesn't itself move anything, but marks a named object as a candidate that can be moved from.\nThe language already knows the common cases where objects can be moved from, especially when returning values from functions, so don't complicate code with redundant std::move()'s.\nNever write std::move() just because you've heard \"it's more efficient.\"\nIn general, don't believe claims of \"efficiency\" without data (???).\nIn general, don't complicate your code without reason (??)\nExample, bad\nvector make_vector() {\n    vector result;\n    // ... load result with data\n    return std::move(result);       // bad; just write \"return result;\"\n}\nNever write return move(local_variable);, because the language already knows the variable is a move candidate.\nWriting move in this code won't help, and can actually be detrimental because on some compilers it interferes with RVO (the return value optimization) by creating an additional reference alias to the local variable.\nExample, bad\nvector v = std::move(make_vector());   // bad; the std::move is entirely redundant\nNever write move on a returned value such as x = move(f()); where f returns by value.\nThe language already knows that a returned value is a temporary object that can be moved from.\nExample\nvoid mover(X&& x) {\n    call_something(std::move(x));         // ok\n    call_something(std::forward(x));   // bad, don't std::forward an rvalue reference\n    call_something(x);                    // suspicious, why not std::move?\n}\n\ntemplate\nvoid forwarder(T&& t) {\n    call_something(std::move(t));         // bad, don't std::move a forwarding reference\n    call_something(std::forward(t));   // ok\n    call_something(t);                    // suspicious, why not std::forward?\n}\nEnforcement\n\nFlag use of std::move(x) where x is an rvalue or the language will already treat it as an rvalue, including return std::move(local_variable); and std::move(f()) on a function that returns by value.\nFlag functions taking an S&& parameter if there is no const S& overload to take care of lvalues.\nFlag a std::moves argument passed to a parameter, except when the parameter type is one of the following: an X&& rvalue reference; a T&& forwarding reference where T is a template parameter type; or by value and the type is move-only.\nFlag when std::move is applied to a forwarding reference (T&& where T is a template parameter type). Use std::forward instead.\nFlag when std::move is applied to other than an rvalue reference. (More general case of the previous rule to cover the non-forwarding cases.)\nFlag when std::forward is applied to an rvalue reference (X&& where X is a concrete type). Use std::move instead.\nFlag when std::forward is applied to other than a forwarding reference. (More general case of the previous rule to cover the non-moving cases.)\nFlag when an object is potentially moved from and the next operation is a const operation; there should first be an intervening non-const operation, ideally assignment, to first reset the object's value.\n\n1.7.10.3.14. ES.60: Avoid new and delete outside resource management functions\nReason\nDirect resource management in application code is error-prone and tedious.\nNote\nalso known as \"No naked new!\"\nExample, bad\nvoid f(int n)\n{\n    auto p = new X[n];   // n default constructed Xs\n    // ...\n    delete[] p;\n}\nThere can be code in the ... part that causes the delete never to happen.\nSee also: R: Resource management.\nEnforcement\nFlag naked news and naked deletes.\n1.7.10.3.15. ES.61: Delete arrays using delete[] and non-arrays using delete\nReason\nThat's what the language requires and mistakes can lead to resource release errors and/or memory corruption.\nExample, bad\nvoid f(int n)\n{\n    auto p = new X[n];   // n default constructed Xs\n    // ...\n    delete p;   // error: just delete the object p, rather than delete the array p[]\n}\nNote\nThis example not only violates the no naked new rule as in the previous example, it has many more problems.\nEnforcement\n\nif the new and the delete is in the same scope, mistakes can be flagged.\nif the new and the delete are in a constructor/destructor pair, mistakes can be flagged.\n\n1.7.10.3.16. ES.62: Don't compare pointers into different arrays\nReason\nThe result of doing so is undefined.\nExample, bad\nvoid f(int n)\n{\n    int a1[7];\n    int a2[9];\n    if (&a1[5] Note\nThis example has many more problems.\nEnforcement\n???\n1.7.10.3.17. ES.63: Don't slice\nReason\nSlicing -- that is, copying only part of an object using assignment or initialization -- most often leads to errors because\nthe object was meant to be considered as a whole.\nIn the rare cases where the slicing was deliberate the code can be surprising.\nExample\nclass Shape { /* ... */ };\nclass Circle : public Shape { /* ... */ Point c; int r; };\n\nCircle c {{0, 0}, 42};\nShape s {c};    // copy Shape part of Circle\nThe result will be meaningless because the center and radius will not be copied from c into s.\nThe first defense against this is to define the base class Shape not to allow this.\nAlternative\nIf you mean to slice, define an explicit operation to do so.\nThis saves readers from confusion.\nFor example:\nclass Smiley : public Circle {\n    public:\n    Circle copy_circle();\n    // ...\n};\n\nSmiley sm { /* ... */ };\nCircle c1 {sm};  // ideally prevented by the definition of Circle\nCircle c2 {sm.copy_circle()};\nEnforcement\nWarn against slicing.\n1.7.10.3.18. ES.64: Use the T{e}notation for construction\nReason\nThe T{e} construction syntax makes it explicit that construction is desired.\nThe T{e} construction syntax doesn't allow narrowing.\nT{e} is the only safe and general expression for constructing a value of type T from an expression e.\nThe casts notations T(e) and (T)e are neither safe nor general.\nExample\nFor built-in types, the construction notation protects against narrowing and reinterpretation\nvoid use(char ch, int i, double d, char* p, long long lng)\n{\n    int x1 = int{ch};     // OK, but redundant\n    int x2 = int{d};      // error: double->int narrowing; use a cast if you need to\n    int x3 = int{p};      // error: pointer to->int; use a reinterpret_cast if you really need to\n    int x4 = int{lng};    // error: long long->int narrowing; use a cast if you need to\n\n    int y1 = int(ch);     // OK, but redundant\n    int y2 = int(d);      // bad: double->int narrowing; use a cast if you need to\n    int y3 = int(p);      // bad: pointer to->int; use a reinterpret_cast if you really need to\n    int y4 = int(lng);    // bad: long->int narrowing; use a cast if you need to\n\n    int z1 = (int)ch;     // OK, but redundant\n    int z2 = (int)d;      // bad: double->int narrowing; use a cast if you need to\n    int z3 = (int)p;      // bad: pointer to->int; use a reinterpret_cast if you really need to\n    int z4 = (int)lng;    // bad: long long->int narrowing; use a cast if you need to\n}\nThe integer to/from pointer conversions are implementation defined when using the T(e) or (T)e notations, and non-portable\nbetween platforms with different integer and pointer sizes.\nNote\nAvoid casts (explicit type conversion) and if you must prefer named casts.\nNote\nWhen unambiguous, the T can be left out of T{e}.\ncomplex f(complex);\n\nauto z = f({2*pi, 1});\nNote\nThe construction notation is the most general initializer notation.\nException\nstd::vector and other containers were defined before we had {} as a notation for construction.\nConsider:\nvector vs {10};                           // ten empty strings\nvector vi1 {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};  // ten elements 1..10\nvector vi2 {10};                             // one element with the value 10\nHow do we get a vector of 10 default initialized ints?\nvector v3(10); // ten elements with value 0\nThe use of () rather than {} for number of elements is conventional (going back to the early 1980s), hard to change, but still\na design error: for a container where the element type can be confused with the number of elements, we have an ambiguity that\nmust be resolved.\nThe conventional resolution is to interpret {10} as a list of one element and use (10) to distinguish a size.\nThis mistake need not be repeated in new code.\nWe can define a type to represent the number of elements:\nstruct Count { int n; };\n\ntemplate\nclass Vector {\npublic:\n    Vector(Count n);                     // n default-initialized elements\n    Vector(initializer_list init);    // init.size() elements\n    // ...\n};\n\nVector v1{10};\nVector v2{Count{10}};\nVector v3{Count{10}};    // yes, there is still a very minor problem\nThe main problem left is to find a suitable name for Count.\nEnforcement\nFlag the C-style (T)e and functional-style T(e) casts.\n1.7.10.3.19. ES.65: Don't dereference an invalid pointer\nReason\nDereferencing an invalid pointer, such as nullptr, is undefined behavior, typically leading to immediate crashes,\nwrong results, or memory corruption.\nNote\nThis rule is an obvious and well-known language rule, but can be hard to follow.\nIt takes good coding style, library support, and static analysis to eliminate violations without major overhead.\nThis is a major part of the discussion of C++'s resource- and type-safety model.\nSee also\n\nUse RAII to avoid lifetime problems.\nUse unique_ptr to avoid lifetime problems.\nUse shared_ptr to avoid lifetime problems.\nUse references when nullptr isn't a possibility.\nUse not_null to catch unexpected nullptr early.\nUse the bounds profile to avoid range errors.\n\nExample\nvoid f()\n{\n    int x = 0;\n    int* p = &x;\n\n    if (condition()) {\n        int y = 0;\n        p = &y;\n    } // invalidates p\n\n    *p = 42;            // BAD, p might be invalid if the branch was taken\n}\nTo resolve the problem, either extend the lifetime of the object the pointer is intended to refer to, or shorten the lifetime of the pointer (move the dereference to before the pointed-to object's lifetime ends).\nvoid f1()\n{\n    int x = 0;\n    int* p = &x;\n\n    int y = 0;\n    if (condition()) {\n        p = &y;\n    }\n\n    *p = 42;            // OK, p points to x or y and both are still in scope\n}\nUnfortunately, most invalid pointer problems are harder to spot and harder to fix.\nExample\nvoid f(int* p)\n{\n    int x = *p; // BAD: how do we know that p is valid?\n}\nThere is a huge amount of such code.\nMost works -- after lots of testing -- but in isolation it is impossible to tell whether p could be the nullptr.\nConsequently, it this is also a major source of errors.\nThere are many approaches to dealing with this potential problem:\nvoid f1(int* p) // deal with nullptr\n{\n    if (p == nullptr) {\n        // deal with nullptr (allocate, return, throw, make p point to something, whatever\n    }\n    int x = *p;\n}\nThere are two potential problems with testing for nullptr:\n\nit is not always obvious what to do what to do if we find nullptr\nthe test can be redundant and/or relatively expensive\nit is not obvious if the test is to protect against a violation or part of the required logic.\n\nvoid f2(int* p) // state that p is not supposed to be nullptr\n{\n    assert(p != nullptr);\n    int x = *p;\n}\nThis would carry a cost only when the assertion checking was enabled and would give a compiler/analyzer useful information.\nThis would work even better if/when C++ gets direct support for contracts:\nvoid f3(int* p) // state that p is not supposed to be nullptr\n    [[expects: p != nullptr]]\n{\n    int x = *p;\n}\nAlternatively, we could use gsl::not_null to ensure that p is not the nullptr.\nvoid f(not_null p)\n{\n    int x = *p;\n}\nThese remedies take care of nullptr only.\nRemember that there are other ways of getting an invalid pointer.\nExample\nvoid f(int* p)  // old code, doesn't use owner\n{\n    delete p;\n}\n\nvoid g()        // old code: uses naked new\n{\n    auto q = new int{7};\n    f(q);\n    int x = *q; // BAD: dereferences invalid pointer\n}\nExample\nvoid f()\n{\n    vector v(10);\n    int* p = &v[5];\n    v.push_back(99); // could reallocate v's elements\n    int x = *p; // BAD: dereferences potentially invalid pointer\n}\nEnforcement\nThis rule is part of the lifetime profile\n\nFlag a dereference of a pointer that points to an object that has gone out of scope\nFlag a dereference of a pointer that may have been invalidated by assigning a nullptr\nFlag a dereference of a pointer that may have been invalidated by a delete\nFlag a dereference to a pointer to a container element that may have been invalidated by dereference\n\n1.7.10.4. Arithmetic\n1.7.10.4.1. ES.100: Don't mix signed and unsigned arithmetic\nReason\nAvoid wrong results.\nExample\nint x = -3;\nunsigned int y = 7;\n\ncout It is harder to spot the problem in more realistic examples.\nNote\nUnfortunately, C++ uses signed integers for array subscripts and the standard library uses unsigned integers for container subscripts.\nThis precludes consistency.\nEnforcement\nCompilers already know and sometimes warn.\n1.7.10.4.2. ES.101: Use unsigned types for bit manipulation\nReason\nUnsigned types support bit manipulation without surprises from sign bits.\nExample\nunsigned char x = 0b1010'1010;\nunsigned char y = ~x;   // y == 0b0101'0101;\nNote\nUnsigned types can also be useful for modulo arithmetic.\nHowever, if you want modulo arithmetic add\ncomments as necessary noting the reliance on wraparound behavior, as such code\ncan be surprising for many programmers.\nEnforcement\n\nJust about impossible in general because of the use of unsigned subscripts in the standard library\n???\n\n1.7.10.4.3. ES.102: Use signed types for arithmetic\nReason\nBecause most arithmetic is assumed to be signed;\nx - y yields a negative number when y > x except in the rare cases where you really want modulo arithmetic.\nExample\nUnsigned arithmetic can yield surprising results if you are not expecting it.\nThis is even more true for mixed signed and unsigned arithmetic.\ntemplate\nT subtract(T x, T2 y)\n{\n    return x - y;\n}\n\nvoid test()\n{\n    int s = 5;\n    unsigned int us = 5;\n    cout Here we have been very explicit about what's happening,\nbut if you had seen us - (s + 2) or s += 2; ...; us - s, would you reliably have suspected that the result would print as 4294967294?\nException\nUse unsigned types if you really want modulo arithmetic - add\ncomments as necessary noting the reliance on overflow behavior, as such code\nis going to be surprising for many programmers.\nExample\nThe standard library uses unsigned types for subscripts.\nThe build-in array uses signed types for subscripts.\nThis makes surprises (and bugs) inevitable.\nint a[10];\nfor (int i = 0; i  v(10);\n// compares signed to unsigned; some compilers warn\nfor (int i = 0; v.size()  v2(-2);\nEnforcement\n\nFlag mixed signed and unsigned arithmetic\nFlag results of unsigned arithmetic assigned to or printed as signed.\nFlag unsigned literals (e.g. -2) used as container subscripts.\n\n1.7.10.4.4. ES.103: Don't overflow\nReason\nOverflow usually makes your numeric algorithm meaningless.\nIncrementing a value beyond a maximum value can lead to memory corruption and undefined behavior.\nExample, bad\nint a[10];\na[10] = 7;   // bad\n\nint n = 0;\nwhile (n++ Example, bad\nint n = numeric_limits::max();\nint m = n + 1;   // bad\nExample, bad\nint area(int h, int w) { return h * w; }\n\nauto a = area(10'000'000, 100'000'000);   // bad\nException\nUse unsigned types if you really want modulo arithmetic.\nAlternative: For critical applications that can afford some overhead, use a range-checked integer and/or floating-point type.\nEnforcement\n???\n1.7.10.4.5. ES.104: Don't underflow\nReason\nDecrementing a value beyond a minimum value can lead to memory corruption and undefined behavior.\nExample, bad\nint a[10];\na[-2] = 7;   // bad\n\nint n = 101;\nwhile (n--)\n    a[n - 1] = 9;   // bad (twice)\nException\nUse unsigned types if you really want modulo arithmetic.\nEnforcement\n???\n1.7.10.4.6. ES.105: Don't divide by zero\nReason\nThe result is undefined and probably a crash.\nNote\nThis also applies to %.\nExample; bad\ndouble divide(int a, int b) {\n    // BAD, should be checked (e.g., in a precondition)\n    return a / b;\n}\nExample; good\ndouble divide(int a, int b) {\n    // good, address via precondition (and replace with contracts once C++ gets them)\n    Expects(b != 0);\n    return a / b;\n}\n\ndouble divide(int a, int b) {\n    // good, address via check\n    return b ? a / b : quiet_NaN();\n}\nAlternative: For critical applications that can afford some overhead, use a range-checked integer and/or floating-point type.\nEnforcement\n\nFlag division by an integral value that could be zero\n\n1.7.10.4.7. ES.106: Don't try to avoid negative values by using unsigned\nReason\nChoosing unsigned implies many changes to the usual behavior of integers, including modulo arithmetic,\ncan suppress warnings related to overflow,\nand opens the door for errors related to signed/unsigned mixes.\nUsing unsigned doesn't actually eliminate the possibility of negative values.\nExample\nunsigned int u1 = -2;   // Valid: the value of u1 is 4294967294\nint i1 = -2;\nunsigned int u2 = i1;   // Valid: the value of u2 is 4294967294\nint i2 = u2;            // Valid: the value of i2 is -2\nThese problems with such (perfectly legal) constructs are hard to spot in real code and are the source of many real-world errors.\nConsider:\nunsigned area(unsigned height, unsigned width) { return height*width; } // [see also](#Ri-expects)\n// ...\nint height;\ncin >> height;\nauto a = area(height, 2);   // if the input is -2 a becomes 4294967292\nRemember that -1 when assigned to an unsigned int becomes the largest unsigned int.\nAlso, since unsigned arithmetic is modulo arithmetic the multiplication didn't overflow, it wrapped around.\nExample\nunsigned max = 100000;    // \"accidental typo\", I mean to say 10'000\nunsigned short x = 100;\nwhile (x Had x been a signed short, we could have warned about the undefined behavior upon overflow.\nAlternatives\n\nuse signed integers and check for x >= 0\nuse a positive integer type\nuse an integer subrange type\nAssert(-1 \n\nFor example\nstruct Positive {\n    int val;\n    Positive(int x) :val{x} { Assert(0 Note\n???\nEnforcement\nHard: there is a lot of code using unsigned and we don't offer a practical positive number type.\n1.7.10.4.8. ES.107: Don't use unsigned for subscripts\nReason\nTo avoid signed/unsigned confusion.\nTo enable better optimization.\nTo enable better error detection.\nExample, bad\nvector vec {1, 2, 3, 4, 5};\n\nfor (int i = 0; i ::size_type i = 0; i Note\nThe built-in array uses signed subscripts.\nThe standard-library containers use unsigned subscripts.\nThus, no perfect and fully compatible solution is possible.\nGiven the known problems with unsigned and signed/unsigned mixtures, better stick to (signed) integers.\nExample\ntemplate\nstruct My_container {\npublic:\n    // ...\n    T& operator[](int i);    // not unsigned\n    // ...\n};\nExample\n??? demonstrate improved code generation and potential for error detection ???\nAlternatives\nAlternatives for users\n\nuse algorithms\nuse range-for\nuse iterators/pointers\n\nEnforcement\nVery tricky as long as the standard-library containers get it wrong.\n1.7.11. Per: Performance\n??? should this section be in the main guide???\nThis section contains rules for people who need high performance or low-latency.\nThat is, these are rules that relate to how to use as little time and as few resources as possible to achieve a task in a predictably short time.\nThe rules in this section are more restrictive and intrusive than what is needed for many (most) applications.\nDo not blindly try to follow them in general code: achieving the goals of low latency requires extra work.\nPerformance rule summary:\n\nPer.1: Don't optimize without reason\nPer.2: Don't optimize prematurely\nPer.3: Don't optimize something that's not performance critical\nPer.4: Don't assume that complicated code is necessarily faster than simple code\nPer.5: Don't assume that low-level code is necessarily faster than high-level code\nPer.6: Don't make claims about performance without measurements\nPer.7: Design to enable optimization\nPer.10: Rely on the static type system\nPer.11: Move computation from run time to compile time\nPer.12: Eliminate redundant aliases\nPer.13: Eliminate redundant indirections\nPer.14: Minimize the number of allocations and deallocations\nPer.15: Do not allocate on a critical branch\nPer.16: Use compact data structures\nPer.17: Declare the most used member of a time-critical struct first\nPer.18: Space is time\nPer.19: Access memory predictably\nPer.30: Avoid context switches on the critical path\n\nPer.1: Don't optimize without reason\nReason\nIf there is no need for optimization, the main result of the effort will be more errors and higher maintenance costs.\nNote\nSome people optimize out of habit or because it's fun.\n???\nPer.2: Don't optimize prematurely\nReason\nElaborately optimized code is usually larger and harder to change than unoptimized code.\n???\nPer.3: Don't optimize something that's not performance critical\nReason\nOptimizing a non-performance-critical part of a program has no effect on system performance.\nNote\nIf your program spends most of its time waiting for the web or for a human, optimization of in-memory computation is probably useless.\nPut another way: If your program spends 4% of its processing time doing\ncomputation A and 40% of its time doing computation B, a 50% improvement on A is\nonly as impactful as a 5% improvement on B. (If you don't even know how much\ntime is spent on A or B, see Per.1 and Per.2.)\nPer.4: Don't assume that complicated code is necessarily faster than simple code\nReason\nSimple code can be very fast. Optimizers sometimes do marvels with simple code\nExample, good\n// clear expression of intent, fast execution\n\nvector v(100000);\n\nfor (auto& c : v)\n    c = ~c;\nExample, bad\n// intended to be faster, but is actually slower\n\nvector v(100000);\n\nfor (size_t i = 0; i (&v[i]);\n    quad_word = ~quad_word;\n}\nNote\n???\n???\nPer.5: Don't assume that low-level code is necessarily faster than high-level code\nReason\nLow-level code sometimes inhibits optimizations. Optimizers sometimes do marvels with high-level code.\nNote\n???\n???\nPer.6: Don't make claims about performance without measurements\nReason\nThe field of performance is littered with myth and bogus folklore.\nModern hardware and optimizers defy naive assumptions; even experts are regularly surprised.\nNote\nGetting good performance measurements can be hard and require specialized tools.\nNote\nA few simple microbenchmarks using Unix time or the standard-library  can help dispel the most obvious myths.\nIf you can't measure your complete system accurately, at least try to measure a few of your key operations and algorithms.\nA profiler can help tell you which parts of your system are performance critical.\nOften, you will be surprised.\n???\nPer.7: Design to enable optimization\nReason\nBecause we often need to optimize the initial design.\nBecause a design that ignore the possibility of later improvement is hard to change.\nExample\nFrom the C (and C++) standard:\nvoid qsort (void* base, size_t num, size_t size, int (*compar)(const void*, const void*));\nWhen did you even want to sort memory?\nReally, we sort sequences of elements, typically stored in containers.\nA call to qsort throws away much useful information (e.g., the element type), forces the user to repeat information\nalready known (e.g., the element size), and forces the user to write extra code (e.g., a function to compare doubles).\nThis implies added work for the programmer, is error-prone, and deprives the compiler of information needed for optimization.\ndouble data[100];\n// ... fill a ...\n\n// 100 chunks of memory of sizeof(double) starting at\n// address data using the order defined by compare_doubles\nqsort(data, 100, sizeof(double), compare_doubles);\nFrom the point of view of interface design is that qsort throws away useful information.\nWe can do better (in C++98)\ntemplate\n    void sort(Iter b, Iter e);  // sort [b:e)\n\nsort(data, data + 100);\nHere, we use the compiler's knowledge about the size of the array, the type of elements, and how to compare doubles.\nWith C++11 plus concepts, we can do better still\n// Sortable specifies that c must be a\n// random-access sequence of elements comparable with The key is to pass sufficient information for a good implementation to be chosen.\nIn this, the sort interfaces shown here still have a weakness:\nThey implicitly rely on the element type having less-than () defined.\nTo complete the interface, we need a second version that accepts a comparison criteria:\n// compare elements of c using p\nvoid sort(Sortable& c, Predicate> p);\nThe standard-library specification of sort offers those two versions,\nbut the semantics is expressed in English rather than code using concepts.\nNote\nPremature optimization is said to be the root of all evil, but that's not a reason to despise performance.\nIt is never premature to consider what makes a design amenable to improvement, and improved performance is a commonly desired improvement.\nAim to build a set of habits that by default results in efficient, maintainable, and optimizable code.\nIn particular, when you write a function that is not a one-off implementation detail, consider\n\nInformation passing:\nPrefer clean interfaces carrying sufficient information for later improvement of implementation.\nNote that information flows into and out of an implementation through the interfaces we provide.\nCompact data: By default, use compact data, such as std::vector and access it in a systematic fashion.\nIf you think you need a linked structure, try to craft the interface so that this structure isn't seen by users.\nFunction argument passing and return:\nDistinguish between mutable and non-mutable data.\nDon't impose a resource management burden on your users.\nDon't impose spurious run-time indirections on your users.\nUse conventional ways of passing information through an interface;\nunconventional and/or \"optimized\" ways of passing data can seriously complicate later reimplementation.\nAbstraction:\nDon't overgeneralize; a design that tries to cater for every possible use (and misuse) and defers every design decision for later\n(using compile-time or run-time indirections) is usually a complicated, bloated, hard-to-understand mess.\nGeneralize from concrete examples, preserving performance as we generalize.\nDo not generalize based on mere speculation about future needs.\nThe ideal is zero-overhead generalization.\nLibraries:\nUse libraries with good interfaces.\nIf no library is available build one yourself and imitate the interface style from a good library.\nThe standard library is a good first place to look for inspiration.\nIsolation:\nIsolate your code from messy and/or old-style code by providing an interface of your choosing to it.\nThis is sometimes called \"providing a wrapper\" for the useful/necessary but messy code.\nDon't let bad designs \"bleed into\" your code.\n\nExample\nConsider:\ntemplate \nbool binary_search(ForwardIterator first, ForwardIterator last, const T& val);\nbinary_search(begin(c), end(c), 7) will tell you whether 7 is in c or not.\nHowever, it will not tell you where that 7 is or whether there are more than one 7.\nSometimes, just passing the minimal amount of information back (here, true or false) is sufficient, but a good interface passes\nneeded information back to the caller. Therefore, the standard library also offers\ntemplate \nForwardIterator lower_bound(ForwardIterator first, ForwardIterator last, const T& val);\nlower_bound returns an iterator to the first match if any, otherwise last.\nHowever, lower_bound still doesn't return enough information for all uses, so the standard library also offers\ntemplate \npair\nequal_range(ForwardIterator first, ForwardIterator last, const T& val);\nequal_range returns a pair of iterators specifying the first and one beyond last match.\nauto r = equal_range(begin(c), end(c), 7);\nfor (auto p = r.first(); p != r.second(), ++p)\n    cout Obviously, these three interfaces are implemented by the same basic code.\nThey are simply three ways of presenting the basic binary search algorithm to users,\nranging from the simplest (\"make simple things simple!\")\nto returning complete, but not always needed, information (\"don't hide useful information\").\nNaturally, crafting such a set of interfaces requires experience and domain knowledge.\nNote\nDo not simply craft the interface to match the first implementation and the first use case you think of.\nOnce your first initial implementation is complete, review it; once you deploy it, mistakes will be hard to remedy.\nNote\nA need for efficiency does not imply a need for low-level code.\nHigh-level code does not imply slow or bloated.\nNote\nThings have costs.\nDon't be paranoid about costs (modern computers really are very fast),\nbut have a rough idea of the order of magnitude of cost of what you use.\nFor example, have a rough idea of the cost of\na memory access,\na function call,\na string comparison,\na system call,\na disk access,\nand a message through a network.\nNote\nIf you can only think of one implementation, you probably don't have something for which you can devise a stable interface.\nMaybe, it is just an implementation detail - not every piece of code needs a stable interface - but pause and consider.\nOne question that can be useful is\n\"what interface would be needed if this operation should be implemented using multiple threads? be vectorized?\"\nNote\nThis rule does not contradict the Don't optimize prematurely rule.\nIt complements it encouraging developers enable later - appropriate and non-premature - optimization, if and where needed.\nEnforcement\nTricky.\nMaybe looking for void* function arguments will find examples of interfaces that hinder later optimization.\nPer.10: Rely on the static type system\nReason\nType violations, weak types (e.g. void*s), and low-level code (e.g., manipulation of sequences as individual bytes) make the job of the optimizer much harder. Simple code often optimizes better than hand-crafted complex code.\n???\nPer.11: Move computation from run time to compile time\n???\nPer.12: Eliminate redundant aliases\n???\nPer.13: Eliminate redundant indirections\n???\nPer.14: Minimize the number of allocations and deallocations\n???\nPer.15: Do not allocate on a critical branch\n???\nPer.16: Use compact data structures\nReason\nPerformance is typically dominated by memory access times.\n???\nPer.17: Declare the most used member of a time-critical struct first\n???\nPer.18: Space is time\nReason\nPerformance is typically dominated by memory access times.\n???\nPer.19: Access memory predictably\nReason\nPerformance is very sensitive to cache performance and cache algorithms favor simple (usually linear) access to adjacent data.\nExample\nint matrix[rows][cols];\n\n// bad\nfor (int c = 0; c Per.30: Avoid context switches on the critical path\n???\n1.7.12. CP: Concurrency and Parallelism\nWe often want our computers to do many tasks at the same time (or at least make them appear to do them at the same time).\nThe reasons for doing so varies (e.g., wanting to wait for many events using only a single processor, processing many data streams simultaneously, or utilizing many hardware facilities)\nand so does the basic facilities for expressing concurrency and parallelism.\nHere, we articulate a few general principles and rules for using the ISO standard C++ facilities for expressing basic concurrency and parallelism.\nThe core machine support for concurrent and parallel programming is the thread.\nThreads allow you to run multiple instances of your program independently, while sharing\nthe same memory. Concurrent programming is tricky for many reasons, most\nimportantly that it is undefined behavior to read data in one thread after it\nwas written by another thread, if there is no proper synchronization between\nthose threads. Making existing single-threaded code execute concurrently can be\nas trivial as adding std::async or std::thread strategically, or it can\nnecessitate a full rewrite, depending on whether the original code was written\nin a thread-friendly way.\nThe concurrency/parallelism rules in this document are designed with three goals\nin mind:\n\nTo help you write code that is amenable to being used in a threaded\nenvironment\nTo show clean, safe ways to use the threading primitives offered by the\nstandard library\nTo offer guidance on what to do when concurrency and parallelism aren't giving\nyou the performance gains you need\n\nIt is also important to note that concurrency in C++ is an unfinished\nstory. C++11 introduced many core concurrency primitives, C++14 improved on\nthem, and it seems that there is much interest in making the writing of\nconcurrent programs in C++ even easier. We expect some of the library-related\nguidance here to change significantly over time.\nThis section needs a lot of work (obviously).\nPlease note that we start with rules for relative non-experts.\nReal experts must wait a bit;\ncontributions are welcome,\nbut please think about the majority of programmers who are struggling to get their concurrent programs correct and performant.\nConcurrency and parallelism rule summary:\n\nCP.1: Assume that your code will run as part of a multi-threaded program\nCP.2: Avoid data races\nCP.3: Minimize explicit sharing of writable data\nCP.4: Think in terms of tasks, rather than threads\nCP.8: Don't try to use volatile for synchronization\nCP.9: Whenever feasible use tools to validate your concurrent code\n\nSee also:\n\nCP.con: Concurrency\nCP.par: Parallelism\nCP.mess: Message passing\nCP.vec: Vectorization\nCP.free: Lock-free programming\nCP.etc: Etc. concurrency rules\n\nCP.1: Assume that your code will run as part of a multi-threaded program\nReason\nIt is hard to be certain that concurrency isn't used now or will be sometime in the future.\nCode gets reused.\nLibraries using threads may be used from some other part of the program.\nNote that this applies most urgently to library code and least urgently to stand-alone applications.\nHowever, thanks to the magic of cut-and-paste, code fragments can turn up in unexpected places.\nExample\ndouble cached_computation(double x)\n{\n    static double cached_x = 0.0;\n    static double cached_result = COMPUTATION_OF_ZERO;\n    double result;\n\n    if (cached_x == x)\n        return cached_result;\n    result = computation(x);\n    cached_x = x;\n    cached_result = result;\n    return result;\n}\nAlthough cached_computation works perfectly in a single-threaded environment, in a multi-threaded environment the two static variables result in data races and thus undefined behavior.\nThere are several ways that this example could be made safe for a multi-threaded environment:\n\nDelegate concurrency concerns upwards to the caller.\nMark the static variables as thread_local (which might make caching less effective).\nImplement concurrency control, for example, protecting the two static variables with a static lock (which might reduce performance).\nHave the caller provide the memory to be used for the cache, thereby delegating both memory allocation and concurrency concerns upwards to the caller.\nRefuse to build and/or run in a multi-threaded environment.\nProvide two implementations, one which is used in single-threaded environments and another which is used in multi-threaded environments.\n\nException\nCode that is never run in a multi-threaded environment.\nBe careful: there are many examples where code that was \"known\" to never run in a multi-threaded program\nwas run as part of a multi-threaded program. Often years later.\nTypically, such programs lead to a painful effort to remove data races.\nTherefore, code that is never intended to run in a multi-threaded environment should be clearly labeled as such and ideally come with compile or run-time enforcement mechanisms to catch those usage bugs early.\nCP.2: Avoid data races\nReason\nUnless you do, nothing is guaranteed to work and subtle errors will persist.\nNote\nIn a nutshell, if two threads can access the same object concurrently (without synchronization), and at least one is a writer (performing a non-const operation), you have a data race.\nFor further information of how to use synchronization well to eliminate data races, please consult a good book about concurrency.\nExample, bad\nThere are many examples of data races that exist, some of which are running in\nproduction software at this very moment. One very simple example:\nint get_id() {\n  static int id = 1;\n  return id++;\n}\nThe increment here is an example of a data race. This can go wrong in many ways,\nincluding:\n\nThread A loads the value of id, the OS context switches A out for some\nperiod, during which other threads create hundreds of IDs. Thread A is then\nallowed to run again, and id is written back to that location as A's read of\nid plus one.\nThread A and B load id and increment it simultaneously.  They both get the\nsame ID.\n\nLocal static variables are a common source of data races.\nExample, bad:\nvoid f(fstream&  fs, regex pat)\n{\n    array buf;\n    int sz = read_vec(fs, buf, max);            // read from fs into buf\n    gsl::span s {buf};\n    // ...\n    auto h1 = async([&]{ sort(par, s); });     // spawn a task to sort\n    // ...\n    auto h2 = async([&]{ return find_all(buf, sz, pat); });   // spawn a task to find matches\n    // ...\n}\nHere, we have a (nasty) data race on the elements of buf (sort will both read and write).\nAll data races are nasty.\nHere, we managed to get a data race on data on the stack.\nNot all data races are as easy to spot as this one.\nExample, bad:\n// code not controlled by a lock\n\nunsigned val;\n\nif (val Now, a compiler that does not know that val can change will  most likely implement that switch using a jump table with five entries.\nThen, a val outside the [0..4] range will cause a jump to an address that could be anywhere in the program, and execution would proceed there.\nReally, \"all bets are off\" if you get a data race.\nActually, it can be worse still: by looking at the generated code you may be able to determine where the stray jump will go for a given value;\nthis can be a security risk.\nEnforcement\nSome is possible, do at least something.\nThere are commercial and open-source tools that try to address this problem,\nbut be aware that solutions have costs and blind spots.\nStatic tools often have many false positives and run-time tools often have a significant cost.\nWe hope for better tools.\nUsing multiple tools can catch more problems than a single one.\nThere are other ways you can mitigate the chance of data races:\n\nAvoid global data\nAvoid static variables\nMore use of value types on the stack (and don't pass pointers around too much)\nMore use of immutable data (literals, constexpr, and const)\n\nCP.3: Minimize explicit sharing of writable data\nReason\nIf you don't share writable data, you can't have a data race.\nThe less sharing you do, the less chance you have to forget to synchronize access (and get data races).\nThe less sharing you do, the less chance you have to wait on a lock (so performance can improve).\nExample\nbool validate(const vector&);\nGraph temperature_gradiants(const vector&);\nImage altitude_map(const vector&);\n// ...\n\nvoid process_readings(const vector& surface_readings)\n{\n    auto h1 = async([&] { if (!validate(surface_readings)) throw Invalid_data{}; });\n    auto h2 = async([&] { return temperature_gradiants(surface_readings); });\n    auto h3 = async([&] { return altitude_map(surface_readings); });\n    // ...\n    h1.get();\n    auto v2 = h2.get();\n    auto v3 = h3.get();\n    // ...\n}\nWithout those consts, we would have to review every asynchronously invoked function for potential data races on surface_readings.\nMaking surface_readings be const (with respect to this function) allow reasoning using only the function body.\nNote\nImmutable data can be safely and efficiently shared.\nNo locking is needed: You can't have a data race on a constant.\nEnforcement\n???\nCP.4: Think in terms of tasks, rather than threads\nReason\nA thread is an implementation concept, a way of thinking about the machine.\nA task is an application notion, something you'd like to do, preferably concurrently with other tasks.\nApplication concepts are easier to reason about.\nExample\n???\nNote\nWith the exception of async(), the standard-library facilities are low-level, machine-oriented, threads-and-lock level.\nThis is a necessary foundation, but we have to try to raise the level of abstraction: for productivity, for reliability, and for performance.\nThis is a potent argument for using higher level, more applications-oriented libraries (if possibly, built on top of standard-library facilities).\nEnforcement\n???\nCP.8: Don't try to use volatile for synchronization\nReason\nIn C++, unlike some other languages, volatile does not provide atomicity, does not synchronize between threads,\nand does not prevent instruction reordering (neither compiler nor hardware).\nIt simply has nothing to do with concurrency.\nExample, bad:\nint free_slots = max_slots; // current source of memory for objects\n\nPool* use()\n{\n    if (int n = free_slots--) return &pool[n];\n}\nHere we have a problem:\nThis is perfectly good code in a single-threaded program, but have two threads execute this and\nthere is a race condition on free_slots so that two threads might get the same value and free_slots.\nThat's (obviously) a bad data race, so people trained in other languages may try to fix it like this:\nvolatile int free_slots = max_slots; // current source of memory for objects\n\nPool* use()\n{\n    if (int n = free_slots--) return &pool[n];\n}\nThis has no effect on synchronization: The data race is still there!\nThe C++ mechanism for this is atomic types:\natomic free_slots = max_slots; // current source of memory for objects\n\nPool* use()\n{\n    if (int n = free_slots--) return &pool[n];\n}\nNow the -- operation is atomic,\nrather than a read-increment-write sequence where another thread might get in-between the individual operations.\nAlternative\nUse atomic types where you might have used volatile in some other language.\nUse a mutex for more complicated examples.\nSee also\n(rare) proper uses of volatile\nCP.9: Whenever feasible use tools to validate your concurrent code\nExperience shows that concurrent code is exceptionally hard to get right\nand that compile-time checking, run-time checks, and testing are less effective at finding concurrency errors\nthan they are at finding errors in sequential code.\nSubtle concurrency errors can have dramatically bad effects, including memory corruption and deadlocks.\nExample\n???\nNote\nThread safety is challenging, often getting the better of experienced programmers: tooling is an important strategy to mitigate those risks.\nThere are many tools \"out there\", both commercial and open-source tools, both research and production tools.\nUnfortunately people's needs and constraints differ so dramatically that we cannot make specific recommendations,\nbut we can mention:\n\nStatic enforcement tools: both clang\nand some older versions of GCC\nhave some support for static annotation of thread safety properties.\nConsistent use of this technique turns many classes of thread-safety errors into compile-time errors.\nThe annotations are generally local (marking a particular member variable as guarded by a particular mutex),\nand are usually easy to learn. However, as with many static tools, it can often present false negatives;\ncases that should have been caught but were allowed.\n\ndynamic enforcement tools: Clang's Thread Sanitizer (aka TSAN)\nis a powerful example of dynamic tools: it changes the build and execution of your program to add bookkeeping on memory access,\nabsolutely identifying data races in a given execution of your binary.\nThe cost for this is both memory (5-10x in most cases) and CPU slowdown (2-20x).\nDynamic tools like this are best when applied to integration tests, canary pushes, or unittests that operate on multiple threads.\nWorkload matters: When TSAN identifies a problem, it is effectively always an actual data race,\nbut it can only identify races seen in a given execution.\n\n\nEnforcement\nIt is up to an application builder to choose which support tools are valuable for a particular applications.\n1.7.12.1. CP.con: Concurrency\nThis section focuses on relatively ad-hoc uses of multiple threads communicating through shared data.\n\nFor parallel algorithms, see parallelism\nFor inter-task communication without explicit sharing, see messaging\nFor vector parallel code, see vectorization\nFor lock-free programming, see lock free\n\nConcurrency rule summary:\n\nCP.20: Use RAII, never plain lock()/unlock()\nCP.21: Use std::lock() or std::scoped_lock to acquire multiple mutexes\nCP.22: Never call unknown code while holding a lock (e.g., a callback)\nCP.23: Think of a joining thread as a scoped container\nCP.24: Think of a thread as a global container\nCP.25: Prefer gsl::joining_thread over std::thread\nCP.26: Don't detach() a thread\nCP.31: Pass small amounts of data between threads by value, rather than by reference or pointer\nCP.32: To share ownership between unrelated threads use shared_ptr\nCP.40: Minimize context switching\nCP.41: Minimize thread creation and destruction\nCP.42: Don't wait without a condition\nCP.43: Minimize time spent in a critical section\nCP.44: Remember to name your lock_guards and unique_locks\nCP.50: Define a mutex together with the data it protects\n??? when to use a spinlock\n??? when to use try_lock()\n??? when to prefer lock_guard over unique_lock\n??? Time multiplexing\n??? when/how to use new thread\n\n1.7.12.1.1. CP.20: Use RAII, never plain lock()/unlock()\nReason\nAvoids nasty errors from unreleased locks.\nExample, bad\nmutex mtx;\n\nvoid do_stuff()\n{\n    mtx.lock();\n    // ... do stuff ...\n    mtx.unlock();\n}\nSooner or later, someone will forget the mtx.unlock(), place a return in the ... do stuff ..., throw an exception, or something.\nmutex mtx;\n\nvoid do_stuff()\n{\n    unique_lock lck {mtx};\n    // ... do stuff ...\n}\nEnforcement\nFlag calls of member lock() and unlock().  ???\n1.7.12.1.2. CP.21: Use std::lock() or std::scoped_lock to acquire multiple mutexes\nReason\nTo avoid deadlocks on multiple mutexes.\nExample\nThis is asking for deadlock:\n// thread 1\nlock_guard lck1(m1);\nlock_guard lck2(m2);\n\n// thread 2\nlock_guard lck2(m2);\nlock_guard lck1(m1);\nInstead, use lock():\n// thread 1\nlock(m1, m2);\nlock_guard lck1(m1, adopt_lock);\nlock_guard lck2(m2, adopt_lock);\n\n// thread 2\nlock(m2, m1);\nlock_guard lck2(m2, adopt_lock);\nlock_guard lck1(m1, adopt_lock);\nor (better, but C++17 only):\n// thread 1\nscoped_lock lck1(m1, m2);\n\n// thread 2\nscoped_lock lck2(m2, m1);\nHere, the writers of thread1 and thread2 are still not agreeing on the order of the mutexes, but order no longer matters.\nNote\nIn real code, mutexes are rarely named to conveniently remind the programmer of an intended relation and intended order of acquisition.\nIn real code, mutexes are not always conveniently acquired on consecutive lines.\nIn C++17 it's possible to write plain\nlock_guard lck1(m1, adopt_lock);\nand have the mutex type deduced.\nEnforcement\nDetect the acquisition of multiple mutexes.\nThis is undecidable in general, but catching common simple examples (like the one above) is easy.\n1.7.12.1.3. CP.22: Never call unknown code while holding a lock (e.g., a callback)\nReason\nIf you don't know what a piece of code does, you are risking deadlock.\nExample\nvoid do_this(Foo* p)\n{\n    lock_guard lck {my_mutex};\n    // ... do something ...\n    p->act(my_data);\n    // ...\n}\nIf you don't know what Foo::act does (maybe it is a virtual function invoking a derived class member of a class not yet written),\nit may call do_this (recursively) and cause a deadlock on my_mutex.\nMaybe it will lock on a different mutex and not return in a reasonable time, causing delays to any code calling do_this.\nExample\nA common example of the \"calling unknown code\" problem is a call to a function that tries to gain locked access to the same object.\nSuch problem can often be solved by using a recursive_mutex. For example:\nrecursive_mutex my_mutex;\n\ntemplate\nvoid do_something(Action f)\n{\n    unique_lock lck {my_mutex};\n    // ... do something ...\n    f(this);    // f will do something to *this\n    // ...\n}\nIf, as it is likely, f() invokes operations on *this, we must make sure that the object's invariant holds before the call.\nEnforcement\n\nFlag calling a virtual function with a non-recursive mutex held\nFlag calling a callback with a non-recursive mutex held\n\n1.7.12.1.4. CP.23: Think of a joining thread as a scoped container\nReason\nTo maintain pointer safety and avoid leaks, we need to consider what pointers are used by a thread.\nIf a thread joins, we can safely pass pointers to objects in the scope of the thread and its enclosing scopes.\nExample\nvoid f(int* p)\n{\n    // ...\n    *p = 99;\n    // ...\n}\nint glob = 33;\n\nvoid some_fct(int* p)\n{\n    int x = 77;\n    joining_thread t0(f, &x);           // OK\n    joining_thread t1(f, p);            // OK\n    joining_thread t2(f, &glob);        // OK\n    auto q = make_unique(99);\n    joining_thread t3(f, q.get());      // OK\n    // ...\n}\nA gsl::joining_thread is a std::thread with a destructor that joins and that cannot be detached().\nBy \"OK\" we mean that the object will be in scope (\"live\") for as long as a thread can use the pointer to it.\nThe fact that threads run concurrently doesn't affect the lifetime or ownership issues here;\nthese threads can be seen as just a function object called from some_fct.\nEnforcement\nEnsure that joining_threads don't detach().\nAfter that, the usual lifetime and ownership (for local objects) enforcement applies.\n1.7.12.1.5. CP.24: Think of a thread as a global container\nReason\nTo maintain pointer safety and avoid leaks, we need to consider what pointers are used by a thread.\nIf a thread is detached, we can safely pass pointers to static and free store objects (only).\nExample\nvoid f(int* p)\n{\n    // ...\n    *p = 99;\n    // ...\n}\n\nint glob = 33;\n\nvoid some_fct(int* p)\n{\n    int x = 77;\n    std::thread t0(f, &x);           // bad\n    std::thread t1(f, p);            // bad\n    std::thread t2(f, &glob);        // OK\n    auto q = make_unique(99);\n    std::thread t3(f, q.get());      // bad\n    // ...\n    t0.detach();\n    t1.detach();\n    t2.detach();\n    t3.detach();\n    // ...\n}\nBy \"OK\" we mean that the object will be in scope (\"live\") for as long as a thread can use the pointers to it.\nBy \"bad\" we mean that a thread may use a pointer after the pointed-to object is destroyed.\nThe fact that threads run concurrently doesn't affect the lifetime or ownership issues here;\nthese threads can be seen as just a function object called from some_fct.\nNote\nEven objects with static storage duration can be problematic if used from detached threads: if the\nthread continues until the end of the program, it might be running concurrently with the destruction\nof objects with static storage duration, and thus accesses to such objects might race.\nNote\nThis rule is redundant if you don't detach() and use gsl::joining_thread.\nHowever, converting code to follow those guidelines could be difficult and even impossible for third-party libraries.\nIn such cases, the rule becomes essential for lifetime safety and type safety.\nIn general, it is undecidable whether a detach() is executed for a thread, but simple common cases are easily detected.\nIf we cannot prove that a thread does not detach(), we must assume that it does and that it outlives the scope in which it was constructed;\nAfter that, the usual lifetime and ownership (for global objects) enforcement applies.\nEnforcement\nFlag attempts to pass local variables to a thread that might detach().\n1.7.12.1.6. CP.25: Prefer gsl::joining_thread over std::thread\nReason\nA joining_thread is a thread that joins at the end of its scope.\nDetached threads are hard to monitor.\nIt is harder to ensure absence of errors in detached threads (and potentially detached threads)\nExample, bad\nvoid f() { std::cout Example\nvoid f() { std::cout Example, bad\nThe code determining whether to join() or detach() may be complicated and even decided in the thread of functions called from it or functions called by the function that creates a thread:\nvoid tricky(thread* t, int n)\n{\n    // ...\n    if (is_odd(n))\n        t->detach();\n    // ...\n}\n\nvoid use(int n)\n{\n    thread t { tricky, this, n };\n    // ...\n    // ... should I join here? ...\n}\nThis seriously complicates lifetime analysis, and in not too unlikely cases makes lifetime analysis impossible.\nThis implies that we cannot safely refer to local objects in use() from the thread or refer to local objects in the thread from use().\nNote\nMake \"immortal threads\" globals, put them in an enclosing scope, or put them on the on the free store rather than detach().\ndon't detach.\nNote\nBecause of old code and third party libraries using std::thread this rule can be hard to introduce.\nEnforcement\nFlag uses of std::thread:\n\nSuggest use of gsl::joining_thread.\nSuggest \"exporting ownership\" to an enclosing scope if it detaches.\nSeriously warn if it is not obvious whether if joins of detaches.\n\n1.7.12.1.7. CP.26: Don't detach() a thread\nReason\nOften, the need to outlive the scope of its creation is inherent in the threads task,\nbut implementing that idea by detach makes it harder to monitor and communicate with the detached thread.\nIn particular, it is harder (though not impossible) to ensure that the thread completed as expected or lives for as long as expected.\nExample\nvoid heartbeat();\n\nvoid use()\n{\n    std::thread t(heartbeat);             // don't join; heartbeat is meant to run forever\n    t.detach();\n    // ...\n}\nThis is a reasonable use of a thread, for which detach() is commonly used.\nThere are problems, though.\nHow do we monitor the detached thread to see if it is alive?\nSomething might go wrong with the heartbeat, and losing a heartbeat can be very serious in a system for which it is needed.\nSo, we need to communicate with the heartbeat thread\n(e.g., through a stream of messages or notification events using a condition_variable).\nAn alternative, and usually superior solution is to control its lifetime by placing it in a scope outside its point of creation (or activation).\nFor example:\nvoid heartbeat();\n\ngsl::joining_thread t(heartbeat);             // heartbeat is meant to run \"forever\"\nThis heartbeat will (barring error, hardware problems, etc.) run for as long as the program does.\nSometimes, we need to separate the point of creation from the point of ownership:\nvoid heartbeat();\n\nunique_ptr tick_tock {nullptr};\n\nvoid use()\n{\n    // heartbeat is meant to run as long as tick_tock lives\n    tick_tock = make_unique(heartbeat);\n    // ...\n}\nEnforcement\nFlag detach().\n1.7.12.1.8. CP.31: Pass small amounts of data between threads by value, rather than by reference or pointer\nReason\nCopying a small amount of data is cheaper to copy and access than to share it using some locking mechanism.\nCopying naturally gives unique ownership (simplifies code) and eliminates the possibility of data races.\nNote\nDefining \"small amount\" precisely is impossible.\nExample\nstring modify1(string);\nvoid modify2(shared_ptr);\n\nvoid fct(string& s)\n{\n    auto res = async(modify1, s);\n    async(modify2, &s);\n}\nThe call of modify1 involves copying two string values; the call of modify2 does not.\nOn the other hand, the implementation of modify1 is exactly as we would have written it for single-threaded code,\nwhereas the implementation of modify2 will need some form of locking to avoid data races.\nIf the string is short (say 10 characters), the call of modify1 can be surprisingly fast;\nessentially all the cost is in the thread switch. If the string is long (say 1,000,000 characters), copying it twice\nis probably not a good idea.\nNote that this argument has nothing to do with sync as such. It applies equally to considerations about whether to use\nmessage passing or shared memory.\nEnforcement\n???\n1.7.12.1.9. CP.32: To share ownership between unrelated threads use shared_ptr\nReason\nIf threads are unrelated (that is, not known to be in the same scope or one within the lifetime of the other)\nand they need to share free store memory that needs to be deleted, a shared_ptr (or equivalent) is the only\nsafe way to ensure proper deletion.\nExample\n???\nNote\n\nA static object (e.g. a global) can be shared because it is not owned in the sense that some thread is responsible for it's deletion.\nAn object on free store that is never to be deleted can be shared.\nAn object owned by one thread can be safely shared with another as long as that second thread doesn't outlive the owner.\n\nEnforcement\n???\n1.7.12.1.10. CP.40: Minimize context switching\nReason\nContext switches are expensive.\nExample\n???\nEnforcement\n???\n1.7.12.1.11. CP.41: Minimize thread creation and destruction\nReason\nThread creation is expensive.\nExample\nvoid worker(Message m)\n{\n    // process\n}\n\nvoid master(istream& is)\n{\n    for (Message m; is >> m; )\n        run_list.push_back(new thread(worker, m));\n}\nThis spawns a thread per message, and the run_list is presumably managed to destroy those tasks once they are finished.\nInstead, we could have a set of pre-created worker threads processing the messages\nSync_queue work;\n\nvoid master(istream& is)\n{\n    for (Message m; is >> m; )\n        work.put(m);\n}\n\nvoid worker()\n{\n    for (Message m; m = work.get(); ) {\n        // process\n    }\n}\n\nvoid workers()  // set up worker threads (specifically 4 worker threads)\n{\n    joining_thread w1 {worker};\n    joining_thread w2 {worker};\n    joining_thread w3 {worker};\n    joining_thread w4 {worker};\n}\nNote\nIf your system has a good thread pool, use it.\nIf your system has a good message queue, use it.\nEnforcement\n???\n1.7.12.1.12. CP.42: Don't wait without a condition\nReason\nA wait without a condition can miss a wakeup or wake up simply to find that there is no work to do.\nExample, bad\nstd::condition_variable cv;\nstd::mutex mx;\n\nvoid thread1()\n{\n    while (true) {\n        // do some work ...\n        std::unique_lock lock(mx);\n        cv.notify_one();    // wake other thread\n    }\n}\n\nvoid thread2()\n{\n    while (true) {\n        std::unique_lock lock(mx);\n        cv.wait(lock);    // might block forever\n        // do work ...\n    }\n}\nHere, if some other thread consumes thread1's notification, thread2 can wait forever.\nExample\ntemplate\nclass Sync_queue {\npublic:\n    void put(const T& val);\n    void put(T&& val);\n    void get(T& val);\nprivate:\n    mutex mtx;\n    condition_variable cond;    // this controls access\n    list q;\n};\n\ntemplate\nvoid Sync_queue::put(const T& val)\n{\n    lock_guard lck(mtx);\n    q.push_back(val);\n    cond.notify_one();\n}\n\ntemplate\nvoid Sync_queue::get(T& val)\n{\n    unique_lock lck(mtx);\n    cond.wait(lck, [this]{ return !q.empty(); });    // prevent spurious wakeup\n    val = q.front();\n    q.pop_front();\n}\nNow if the queue is empty when a thread executing get() wakes up (e.g., because another thread has gotten to get() before it),\nit will immediately go back to sleep, waiting.\nEnforcement\nFlag all waits without conditions.\n1.7.12.1.13. CP.43: Minimize time spent in a critical section\nReason\nThe less time is spent with a mutex taken, the less chance that another thread has to wait,\nand thread suspension and resumption are expensive.\nExample\nvoid do_something() // bad\n{\n    unique_lock lck(my_lock);\n    do0();  // preparation: does not need lock\n    do1();  // transaction: needs locking\n    do2();  // cleanup: does not need locking\n}\nHere, we are holding the lock for longer than necessary:\nWe should not have taken the lock before we needed it and should have released it again before starting the cleanup.\nWe could rewrite this to\nvoid do_something() // bad\n{\n    do0();  // preparation: does not need lock\n    my_lock.lock();\n    do1();  // transaction: needs locking\n    my_lock.unlock();\n    do2();  // cleanup: does not need locking\n}\nBut that compromises safety and violates the use RAII rule.\nInstead, add a block for the critical section:\nvoid do_something() // OK\n{\n    do0();  // preparation: does not need lock\n    {\n        unique_lock lck(my_lock);\n        do1();  // transaction: needs locking\n    }\n    do2();  // cleanup: does not need locking\n}\nEnforcement\nImpossible in general.\nFlag \"naked\" lock() and unlock().\n1.7.12.1.14. CP.44: Remember to name your lock_guards and unique_locks\nReason\nAn unnamed local objects is a temporary that immediately goes out of scope.\nExample\nunique_lock(m1);\nlock_guard {m2};\nlock(m1, m2);\nThis looks innocent enough, but it isn't.\nEnforcement\nFlag all unnamed lock_guards and unique_locks.\n1.7.12.1.15. P.50: Define a mutex together with the data it guards. Use synchronized_value where possible\nReason\nIt should be obvious to a reader that the data is to be guarded and how. This decreases the chance of the wrong mutex being locked, or the mutex not being locked.\nUsing a synchronized_value ensures that the data has a mutex, and the right mutex is locked when the data is accessed.\nSee the WG21 proposal) to add synchronized_value to a future TS or revision of the C++ standard.\nExample\nstruct Record {\n    std::mutex m;   // take this mutex before accessing other members\n    // ...\n};\n\nclass MyClass {\n    struct DataRecord {\n       // ...\n    };\n    synchronized_value data; // Protect the data with a mutex\n};\nEnforcement\n??? Possible?\n1.7.12.2. CP.par: Parallelism\nBy \"parallelism\" we refer to performing a task (more or less) simultaneously (\"in parallel with\") on many data items.\nParallelism rule summary:\n\n???\n???\nWhere appropriate, prefer the standard-library parallel algorithms\nUse algorithms that are designed for parallelism, not algorithms with unnecessary dependency on linear evaluation\n\n1.7.12.3. CP.mess: Message passing\nThe standard-library facilities are quite low-level, focused on the needs of close-to the hardware critical programming using threads, mutexes, atomic types, etc.\nMost people shouldn't work at this level: it's error-prone and development is slow.\nIf possible, use a higher level facility: messaging libraries, parallel algorithms, and vectorization.\nThis section looks at passing messages so that a programmer doesn't have to do explicit synchronization.\nMessage passing rules summary:\n\nCP.60: Use a future to return a value from a concurrent task\nCP.61: Use a async() to spawn a concurrent task\nmessage queues\nmessaging libraries\n\n???? should there be a \"use X rather than std::async\" where X is something that would use a better specified thread pool?\n??? Is std::async worth using in light of future (and even existing, as libraries) parallelism facilities? What should the guidelines recommend if someone wants to parallelize, e.g., std::accumulate (with the additional precondition of commutativity), or merge sort?\n1.7.12.3.1. CP.60: Use a future to return a value from a concurrent task\nReason\nA future preserves the usual function call return semantics for asynchronous tasks.\nThe is no explicit locking and both correct (value) return and error (exception) return are handled simply.\nExample\n???\nNote\n???\nEnforcement\n???\n1.7.12.3.2. CP.61: Use a async() to spawn a concurrent task\nReason\nA future preserves the usual function call return semantics for asynchronous tasks.\nThe is no explicit locking and both correct (value) return and error (exception) return are handled simply.\nExample\n???\nNote\nUnfortunately, async() is not perfect.\nFor example, there is no guarantee that a thread pool is used to minimize thread construction.\nIn fact, most current async() implementations don't.\nHowever, async() is simple and logically correct so until something better comes along\nand unless you really need to optimize for many asynchronous tasks, stick with async().\nEnforcement\n???\n1.7.12.4. CP.vec: Vectorization\nVectorization is a technique for executing a number of tasks concurrently without introducing explicit synchronization.\nAn operation is simply applied to elements of a data structure (a vector, an array, etc.) in parallel.\nVectorization has the interesting property of often requiring no non-local changes to a program.\nHowever, vectorization works best with simple data structures and with algorithms specifically crafted to enable it.\nVectorization rule summary:\n\n???\n???\n\n1.7.12.5. CP.free: Lock-free programming\nSynchronization using mutexes and condition_variables can be relatively expensive.\nFurthermore, it can lead to deadlock.\nFor performance and to eliminate the possibility of deadlock, we sometimes have to use the tricky low-level \"lock-free\" facilities\nthat rely on briefly gaining exclusive (\"atomic\") access to memory.\nLock-free programming is also used to implement higher-level concurrency mechanisms, such as threads and mutexes.\nLock-free programming rule summary:\n\nCP.100: Don't use lock-free programming unless you absolutely have to\nCP.101: Distrust your hardware/compiler combination\nCP.102: Carefully study the literature\nhow/when to use atomics\navoid starvation\nuse a lock-free data structure rather than hand-crafting specific lock-free access\nCP.110: Do not write your own double-checked locking for initialization\nCP.111: Use a conventional pattern if you really need double-checked locking\nhow/when to compare and swap\n\n1.7.12.5.1. CP.100: Don't use lock-free programming unless you absolutely have to\nReason\nIt's error-prone and requires expert level knowledge of language features, machine architecture, and data structures.\nExample, bad\nextern atomic head;        // the shared head of a linked list\n\nLink* nh = new Link(data, nullptr);    // make a link ready for insertion\nLink* h = head.load();                 // read the shared head of the list\n\ndo {\n    if (h->data next = h;                      // next element is the previous head\n} while (!head.compare_exchange_weak(h, nh));    // write nh to head or to h\nSpot the bug.\nIt would be really hard to find through testing.\nRead up on the ABA problem.\nException\nAtomic variables can be used simply and safely, as long as you are using the sequentially consistent memory model (memory_order_seq_cst), which is the default.\nNote\nHigher-level concurrency mechanisms, such as threads and mutexes are implemented using lock-free programming.\nAlternative: Use lock-free data structures implemented by others as part of some library.\n1.7.12.5.2. CP.101: Distrust your hardware/compiler combination\nReason\nThe low-level hardware interfaces used by lock-free programming are among the hardest to implement well and among\nthe areas where the most subtle portability problems occur.\nIf you are doing lock-free programming for performance, you need to check for regressions.\nNote\nInstruction reordering (static and dynamic) makes it hard for us to think effectively at this level (especially if you use relaxed memory models).\nExperience, (semi)formal models and model checking can be useful.\nTesting - often to an extreme extent - is essential.\n\"Don't fly too close to the sun.\"\nEnforcement\nHave strong rules for re-testing in place that covers any change in hardware, operating system, compiler, and libraries.\n1.7.12.5.3. CP.102: Carefully study the literature\nReason\nWith the exception of atomics and a few use standard patterns, lock-free programming is really an expert-only topic.\nBecome an expert before shipping lock-free code for others to use.\nReferences\n\nAnthony Williams: C++ concurrency in action. Manning Publications.\nBoehm, Adve, You Don't Know Jack About Shared Variables or Memory Models , Communications of the ACM, Feb 2012.\nBoehm, \"Threads Basics\", HPL TR 2009-259.\nAdve, Boehm, \"Memory Models: A Case for Rethinking Parallel Languages and Hardware\", Communications of the ACM, August 2010.\nBoehm, Adve, \"Foundations of the C++ Concurrency Memory Model\", PLDI 08.\nMark Batty, Scott Owens, Susmit Sarkar, Peter Sewell, and Tjark Weber, \"Mathematizing C++ Concurrency\", POPL 2011.\nDamian Dechev, Peter Pirkelbauer, and Bjarne Stroustrup: Understanding and Effectively Preventing the ABA Problem in Descriptor-based Lock-free Designs. 13th IEEE Computer Society ISORC 2010 Symposium. May 2010.\nDamian Dechev and Bjarne Stroustrup: Scalable Non-blocking Concurrent Objects for Mission Critical Code. ACM OOPSLA'09. October 2009\nDamian Dechev, Peter Pirkelbauer, Nicolas Rouquette, and Bjarne Stroustrup: Semantically Enhanced Containers for Concurrent Real-Time Systems. Proc. 16th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (IEEE ECBS). April 2009.\n\n1.7.12.5.4. CP.110: Do not write your own double-checked locking for initialization\nReason\nSince C++11, static local variables are now initialized in a thread-safe way. When combined with the RAII pattern, static local variables can replace the need for writing your own double-checked locking for initialization. std::call_once can also achieve the same purpose. Use either static local variables of C++11 or std::call_once instead of writing your own double-checked locking for initialization.\nExample\nExample with std::call_once.\nvoid f()\n{\n    static std::once_flag my_once_flag;\n    std::call_once(my_once_flag, []()\n    {\n        // do this only once\n    });\n    // ...\n}\nExample with thread-safe static local variables of C++11.\nvoid f()\n{\n    // Assuming the compiler is compliant with C++11\n    static My_class my_object; // Constructor called only once\n    // ...\n}\n\nclass My_class\n{\npublic:\n    My_class()\n    {\n        // do this only once\n    }\n};\nEnforcement\n??? Is it possible to detect the idiom?\n1.7.12.5.5. CP.111: Use a conventional pattern if you really need double-checked locking\nReason\nDouble-checked locking is easy to mess up. If you really need to write your own double-checked locking, in spite of the rules CP.110: Do not write your own double-checked locking for initialization and CP.100: Don't use lock-free programming unless you absolutely have to, then do it in a conventional pattern.\nThe uses of the double-checked locking pattern that are not in violation of CP.110: Do not write your own double-checked locking for initialization arise when a non-thread-safe action is both hard and rare, and there exists a fast thread-safe test that can be used to guarantee that the action is not needed, but cannot be used to guarantee the converse.\nExample, bad\nThe use of volatile does not make the first check thread-safe, see also CP.200: Use volatile only to talk to non-C++ memory\nmutex action_mutex;\nvolatile bool action_needed;\n\nif (action_needed) {\n    std::lock_guard lock(action_mutex);\n    if (action_needed) {\n        take_action();\n        action_needed = false;\n    }\n}\nExample, good\nmutex action_mutex;\natomic action_needed;\n\nif (action_needed) {\n    std::lock_guard lock(action_mutex);\n    if (action_needed) {\n        take_action();\n        action_needed = false;\n    }\n}\nFine-tuned memory order may be beneficial where acquire load is more efficient than sequentially-consistent load\nmutex action_mutex;\natomic action_needed;\n\nif (action_needed.load(memory_order_acquire)) {\n    lock_guard lock(action_mutex);\n    if (action_needed.load(memory_order_relaxed)) {\n        take_action();\n        action_needed.store(false, memory_order_release);\n    }\n}\nEnforcement\n??? Is it possible to detect the idiom?\n1.7.12.6. CP.etc: Etc. concurrency rules\nThese rules defy simple categorization:\n\nCP.200: Use volatile only to talk to non-C++ memory\nCP.201: ??? Signals\n\n1.7.12.6.1. CP.200: Use volatile only to talk to non-C++ memory\nReason\nvolatile is used to refer to objects that are shared with \"non-C++\" code or hardware that does not follow the C++ memory model.\nExample\nconst volatile long clock;\nThis describes a register constantly updated by a clock circuit.\nclock is volatile because its value will change without any action from the C++ program that uses it.\nFor example, reading clock twice will often yield two different values, so the optimizer had better not optimize away the second read in this code:\nlong t1 = clock;\n// ... no use of clock here ...\nlong t2 = clock;\nclock is const because the program should not try to write to clock.\nNote\nUnless you are writing the lowest level code manipulating hardware directly, consider volatile an esoteric feature that is best avoided.\nExample\nUsually C++ code receives volatile memory that is owned Elsewhere (hardware or another language):\nint volatile* vi = get_hardware_memory_location();\n    // note: we get a pointer to someone else's memory here\n    // volatile says \"treat this with extra respect\"\nSometimes C++ code allocates the volatile memory and shares it with \"elsewhere\" (hardware or another language) by deliberately escaping a pointer:\nstatic volatile long vl;\nplease_use_this(&vl);   // escape a reference to this to \"elsewhere\" (not C++)\nExample; bad\nvolatile local variables are nearly always wrong -- how can they be shared with other languages or hardware if they're ephemeral?\nThe same applies almost as strongly to member variables, for the same reason.\nvoid f() {\n    volatile int i = 0; // bad, volatile local variable\n    // etc.\n}\n\nclass My_type {\n    volatile int i = 0; // suspicious, volatile member variable\n    // etc.\n};\nNote\nIn C++, unlike in some other languages, volatile has nothing to do with synchronization.\nEnforcement\n\nFlag volatile T local and member variables; almost certainly you intended to use atomic instead.\n???\n\n1.7.12.6.2. CP.201: ??? Signals\n???UNIX signal handling???. May be worth reminding how little is async-signal-safe, and how to communicate with a signal handler (best is probably \"not at all\")\n1.7.13. E: Error handling\nError handling involves:\n\nDetecting an error\nTransmitting information about an error to some handler code\nPreserve the state of a program in a valid state\nAvoid resource leaks\n\nIt is not possible to recover from all errors. If recovery from an error is not possible, it is important to quickly \"get out\" in a well-defined way. A strategy for error handling must be simple, or it becomes a source of even worse errors.  Untested and rarely executed error-handling code is itself the source of many bugs.\nThe rules are designed to help avoid several kinds of errors:\n\nType violations (e.g., misuse of unions and casts)\nResource leaks (including memory leaks)\nBounds errors\nLifetime errors (e.g., accessing an object after is has been deleted)\nComplexity errors (logical errors make likely by overly complex expression of ideas)\nInterface errors (e.g., an unexpected value is passed through an interface)\n\nError-handling rule summary:\n\nE.1: Develop an error-handling strategy early in a design\nE.2: Throw an exception to signal that a function can't perform its assigned task\nE.3: Use exceptions for error handling only\nE.4: Design your error-handling strategy around invariants\nE.5: Let a constructor establish an invariant, and throw if it cannot\nE.6: Use RAII to prevent leaks\nE.7: State your preconditions\nE.8: State your postconditions\n\nE.12: Use noexcept when exiting a function because of a throw is impossible or unacceptable\n\nE.13: Never throw while being the direct owner of an object\nE.14: Use purpose-designed user-defined types as exceptions (not built-in types)\nE.15: Catch exceptions from a hierarchy by reference\nE.16: Destructors, deallocation, and swap must never fail\nE.17: Don't try to catch every exception in every function\nE.18: Minimize the use of explicit try/catch\nE.19: Use a final_action object to express cleanup if no suitable resource handle is available\n\nE.25: If you can't throw exceptions, simulate RAII for resource management\n\nE.26: If you can't throw exceptions, consider failing fast\nE.27: If you can't throw exceptions, use error codes systematically\nE.28: Avoid error handling based on global state (e.g. errno)\n\nE.30: Don't use exception specifications\n\nE.31: Properly order your catch-clauses\n\nE.1: Develop an error-handling strategy early in a design\nReason\nA consistent and complete strategy for handling errors and resource leaks is hard to retrofit into a system.\nE.2: Throw an exception to signal that a function can't perform its assigned task\nReason\nTo make error handling systematic, robust, and non-repetitive.\nExample\nstruct Foo {\n    vector v;\n    File_handle f;\n    string s;\n};\n\nvoid use()\n{\n    Foo bar {{Thing{1}, Thing{2}, Thing{monkey}}, {\"my_file\", \"r\"}, \"Here we go!\"};\n    // ...\n}\nHere, vector and strings constructors may not be able to allocate sufficient memory for their elements, vectors constructor may not be able copy the Things in its initializer list, and File_handle may not be able to open the required file.\nIn each case, they throw an exception for use()'s caller to handle.\nIf use() could handle the failure to construct bar it can take control using try/catch.\nIn either case, Foo's constructor correctly destroys constructed members before passing control to whatever tried to create a Foo.\nNote that there is no return value that could contain an error code.\nThe File_handle constructor might be defined like this:\nFile_handle::File_handle(const string& name, const string& mode)\n    :f{fopen(name.c_str(), mode.c_str())}\n{\n    if (!f)\n        throw runtime_error{\"File_handle: could not open \" + name + \" as \" + mode};\n}\nNote\nIt is often said that exceptions are meant to signal exceptional events and failures.\nHowever, that's a bit circular because \"what is exceptional?\"\nExamples:\n\nA precondition that cannot be met\nA constructor that cannot construct an object (failure to establish its class's invariant)\nAn out-of-range error (e.g., v[v.size()] = 7)\nInability to acquire a resource (e.g., the network is down)\n\nIn contrast, termination of an ordinary loop is not exceptional.\nUnless the loop was meant to be infinite, termination is normal and expected.\nNote\nDon't use a throw as simply an alternative way of returning a value from a function.\nException\nSome systems, such as hard-real-time systems require a guarantee that an action is taken in a (typically short) constant maximum time known before execution starts. Such systems can use exceptions only if there is tool support for accurately predicting the maximum time to recover from a throw.\nSee also: RAII\nSee also: discussion\nNote\nBefore deciding that you cannot afford or don't like exception-based error handling, have a look at the alternatives;\nthey have their own complexities and problems.\nAlso, as far as possible, measure before making claims about efficiency.\nE.3: Use exceptions for error handling only\nReason\nTo keep error handling separated from \"ordinary code.\"\nC++ implementations tend to be optimized based on the assumption that exceptions are rare.\nExample, don't\n// don't: exception not used for error handling\nint find_index(vector& vec, const string& x)\n{\n    try {\n        for (int i = 0; i This is more complicated and most likely runs much slower than the obvious alternative.\nThere is nothing exceptional about finding a value in a vector.\nEnforcement\nWould need to be heuristic.\nLook for exception values \"leaked\" out of catch clauses.\nE.4: Design your error-handling strategy around invariants\nReason\nTo use an object it must be in a valid state (defined formally or informally by an invariant) and to recover from an error every object not destroyed must be in a valid state.\nNote\nAn invariant is logical condition for the members of an object that a constructor must establish for the public member functions to assume.\nEnforcement\n???\nE.5: Let a constructor establish an invariant, and throw if it cannot\nReason\nLeaving an object without its invariant established is asking for trouble.\nNot all member functions can be called.\nExample\nclass Vector {  // very simplified vector of doubles\n    // if elem != nullptr then elem points to sz doubles\npublic:\n    Vector() : elem{nullptr}, sz{0}{}\n    Vector(int s) : elem{new double[s]}, sz{s} { /* initialize elements */ }\n    ~Vector() { delete [] elem; }\n    double& operator[](int s) { return elem[s]; }\n    // ...\nprivate:\n    owner elem;\n    int sz;\n};\nThe class invariant - here stated as a comment - is established by the constructors.\nnew throws if it cannot allocate the required memory.\nThe operators, notably the subscript operator, relies on the invariant.\nSee also: If a constructor cannot construct a valid object, throw an exception\nEnforcement\nFlag classes with private state without a constructor (public, protected, or private).\nE.6: Use RAII to prevent leaks\nReason\nLeaks are typically unacceptable.\nManual resource release is error-prone.\nRAII (\"Resource Acquisition Is Initialization\") is the simplest, most systematic way of preventing leaks.\nExample\nvoid f1(int i)   // Bad: possibly leak\n{\n    int* p = new int[12];\n    // ...\n    if (i We could carefully release the resource before the throw:\nvoid f2(int i)   // Clumsy and error-prone: explicit release\n{\n    int* p = new int[12];\n    // ...\n    if (i This is verbose. In larger code with multiple possible throws explicit releases become repetitive and error-prone.\nvoid f3(int i)   // OK: resource management done by a handle (but see below)\n{\n    auto p = make_unique(12);\n    // ...\n    if (i Note that this works even when the throw is implicit because it happened in a called function:\nvoid f4(int i)   // OK: resource management done by a handle (but see below)\n{\n    auto p = make_unique(12);\n    // ...\n    helper(i);   // may throw\n    // ...\n}\nUnless you really need pointer semantics, use a local resource object:\nvoid f5(int i)   // OK: resource management done by local object\n{\n    vector v(12);\n    // ...\n    helper(i);   // may throw\n    // ...\n}\nThat's even simpler and safer, and often more efficient.\nNote\nIf there is no obvious resource handle and for some reason defining a proper RAII object/handle is infeasible,\nas a last resort, cleanup actions can be represented by a final_action object.\nNote\nBut what do we do if we are writing a program where exceptions cannot be used?\nFirst challenge that assumption; there are many anti-exceptions myths around.\nWe know of only a few good reasons:\n\nWe are on a system so small that the exception support would eat up most of our 2K memory.\nWe are in a hard-real-time system and we don't have tools that guarantee us that an exception is handled within the required time.\nWe are in a system with tons of legacy code using lots of pointers in difficult-to-understand ways\n(in particular without a recognizable ownership strategy) so that exceptions could cause leaks.\nOur implementation of the C++ exception mechanisms is unreasonably poor\n(slow, memory consuming, failing to work correctly for dynamically linked libraries, etc.).\nComplain to your implementation purveyor; if no user complains, no improvement will happen.\nWe get fired if we challenge our manager's ancient wisdom.\n\nOnly the first of these reasons is fundamental, so whenever possible, use exceptions to implement RAII, or design your RAII objects to never fail.\nWhen exceptions cannot be used, simulate RAII.\nThat is, systematically check that objects are valid after construction and still release all resources in the destructor.\nOne strategy is to add a valid() operation to every resource handle:\nvoid f()\n{\n    vector vs(100);   // not std::vector: valid() added\n    if (!vs.valid()) {\n        // handle error or exit\n    }\n\n    ifstream fs(\"foo\");   // not std::ifstream: valid() added\n    if (!fs.valid()) {\n        // handle error or exit\n    }\n\n    // ...\n} // destructors clean up as usual\nObviously, this increases the size of the code, doesn't allow for implicit propagation of \"exceptions\" (valid() checks), and valid() checks can be forgotten.\nPrefer to use exceptions.\nSee also: Use of noexcept.\nEnforcement\n???\nE.7: State your preconditions\nReason\nTo avoid interface errors.\nSee also: precondition rule.\nE.8: State your postconditions\nReason\nTo avoid interface errors.\nSee also: postcondition rule.\nE.12: Use noexcept when exiting a function because of a throw is impossible or unacceptable\nReason\nTo make error handling systematic, robust, and efficient.\nExample\ndouble compute(double d) noexcept\n{\n    return log(sqrt(d Here, we know that compute will not throw because it is composed out of operations that don't throw.\nBy declaring compute to be noexcept, we give the compiler and human readers information that can make it easier for them to understand and manipulate compute.\nNote\nMany standard-library functions are noexcept including all the standard-library functions \"inherited\" from the C standard library.\nExample\nvector munge(const vector& v) noexcept\n{\n    vector v2(v.size());\n    // ... do something ...\n}\nThe noexcept here states that I am not willing or able to handle the situation where I cannot construct the local vector.\nThat is, I consider memory exhaustion a serious design error (on par with hardware failures) so that I'm willing to crash the program if it happens.\nNote\nDo not use traditional exception-specifications.\nSee also\ndiscussion.\nE.13: Never throw while being the direct owner of an object\nReason\nThat would be a leak.\nExample\nvoid leak(int x)   // don't: may leak\n{\n    auto p = new int{7};\n    if (x One way of avoiding such problems is to use resource handles consistently:\nvoid no_leak(int x)\n{\n    auto p = make_unique(7);\n    if (x Another solution (often better) would be to use a local variable to eliminate explicit use of pointers:\nvoid no_leak_simplified(int x)\n{\n    vector v(7);\n    // ...\n}\nNote\nIf you have local \"things\" that requires cleanup, but is not represented by an object with a destructor, such cleanup must\nalso be done before a throw.\nSometimes, finally() can make such unsystematic cleanup a bit more manageable.\nE.14: Use purpose-designed user-defined types as exceptions (not built-in types)\nReason\nA user-defined type is unlikely to clash with other people's exceptions.\nExample\nvoid my_code()\n{\n    // ...\n    throw Moonphase_error{};\n    // ...\n}\n\nvoid your_code()\n{\n    try {\n        // ...\n        my_code();\n        // ...\n    }\n    catch(Bufferpool_exhausted) {\n        // ...\n    }\n}\nExample, don't\nvoid my_code()     // Don't\n{\n    // ...\n    throw 7;       // 7 means \"moon in the 4th quarter\"\n    // ...\n}\n\nvoid your_code()   // Don't\n{\n    try {\n        // ...\n        my_code();\n        // ...\n    }\n    catch(int i) {  // i == 7 means \"input buffer too small\"\n        // ...\n    }\n}\nNote\nThe standard-library classes derived from exception should be used only as base classes or for exceptions that require only \"generic\" handling. Like built-in types, their use could clash with other people's use of them.\nExample, don't\nvoid my_code()   // Don't\n{\n    // ...\n    throw runtime_error{\"moon in the 4th quarter\"};\n    // ...\n}\n\nvoid your_code()   // Don't\n{\n    try {\n        // ...\n        my_code();\n        // ...\n    }\n    catch(runtime_error) {   // runtime_error means \"input buffer too small\"\n        // ...\n    }\n}\nSee also: Discussion\nEnforcement\nCatch throw and catch of a built-in type. Maybe warn about throw and catch using an standard-library exception type. Obviously, exceptions derived from the std::exception hierarchy is fine.\nE.15: Catch exceptions from a hierarchy by reference\nReason\nTo prevent slicing.\nExample\nvoid f()\n{\n    try {\n        // ...\n    }\n    catch (exception e) {   // don't: may slice\n        // ...\n    }\n}\nInstead, use a reference:\ncatch (exception& e) { /* ... */ }\nof - typically better still - a const reference:\ncatch (const exception& e) { /* ... */ }\nMost handlers do not modify their exception and in general we recommend use of const.\nEnforcement\nFlag by-value exceptions if their types are part of a hierarchy (could require whole-program analysis to be perfect).\nE.16: Destructors, deallocation, and swap must never fail\nReason\nWe don't know how to write reliable programs if a destructor, a swap, or a memory deallocation fails; that is, if it exits by an exception or simply doesn't perform its required action.\nExample, don't\nclass Connection {\n    // ...\npublic:\n    ~Connection()   // Don't: very bad destructor\n    {\n        if (cannot_disconnect()) throw I_give_up{information};\n        // ...\n    }\n};\nNote\nMany have tried to write reliable code violating this rule for examples, such as a network connection that \"refuses to close\".\nTo the best of our knowledge nobody has found a general way of doing this.\nOccasionally, for very specific examples, you can get away with setting some state for future cleanup.\nFor example, we might put a socket that does not want to close on a \"bad socket\" list,\nto be examined by a regular sweep of the system state.\nEvery example we have seen of this is error-prone, specialized, and often buggy.\nNote\nThe standard library assumes that destructors, deallocation functions (e.g., operator delete), and swap do not throw. If they do, basic standard-library invariants are broken.\nNote\nDeallocation functions, including operator delete, must be noexcept. swap functions must be noexcept.\nMost destructors are implicitly noexcept by default.\nAlso, make move operations noexcept.\nEnforcement\nCatch destructors, deallocation operations, and swaps that throw.\nCatch such operations that are not noexcept.\nSee also: discussion\nE.17: Don't try to catch every exception in every function\nReason\nCatching an exception in a function that cannot take a meaningful recovery action leads to complexity and waste.\nLet an exception propagate until it reaches a function that can handle it.\nLet cleanup actions on the unwinding path be handled by RAII.\nExample, don't\nvoid f()   // bad\n{\n    try {\n        // ...\n    }\n    catch (...) {\n        // no action\n        throw;   // propagate exception\n    }\n}\nEnforcement\n\nFlag nested try-blocks.\nFlag source code files with a too high ratio of try-blocks to functions. (??? Problem: define \"too high\")\n\nE.18: Minimize the use of explicit try/catch\nReason\n try/catch is verbose and non-trivial uses error-prone.\n try/catch can be a sign of unsystematic and/or low-level resource management or error handling.\nExample, Bad\nvoid f(zstring s)\n{\n    Gadget* p;\n    try {\n        p = new Gadget(s);\n        // ...\n        delete p;\n    }\n    catch (Gadget_construction_failure) {\n        delete p;\n        throw;\n    }\n}\nThis code is messy.\nThere could be a leak from the naked pointer in the try block.\nNot all exceptions are handled.\ndeleting an object that failed to construct is almost certainly a mistake.\nBetter:\nvoid f2(zstring s)\n{\n    Gadget g {s};\n}\nAlternatives\n\nproper resource handles and RAII\nfinally\n\nEnforcement\n??? hard, needs a heuristic\nE.19: Use a final_action object to express cleanup if no suitable resource handle is available\nReason\nfinally is less verbose and harder to get wrong than try/catch.\nExample\nvoid f(int n)\n{\n    void* p = malloc(1, n);\n    auto _ = finally([p] { free(p); });\n    // ...\n}\nNote\nfinally is not as messy as try/catch, but it is still ad-hoc.\nPrefer proper resource management objects.\nConsider finally a last resort.\nNote\nUse of finally is a systematic and reasonably clean alternative to the old goto exit; technique\nfor dealing with cleanup where resource management is not systematic.\nEnforcement\nHeuristic: Detect goto exit;\nE.25: If you can't throw exceptions, simulate RAII for resource management\nReason\nEven without exceptions, RAII is usually the best and most systematic way of dealing with resources.\nNote\nError handling using exceptions is the only complete and systematic way of handling non-local errors in C++.\nIn particular, non-intrusively signaling failure to construct an object requires an exception.\nSignaling errors in a way that cannot be ignored requires exceptions.\nIf you can't use exceptions, simulate their use as best you can.\nA lot of fear of exceptions is misguided.\nWhen used for exceptional circumstances in code that is not littered with pointers and complicated control structures,\nexception handling is almost always affordable (in time and space) and almost always leads to better code.\nThis, of course, assumes a good implementation of the exception handling mechanisms, which is not available on all systems.\nThere are also cases where the problems above do not apply, but exceptions cannot be used for other reasons.\nSome hard-real-time systems are an example: An operation has to be completed within a fixed time with an error or a correct answer.\nIn the absence of appropriate time estimation tools, this is hard to guarantee for exceptions.\nSuch systems (e.g. flight control software) typically also ban the use of dynamic (heap) memory.\nSo, the primary guideline for error handling is \"use exceptions and RAII.\"\nThis section deals with the cases where you either do not have an efficient implementation of exceptions,\nor have such a rat's nest of old-style code\n(e.g., lots of pointers, ill-defined ownership, and lots of unsystematic error handling based on tests of error codes)\nthat it is infeasible to introduce simple and systematic exception handling.\nBefore condemning exceptions or complaining too much about their cost, consider examples of the use of error codes.\nConsider the cost and complexity of the use of error codes.\nIf performance is your worry, measure.\nExample\nAssume you wanted to write\nvoid func(zstring arg)\n{\n    Gadget g {arg};\n    // ...\n}\nIf the gadget isn't correctly constructed, func exits with an exception.\nIf we cannot throw an exception, we can simulate this RAII style of resource handling by adding a valid() member function to Gadget:\nerror_indicator func(zstring arg)\n{\n    Gadget g {arg};\n    if (!g.valid()) return gadget_construction_error;\n    // ...\n    return 0;   // zero indicates \"good\"\n}\nThe problem is of course that the caller now has to remember to test the return value.\nSee also: Discussion.\nEnforcement\nPossible (only) for specific versions of this idea: e.g., test for systematic test of valid() after resource handle construction\nE.26: If you can't throw exceptions, consider failing fast\nReason\nIf you can't do a good job at recovering, at least you can get out before too much consequential damage is done.\nSee also Simulating RAII.\nNote\nIf you cannot be systematic about error handling, consider \"crashing\" as a response to any error that cannot be handled locally.\nThat is, if you cannot recover from an error in the context of the function that detected it, call abort(), quick_exit(),\nor a similar function that will trigger some sort of system restart.\nIn systems where you have lots of processes and/or lots of computers, you need to expect and handle fatal crashes anyway,\nsay from hardware failures.\nIn such cases, \"crashing\" is simply leaving error handling to the next level of the system.\nExample\nvoid f(int n)\n{\n    // ...\n    p = static_cast(malloc(n, X));\n    if (p == nullptr) abort();     // abort if memory is exhausted\n    // ...\n}\nMost programs cannot handle memory exhaustion gracefully anyway. This is roughly equivalent to\nvoid f(int n)\n{\n    // ...\n    p = new X[n];    // throw if memory is exhausted (by default, terminate)\n    // ...\n}\nTypically, it is a good idea to log the reason for the \"crash\" before exiting.\nEnforcement\nAwkward\nE.27: If you can't throw exceptions, use error codes systematically\nReason\nSystematic use of any error-handling strategy minimizes the chance of forgetting to handle an error.\nSee also Simulating RAII.\nNote\nThere are several issues to be addressed:\n\nhow do you transmit an error indicator from out of a function?\nhow do you release all resources from a function before doing an error exit?\nWhat do you use as an error indicator?\n\nIn general, returning an error indicator implies returning two values: The result and an error indicator.\nThe error indicator can be part of the object, e.g. an object can have a valid() indicator\nor a pair of values can be returned.\nExample\nGadget make_gadget(int n)\n{\n    // ...\n}\n\nvoid user()\n{\n    Gadget g = make_gadget(17);\n    if (!g.valid()) {\n            // error handling\n    }\n    // ...\n}\nThis approach fits with simulated RAII resource management.\nThe valid() function could return an error_indicator (e.g. a member of an error_indicator enumeration).\nExample\nWhat if we cannot or do not want to modify the Gadget type?\nIn that case, we must return a pair of values.\nFor example:\nstd::pair make_gadget(int n)\n{\n    // ...\n}\n\nvoid user()\n{\n    auto r = make_gadget(17);\n    if (!r.second) {\n            // error handling\n    }\n    Gadget& g = r.first;\n    // ...\n}\nAs shown, std::pair is a possible return type.\nSome people prefer a specific type.\nFor example:\nGval make_gadget(int n)\n{\n    // ...\n}\n\nvoid user()\n{\n    auto r = make_gadget(17);\n    if (!r.err) {\n            // error handling\n    }\n    Gadget& g = r.val;\n    // ...\n}\nOne reason to prefer a specific return type is to have names for its members, rather than the somewhat cryptic first and second\nand to avoid confusion with other uses of std::pair.\nExample\nIn general, you must clean up before an error exit.\nThis can be messy:\nstd::pair user()\n{\n    Gadget g1 = make_gadget(17);\n    if (!g1.valid()) {\n            return {0, g1_error};\n    }\n\n    Gadget g2 = make_gadget(17);\n    if (!g2.valid()) {\n            cleanup(g1);\n            return {0, g2_error};\n    }\n\n    // ...\n\n    if (all_foobar(g1, g2)) {\n        cleanup(g1);\n        cleanup(g2);\n        return {0, foobar_error};\n    // ...\n\n    cleanup(g1);\n    cleanup(g2);\n    return {res, 0};\n}\nSimulating RAII can be non-trivial, especially in functions with multiple resources and multiple possible errors.\nA not uncommon technique is to gather cleanup at the end of the function to avoid repetition:\nstd::pair user()\n{\n    error_indicator err = 0;\n\n    Gadget g1 = make_gadget(17);\n    if (!g1.valid()) {\n            err = g1_error;\n            goto exit;\n    }\n\n    Gadget g2 = make_gadget(17);\n    if (!g2.valid()) {\n            err = g2_error;\n            goto exit;\n    }\n\n    if (all_foobar(g1, g2)) {\n        err = foobar_error;\n        goto exit;\n    }\n    // ...\n\nexit:\n  if (g1.valid()) cleanup(g1);\n  if (g2.valid()) cleanup(g2);\n  return {res, err};\n}\nThe larger the function, the more tempting this technique becomes.\nfinally can ease the pain a bit.\nAlso, the larger the program becomes the harder it is to apply an error-indicator-based error-handling strategy systematically.\nWe prefer exception-based error handling and recommend keeping functions short.\nSee also: Discussion.\nSee also: Returning multiple values.\nEnforcement\nAwkward.\nE.28: Avoid error handling based on global state (e.g. errno)\nReason\nGlobal state is hard to manage and it is easy to forget to check it.\nWhen did you last test the return value of printf()?\nSee also Simulating RAII.\nExample, bad\n???\nNote\nC-style error handling is based on the global variable errno, so it is essentially impossible to avoid this style completely.\nEnforcement\nAwkward.\nE.30: Don't use exception specifications\nReason\nException specifications make error handling brittle, impose a run-time cost, and have been removed from the C++ standard.\nExample\nint use(int arg)\n    throw(X, Y)\n{\n    // ...\n    auto x = f(arg);\n    // ...\n}\nIf f() throws an exception different from X and Y the unexpected handler is invoked, which by default terminates.\nThat's OK, but say that we have checked that this cannot happen and f is changed to throw a new exception Z,\nwe now have a crash on our hands unless we change use() (and re-test everything).\nThe snag is that f() may be in a library we do not control and the new exception is not anything that use() can do\nanything about or is in any way interested in.\nWe can change use() to pass Z through, but now use()'s callers probably needs to be modified.\nThis quickly becomes unmanageable.\nAlternatively, we can add a try-catch to use() to map Z into an acceptable exception.\nThis too, quickly becomes unmanageable.\nNote that changes to the set of exceptions often happens at the lowest level of a system\n(e.g., because of changes to a network library or some middleware), so changes \"bubble up\" through long call chains.\nIn a large code base, this could mean that nobody could update to a new version of a library until the last user was modified.\nIf use() is part of a library, it may not be possible to update it because a change could affect unknown clients.\nThe policy of letting exceptions propagate until they reach a function that potentially can handle it has proven itself over the years.\nNote\nNo. This would not be any better had exception specifications been statically enforced.\nFor example, see Stroustrup94.\nNote\nIf no exception may be thrown, use noexcept or its equivalent throw().\nEnforcement\nFlag every exception specification.\nE.31: Properly order your catch-clauses\nReason\ncatch-clauses are evaluated in the order they appear and one clause can hide another.\nExample\nvoid f()\n{\n    // ...\n    try {\n            // ...\n    }\n    catch (Base& b) { /* ... */ }\n    catch (Derived& d) { /* ... */ }\n    catch (...) { /* ... */ }\n    catch (std::exception& e){ /* ... */ }\n}\nIf Derivedis derived from Base the Derived-handler will never be invoked.\nThe \"catch everything\" handler ensured that the std::exception-handler will never be invoked.\nEnforcement\nFlag all \"hiding handlers\".\n1.7.14. Con: Constants and Immutability\nYou can't have a race condition on a constant.\nIt is easier to reason about a program when many of the objects cannot change their values.\nInterfaces that promises \"no change\" of objects passed as arguments greatly increase readability.\nConstant rule summary:\n\nCon.1: By default, make objects immutable\nCon.2: By default, make member functions const\nCon.3: By default, pass pointers and references to consts\nCon.4: Use const to define objects with values that do not change after construction\nCon.5: Use constexpr for values that can be computed at compile time\n\nCon.1: By default, make objects immutable\nReason\nImmutable objects are easier to reason about, so make objects non-const only when there is a need to change their value.\nPrevents accidental or hard-to-notice change of value.\nExample\nfor (const int i : c) cout Exception\nFunction arguments are rarely mutated, but also rarely declared const.\nTo avoid confusion and lots of false positives, don't enforce this rule for function arguments.\nvoid f(const char* const p); // pedantic\nvoid g(const int i);        // pedantic\nNote that function parameter is a local variable so changes to it are local.\nEnforcement\n\nFlag non-const variables that are not modified (except for parameters to avoid many false positives)\n\nCon.2: By default, make member functions const\nReason\nA member function should be marked const unless it changes the object's observable state.\nThis gives a more precise statement of design intent, better readability, more errors caught by the compiler, and sometimes more optimization opportunities.\nExample; bad\nclass Point {\n    int x, y;\npublic:\n    int getx() { return x; }    // BAD, should be const as it doesn't modify the object's state\n    // ...\n};\n\nvoid f(const Point& pt) {\n    int x = pt.getx();          // ERROR, doesn't compile because getx was not marked const\n}\nNote\nIt is not inherently bad to pass a pointer or reference to non-const,\nbut that should be done only when the called function is supposed to modify the object.\nA reader of code must assume that a function that takes a \"plain\" T* or T& will modify the object referred to.\nIf it doesn't now, it might do so later without forcing recompilation.\nNote\nThere are code/libraries that are offer functions that declare aT* even though\nthose function do not modify that T.\nThis is a problem for people modernizing code.\nYou can\n\nupdate the library to be const-correct; preferred long-term solution\n\"cast away const\"; best avoided\nprovide a wrapper function\n\nExample:\nvoid f(int* p);   // old code: f() does not modify `*p`\nvoid f(const int* p) { f(const_cast(p)); } // wrapper\nNote that this wrapper solution is a patch that should be used only when the declaration of f() cannot be be modified,\ne.g. because it is in a library that you cannot modify.\nNote\nA const member function can modify the value of an object that is mutable or accessed through a pointer member.\nA common use is to maintain a cache rather than repeatedly do a complicated computation.\nFor example, here is a Date that caches (mnemonizes) its string representation to simplify repeated uses:\nclass Date {\npublic:\n    // ...\n    const string& string_ref() const\n    {\n        if (string_val == \"\") compute_string_rep();\n        return string_val;\n    }\n    // ...\nprivate:\n    void compute_string_rep() const;    // compute string representation and place it in string_val\n    mutable string string_val;\n    // ...\n};\nAnother way of saying this is that constness is not transitive.\nIt is possible for a const member function to change the value of mutable members and the value of objects accessed\nthrough non-const pointers.\nIt is the job of the class to ensure such mutation is done only when it makes sense according to the semantics (invariants)\nit offers to its users.\nSee also Pimpl.\nEnforcement\n\nFlag a member function that is not marked const, but that does not perform a non-const operation on any member variable.\n\nCon.3: By default, pass pointers and references to consts\nReason\n To avoid a called function unexpectedly changing the value.\n It's far easier to reason about programs when called functions don't modify state.\nExample\nvoid f(char* p);        // does f modify *p? (assume it does)\nvoid g(const char* p);  // g does not modify *p\nNote\nIt is not inherently bad to pass a pointer or reference to non-const,\nbut that should be done only when the called function is supposed to modify the object.\nNote\nDo not cast away const.\nEnforcement\n\nFlag function that does not modify an object passed by  pointer or reference to non-const\nFlag a function that (using a cast) modifies an object passed by pointer or reference to const\n\nCon.4: Use const to define objects with values that do not change after construction\nReason\n Prevent surprises from unexpectedly changed object values.\nExample\nvoid f()\n{\n    int x = 7;\n    const int y = 9;\n\n    for (;;) {\n        // ...\n    }\n    // ...\n}\nAs x is not const, we must assume that it is modified somewhere in the loop.\nEnforcement\n\nFlag unmodified non-const variables.\n\nCon.5: Use constexpr for values that can be computed at compile time\nReason\nBetter performance, better compile-time checking, guaranteed compile-time evaluation, no possibility of race conditions.\nExample\ndouble x = f(2);            // possible run-time evaluation\nconst double y = f(2);      // possible run-time evaluation\nconstexpr double z = f(2);  // error unless f(2) can be evaluated at compile time\nNote\nSee F.4.\nEnforcement\n\nFlag const definitions with constant expression initializers.\n\n1.7.15. T: Templates and generic programming\nGeneric programming is programming using types and algorithms parameterized by types, values, and algorithms.\nIn C++, generic programming is supported by the template language mechanisms.\nArguments to generic functions are characterized by sets of requirements on the argument types and values involved.\nIn C++, these requirements are expressed by compile-time predicates called concepts.\nTemplates can also be used for meta-programming; that is, programs that compose code at compile time.\nA central notion in generic programming is \"concepts\"; that is, requirements on template arguments presented as compile-time predicates.\n\"Concepts\" are defined in an ISO Technical specification: concepts.\nA draft of a set of standard-library concepts can be found in another ISO TS: ranges\nCurrently (July 2016), concepts are supported only in GCC 6.1.\nConsequently, we comment out uses of concepts in examples; that is, we use them as formalized comments only.\nIf you use GCC 6.1, you can uncomment them.\nTemplate use rule summary:\n\nT.1: Use templates to raise the level of abstraction of code\nT.2: Use templates to express algorithms that apply to many argument types\nT.3: Use templates to express containers and ranges\nT.4: Use templates to express syntax tree manipulation\nT.5: Combine generic and OO techniques to amplify their strengths, not their costs\n\nConcept use rule summary:\n\nT.10: Specify concepts for all template arguments\nT.11: Whenever possible use standard concepts\nT.12: Prefer concept names over auto for local variables\nT.13: Prefer the shorthand notation for simple, single-type argument concepts\n???\n\nConcept definition rule summary:\n\nT.20: Avoid \"concepts\" without meaningful semantics\nT.21: Require a complete set of operations for a concept\nT.22: Specify axioms for concepts\nT.23: Differentiate a refined concept from its more general case by adding new use patterns\nT.24: Use tag classes or traits to differentiate concepts that differ only in semantics\nT.25: Avoid complementary constraints\nT.26: Prefer to define concepts in terms of use-patterns rather than simple syntax\nT.30: Use concept negation (!C) sparingly to express a minor difference\nT.31: Use concept disjunction (C1 || C2) sparingly to express alternatives\n???\n\nTemplate interface rule summary:\n\nT.40: Use function objects to pass operations to algorithms\nT.41: Require only essential properties in a template's concepts\nT.42: Use template aliases to simplify notation and hide implementation details\nT.43: Prefer using over typedef for defining aliases\nT.44: Use function templates to deduce class template argument types (where feasible)\nT.46: Require template arguments to be at least Regular or SemiRegular\nT.47: Avoid highly visible unconstrained templates with common names\nT.48: If your compiler does not support concepts, fake them with enable_if\nT.49: Where possible, avoid type-erasure\n\nTemplate definition rule summary:\n\nT.60: Minimize a template's context dependencies\nT.61: Do not over-parameterize members (SCARY)\nT.62: Place non-dependent class template members in a non-templated base class\nT.64: Use specialization to provide alternative implementations of class templates\nT.65: Use tag dispatch to provide alternative implementations of functions\nT.67: Use specialization to provide alternative implementations for irregular types\nT.68: Use {} rather than () within templates to avoid ambiguities\nT.69: Inside a template, don't make an unqualified nonmember function call unless you intend it to be a customization point\n\nTemplate and hierarchy rule summary:\n\nT.80: Do not naively templatize a class hierarchy\nT.81: Do not mix hierarchies and arrays // ??? somewhere in \"hierarchies\"\nT.82: Linearize a hierarchy when virtual functions are undesirable\nT.83: Do not declare a member function template virtual\nT.84: Use a non-template core implementation to provide an ABI-stable interface\nT.??: ????\n\nVariadic template rule summary:\n\nT.100: Use variadic templates when you need a function that takes a variable number of arguments of a variety of types\nT.101: ??? How to pass arguments to a variadic template ???\nT.102: ??? How to process arguments to a variadic template ???\nT.103: Don't use variadic templates for homogeneous argument lists\nT.??: ????\n\nMetaprogramming rule summary:\n\nT.120: Use template metaprogramming only when you really need to\nT.121: Use template metaprogramming primarily to emulate concepts\nT.122: Use templates (usually template aliases) to compute types at compile time\nT.123: Use constexpr functions to compute values at compile time\nT.124: Prefer to use standard-library TMP facilities\nT.125: If you need to go beyond the standard-library TMP facilities, use an existing library\nT.??: ????\n\nOther template rules summary:\n\nT.140: Name all operations with potential for reuse\nT.141: Use an unnamed lambda if you need a simple function object in one place only\nT.142: Use template variables to simplify notation\nT.143: Don't write unintentionally nongeneric code\nT.144: Don't specialize function templates\nT.150: Check that a class matches a concept using static_assert\nT.??: ????\n\n1.7.15.1. T.gp: Generic programming\nGeneric programming is programming using types and algorithms parameterized by types, values, and algorithms.\n1.7.15.1.1. T.1: Use templates to raise the level of abstraction of code\nReason\nGenerality. Reuse. Efficiency. Encourages consistent definition of user types.\nExample, bad\nConceptually, the following requirements are wrong because what we want of T is more than just the very low-level concepts of \"can be incremented\" or \"can be added\":\ntemplate\n    // requires Incrementable\nT sum1(vector& v, T s)\n{\n    for (auto x : v) s += x;\n    return s;\n}\n\ntemplate\n    // requires Simple_number\nT sum2(vector& v, T s)\n{\n    for (auto x : v) s = s + x;\n    return s;\n}\nAssuming that Incrementable does not support + and Simple_number does not support +=, we have overconstrained implementers of sum1 and sum2.\nAnd, in this case, missed an opportunity for a generalization.\nExample\ntemplate\n    // requires Arithmetic\nT sum(vector& v, T s)\n{\n    for (auto x : v) s += x;\n    return s;\n}\nAssuming that Arithmetic requires both + and +=, we have constrained the user of sum to provide a complete arithmetic type.\nThat is not a minimal requirement, but it gives the implementer of algorithms much needed freedom and ensures that any Arithmetic type\ncan be used for a wide variety of algorithms.\nFor additional generality and reusability, we could also use a more general Container or Range concept instead of committing to only one container, vector.\nNote\nIf we define a template to require exactly the operations required for a single implementation of a single algorithm\n(e.g., requiring just += rather than also = and +) and only those, we have overconstrained maintainers.\nWe aim to minimize requirements on template arguments, but the absolutely minimal requirements of an implementation is rarely a meaningful concept.\nNote\nTemplates can be used to express essentially everything (they are Turing complete), but the aim of generic programming (as expressed using templates)\nis to efficiently generalize operations/algorithms over a set of types with similar semantic properties.\nNote\nThe requires in the comments are uses of concepts.\n\"Concepts\" are defined in an ISO Technical specification: concepts.\nCurrently (July 2016), concepts are supported only in GCC 6.1.\nConsequently, we comment out uses of concepts in examples; that is, we use them as formalized comments only.\nIf you use GCC 6.1, you can uncomment them.\nEnforcement\n\nFlag algorithms with \"overly simple\" requirements, such as direct use of specific operators without a concept.\nDo not flag the definition of the \"overly simple\" concepts themselves; they may simply be building blocks for more useful concepts.\n\n1.7.15.1.2. T.2: Use templates to express algorithms that apply to many argument types\nReason\nGenerality. Minimizing the amount of source code. Interoperability. Reuse.\nExample\nThat's the foundation of the STL. A single find algorithm easily works with any kind of input range:\ntemplate\n    // requires Input_iterator\n    //       && Equality_comparable, Val>\nIter find(Iter b, Iter e, Val v)\n{\n    // ...\n}\nNote\nDon't use a template unless you have a realistic need for more than one template argument type.\nDon't overabstract.\nEnforcement\n??? tough, probably needs a human\n1.7.15.1.3. T.3: Use templates to express containers and ranges\nReason\nContainers need an element type, and expressing that as a template argument is general, reusable, and type safe.\nIt also avoids brittle or inefficient workarounds. Convention: That's the way the STL does it.\nExample\ntemplate\n    // requires Regular\nclass Vector {\n    // ...\n    T* elem;   // points to sz Ts\n    int sz;\n};\n\nVector v(10);\nv[7] = 9.9;\nExample, bad\nclass Container {\n    // ...\n    void* elem;   // points to size elements of some type\n    int sz;\n};\n\nContainer c(10, sizeof(double));\n((double*) c.elem)[] = 9.9;\nThis doesn't directly express the intent of the programmer and hides the structure of the program from the type system and optimizer.\nHiding the void* behind macros simply obscures the problems and introduces new opportunities for confusion.\nExceptions: If you need an ABI-stable interface, you might have to provide a base implementation and express the (type-safe) template in terms of that.\nSee Stable base.\nEnforcement\n\nFlag uses of void*s and casts outside low-level implementation code\n\n1.7.15.1.4. T.4: Use templates to express syntax tree manipulation\nReason\n ???\nExample\n???\nExceptions: ???\n1.7.15.1.5. T.5: Combine generic and OO techniques to amplify their strengths, not their costs\nReason\nGeneric and OO techniques are complementary.\nExample\nStatic helps dynamic: Use static polymorphism to implement dynamically polymorphic interfaces.\nclass Command {\n    // pure virtual functions\n};\n\n// implementations\ntemplate\nclass ConcreteCommand : public Command {\n    // implement virtuals\n};\nExample\nDynamic helps static: Offer a generic, comfortable, statically bound interface, but internally dispatch dynamically, so you offer a uniform object layout.\nExamples include type erasure as with std::shared_ptr's deleter (but don't overuse type erasure).\nNote\nIn a class template, nonvirtual functions are only instantiated if they're used -- but virtual functions are instantiated every time.\nThis can bloat code size, and may overconstrain a generic type by instantiating functionality that is never needed.\nAvoid this, even though the standard-library facets made this mistake.\nSee also\n\nref ???\nref ???\nref ???\n\nEnforcement\nSee the reference to more specific rules.\n1.7.15.2. T.concepts: Concept rules\nConcepts is a facility for specifying requirements for template arguments.\nIt is an ISO technical specification, but currently supported only by GCC.\nConcepts are, however, crucial in the thinking about generic programming and the basis of much work on future C++ libraries\n(standard and other).\nThis section assumes concept support\nConcept use rule summary:\n\nT.10: Specify concepts for all template arguments\nT.11: Whenever possible use standard concepts\nT.12: Prefer concept names over auto\nT.13: Prefer the shorthand notation for simple, single-type argument concepts\n???\n\nConcept definition rule summary:\n\nT.20: Avoid \"concepts\" without meaningful semantics\nT.21: Require a complete set of operations for a concept\nT.22: Specify axioms for concepts\nT.23: Differentiate a refined concept from its more general case by adding new use patterns\nT.24: Use tag classes or traits to differentiate concepts that differ only in semantics\nT.25: Avoid complimentary constraints\nT.26: Prefer to define concepts in terms of use-patterns rather than simple syntax\n???\n\n1.7.15.3. T.con-use: Concept use\n1.7.15.3.1. T.10: Specify concepts for all template arguments\nReason\nCorrectness and readability.\nThe assumed meaning (syntax and semantics) of a template argument is fundamental to the interface of a template.\nA concept dramatically improves documentation and error handling for the template.\nSpecifying concepts for template arguments is a powerful design tool.\nExample\ntemplate\n//    requires Input_iterator\n//             && Equality_comparable, Val>\nIter find(Iter b, Iter e, Val v)\n{\n    // ...\n}\nor equivalently and more succinctly:\ntemplate\n//    requires Equality_comparable, Val>\nIter find(Iter b, Iter e, Val v)\n{\n    // ...\n}\nNote\n\"Concepts\" are defined in an ISO Technical specification: concepts.\nA draft of a set of standard-library concepts can be found in another ISO TS: ranges\nCurrently (July 2016), concepts are supported only in GCC 6.1.\nConsequently, we comment out uses of concepts in examples; that is, we use them as formalized comments only.\nIf you use GCC 6.1, you can uncomment them:\ntemplate\n    requires Input_iterator\n           && Equality_comparable, Val>\nIter find(Iter b, Iter e, Val v)\n{\n    // ...\n}\nNote\nPlain typename (or auto) is the least constraining concept.\nIt should be used only rarely when nothing more than \"it's a type\" can be assumed.\nThis is typically only needed when (as part of template metaprogramming code) we manipulate pure expression trees, postponing type checking.\nReferences: TC++PL4, Palo Alto TR, Sutton\nEnforcement\nFlag template type arguments without concepts\n1.7.15.3.2. T.11: Whenever possible use standard concepts\nReason\n \"Standard\" concepts (as provided by the GSL and the Ranges TS, and hopefully soon the ISO standard itself)\nsaves us the work of thinking up our own concepts, are better thought out than we can manage to do in a hurry, and improves interoperability.\nNote\nUnless you are creating a new generic library, most of the concepts you need will already be defined by the standard library.\nExample (using TS concepts)\ntemplate\n    // don't define this: Sortable is in the GSL\nconcept Ordered_container = Sequence && Random_access> && Ordered>;\n\nvoid sort(Ordered_container& s);\nThis Ordered_container is quite plausible, but it is very similar to the Sortable concept in the GSL (and the Range TS).\nIs it better? Is it right? Does it accurately reflect the standard's requirements for sort?\nIt is better and simpler just to use Sortable:\nvoid sort(Sortable& s);   // better\nNote\nThe set of \"standard\" concepts is evolving as we approach an ISO standard including concepts.\nNote\nDesigning a useful concept is challenging.\nEnforcement\nHard.\n\nLook for unconstrained arguments, templates that use \"unusual\"/non-standard concepts, templates that use \"homebrew\" concepts without axioms.\nDevelop a concept-discovery tool (e.g., see an early experiment).\n\n1.7.15.3.3. T.12: Prefer concept names over auto for local variables\nReason\n auto is the weakest concept. Concept names convey more meaning than just auto.\nExample (using TS concepts)\nvector v;\nauto& x = v.front();     // bad\nString& s = v.begin();   // good (String is a GSL concept)\nEnforcement\n\n???\n\n1.7.15.3.4. T.13: Prefer the shorthand notation for simple, single-type argument concepts\nReason\nReadability. Direct expression of an idea.\nExample (using TS concepts)\nTo say \"T is Sortable\":\ntemplate       // Correct but verbose: \"The parameter is\n//    requires Sortable   // of type T which is the name of a type\nvoid sort(T&);             // that is Sortable\"\n\ntemplate       // Better (assuming support for concepts): \"The parameter is of type T\nvoid sort(T&);             // which is Sortable\"\n\nvoid sort(Sortable&);      // Best (assuming support for concepts): \"The parameter is Sortable\"\nThe shorter versions better match the way we speak. Note that many templates don't need to use the template keyword.\nNote\n\"Concepts\" are defined in an ISO Technical specification: concepts.\nA draft of a set of standard-library concepts can be found in another ISO TS: ranges\nCurrently (July 2016), concepts are supported only in GCC 6.1.\nConsequently, we comment out uses of concepts in examples; that is, we use them as formalized comments only.\nIf you use a compiler that supports concepts (e.g., GCC 6.1), you can remove the //.\nEnforcement\n\nNot feasible in the short term when people convert from the  and > notation.\nLater, flag declarations that first introduces a typename and then constrains it with a simple, single-type-argument concept.\n\n1.7.15.4. T.concepts.def: Concept definition rules\nDefining good concepts is non-trivial.\nConcepts are meant to represent fundamental concepts in an application domain (hence the name \"concepts\").\nSimilarly throwing together a set of syntactic constraints to be used for a the arguments for a single class or algorithm is not what concepts were designed for\nand will not give the full benefits of the mechanism.\nObviously, defining concepts will be most useful for code that can use an implementation (e.g., GCC 6.1),\nbut defining concepts is in itself a useful design technique and help catch conceptual errors and clean up the concepts (sic!) of an implementation.\n1.7.15.4.1. T.20: Avoid \"concepts\" without meaningful semantics\nReason\nConcepts are meant to express semantic notions, such as \"a number\", \"a range\" of elements, and \"totally ordered.\"\nSimple constraints, such as \"has a + operator\" and \"has a > operator\" cannot be meaningfully specified in isolation\nand should be used only as building blocks for meaningful concepts, rather than in user code.\nExample, bad (using TS concepts)\ntemplate\nconcept Addable = has_plus;    // bad; insufficient\n\ntemplate auto algo(const N& a, const N& b) // use two numbers\n{\n    // ...\n    return a + b;\n}\n\nint x = 7;\nint y = 9;\nauto z = plus(x, y);   // z = 16\n\nstring xx = \"7\";\nstring yy = \"9\";\nauto zz = plus(xx, yy);   // zz = \"79\"\nMaybe the concatenation was expected. More likely, it was an accident. Defining minus equivalently would give dramatically different sets of accepted types.\nThis Addable violates the mathematical rule that addition is supposed to be commutative: a+b == b+a.\nNote\nThe ability to specify a meaningful semantics is a defining characteristic of a true concept, as opposed to a syntactic constraint.\nExample (using TS concepts)\ntemplate\n// The operators +, -, *, and / for a number are assumed to follow the usual mathematical rules\nconcept Number = has_plus\n                 && has_minus\n                 && has_multiply\n                 && has_divide;\n\ntemplate auto algo(const N& a, const N& b) // use two numbers\n{\n    // ...\n    return a + b;\n}\n\nint x = 7;\nint y = 9;\nauto z = plus(x, y);   // z = 18\n\nstring xx = \"7\";\nstring yy = \"9\";\nauto zz = plus(xx, yy);   // error: string is not a Number\nNote\nConcepts with multiple operations have far lower chance of accidentally matching a type than a single-operation concept.\nEnforcement\n\nFlag single-operation concepts when used outside the definition of other concepts.\nFlag uses of enable_if that appears to simulate single-operation concepts.\n\n1.7.15.4.2. T.21: Require a complete set of operations for a concept\nReason\nEase of comprehension.\nImproved interoperability.\nHelps implementers and maintainers.\nNote\nThis is a specific variant of the general rule that a concept must make semantic sense.\nExample, bad (using TS concepts)\ntemplate concept Subtractable = requires(T a, T, b) { a-b; };\nThis makes no semantic sense.\nYou need at least + to make - meaningful and useful.\nExamples of complete sets are\n\nArithmetic: +, -, *, /, +=, -=, *=, /=\nComparable: , >, , >=, ==, !=\n\nNote\nThis rule applies whether we use direct language support for concepts or not.\nIt is a general design rule that even applies to non-templates:\nclass Minimal {\n    // ...\n};\n\nbool operator==(const Minimal&, const Minimal&);\nbool operator= y) { /* ... */ }    // surprise! error\n\n    x = x + y;          // OK\n    x += y;             // surprise! error\n}\nThis is minimal, but surprising and constraining for users.\nIt could even be less efficient.\nThe rule supports the view that a concept should reflect a (mathematically) coherent set of operations.\nExample\nclass Convenient {\n    // ...\n};\n\nbool operator==(const Convenient&, const Convenient&);\nbool operator= y) { /* ... */ }    // OK\n\n    x = x + y;     // OK\n    x += y;        // OK\n}\nIt can be a nuisance to define all operators, but not hard.\nIdeally, that rule should be language supported by giving you comparison operators by default.\nEnforcement\n\nFlag classes the support \"odd\" subsets of a set of operators, e.g., == but not != or + but not -.\nYes, std::string is \"odd\", but it's too late to change that.\n\n1.7.15.4.3. T.22: Specify axioms for concepts\nReason\nA meaningful/useful concept has a semantic meaning.\nExpressing these semantics in an informal, semi-formal, or formal way makes the concept comprehensible to readers and the effort to express it can catch conceptual errors.\nSpecifying semantics is a powerful design tool.\nExample (using TS concepts)\ntemplate\n    // The operators +, -, *, and / for a number are assumed to follow the usual mathematical rules\n    // axiom(T a, T b) { a + b == b + a; a - a == 0; a * (b + c) == a * b + a * c; /*...*/ }\n    concept Number = requires(T a, T b) {\n        {a + b} -> T;   // the result of a + b is convertible to T\n        {a - b} -> T;\n        {a * b} -> T;\n        {a / b} -> T;\n    }\nNote\nThis is an axiom in the mathematical sense: something that may be assumed without proof.\nIn general, axioms are not provable, and when they are the proof is often beyond the capability of a compiler.\nAn axiom may not be general, but the template writer may assume that it holds for all inputs actually used (similar to a precondition).\nNote\nIn this context axioms are Boolean expressions.\nSee the Palo Alto TR for examples.\nCurrently, C++ does not support axioms (even the ISO Concepts TS), so we have to make do with comments for a longish while.\nOnce language support is available, the // in front of the axiom can be removed\nNote\nThe GSL concepts have well-defined semantics; see the Palo Alto TR and the Ranges TS.\nException (using TS concepts)\nEarly versions of a new \"concept\" still under development will often just define simple sets of constraints without a well-specified semantics.\nFinding good semantics can take effort and time.\nAn incomplete set of constraints can still be very useful:\n// balancer for a generic binary tree\ntemplate concept bool Balancer = requires(Node* p) {\n    add_fixup(p);\n    touch(p);\n    detach(p);\n}\nSo a Balancer must supply at least thee operations on a tree Node,\nbut we are not yet ready to specify detailed semantics because a new kind of balanced tree might require more operations\nand the precise general semantics for all nodes is hard to pin down in the early stages of design.\nA \"concept\" that is incomplete or without a well-specified semantics can still be useful.\nFor example, it allows for some checking during initial experimentation.\nHowever, it should not be assumed to be stable.\nEach new use case may require such an incomplete concepts to be improved.\nEnforcement\n\nLook for the word \"axiom\" in concept definition comments\n\n1.7.15.4.4. T.23: Differentiate a refined concept from its more general case by adding new use patterns.\nReason\nOtherwise they cannot be distinguished automatically by the compiler.\nExample (using TS concepts)\ntemplate\nconcept bool Input_iter = requires(I iter) { ++iter; };\n\ntemplate\nconcept bool Fwd_iter = Input_iter && requires(I iter) { iter++; }\nThe compiler can determine refinement based on the sets of required operations (here, suffix ++).\nThis decreases the burden on implementers of these types since\nthey do not need any special declarations to \"hook into the concept\".\nIf two concepts have exactly the same requirements, they are logically equivalent (there is no refinement).\nEnforcement\n\nFlag a concept that has exactly the same requirements as another already-seen concept (neither is more refined).\nTo disambiguate them, see T.24.\n\n1.7.15.4.5. T.24: Use tag classes or traits to differentiate concepts that differ only in semantics.\nReason\nTwo concepts requiring the same syntax but having different semantics leads to ambiguity unless the programmer differentiates them.\nExample (using TS concepts)\ntemplate    // iterator providing random access\nconcept bool RA_iter = ...;\n\ntemplate    // iterator providing random access to contiguous data\nconcept bool Contiguous_iter =\n    RA_iter && is_contiguous::value;  // using is_contiguous trait\nThe programmer (in a library) must define is_contiguous (a trait) appropriately.\nWrapping a tag class into a concept leads to a simpler expression of this idea:\ntemplate concept Contiguous = is_contiguous::value;\n\ntemplate\nconcept bool Contiguous_iter = RA_iter && Contiguous;\nThe programmer (in a library) must define is_contiguous (a trait) appropriately.\nNote\nTraits can be trait classes or type traits.\nThese can be user-defined or standard-library ones.\nPrefer the standard-library ones.\nEnforcement\n\nThe compiler flags ambiguous use of identical concepts.\nFlag the definition of identical concepts.\n\n1.7.15.4.6. T.25: Avoid complementary constraints\nReason\nClarity. Maintainability.\nFunctions with complementary requirements expressed using negation are brittle.\nExample (using TS concepts)\nInitially, people will try to define functions with complementary requirements:\ntemplate\n    requires !C    // bad\nvoid f();\n\ntemplate\n    requires C\nvoid f();\nThis is better:\ntemplate   // general template\n    void f();\n\ntemplate   // specialization by concept\n    requires C\nvoid f();\nThe compiler will choose the unconstrained template only when C is\nunsatisfied. If you do not want to (or cannot) define an unconstrained\nversion of f(), then delete it.\ntemplate\nvoid f() = delete;\nThe compiler will select the overload and emit an appropriate error.\nNote\nComplementary constraints are unfortunately common in enable_if code:\ntemplate\nenable_if, void>   // bad\nf();\n\ntemplate\nenable_if, void>\nf();\nNote\nComplementary requirements on one requirements is sometimes (wrongly) considered manageable.\nHowever, for two or more requirements the number of definitions needs can go up exponentially (2,4,9,16,...):\nC1 && C2\n!C1 && C2\nC1 && !C2\n!C1 && !C2\nNow the opportunities for errors multiply.\nEnforcement\n\nFlag pairs of functions with C and !C constraints\n\n1.7.15.4.7. T.26: Prefer to define concepts in terms of use-patterns rather than simple syntax\nReason\nThe definition is more readable and corresponds directly to what a user has to write.\nConversions are taken into account. You don't have to remember the names of all the type traits.\nExample (using TS concepts)\nYou might be tempted to define a concept Equality like this:\ntemplate concept Equality = has_equal && has_not_equal;\nObviously, it would be better and easier just to use the standard EqualityComparable,\nbut - just as an example - if you had to define such a concept, prefer:\ntemplate concept Equality = requires(T a, T b) {\n    bool == { a == b }\n    bool == { a != b }\n    // axiom { !(a == b) == (a != b) }\n    // axiom { a = b; => a == b }  // => means \"implies\"\n}\nas opposed to defining two meaningless concepts has_equal and has_not_equal just as helpers in the definition of Equality.\nBy \"meaningless\" we mean that we cannot specify the semantics of has_equal in isolation.\nEnforcement\n???\n1.7.15.5. Template interfaces\nOver the years, programming with templates have suffered from a weak distinction between the interface of a template\nand its implementation.\nBefore concepts, that distinction had no direct language support.\nHowever, the interface to a template is a critical concept - a contract between a user and an implementer - and should be carefully designed.\n1.7.15.5.1. T.40: Use function objects to pass operations to algorithms\nReason\nFunction objects can carry more information through an interface than a \"plain\" pointer to function.\nIn general, passing function objects gives better performance than passing pointers to functions.\nExample (using TS concepts)\nbool greater(double x, double y) { return x > y; }\nsort(v, greater);                                    // pointer to function: potentially slow\nsort(v, [](double x, double y) { return x > y; });   // function object\nsort(v, std::greater<>);                             // function object\n\nbool greater_than_7(double x) { return x > 7; }\nauto x = find_if(v, greater_than_7);                 // pointer to function: inflexible\nauto y = find_if(v, [](double x) { return x > 7; }); // function object: carries the needed data\nauto z = find_if(v, Greater_than(7));        // function object: carries the needed data\nYou can, of course, generalize those functions using auto or (when and where available) concepts. For example:\nauto y1 = find_if(v, [](Ordered x) { return x > 7; }); // require an ordered type\nauto z1 = find_if(v, [](auto x) { return x > 7; });    // hope that the type has a >\nNote\nLambdas generate function objects.\nNote\nThe performance argument depends on compiler and optimizer technology.\nEnforcement\n\nFlag pointer to function template arguments.\nFlag pointers to functions passed as arguments to a template (risk of false positives).\n\n1.7.15.5.2. T.41: Require only essential properties in a template's concepts\nReason\nKeep interfaces simple and stable.\nExample (using TS concepts)\nConsider, a sort instrumented with (oversimplified) simple debug support:\nvoid sort(Sortable& s)  // sort sequence s\n{\n    if (debug) cerr Should this be rewritten to:\ntemplate\n    requires Streamable\nvoid sort(S& s)  // sort sequence s\n{\n    if (debug) cerr After all, there is nothing in Sortable that requires iostream support.\nOn the other hand, there is nothing in the fundamental idea of sorting that says anything about debugging.\nNote\nIf we require every operation used to be listed among the requirements, the interface becomes unstable:\nEvery time we change the debug facilities, the usage data gathering, testing support, error reporting, etc.\nThe definition of the template would need change and every use of the template would have to be recompiled.\nThis is cumbersome, and in some environments infeasible.\nConversely, if we use an operation in the implementation that is not guaranteed by concept checking,\nwe may get a late compile-time error.\nBy not using concept checking for properties of a template argument that is not considered essential,\nwe delay checking until instantiation time.\nWe consider this a worthwhile tradeoff.\nNote that using non-local, non-dependent names (such as debug and cerr) also introduces context dependencies that may lead to \"mysterious\" errors.\nNote\nIt can be hard to decide which properties of a type is essential and which are not.\nEnforcement\n???\n1.7.15.5.3. T.42: Use template aliases to simplify notation and hide implementation details\nReason\nImproved readability.\nImplementation hiding.\nNote that template aliases replace many uses of traits to compute a type.\nThey can also be used to wrap a trait.\nExample\ntemplate\nclass Matrix {\n    // ...\n    using Iterator = typename std::vector::iterator;\n    // ...\n};\nThis saves the user of Matrix from having to know that its elements are stored in a vector and also saves the user from repeatedly typing typename std::vector::.\nExample\ntemplate\nvoid user(T& c)\n{\n    // ...\n    typename container_traits::value_type x; // bad, verbose\n    // ...\n}\n\ntemplate\nusing Value_type = typename container_traits::value_type;\nThis saves the user of Value_type from having to know the technique used to implement value_types.\ntemplate\nvoid user2(T& c)\n{\n    // ...\n    Value_type x;\n    // ...\n}\nNote\nA simple, common use could be expressed: \"Wrap traits!\"\nEnforcement\n\nFlag use of typename as a disambiguator outside using declarations.\n???\n\n1.7.15.5.4. T.43: Prefer using over typedef for defining aliases\nReason\nImproved readability: With using, the new name comes first rather than being embedded somewhere in a declaration.\nGenerality: using can be used for template aliases, whereas typedefs can't easily be templates.\nUniformity: using is syntactically similar to auto.\nExample\ntypedef int (*PFI)(int);   // OK, but convoluted\n\nusing PFI2 = int (*)(int);   // OK, preferred\n\ntemplate\ntypedef int (*PFT)(T);      // error\n\ntemplate\nusing PFT2 = int (*)(T);   // OK\nEnforcement\n\nFlag uses of typedef. This will give a lot of \"hits\" :-(\n\n1.7.15.5.5. T.44: Use function templates to deduce class template argument types (where feasible)\nReason\nWriting the template argument types explicitly can be tedious and unnecessarily verbose.\nExample\ntuple t1 = {1, \"Hamlet\", 3.14};   // explicit type\nauto t2 = make_tuple(1, \"Ophelia\"s, 3.14);         // better; deduced type\nNote the use of the s suffix to ensure that the string is a std::string, rather than a C-style string.\nNote\nSince you can trivially write a make_T function, so could the compiler. Thus, make_T functions may become redundant in the future.\nException\nSometimes there isn't a good way of getting the template arguments deduced and sometimes, you want to specify the arguments explicitly:\nvector v = { 1, 2, 3, 7.9, 15.99 };\nlist lst;\nNote\nNote that C++17 will make this rule redundant by allowing the template arguments to be deduced directly from constructor arguments:\nTemplate parameter deduction for constructors (Rev. 3).\nFor example:\ntuple t1 = {1, \"Hamlet\"s, 3.14}; // deduced: tuple\nEnforcement\nFlag uses where an explicitly specialized type exactly matches the types of the arguments used.\n1.7.15.5.6. T.46: Require template arguments to be at least Regular or SemiRegular\nReason\n Readability.\n Preventing surprises and errors.\n Most uses support that anyway.\nExample\nclass X {\n        // ...\npublic:\n    explicit X(int);\n    X(const X&);            // copy\n    X operator=(const X&);\n    X(X&&) noexcept;                 // move\n    X& operator=(X&&) noexcept;\n    ~X();\n    // ... no more constructors ...\n};\n\nX x {1};    // fine\nX y = x;      // fine\nstd::vector v(10); // error: no default constructor\nNote\nSemiregular requires default constructible.\nEnforcement\n\nFlag types that are not at least SemiRegular.\n\n1.7.15.5.7. T.47: Avoid highly visible unconstrained templates with common names\nReason\n An unconstrained template argument is a perfect match for anything so such a template can be preferred over more specific types that require minor conversions.\n This is particularly annoying/dangerous when ADL is used.\n Common names make this problem more likely.\nExample\nnamespace Bad {\n    struct S { int m; };\n    template\n    bool operator==(T1, T2) { cout  v(10);\n        bool b = 1 == bad;\n        bool b2 = v.size() == bad;\n    }\n}\nThis prints T0 and Bad.\nNow the == in Bad was designed to cause trouble, but would you have spotted the problem in real code?\nThe problem is that v.size() returns an unsigned integer so that a conversion is needed to call the local ==;\nthe == in Bad requires no conversions.\nRealistic types, such as the standard-library iterators can be made to exhibit similar anti-social tendencies.\nNote\nIf an unconstrained template is defined in the same namespace as a type,\nthat unconstrained template can be found by ADL (as happened in the example).\nThat is, it is highly visible.\nNote\nThis rule should not be necessary, but the committee cannot agree to exclude unconstrained templated from ADL.\nUnfortunately this will get many false positives; the standard library violates this widely, by putting many unconstrained templates and types into the single namespace std.\nEnforcement\nFlag templates defined in a namespace where concrete types are also defined (maybe not feasible until we have concepts).\n1.7.15.5.8. T.48: If your compiler does not support concepts, fake them with enable_if\nReason\nBecause that's the best we can do without direct concept support.\nenable_if can be used to conditionally define functions and to select among a set of functions.\nExample\nenable_if\nNote\nBeware of complementary constraints.\nFaking concept overloading using enable_if sometimes forces us to use that error-prone design technique.\nEnforcement\n???\n1.7.15.5.9. T.49: Where possible, avoid type-erasure\nReason\nType erasure incurs an extra level of indirection by hiding type information behind a separate compilation boundary.\nExample\n???\nExceptions: Type erasure is sometimes appropriate, such as for std::function.\nEnforcement\n???\nNote\n1.7.15.6. T.def: Template definitions\nA template definition (class or function) can contain arbitrary code, so only a comprehensive review of C++ programming techniques would cover this topic.\nHowever, this section focuses on what is specific to template implementation.\nIn particular, it focuses on a template definition's dependence on its context.\n1.7.15.6.1. T.60: Minimize a template's context dependencies\nReason\nEases understanding.\nMinimizes errors from unexpected dependencies.\nEases tool creation.\nExample\ntemplate\nvoid sort(C& c)\n{\n    std::sort(begin(c), end(c)); // necessary and useful dependency\n}\n\ntemplate\nIter algo(Iter first, Iter last) {\n    for (; first != last; ++first) {\n        auto x = sqrt(*first); // potentially surprising dependency: which sqrt()?\n        helper(first, x);      // potentially surprising dependency:\n                               // helper is chosen based on first and x\n        TT var = 7;            // potentially surprising dependency: which TT?\n    }\n}\nNote\nTemplates typically appear in header files so their context dependencies are more vulnerable to #include order dependencies than functions in .cpp files.\nNote\nHaving a template operate only on its arguments would be one way of reducing the number of dependencies to a minimum, but that would generally be unmanageable.\nFor example, an algorithm usually uses other algorithms and invoke operations that does not exclusively operate on arguments.\nAnd don't get us started on macros!\nSee also T.69\nEnforcement\n??? Tricky\n1.7.15.6.2. T.61: Do not over-parameterize members (SCARY)\nReason\nA member that does not depend on a template parameter cannot be used except for a specific template argument.\nThis limits use and typically increases code size.\nExample, bad\ntemplate\n    // requires Regular && Allocator\nclass List {\npublic:\n    struct Link {   // does not depend on A\n        T elem;\n        T* pre;\n        T* suc;\n    };\n\n    using iterator = Link*;\n\n    iterator first() const { return head; }\n\n    // ...\nprivate:\n    Link* head;\n};\n\nList lst1;\nList lst2;\n\n???\nThis looks innocent enough, but ???\ntemplate\nstruct Link {\n    T elem;\n    T* pre;\n    T* suc;\n};\n\ntemplate\n    // requires Regular && Allocator\nclass List2 {\npublic:\n    using iterator = Link*;\n\n    iterator first() const { return head; }\n\n    // ...\nprivate:\n    Link* head;\n};\n\nList lst1;\nList lst2;\n\n???\nEnforcement\n\nFlag member types that do not depend on every template argument\nFlag member functions that do not depend on every template argument\n\n1.7.15.6.3. T.62: Place non-dependent class template members in a non-templated base class\nReason\n Allow the base class members to be used without specifying template arguments and without template instantiation.\nExample\ntemplate\nclass Foo {\npublic:\n    enum { v1, v2 };\n    // ...\n};\n???\nstruct Foo_base {\n    enum { v1, v2 };\n    // ...\n};\n\ntemplate\nclass Foo : public Foo_base {\npublic:\n    // ...\n};\nNote\nA more general version of this rule would be\n\"If a template class member depends on only N template parameters out of M, place it in a base class with only N parameters.\"\nFor N == 1, we have a choice of a base class of a class in the surrounding scope as in T.61.\n??? What about constants? class statics?\nEnforcement\n\nFlag ???\n\n1.7.15.6.4. T.64: Use specialization to provide alternative implementations of class templates\nReason\nA template defines a general interface.\nSpecialization offers a powerful mechanism for providing alternative implementations of that interface.\nExample\n??? string specialization (==)\n\n??? representation specialization ?\nNote\n???\nEnforcement\n???\n1.7.15.6.5. T.65: Use tag dispatch to provide alternative implementations of a function\nReason\n\nA template defines a general interface.\nTag dispatch allows us to select implementations based on specific properties of an argument type.\nPerformance.\n\nExample\nThis is a simplified version of std::copy (ignoring the possibility of non-contiguous sequences)\nstruct pod_tag {};\nstruct non_pod_tag {};\n\ntemplate struct copy_trait { using tag = non_pod_tag; };   // T is not \"plain old data\"\n\ntemplate<> struct copy_trait { using tag = pod_tag; };         // int is \"plain old data\"\n\ntemplate\nOut copy_helper(Iter first, Iter last, Iter out, pod_tag)\n{\n    // use memmove\n}\n\ntemplate\nOut copy_helper(Iter first, Iter last, Iter out, non_pod_tag)\n{\n    // use loop calling copy constructors\n}\n\ntemplate\nOut copy(Iter first, Iter last, Iter out)\n{\n    return copy_helper(first, last, out, typename copy_trait::tag{})\n}\n\nvoid use(vector& vi, vector& vi2, vector& vs, vector& vs2)\n{\n    copy(vi.begin(), vi.end(), vi2.begin()); // uses memmove\n    copy(vs.begin(), vs.end(), vs2.begin()); // uses a loop calling copy constructors\n}\nThis is a general and powerful technique for compile-time algorithm selection.\nNote\nWhen concepts become widely available such alternatives can be distinguished directly:\ntemplate\n    requires Pod>\nOut copy_helper(In, first, In last, Out out)\n{\n    // use memmove\n}\n\ntemplate\nOut copy_helper(In, first, In last, Out out)\n{\n    // use loop calling copy constructors\n}\nEnforcement\n???\n1.7.15.6.6. T.67: Use specialization to provide alternative implementations for irregular types\nReason\n ???\nExample\n???\nEnforcement\n???\n1.7.15.6.7. T.68: Use {} rather than () within templates to avoid ambiguities\nReason\n () is vulnerable to grammar ambiguities.\nExample\ntemplate\nvoid f(T t, U u)\n{\n    T v1(x);    // is v1 a function of a variable?\n    T v2 {x};   // variable\n    auto x = T(u);  // construction or cast?\n}\n\nf(1, \"asdf\"); // bad: cast from const char* to int\nEnforcement\n\nflag () initializers\nflag function-style casts\n\n1.7.15.6.8. T.69: Inside a template, don't make an unqualified nonmember function call unless you intend it to be a customization point\nReason\n\nProvide only intended flexibility.\nAvoid vulnerability to accidental environmental changes.\n\nExample\nThere are three major ways to let calling code customize a template.\ntemplate\n    // Call a member function\nvoid test1(T t)\n{\n    t.f();    // require T to provide f()\n}\n\ntemplate\nvoid test2(T t)\n    // Call a nonmember function without qualification\n{\n    f(t);  // require f(/*T*/) be available in caller's scope or in T's namespace\n}\n\ntemplate\nvoid test3(T t)\n    // Invoke a \"trait\"\n{\n    test_traits::f(t); // require customizing test_traits<>\n                          // to get non-default functions/types\n}\nA trait is usually a type alias to compute a type,\na constexpr function to compute a value,\nor a traditional traits template to be specialized on the user's type.\nNote\nIf you intend to call your own helper function helper(t) with a value t that depends on a template type parameter,\nput it in a ::detail namespace and qualify the call as detail::helper(t);.\nAn unqualified call becomes a customization point where any function helper in the namespace of t's type can be invoked;\nthis can cause problems like unintentionally invoking unconstrained function templates.\nEnforcement\n\nIn a template, flag an unqualified call to a nonmember function that passes a variable of dependent type when there is a nonmember function of the same name in the template's namespace.\n\n1.7.15.7. T.temp-hier: Template and hierarchy rules:\nTemplates are the backbone of C++'s support for generic programming and class hierarchies the backbone of its support\nfor object-oriented programming.\nThe two language mechanisms can be used effectively in combination, but a few design pitfalls must be avoided.\n1.7.15.7.1. T.80: Do not naively templatize a class hierarchy\nReason\nTemplating a class hierarchy that has many functions, especially many virtual functions, can lead to code bloat.\nExample, bad\ntemplate\nstruct Container {         // an interface\n    virtual T* get(int i);\n    virtual T* first();\n    virtual T* next();\n    virtual void sort();\n};\n\ntemplate\nclass Vector : public Container {\npublic:\n    // ...\n};\n\nvector vi;\nvector vs;\nIt is probably a dumb idea to define a sort as a member function of a container, but it is not unheard of and it makes a good example of what not to do.\nGiven this, the compiler cannot know if vector::sort() is called, so it must generate code for it.\nSimilar for vector::sort().\nUnless those two functions are called that's code bloat.\nImagine what this would do to a class hierarchy with dozens of member functions and dozens of derived classes with many instantiations.\nNote\nIn many cases you can provide a stable interface by not parameterizing a base;\nsee \"stable base\" and OO and GP\nEnforcement\n\nFlag virtual functions that depend on a template argument. ??? False positives\n\n1.7.15.7.2. T.81: Do not mix hierarchies and arrays\nReason\nAn array of derived classes can implicitly \"decay\" to a pointer to a base class with potential disastrous results.\nExample\nAssume that Apple and Pear are two kinds of Fruits.\nvoid maul(Fruit* p)\n{\n    *p = Pear{};     // put a Pear into *p\n    p[1] = Pear{};   // put a Pear into p[2]\n}\n\nApple aa [] = { an_apple, another_apple };   // aa contains Apples (obviously!)\n\nmaul(aa);\nApple& a0 = &aa[0];   // a Pear?\nApple& a1 = &aa[1];   // a Pear?\nProbably, aa[0] will be a Pear (without the use of a cast!).\nIf sizeof(Apple) != sizeof(Pear) the access to aa[1] will not be aligned to the proper start of an object in the array.\nWe have a type violation and possibly (probably) a memory corruption.\nNever write such code.\nNote that maul() violates the a T* points to an individual object Rule.\nAlternative: Use a proper (templatized) container:\nvoid maul2(Fruit* p)\n{\n    *p = Pear{};   // put a Pear into *p\n}\n\nvector va = { an_apple, another_apple };   // va contains Apples (obviously!)\n\nmaul2(va);       // error: cannot convert a vector to a Fruit*\nmaul2(&va[0]);   // you asked for it\n\nApple& a0 = &va[0];   // a Pear?\nNote that the assignment in maul2() violated the no-slicing Rule.\nEnforcement\n\nDetect this horror!\n\n1.7.15.7.3. T.82: Linearize a hierarchy when virtual functions are undesirable\nReason\n ???\nExample\n???\nEnforcement\n???\n1.7.15.7.4. T.83: Do not declare a member function template virtual\nReason\nC++ does not support that.\nIf it did, vtbls could not be generated until link time.\nAnd in general, implementations must deal with dynamic linking.\nExample, don't\nclass Shape {\n    // ...\n    template\n    virtual bool intersect(T* p);   // error: template cannot be virtual\n};\nNote\nWe need a rule because people keep asking about this\nAlternative\nDouble dispatch, visitors, calculate which function to call\nEnforcement\nThe compiler handles that.\n1.7.15.7.5. T.84: Use a non-template core implementation to provide an ABI-stable interface\nReason\nImprove stability of code.\nAvoid code bloat.\nExample\nIt could be a base class:\nstruct Link_base {   // stable\n    Link_base* suc;\n    Link_base* pre;\n};\n\ntemplate   // templated wrapper to add type safety\nstruct Link : Link_base {\n    T val;\n};\n\nstruct List_base {\n    Link_base* first;   // first element (if any)\n    int sz;             // number of elements\n    void add_front(Link_base* p);\n    // ...\n};\n\ntemplate\nclass List : List_base {\npublic:\n    void put_front(const T& e) { add_front(new Link{e}); }   // implicit cast to Link_base\n    T& front() { static_cast*>(first).val; }   // explicit cast back to Link\n    // ...\n};\n\nList li;\nList ls;\nNow there is only one copy of the operations linking and unlinking elements of a List.\nThe Link and List classes do nothing but type manipulation.\nInstead of using a separate \"base\" type, another common technique is to specialize for void or void* and have the general template for T be just the safely-encapsulated casts to and from the core void implementation.\nAlternative: Use a Pimpl implementation.\nEnforcement\n???\n1.7.15.8. T.var: Variadic template rules\n???\n1.7.15.8.1. T.100: Use variadic templates when you need a function that takes a variable number of arguments of a variety of types\nReason\nVariadic templates is the most general mechanism for that, and is both efficient and type-safe. Don't use C varargs.\nExample\n??? printf\nEnforcement\n\nFlag uses of va_arg in user code.\n\n1.7.15.8.2. T.101: ??? How to pass arguments to a variadic template ???\nReason\n ???\nExample\n??? beware of move-only and reference arguments\nEnforcement\n???\n1.7.15.8.3. T.102: How to process arguments to a variadic template\nReason\n ???\nExample\n??? forwarding, type checking, references\nEnforcement\n???\n1.7.15.8.4. T.103: Don't use variadic templates for homogeneous argument lists\nReason\nThere are more precise ways of specifying a homogeneous sequence, such as an initializer_list.\nExample\n???\nEnforcement\n???\n1.7.15.9. T.meta: Template metaprogramming (TMP)\nTemplates provide a general mechanism for compile-time programming.\nMetaprogramming is programming where at least one input or one result is a type.\nTemplates offer Turing-complete (modulo memory capacity) duck typing at compile time.\nThe syntax and techniques needed are pretty horrendous.\n1.7.15.9.1. T.120: Use template metaprogramming only when you really need to\nReason\nTemplate metaprogramming is hard to get right, slows down compilation, and is often very hard to maintain.\nHowever, there are real-world examples where template metaprogramming provides better performance that any alternative short of expert-level assembly code.\nAlso, there are real-world examples where template metaprogramming expresses the fundamental ideas better than run-time code.\nFor example, if you really need AST manipulation at compile time (e.g., for optional matrix operation folding) there may be no other way in C++.\nExample, bad\n???\nExample, bad\nenable_if\nInstead, use concepts. But see How to emulate concepts if you don't have language support.\nExample\n??? good\nAlternative: If the result is a value, rather than a type, use a constexpr function.\nNote\nIf you feel the need to hide your template metaprogramming in macros, you have probably gone too far.\n1.7.15.9.2. T.121: Use template metaprogramming primarily to emulate concepts\nReason\nUntil concepts become generally available, we need to emulate them using TMP.\nUse cases that require concepts (e.g. overloading based on concepts) are among the most common (and simple) uses of TMP.\nExample\ntemplate\n    /*requires*/ enable_if, void>\nadvance(Iter p, int n) { p += n; }\n\ntemplate\n    /*requires*/ enable_if, void>\nadvance(Iter p, int n) { assert(n >= 0); while (n--) ++p;}\nNote\nSuch code is much simpler using concepts:\nvoid advance(RandomAccessIterator p, int n) { p += n; }\n\nvoid advance(ForwardIterator p, int n) { assert(n >= 0); while (n--) ++p;}\nEnforcement\n???\n1.7.15.9.3. T.122: Use templates (usually template aliases) to compute types at compile time\nReason\nTemplate metaprogramming is the only directly supported and half-way principled way of generating types at compile time.\nNote\n\"Traits\" techniques are mostly replaced by template aliases to compute types and constexpr functions to compute values.\nExample\n??? big object / small object optimization\nEnforcement\n???\n1.7.15.9.4. T.123: Use constexpr functions to compute values at compile time\nReason\nA function is the most obvious and conventional way of expressing the computation of a value.\nOften a constexpr function implies less compile-time overhead than alternatives.\nNote\n\"Traits\" techniques are mostly replaced by template aliases to compute types and constexpr functions to compute values.\nExample\ntemplate\n    // requires Number\nconstexpr T pow(T v, int n)   // power/exponential\n{\n    T res = 1;\n    while (n--) res *= v;\n    return res;\n}\n\nconstexpr auto f7 = pow(pi, 7);\nEnforcement\n\nFlag template metaprograms yielding a value. These should be replaced with constexpr functions.\n\n1.7.15.9.5. T.124: Prefer to use standard-library TMP facilities\nReason\nFacilities defined in the standard, such as conditional, enable_if, and tuple, are portable and can be assumed to be known.\nExample\n???\nEnforcement\n???\n1.7.15.9.6. T.125: If you need to go beyond the standard-library TMP facilities, use an existing library\nReason\nGetting advanced TMP facilities is not easy and using a library makes you part of a (hopefully supportive) community.\nWrite your own \"advanced TMP support\" only if you really have to.\nExample\n???\nEnforcement\n???\n1.7.15.10. Other template rules\n1.7.15.10.1. T.140: Name all operations with potential for reuse\nReason\nDocumentation, readability, opportunity for reuse.\nExample\nstruct Rec {\n    string name;\n    string addr;\n    int id;         // unique identifier\n};\n\nbool same(const Rec& a, const Rec& b)\n{\n    return a.id == b.id;\n}\n\nvector find_id(const string& name);    // find all records for \"name\"\n\nauto x = find_if(vr.begin(), vr.end(),\n    [&](Rec& r) {\n        if (r.name.size() != n.size()) return false; // name to compare to is in n\n        for (int i = 0; i There is a useful function lurking here (case insensitive string comparison), as there often is when lambda arguments get large.\nbool compare_insensitive(const string& a, const string& b)\n{\n    if (a.size() != b.size()) return false;\n    for (int i = 0; i Or maybe (if you prefer to avoid the implicit name binding to n):\nauto cmp_to_n = [&n](const string& a) { return compare_insensitive(a, n); };\n\nauto x = find_if(vr.begin(), vr.end(),\n    [](const Rec& r) { return cmp_to_n(r.name); }\n);\nNote\nwhether functions, lambdas, or operators.\nException\n\nLambdas logically used only locally, such as an argument to for_each and similar control flow algorithms.\nLambdas as initializers\n\nEnforcement\n\n(hard) flag similar lambdas\n???\n\n1.7.15.10.2. T.141: Use an unnamed lambda if you need a simple function object in one place only\nReason\nThat makes the code concise and gives better locality than alternatives.\nExample\nauto earlyUsersEnd = std::remove_if(users.begin(), users.end(),\n                                    [](const User &a) { return a.id > 100; });\nException\nNaming a lambda can be useful for clarity even if it is used only once.\nEnforcement\n\nLook for identical and near identical lambdas (to be replaced with named functions or named lambdas).\n\n1.7.15.10.3. T.142?: Use template variables to simplify notation\nReason\nImproved readability.\nExample\n???\nEnforcement\n???\n1.7.15.10.4. T.143: Don't write unintentionally nongeneric code\nReason\nGenerality. Reusability. Don't gratuitously commit to details; use the most general facilities available.\nExample\nUse != instead of  to compare iterators; != works for more objects because it doesn't rely on ordering.\nfor (auto i = first; i Of course, range-for is better still where it does what you want.\nExample\nUse the least-derived class that has the functionality you need.\nclass Base {\npublic:\n    Bar f();\n    Bar g();\n};\n\nclass Derived1 : public Base {\npublic:\n    Bar h();\n};\n\nclass Derived2 : public Base {\npublic:\n    Bar j();\n};\n\n// bad, unless there is a specific reason for limiting to Derived1 objects only\nvoid my_func(Derived1& param)\n{\n    use(param.f());\n    use(param.g());\n}\n\n// good, uses only Base interface so only commit to that\nvoid my_func(Base& param)\n{\n    use(param.f());\n    use(param.g());\n}\nEnforcement\n\nFlag comparison of iterators using  instead of !=.\nFlag x.size() == 0 when x.empty() or x.is_empty() is available. Emptiness works for more containers than size(), because some containers don't know their size or are conceptually of unbounded size.\nFlag functions that take a pointer or reference to a more-derived type but only use functions declared in a base type.\n\n1.7.15.10.5. T.144: Don't specialize function templates\nReason\nYou can't partially specialize a function template per language rules. You can fully specialize a function template but you almost certainly want to overload instead -- because function template specializations don't participate in overloading, they don't act as you probably wanted. Rarely, you should actually specialize by delegating to a class template that you can specialize properly.\nExample\n???\nExceptions: If you do have a valid reason to specialize a function template, just write a single function template that delegates to a class template, then specialize the class template (including the ability to write partial specializations).\nEnforcement\n\nFlag all specializations of a function template. Overload instead.\n\n1.7.15.10.6. T.150: Check that a class matches a concept using static_assert\nReason\nIf you intend for a class to match a concept, verifying that early saves users pain.\nExample\nclass X {\n    X() = delete;\n    X(const X&) = default;\n    X(X&&) = default;\n    X& operator=(const X&) = default;\n    // ...\n};\nSomewhere, possibly in an implementation file, let the compiler check the desired properties of X:\nstatic_assert(Default_constructible);    // error: X has no default constructor\nstatic_assert(Copyable);                 // error: we forgot to define X's move constructor\nEnforcement\nNot feasible.\n1.7.16. CPL: C-style programming\nC and C++ are closely related languages.\nThey both originate in \"Classic C\" from 1978 and have evolved in ISO committees since then.\nMany attempts have been made to keep them compatible, but neither is a subset of the other.\nC rule summary:\n\nCPL.1: Prefer C++ to C\nCPL.2: If you must use C, use the common subset of C and C++, and compile the C code as C++\nCPL.3: If you must use C for interfaces, use C++ in the code using such interfaces\n\nCPL.1: Prefer C++ to C\nReason\nC++ provides better type checking and more notational support.\nIt provides better support for high-level programming and often generates faster code.\nExample\nchar ch = 7;\nvoid* pv = &ch;\nint* pi = pv;   // not C++\n*pi = 999;      // overwrite sizeof(int) bytes near &ch\nThe rules for implicit casting to and from void* in C are subtle and unenforced.\nIn particular, this example violates a rule against converting to a type with stricter alignment.\nEnforcement\nUse a C++ compiler.\nCPL.2: If you must use C, use the common subset of C and C++, and compile the C code as C++\nReason\nThat subset can be compiled with both C and C++ compilers, and when compiled as C++ is better type checked than \"pure C.\"\nExample\nint* p1 = malloc(10 * sizeof(int));                      // not C++\nint* p2 = static_cast(malloc(10 * sizeof(int)));   // not C, C-style C++\nint* p3 = new int[10];                                   // not C\nint* p4 = (int*) malloc(10 * sizeof(int));               // both C and C++\nEnforcement\n\nFlag if using a build mode that compiles code as C.\n\nThe C++ compiler will enforce that the code is valid C++ unless you use C extension options.\n\n\n\nCPL.3: If you must use C for interfaces, use C++ in the calling code using such interfaces\nReason\nC++ is more expressive than C and offers better support for many types of programming.\nExample\nFor example, to use a 3rd party C library or C systems interface, define the low-level interface in the common subset of C and C++ for better type checking.\nWhenever possible encapsulate the low-level interface in an interface that follows the C++ guidelines (for better abstraction, memory safety, and resource safety) and use that C++ interface in C++ code.\nExample\nYou can call C from C++:\n// in C:\ndouble sqrt(double);\n\n// in C++:\nextern \"C\" double sqrt(double);\n\nsqrt(2);\nExample\nYou can call C++ from C:\n// in C:\nX call_f(struct Y*, int);\n\n// in C++:\nextern \"C\" X call_f(Y* p, int i)\n{\n    return p->f(i);   // possibly a virtual function call\n}\nEnforcement\nNone needed\n1.7.17. SF: Source files\nDistinguish between declarations (used as interfaces) and definitions (used as implementations).\nUse header files to represent interfaces and to emphasize logical structure.\nSource file rule summary:\n\nSF.1: Use a .cpp suffix for code files and .h for interface files if your project doesn't already follow another convention\nSF.2: A .h file may not contain object definitions or non-inline function definitions\nSF.3: Use .h files for all declarations used in multiple source files\nSF.4: Include .h files before other declarations in a file\nSF.5: A .cpp file must include the .h file(s) that defines its interface\nSF.6: Use using namespace directives for transition, for foundation libraries (such as std), or within a local scope (only)\nSF.7: Don't write using namespace in a header file\nSF.8: Use #include guards for all .h files\nSF.9: Avoid cyclic dependencies among source files\nSF.10: Avoid dependencies on implicitly #included names\n\nSF.20: Use namespaces to express logical structure\n\nSF.21: Don't use an unnamed (anonymous) namespace in a header\nSF.22: Use an unnamed (anonymous) namespace for all internal/nonexported entities\n\nSF.1: Use a .cpp suffix for code files and .h for interface files if your project doesn't already follow another convention\nReason\nIt's a longstanding convention.\nBut consistency is more important, so if your project uses something else, follow that.\nNote\nThis convention reflects a common use pattern:\nHeaders are more often shared with C to compile as both C++ and C, which typically uses .h,\nand it's easier to name all headers .h instead of having different extensions for just those headers that are intended to be shared with C.\nOn the other hand, implementation files are rarely shared with C and so should typically be distinguished from .c files,\nso it's normally best to name all C++ implementation files something else (such as .cpp).\nThe specific names .h and .cpp are not required (just recommended as a default) and other names are in widespread use.\nExamples are .hh, .C, and .cxx. Use such names equivalently.\nIn this document, we refer to .h and .cpp as a shorthand for header and implementation files,\neven though the actual extension may be different.\nYour IDE (if you use one) may have strong opinions about suffices.\nExample\n// foo.h:\nextern int a;   // a declaration\nextern void foo();\n\n// foo.cpp:\nint a;   // a definition\nvoid foo() { ++a; }\nfoo.h provides the interface to foo.cpp. Global variables are best avoided.\nExample, bad\n// foo.h:\nint a;   // a definition\nvoid foo() { ++a; }\n#include  twice in a program and you get a linker error for two one-definition-rule violations.\nEnforcement\n\nFlag non-conventional file names.\nCheck that .h and .cpp (and equivalents) follow the rules below.\n\nSF.2: A .h file may not contain object definitions or non-inline function definitions\nReason\nIncluding entities subject to the one-definition rule leads to linkage errors.\nExample\n// file.h:\nnamespace Foo {\n    int x = 7;\n    int xx() { return x+x; }\n}\n\n// file1.cpp:\n#include \n// ... more ...\n\n // file2.cpp:\n#include \n// ... more ...\nLinking file1.cpp and file2.cpp will give two linker errors.\nAlternative formulation: A .h file must contain only:\n\n#includes of other .h files (possibly with include guards)\ntemplates\nclass definitions\nfunction declarations\nextern declarations\ninline function definitions\nconstexpr definitions\nconst definitions\nusing alias definitions\n???\n\nEnforcement\nCheck the positive list above.\nSF.3: Use .h files for all declarations used in multiple source files\nReason\nMaintainability. Readability.\nExample, bad\n// bar.cpp:\nvoid bar() { cout A maintainer of bar cannot find all declarations of bar if its type needs changing.\nThe user of bar cannot know if the interface used is complete and correct. At best, error messages come (late) from the linker.\nEnforcement\n\nFlag declarations of entities in other source files not placed in a .h.\n\nSF.4: Include .h files before other declarations in a file\nReason\nMinimize context dependencies and increase readability.\nExample\n#include \n#include \n#include \n\n// ... my code here ...\nExample, bad\n#include \n\n// ... my code here ...\n\n#include \n#include \nNote\nThis applies to both .h and .cpp files.\nNote\nThere is an argument for insulating code from declarations and macros in header files by #including headers after the code we want to protect\n(as in the example labeled \"bad\").\nHowever\n\nthat only works for one file (at one level): Use that technique in a header included with other headers and the vulnerability reappears.\na namespace (an \"implementation namespace\") can protect against many context dependencies.\nfull protection and flexibility require modules.\nSee also.\n\nEnforcement\nEasy.\nSF.5: A .cpp file must include the .h file(s) that defines its interface\nReason\nThis enables the compiler to do an early consistency check.\nExample, bad\n// foo.h:\nvoid foo(int);\nint bar(long);\nint foobar(int);\n\n// foo.cpp:\nvoid foo(int) { /* ... */ }\nint bar(double) { /* ... */ }\ndouble foobar(int);\nThe errors will not be caught until link time for a program calling bar or foobar.\nExample\n// foo.h:\nvoid foo(int);\nint bar(long);\nint foobar(int);\n\n// foo.cpp:\n#include \n\nvoid foo(int) { /* ... */ }\nint bar(double) { /* ... */ }\ndouble foobar(int);   // error: wrong return type\nThe return-type error for foobar is now caught immediately when foo.cpp is compiled.\nThe argument-type error for bar cannot be caught until link time because of the possibility of overloading, but systematic use of .h files increases the likelihood that it is caught earlier by the programmer.\nEnforcement\n???\nSF.6: Use using namespace directives for transition, for foundation libraries (such as std), or within a local scope (only)\nReason\n using namespace can lead to name clashes, so it should be used sparingly.\n However, it is not always possible to qualify every name from a namespace in user code (e.g., during transition)\n and sometimes a namespace is so fundamental and prevalent in a code base, that consistent qualification would be verbose and distracting.\nExample\n#include \n#include \n#include \n#include \n#include \n\nusing namespace std;\n\n// ...\nHere (obviously), the standard library is used pervasively and apparently no other library is used, so requiring std:: everywhere\ncould be distracting.\nExample\nThe use of using namespace std; leaves the programmer open to a name clash with a name from the standard library\n#include \nusing namespace std;\n\nint g(int x)\n{\n    int sqrt = 7;\n    // ...\n    return sqrt(x); // error\n}\nHowever, this is not particularly likely to lead to a resolution that is not an error and\npeople who use using namespace std are supposed to know about std and about this risk.\nNote\nA .cpp file is a form of local scope.\nThere is little difference in the opportunities for name clashes in an N-line .cpp containing a using namespace X,\nan N-line function containing a using namespace X,\nand M functions each containing a using namespace Xwith N lines of code in total.\nNote\nDon't write using namespace in a header file.\nEnforcement\nFlag multiple using namespace directives for different namespaces in a single source file.\nSF.7: Don't write using namespace in a header file\nReason\nDoing so takes away an #includer's ability to effectively disambiguate and to use alternatives.\nExample\n// bad.h\n#include \nusing namespace std; // bad\n\n// user.cpp\n#include \"bad.h\"\n\nbool copy(/*... some parameters ...*/);    // some function that happens to be named copy\n\nint main() {\n    copy(/*...*/);    // now overloads local ::copy and std::copy, could be ambiguous\n}\nEnforcement\nFlag using namespace at global scope in a header file.\nSF.8: Use #include guards for all .h files\nReason\nTo avoid files being #included several times.\nIn order to avoid include guard collisions, do not just name the guard after the filename.\nBe sure to also include a key and good differentiator, such as the name of library or component\nthe header file is part of.\nExample\n// file foobar.h:\n#ifndef LIBRARY_FOOBAR_H\n#define LIBRARY_FOOBAR_H\n// ... declarations ...\n#endif // LIBRARY_FOOBAR_H\nEnforcement\nFlag .h files without #include guards.\nNote\nSome implementations offer vendor extensions like #pragma once as alternative to include guards.\nIt is not standard and it is not portable.  It injects the hosting machine's filesystem semantics\ninto your program, in addition to locking you down to a vendor.\nOur recommendation is to write in ISO C++: See rule P.2.\nSF.9: Avoid cyclic dependencies among source files\nReason\nCycles complicates comprehension and slows down compilation.\nComplicates conversion to use language-supported modules (when they become available).\nNote\nEliminate cycles; don't just break them with #include guards.\nExample, bad\n// file1.h:\n#include \"file2.h\"\n\n// file2.h:\n#include \"file3.h\"\n\n// file3.h:\n#include \"file1.h\"\nEnforcement\nFlag all cycles.\nSF.10: Avoid dependencies on implicitly #included names\nReason\nAvoid surprises.\nAvoid having to change #includes if an #included header changes.\nAvoid accidentally becoming dependent on implementation details and logically separate entities included in a header.\nExample\n#include \nusing namespace std;\n\nvoid use()                  // bad\n{\n    string s;\n    cin >> s;               // fine\n    getline(cin, s);        // error: getline() not defined\n    if (s == \"surprise\") {  // error == not defined\n        // ...\n    }\n}\n exposes the definition of std::string (\"why?\" makes for a fun trivia question),\nbut it is not required to do so by transitively including the entire  header,\nresulting in the popular beginner question \"why doesn't getline(cin,s); work?\"\nor even an occasional \"strings cannot be compared with ==).\nThe solution is to explicitly #include :\n#include \n#include \nusing namespace std;\n\nvoid use()\n{\n    string s;\n    cin >> s;               // fine\n    getline(cin, s);        // fine\n    if (s == \"surprise\") {  // fine\n        // ...\n    }\n}\nNote\nSome headers exist exactly to collect a set of consistent declarations from a variety of headers.\nFor example:\n// basic_std_lib.h:\n\n#include \n#include \n#include \n#include \n#include \n#include \na user can now get that set of declarations with a single #include\"\n#include \"basic_std_lib.h\"\nThis rule against implicit inclusion is not meant to prevent such deliberate aggregation.\nEnforcement\nEnforcement would require some knowledge about what in a header is meant to be \"exported\" to users and what is there to enable implementation.\nNo really good solution is possible until we have modules.\nSF.20: Use namespaces to express logical structure\nReason\n ???\nExample\n???\nEnforcement\n???\nSF.21: Don't use an unnamed (anonymous) namespace in a header\nReason\nIt is almost always a bug to mention an unnamed namespace in a header file.\nExample\n???\nEnforcement\n\nFlag any use of an anonymous namespace in a header file.\n\nSF.22: Use an unnamed (anonymous) namespace for all internal/nonexported entities\nReason\nNothing external can depend on an entity in a nested unnamed namespace.\nConsider putting every definition in an implementation source file in an unnamed namespace unless that is defining an \"external/exported\" entity.\nExample\nAn API class and its members can't live in an unnamed namespace; but any \"helper\" class or function that is defined in an implementation source file should be at an unnamed namespace scope.\n???\nEnforcement\n\n???\n\n1.7.18. SL: The Standard Library\nUsing only the bare language, every task is tedious (in any language).\nUsing a suitable library any task can be reasonably simple.\nThe standard library has steadily grown over the years.\nIts description in the standard is now larger than that of the language features.\nSo, it is likely that this library section of the guidelines will eventually grow in size to equal or exceed all the rest.\n>\nC++ Standard library component summary:\n\nSL.con: Containers\nSL.str: String\nSL.io: Iostream\nSL.regex: Regex\nSL.chrono: Time\nSL.C: The C standard library\n\nStandard-library rule summary:\n\nSL.1: Use libraries wherever possible\nSL.2: Prefer the standard library to other libraries\nSL.3: Do not add non-standard entities to namespace std\nSL.4: Use the standard library in a type-safe manner\n???\n\nSL.1:  Use libraries wherever possible\nReason\nSave time. Don't re-invent the wheel.\nDon't replicate the work of others.\nBenefit from other people's work when they make improvements.\nHelp other people when you make improvements.\nSL.2: Prefer the standard library to other libraries\nReason\nMore people know the standard library.\nIt is more likely to be stable, well-maintained, and widely available than your own code or most other libraries.\nSL.3: Do not add non-standard entities to namespace std\nReason\nAdding to std may change the meaning of otherwise standards conforming code.\nAdditions to std may clash with future versions of the standard.\nExample\n???\nEnforcement\nPossible, but messy and likely to cause problems with platforms.\nSL.4: Use the standard library in a type-safe manner\nReason\nBecause, obviously, breaking this rule can lead to undefined behavior, memory corruption, and all kinds of other bad errors.\nNote\nThis is a semi-philosophical meta-rule, which needs many supporting concrete rules.\nWe need it as an umbrella for the more specific rules.\nSummary of more specific rules:\n\nSL.4: Use the standard library in a type-safe manner\n\n1.7.18.1. SL.con: Containers\n???\nContainer rule summary:\n\nSL.con.1: Prefer using STL array or vector instead of a C array\nSL.con.2: Prefer using STL vector by default unless you have a reason to use a different container\nSL.con.3: Avoid bounds errors\n???\n\n1.7.18.1.1. SL.con.1: Prefer using STL array or vector instead of a C array\nReason\nC arrays are less safe, and have no advantages over array and vector.\nFor a fixed-length array, use std::array, which does not degenerate to a pointer when passed to a function and does know its size.\nAlso, like a built-in array, a stack-allocated std::array keeps its elements on the stack.\nFor a variable-length array, use std::vector, which additionally can change its size and handles memory allocation.\nExample\nint v[SIZE];                        // BAD\n\nstd::array w;             // ok\nExample\nint* v = new int[initial_size];     // BAD, owning raw pointer\ndelete[] v;                         // BAD, manual delete\n\nstd::vector w(initial_size);   // ok\nNote\nUse gsl::span for non-owning references into a container.\nEnforcement\n\nFlag declaration of a C array inside a function or class that also declares an STL container (to avoid excessive noisy warnings on legacy non-STL code). To fix: At least change the C array to a std::array.\n\n1.7.18.1.2. SL.con.2: Prefer using STL vector by default unless you have a reason to use a different container\nReason\nvector and array are the only standard containers that offer the fastest general-purpose access (random access, including being vectorization-friendly), the fastest default access pattern (begin-to-end or end-to-begin is prefetcher-friendly), and the lowest space overhead (contiguous layout has zero per-element overhead, which is cache-friendly).\nUsually you need to add and remove elements from the container, so use vector by default; if you don't need to modify the container's size, use array.\nEven when other containers seem more suited, such a map for O(log N) lookup performance or a list for efficient insertion in the middle, a vector will usually still perform better for containers up to a few KB in size.\nNote\nstring should not be used as a container of individual characters. A string is a textual string; if you want a container of characters, use vector or array instead.\nExceptions\nIf you have a good reason to use another container, use that instead. For example:\n\nIf vector suits your needs but you don't need the container to be variable size, use array instead.\n\nIf you want a dictionary-style lookup container that guarantees O(K) or O(log N) lookups, the container will be larger (more than a few KB) and you perform frequent inserts so that the overhead of maintaining a sorted vector is infeasible, go ahead and use an unordered_map or map instead.\n\n\nEnforcement\n\nFlag a vector whose size never changes after construction (such as because it's const or because no non-const functions are called on it). To fix: Use an array instead.\n\n1.7.18.1.3. SL.con.3: Avoid bounds errors\nReason\nRead or write beyond an allocated range of elements typically leads to bad errors, wrong results, crashes, and security violations.\nNote\nThe standard-library functions that apply to ranges of elements all have (or could have) bounds-safe overloads that take span.\nStandard types such as vector can be modified to perform bounds-checks under the bounds profile (in a compatible way, such as by adding contracts), or used with at().\nIdeally, the in-bounds guarantee should be statically enforced.\nFor example:\n\na range-for cannot loop beyond the range of the container to which it is applied\na v.begin(),v.end() is easily determined to be bounds safe\n\nSuch loops are as fast as any unchecked/unsafe equivalent.\nOften a simple pre-check can eliminate the need for checking of individual indices.\nFor example\n\nfor v.begin(),v.begin()+i the i can easily be checked against v.size()\n\nSuch loops can be much faster than individually checked element accesses.\nExample, bad\nvoid f()\n{\n    array a, b;\n    memset(a.data(), 0, 10);         // BAD, and contains a length error (length = 10 * sizeof(int))\n    memcmp(a.data(), b.data(), 10);  // BAD, and contains a length error (length = 10 * sizeof(int))\n}\nAlso, std::array<>::fill() or std::fill() or even an empty initializer are better candidate than memset().\nExample, good\nvoid f()\n{\n    array a, b, c{};       // c is initialized to zero\n    a.fill(0);\n    fill(b.begin(), b.end(), 0);    // std::fill()\n    fill(b, 0);                     // std::fill() + Ranges TS\n\n    if ( a == b ) {\n      // ...\n    }\n}\nExample\nIf code is using an unmodified standard library, then there are still workarounds that enable use of std::array and std::vector in a bounds-safe manner. Code can call the .at() member function on each class, which will result in an std::out_of_range exception being thrown. Alternatively, code can call the at() free function, which will result in fail-fast (or a customized action) on a bounds violation.\nvoid f(std::vector& v, std::array a, int i)\n{\n    v[0] = a[0];        // BAD\n    v.at(0) = a[0];     // OK (alternative 1)\n    at(v, 0) = a[0];    // OK (alternative 2)\n\n    v.at(0) = a[i];     // BAD\n    v.at(0) = a.at(i);  // OK (alternative 1)\n    v.at(0) = at(a, i); // OK (alternative 2)\n}\nEnforcement\n\nIssue a diagnostic for any call to a standard-library function that is not bounds-checked.\n??? insert link to a list of banned functions\n\nThis rule is part of the bounds profile.\nTODO Notes:\n\nImpact on the standard library will require close coordination with WG21, if only to ensure compatibility even if never standardized.\nWe are considering specifying bounds-safe overloads for stdlib (especially C stdlib) functions like memcmp and shipping them in the GSL.\nFor existing stdlib functions and types like vector that are not fully bounds-checked, the goal is for these features to be bounds-checked when called from code with the bounds profile on, and unchecked when called from legacy code, possibly using contracts (concurrently being proposed by several WG21 members).\n\n1.7.18.2. SL.str: String\nText manipulation is a huge topic.\nstd::string doesn't cover all of it.\nThis section primarily tries to clarify std::string's relation to char*, zstring, string_view, and gsl::string_span.\nThe important issue of non-ASCII character sets and encodings (e.g., wchar_t, Unicode, and UTF-8) will be covered elsewhere.\nSee also regular expressions.\nHere, we use \"sequence of characters\" or \"string\" to refer to a sequence of characters meant to be read as text (somehow, eventually).\nWe don't consider\nString summary:\n\nSL.str.1: Use std::string to own character sequences\nSL.str.2: Use std::string_view or gsl::string_span to refer to character sequences\nSL.str.3: Use zstring or czstring to refer to a C-style, zero-terminated, sequence of characters\nSL.str.4: Use char* to refer to a single character\nSL.str.5: Use std::byte to refer to byte values that do not necessarily represent characters\n\nSL.str.10: Use std::string when you need to perform locale-sensitive string operations\n\nSL.str.11: Use gsl::string_span rather than std::string_view when you need to mutate a string\nSL.str.12: Use the s suffix for string literals meant to be standard-library strings\n\nSee also\n\nF.24 span\nF.25 zstring\n\n1.7.18.2.1. SL.str.1: Use std::string to own character sequences\nReason\nstring correctly handles allocation, ownership, copying, gradual expansion, and offers a variety of useful operations.\nExample\nvector read_until(const string& terminator)\n{\n    vector res;\n    for (string s; cin >> s && s != terminator; ) // read a word\n        res.push_back(s);\n    return res;\n}\nNote how >> and != are provided for string (as examples of useful operations) and there are no explicit\nallocations, deallocations, or range checks (string takes care of those).\nIn C++17, we might use string_view as the argument, rather than const string* to allow more flexibility to callers:\nvector read_until(string_view terminator)   // C++17\n{\n    vector res;\n    for (string s; cin >> s && s != terminator; ) // read a word\n        res.push_back(s);\n    return res;\n}\nThe gsl::string_span is a current alternative offering most of the benefits of std::string_view for simple examples:\nvector read_until(string_span terminator)\n{\n    vector res;\n    for (string s; cin >> s && s != terminator; ) // read a word\n        res.push_back(s);\n    return res;\n}\nExample, bad\nDon't use C-style strings for operations that require non-trivial memory management\nchar* cat(const char* s1, const char* s2)   // beware!\n    // return s1 + '.' + s2\n{\n    int l1 = strlen(s1);\n    int l2 = strlen(s2);\n    char* p = (char*) malloc(l1 + l2 + 2);\n    strcpy(p, s1, l1);\n    p[l1] = '.';\n    strcpy(p + l1 + 1, s2, l2);\n    p[l1 + l2 + 1] = 0;\n    return p;\n}\nDid we get that right?\nWill the caller remember to free() the returned pointer?\nWill this code pass a security review?\nNote\nDo not assume that string is slower than lower-level techniques without measurement and remember than not all code is performance critical.\nDon't optimize prematurely\nEnforcement\n???\n1.7.18.2.2. SL.str.2: Use std::string_view or gsl::string_span to refer to character sequences\nReason\nstd::string_view or gsl::string_span provides simple and (potentially) safe access to character sequences independently of how\nthose sequences are allocated and stored.\nExample\nvector read_until(string_span terminator);\n\nvoid user(zstring p, const string& s, string_span ss)\n{\n    auto v1 = read_until(p);\n    auto v2 = read_until(s);\n    auto v3 = read_until(ss);\n    // ...\n}\nNote\nstd::string_view (C++17) is read-only.\nEnforcement\n???\n1.7.18.2.3. SL.str.3: Use zstring or czstring to refer to a C-style, zero-terminated, sequence of characters\nReason\nReadability.\nStatement of intent.\nA plain char* can be a pointer to a single character, a pointer to an array of characters, a pointer to a C-style (zero-terminated) string, or even to a small integer.\nDistinguishing these alternatives prevents misunderstandings and bugs.\nExample\nvoid f1(const char* s); // s is probably a string\nAll we know is that it is supposed to be the nullptr or point to at least one character\nvoid f1(zstring s);     // s is a C-style string or the nullptr\nvoid f1(czstring s);    // s is a C-style string constant or the nullptr\nvoid f1(std::byte* s);  // s is a pointer to a byte (C++17)\nNote\nDon't convert a C-style string to string unless there is a reason to.\nNote\nLike any other \"plain pointer\", a zstring should not represent ownership.\nNote\nThere are billions of lines of C++ \"out there\", most use char* and const char* without documenting intent.\nThey are used in a wide variety of ways, including to represent ownership and as generic pointers to memory (instead of void*).\nIt is hard to separate these uses, so this guideline is hard to follow.\nThis is one of the major sources of bugs in C and C++ programs, so it is worthwhile to follow this guideline wherever feasible..\nEnforcement\n\nFlag uses of [] on a char*\nFlag uses of delete on a char*\nFlag uses of free() on a char*\n\n1.7.18.2.4. SL.str.4: Use char* to refer to a single character\nReason\nThe variety of uses of char* in current code is a major source of errors.\nExample, bad\nchar arr[] = {'a', 'b', 'c'};\n\nvoid print(const char* p)\n{\n    cout The array arr is not a C-style string because it is not zero-terminated.\nAlternative\nSee zstring, string, and string_span.\nEnforcement\n\nFlag uses of [] on a char*\n\n1.7.18.2.5. SL.str.5: Use std::byte to refer to byte values that do not necessarily represent characters\nReason\nUse of char* to represent a pointer to something that is not necessarily a character causes confusion\nand disables valuable optimizations.\nExample\n???\nNote\nC++17\nEnforcement\n???\n1.7.18.2.6. SL.str.10: Use std::string when you need to perform locale-sensitive string operations\nReason\nstd::string supports standard-library locale facilities\nExample\n???\nNote\n???\nEnforcement\n???\n1.7.18.2.7. SL.str.11: Use gsl::string_span rather than std::string_view when you need to mutate a string\nReason\nstd::string_view is read-only.\nExample\n???\nNote\n???\nEnforcement\nThe compiler will flag attempts to write to a string_view.\n1.7.18.2.8. SL.str.12: Use the s suffix for string literals meant to be standard-library strings\nReason\nDirect expression of an idea minimizes mistakes.\nExample\nauto pp1 = make_pair(\"Tokyo\", 9.00);         // {C-style string,double} intended?\npair pp2 = {\"Tokyo\", 9.00};  // a bit verbose\nauto pp3 = make_pair(\"Tokyo\"s, 9.00);        // {std::string,double}    // C++17\npair pp4 = {\"Tokyo\"s, 9.00};                 // {std::string,double}    // C++17\nNote\nC++17\nEnforcement\n???\n1.7.18.3. SL.io: Iostream\niostreams is a type safe, extensible, formatted and unformatted I/O library for streaming I/O.\nIt supports multiple (and user extensible) buffering strategies and multiple locales.\nIt can be used for conventional I/O, reading and writing to memory (string streams),\nand user-defines extensions, such as streaming across networks (asio: not yet standardized).\nIostream rule summary:\n\nSL.io.1: Use character-level input only when you have to\nSL.io.2: When reading, always consider ill-formed input\nSL.io.3: Prefer iostreams for I/O\nSL.io.10: Unless you use printf-family functions call ios_base::sync_with_stdio(false)\nSL.io.50: Avoid endl\n???\n\n1.7.18.3.1. SL.io.1: Use character-level input only when you have to\nReason\nUnless you genuinely just deal with individual characters, using character-level input leads to the user code performing potentially error-prone\nand potentially inefficient composition of tokens out of characters.\nExample\nchar c;\nchar buf[128];\nint i = 0;\nwhile (cin.get(c) && !isspace(c) && i Better (much simpler and probably faster):\nstring s;\ns.reserve(128);\ncin >> s;\nand the reserve(128) is probably not worthwhile.\nEnforcement\n???\n1.7.18.3.2. SL.io.2: When reading, always consider ill-formed input\nReason\nErrors are typically best handled as soon as possible.\nIf input isn't validated, every function must be written to cope with bad data (and that is not practical).\nExample\n???\nEnforcement\n???\n1.7.18.3.3. SL.io.3: Prefer iostreams for I/O\nReason\niostreams are safe, flexible, and extensible.\nExample\n// write a complex number:\ncomplex z{ 3, 4 };\ncout complex is a user-defined type and its I/O is defined without modifying the iostream library.\nExample\n// read a file of complex numbers:\nfor (complex z; cin >> z; )\n    v.push_back(z);\nException\n??? performance ???\nDiscussion: iostreams vs. the printf() family\nIt is often (and often correctly) pointed out that the printf() family has two advantages compared to iostreams:\nflexibility of formatting and performance.\nThis has to be weighed against iostreams advantages of extensibility to handle user-defined types, resilient against security violations,\nimplicit memory management, and locale handling.\nIf you need I/O performance, you can almost always do better than printf().\ngets() scanf() using s, and printf() using %s are security hazards (vulnerable to buffer overflow and generally error-prone).\nIn C11, they are replaced by gets_s(), scanf_s(), and printf_s() as safer alternatives, but they are still not type safe.\nEnforcement\nOptionally flag  and .\n1.7.18.3.4. SL.io.10: Unless you use printf-family functions call ios_base::sync_with_stdio(false)\nReason\nSynchronizing iostreams with printf-style I/O can be costly.\ncin and cout are by default synchronized with printf.\nExample\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    // ... use iostreams ...\n}\nEnforcement\n???\n1.7.18.3.5. SL.io.50: Avoid endl\n1.7.18.3.6. Reason\nThe endl manipulator is mostly equivalent to '\\n' and \"\\n\";\nas most commonly used it simply slows down output by doing redundant flush()s.\nThis slowdown can be significant compared to printf-style output.\nExample\ncout Note\nFor cin/cout (and equivalent) interaction, there is no reason to flush; that's done automatically.\nFor writing to a file, there is rarely a need to flush.\nNote\nApart from the (occasionally important) issue of performance,\nthe choice between '\\n' and endl is almost completely aesthetic.\n1.7.18.4. SL.regex: Regex\n is the standard C++ regular expression library.\nIt supports a variety of regular expression pattern conventions.\n1.7.18.5. SL.chrono: Time\n (defined in namespace std::chrono) provides the notions of time_point and duration together with functions for\noutputting time in various units.\nIt provides clocks for registering time_points.\n1.7.18.6. SL.C: The C standard library\n???\nC standard library rule summary:\n\nS.C.1: Don't use setjmp/longjmp\n???\n???\n\n1.7.18.6.1. SL.C.1: Don't use setjmp/longjmp\nReason\na longjmp ignores destructors, thus invalidating all resource-management strategies relying on RAII\nEnforcement\nFlag all occurrences of longjmpand setjmp\n1.7.19. A: Architectural Ideas\nThis section contains ideas about higher-level architectural ideas and libraries.\nArchitectural rule summary:\n\nA.1: Separate stable from less stable part of code\nA.2: Express potentially reusable parts as a library\nA.4: There should be no cycles among libraries\n???\n???\n???\n???\n???\n???\n\nA.1: Separate stable from less stable part of code\n???\nA.2: Express potentially reusable parts as a library\nReason\nNote\nA library is a collection of declarations and definitions maintained, documented, and shipped together.\nA library could be a set of headers (a \"header only library\") or a set of headers plus a set of object files.\nA library can be statically or dynamically linked into a program, or it may be #included\nA.4: There should be no cycles among libraries\nReason\n\nA cycle implies complication of the build process.\nCycles are hard to understand and may introduce indeterminism (unspecified behavior).\n\nNote\nA library can contain cyclic references in the definition of its components.\nFor example:\n???\nHowever, a library should not depend on another that depends on it.\n1.7.20. NR: Non-Rules and myths\nThis section contains rules and guidelines that are popular somewhere, but that we deliberately don't recommend.\nWe know full well that there have been times and places where these rules made sense, and we have used them ourselves at times.\nHowever, in the context of the styles of programming we recommend and support with the guidelines, these \"non-rules\" would do harm.\nEven today, there can be contexts where the rules make sense.\nFor example, lack of suitable tool support can make exceptions unsuitable in hard-real-time systems,\nbut please don't blindly trust \"common wisdom\" (e.g., unsupported statements about \"efficiency\");\nsuch \"wisdom\" may be based on decades-old information or experienced from languages with very different properties than C++\n(e.g., C or Java).\nThe positive arguments for alternatives to these non-rules are listed in the rules offered as \"Alternatives\".\nNon-rule summary:\n\nNR.1: Don't: All declarations should be at the top of a function\nNR.2: Don't: Have only a single return-statement in a function\nNR.3: Don't: Don't use exceptions\nNR.4: Don't: Place each class declaration in its own source file\nNR.5: Don't: Don't do substantive work in a constructor; instead use two-phase initialization\nNR.6: Don't: Place all cleanup actions at the end of a function and goto exit\nNR.7: Don't: Make all data members protected\n???\n\nNR.1: Don't: All declarations should be at the top of a function\nReason (not to follow this rule)\nThis rule is a legacy of old programming languages that didn't allow initialization of variables and constants after a statement.\nThis leads to longer programs and more errors caused by uninitialized and wrongly initialized variables.\nExample, bad\nint use(int x)\n{\n    int i;\n    char c;\n    double d;\n\n    // ... some stuff ...\n\n    if (x The larger the distance between the uninitialized variable and its use, the larger the chance of a bug.\nFortunately, compilers catch many \"used before set\" errors.\nUnfortunately, compilers cannot catch all such errors and unfortunately, the bugs aren't always as simple to spot as in this small example.\nAlternative\n\nAlways initialize an object\nES.21: Don't introduce a variable (or constant) before you need to use it\n\nNR.2: Don't: Have only a single return-statement in a function\nReason (not to follow this rule)\nThe single-return rule can lead to unnecessarily convoluted code and the introduction of extra state variables.\nIn particular, the single-return rule makes it harder to concentrate error checking at the top of a function.\nExample\ntemplate\n//  requires Number\nstring sign(T x)\n{\n    if (x  0)\n        return \"positive\";\n    return \"zero\";\n}\nto use a single return only we would have to do something like\ntemplate\n//  requires Number\nstring sign(T x)        // bad\n{\n    string res;\n    if (x  0)\n        res = \"positive\";\n    else\n        res = \"zero\";\n    return res;\n}\nThis is both longer and likely to be less efficient.\nThe larger and more complicated the function is, the more painful the workarounds get.\nOf course many simple functions will naturally have just one return because of their simpler inherent logic.\nExample\nint index(const char* p)\n{\n    if (p == nullptr) return -1;  // error indicator: alternatively \"throw nullptr_error{}\"\n    // ... do a lookup to find the index for p\n    return i;\n}\nIf we applied the rule, we'd get something like\nint index2(const char* p)\n{\n    int i;\n    if (p == nullptr)\n        i = -1;  // error indicator\n    else {\n        // ... do a lookup to find the index for p\n    }\n    return i;\n}\nNote that we (deliberately) violated the rule against uninitialized variables because this style commonly leads to that.\nAlso, this style is a temptation to use the goto exit non-rule.\nAlternative\n\nKeep functions short and simple\nFeel free to use multiple return statements (and to throw exceptions).\n\nNR.3: Don't: Don't use exceptions\nReason (not to follow this rule)\nThere seem to be three main reasons given for this non-rule:\n\nexceptions are inefficient\nexceptions lead to leaks and errors\nexception performance is not predictable\n\nThere is no way we can settle this issue to the satisfaction of everybody.\nAfter all, the discussions about exceptions have been going on for 40+ years.\nSome languages cannot be used without exceptions, but others do not support them.\nThis leads to strong traditions for the use and non-use of exceptions, and to heated debates.\nHowever, we can briefly outline why we consider exceptions the best alternative for general-purpose programming\nand in the context of these guidelines.\nSimple arguments for and against are often inconclusive.\nThere are specialized applications where exceptions indeed can be inappropriate\n(e.g., hard-real-time systems without support for reliable estimates of the cost of handling an exception).\nConsider the major objections to exceptions in turn\n\nExceptions are inefficient:\nCompared to what?\nWhen comparing make sure that the same set of errors are handled and that they are handled equivalently.\nIn particular, do not compare a program that immediately terminate on seeing an error with a program\nthat carefully cleans up resources before logging an error.\nYes, some systems have poor exception handling implementations; sometimes, such implementations force us to use\nother error-handling approaches, but that's not a fundamental problem with exceptions.\nWhen using an efficiency argument - in any context - be careful that you have good data that actually provides\ninsight into the problem under discussion.\nExceptions lead to leaks and errors.\nThey do not.\nIf your program is a rat's nest of pointers without an overall strategy for resource management,\nyou have a problem whatever you do.\nIf your system consists of a million lines of such code,\nyou probably will not be able to use exceptions,\nbut that's a problem with excessive and undisciplined pointer use, rather than with exceptions.\nIn our opinion, you need RAII to make exception-based error handling simple and safe -- simpler and safer than alternatives.\nException performance is not predictable.\nIf you are in a hard-real-time system where you must guarantee completion of a task in a given time,\nyou need tools to back up such guarantees.\nAs far as we know such tools are not available (at least not to most programmers).\n\nMany, possibly most, problems with exceptions stem from historical needs to interact with messy old code.\nThe fundamental arguments for the use of exceptions are\n\nThey clearly differentiate between erroneous return and ordinary return\nThey cannot be forgotten or ignored\nThey can be used systematically\n\nRemember\n\nExceptions are for reporting errors (in C++; other languages can have different uses for exceptions).\nExceptions are not for errors that can be handled locally.\nDon't try to catch every exception in every function (that's tedious, clumsy, and leads to slow code).\nExceptions are not for errors that require instant termination of a module/system after a non-recoverable error.\n\nExample\n???\nAlternative\n\nRAII\nContracts/assertions: Use GSL's Expects and Ensures (until we get language support for contracts)\n\nNR.4: Don't: Place each class declaration in its own source file\nReason (not to follow this rule)\nThe resulting number of files are hard to manage and can slow down compilation.\nIndividual classes are rarely a good logical unit of maintenance and distribution.\nExample\n???\nAlternative\n\nUse namespaces containing logically cohesive sets of classes and functions.\n\nNR.5: Don't: Don't do substantive work in a constructor; instead use two-phase initialization\nReason (not to follow this rule)\nFollowing this rule leads to weaker invariants,\nmore complicated code (having to deal with semi-constructed objects),\nand errors (when we didn't deal correctly with semi-constructed objects consistently).\nExample\n???\nAlternative\n\nAlways establish a class invariant in a constructor.\nDon't define an object before it is needed.\n\nNR.6: Don't: Place all cleanup actions at the end of a function and goto exit\nReason (not to follow this rule)\ngoto is error-prone.\nThis technique is a pre-exception technique for RAII-like resource and error handling.\nExample, bad\nvoid do_something(int n)\n{\n    if (n and spot the bug.\nAlternative\n\nUse exceptions and RAII\nfor non-RAII resources, use finally.\n\nNR.7: Don't: Make all data members protected\nReason (not to follow this rule)\nprotected data is a source of errors.\nprotected data can be manipulated from an unbounded amount of code in various places.\nprotected data is the class hierarchy equivalent to global data.\nExample\n???\nAlternative\n\nMake member data public or (preferably) private\n\n1.7.21. RF: References\nMany coding standards, rules, and guidelines have been written for C++, and especially for specialized uses of C++.\nMany\n\nfocus on lower-level issues, such as the spelling of identifiers\nare written by C++ novices\nsee \"stopping programmers from doing unusual things\" as their primary aim\naim at portability across many compilers (some 10 years old)\nare written to preserve decades old code bases\naim at a single application domain\nare downright counterproductive\nare ignored (must be ignored by programmers to get their work done well)\n\nA bad coding standard is worse than no coding standard.\nHowever an appropriate set of guidelines are much better than no standards: \"Form is liberating.\"\nWhy can't we just have a language that allows all we want and disallows all we don't want (\"a perfect language\")?\nFundamentally, because affordable languages (and their tool chains) also serve people with needs that differ from yours and serve more needs than you have today.\nAlso, your needs change over time and a general-purpose language is needed to allow you to adapt.\nA language that is ideal for today would be overly restrictive tomorrow.\nCoding guidelines adapt the use of a language to specific needs.\nThus, there cannot be a single coding style for everybody.\nWe expect different organizations to provide additions, typically with more restrictions and firmer style rules.\nReference sections:\n\nRF.rules: Coding rules\nRF.books: Books with coding guidelines\nRF.C++: C++ Programming (C++11/C++14)\nRF.web: Websites\nRS.video: Videos about \"modern C++\"\nRF.man: Manuals\nRF.core: Core Guidelines materials\n\n1.7.21.1. RF.rules: Coding rules\n\nBoost Library Requirements and Guidelines.\n???.\nBloomberg: BDE C++ Coding.\nHas a strong emphasis on code organization and layout.\nFacebook: ???\nGCC Coding Conventions.\nC++03 and (reasonably) a bit backwards looking.\nGoogle C++ Style Guide.\nGeared toward C++03 and (also) older code bases. Google experts are now actively collaborating here on helping to improve these Guidelines, and hopefully to merge efforts so these can be a modern common set they could also recommend.\nJSF++: JOINT STRIKE FIGHTER AIR VEHICLE C++ CODING STANDARDS.\nDocument Number 2RDU00001 Rev C. December 2005.\nFor flight control software.\nFor hard-real-time.\nThis means that it is necessarily very restrictive (\"if the program fails somebody dies\").\nFor example, no free store allocation or deallocation may occur after the plane takes off (no memory overflow and no fragmentation allowed).\nNo exception may be used (because there was no available tool for guaranteeing that an exception would be handled within a fixed short time).\nLibraries used have to have been approved for mission critical applications.\nAny similarities to this set of guidelines are unsurprising because Bjarne Stroustrup was an author of JSF++.\nRecommended, but note its very specific focus.\nMozilla Portability Guide.\nAs the name indicates, this aims for portability across many (old) compilers.\nAs such, it is restrictive.\nGeosoft.no: C++ Programming Style Guidelines.\n???.\nPossibility.com: C++ Coding Standard.\n???.\nSEI CERT: Secure C++ Coding Standard.\nA very nicely done set of rules (with examples and rationales) done for security-sensitive code.\nMany of their rules apply generally.\nHigh Integrity C++ Coding Standard.\nllvm.\nSomewhat brief, pre-C++11, and (not unreasonably) adjusted to its domain.\n???\n\n1.7.21.2. RF.books: Books with coding guidelines\n\nMeyers96 Scott Meyers: More Effective C++. Addison-Wesley 1996.\nMeyers97 Scott Meyers: Effective C++, Second Edition. Addison-Wesley 1997.\nMeyers01 Scott Meyers: Effective STL. Addison-Wesley 2001.\nMeyers05 Scott Meyers: Effective C++, Third Edition. Addison-Wesley 2005.\nMeyers15 Scott Meyers: Effective Modern C++. O'Reilly 2015.\nSuttAlex05 Sutter and Alexandrescu: C++ Coding Standards. Addison-Wesley 2005. More a set of meta-rules than a set of rules. Pre-C++11.\nStroustrup05 Bjarne Stroustrup: A rationale for semantically enhanced library languages.\nLCSD05. October 2005.\nStroustrup14 Stroustrup: A Tour of C++.\nAddison Wesley 2014.\nEach chapter ends with an advice section consisting of a set of recommendations.\nStroustrup13 Stroustrup: The C++ Programming Language (4th Edition).\nAddison Wesley 2013.\nEach chapter ends with an advice section consisting of a set of recommendations.\nStroustrup: Style Guide\nfor Programming: Principles and Practice using C++.\nMostly low-level naming and layout rules.\nPrimarily a teaching tool.\n\n1.7.21.3. RF.C++: C++ Programming (C++11/C++14)\n\nTC++PL4:\nA thorough description of the C++ language and standard libraries for experienced programmers.\nTour++:\nAn overview of the C++ language and standard libraries for experienced programmers.\nProgramming: Principles and Practice using C++:\nA textbook for beginners and relative novices.\n\n1.7.21.4. RF.web: Websites\n\nisocpp.org\nBjarne Stroustrup's home pages\nWG21\nBoost\nAdobe open source\nPoco libraries\nSutter's Mill?\n???\n\n1.7.21.5. RS.video: Videos about \"modern C++\"\n\nBjarne Stroustrup: C++11 Style. 2012.\nBjarne Stroustrup: The Essence of C++: With Examples in C++84, C++98, C++11, and C++14. 2013\nAll the talks from CppCon '14\nBjarne Stroustrup: The essence of C++ at the University of Edinburgh. 2014.\nBjarne Stroustrup: The Evolution of C++ Past, Present and Future. CppCon 2016 keynote.\nBjarne Stroustrup: Make Simple Tasks Simple!. CppCon 2014 keynote.\nBjarne Stroustrup: Writing Good C++14. CppCon 2015 keynote about the Core Guidelines.\nHerb Sutter: Writing Good C++14... By Default. CppCon 2015 keynote about the Core Guidelines.\nCppCon 15\n??? C++ Next\n??? Meting C++\n??? more ???\n\n1.7.21.6. RF.man: Manuals\n\nISO C++ Standard C++11.\nISO C++ Standard C++14.\nISO C++ Standard C++17 CD. Committee Draft.\nPalo Alto \"Concepts\" TR.\nISO C++ Concepts TS.\nWG21 Ranges report. Draft.\n\n1.7.21.7. RF.core: Core Guidelines materials\nThis section contains materials that has been useful for presenting the core guidelines and the ideas behind them:\n\nOur documents directory\nStroustrup, Sutter, and Dos Reis: A brief introduction to C++'s model for type- and resource-safety. A paper with lots of examples.\nSergey Zubkov: a Core Guidelines talk\nand here are the slides. In Russian. 2017.\nNeil MacIntosh: The Guideline Support Library: One Year Later. CppCon 2016.\nBjarne Stroustrup: Writing Good C++14. CppCon 2015 keynote.\nHerb Sutter: Writing Good C++14... By Default. CppCon 2015 keynote.\nPeter Sommerlad: C++ Core Guidelines - Modernize your C++ Code Base. ACCU 2017.\nBjarne Stroustrup: No Littering!. Bay Area ACCU 2016.\nIt gives some idea of the ambition level for the Core Guidelines.\n\nNote that slides for CppCon presentations are available (links with the posted videos).\nContributions to this list would be most welcome.\n1.7.21.8. Acknowledgements\nThanks to the many people who contributed rules, suggestions, supporting information, references, etc.:\n\nPeter Juhl\nNeil MacIntosh\nAxel Naumann\nAndrew Pardoe\nGabriel Dos Reis\nZhuang, Jiangang (Jeff)\nSergey Zubkov\n\nand see the contributor list on the github.\n1.7.22. Pro: Profiles\nIdeally, we would follow all of the guidelines.\nThat would give the cleanest, most regular, least error-prone, and often the fastest code.\nUnfortunately, that is usually impossible because we have to fit our code into large code bases and use existing libraries.\nOften, such code has been written over decades and does not follow these guidelines.\nWe must aim for gradual adoption.\nWhatever strategy for gradual adoption we adopt, we need to be able to apply sets of related guidelines to address some set\nof problems first and leave the rest until later.\nA similar idea of \"related guidelines\" becomes important when some, but not all, guidelines are considered relevant to a code base\nor if a set of specialized guidelines is to be applied for a specialized application area.\nWe call such a set of related guidelines a \"profile\".\nWe aim for such a set of guidelines to be coherent so that they together help us reach a specific goal, such as \"absence of range errors\"\nor \"static type safety.\"\nEach profile is designed to eliminate a class of errors.\nEnforcement of \"random\" rules in isolation is more likely to be disruptive to a code base than delivering a definite improvement.\nA \"profile\" is a set of deterministic and portably enforceable subset rules (i.e., restrictions) that are designed to achieve a specific guarantee.\n\"Deterministic\" means they require only local analysis and could be implemented in a compiler (though they don't need to be).\n\"Portably enforceable\" means they are like language rules, so programmers can count on different enforcement tools giving the same answer for the same code.\nCode written to be warning-free using such a language profile is considered to conform to the profile.\nConforming code is considered to be safe by construction with regard to the safety properties targeted by that profile.\nConforming code will not be the root cause of errors for that property,\nalthough such errors may be introduced into a program by other code, libraries or the external environment.\nA profile may also introduce additional library types to ease conformance and encourage correct code.\nProfiles summary:\n\nPro.type: Type safety\nPro.bounds: Bounds safety\nPro.lifetime: Lifetime safety\n\nIn the future, we expect to define many more profiles and add more checks to existing profiles.\nCandidates include:\n\nnarrowing arithmetic promotions/conversions (likely part of a separate safe-arithmetic profile)\narithmetic cast from negative floating point to unsigned integral type (ditto)\nselected undefined behavior: Start with Gabriel Dos Reis's UB list developed for the WG21 study group\nselected unspecified behavior: Addressing portability concerns.\nconst violations: Mostly done by compilers already, but we can catch inappropriate casting and underuse of const.\n\nEnabling a profile is implementation defined; typically, it is set in the analysis tool used.\nTo suppress enforcement of a profile check, place a suppress annotation on a language contract. For example:\n[[suppress(bounds)]] char* raw_find(char* p, int n, char x)    // find x in p[0]..p[n - 1]\n{\n    // ...\n}\nNow raw_find() can scramble memory to its heart's content.\nObviously, suppression should be very rare.\n1.7.22.1. Pro.safety: Type-safety profile\nThis profile makes it easier to construct code that uses types correctly and avoids inadvertent type punning.\nIt does so by focusing on removing the primary sources of type violations, including unsafe uses of casts and unions.\nFor the purposes of this section,\ntype-safety is defined to be the property that a variable is not used in a way that doesn't obey the rules for the type of its definition.\nMemory accessed as a type T should not be valid memory that actually contains an object of an unrelated type U.\nNote that the safety is intended to be complete when combined also with Bounds safety and Lifetime safety.\nAn implementation of this profile shall recognize the following patterns in source code as non-conforming and issue a diagnostic.\nType safety profile summary:\n\nType.1: Avoid casts:a. Don't use reinterpret_cast; A strict version of Avoid casts and prefer named casts.b. Don't use static_cast for arithmetic types; A strict version of Avoid casts and prefer named casts.c. Don't cast between pointer types where the source type and the target type are the same; A strict version of Avoid casts.\nd. Don't cast between pointer types when the conversion could be implicit; A strict version of Avoid casts.\nType.2: Don't use static_cast to downcast:\nUse dynamic_cast instead.\nType.3: Don't use const_cast to cast away const (i.e., at all):\nDon't cast away const.\nType.4: Don't use C-style (T)expression or functional T(expression) casts:\nPrefer construction or named casts.\nType.5: Don't use a variable before it has been initialized:\nalways initialize.\nType.6: Always initialize a member variable:\nalways initialize,\npossibly using default constructors or\ndefault member initializers.\nType.7: Avoid naked union:\nUse variant instead.\nType.8: Avoid varargs:\nDon't use va_arg arguments.\n\nImpact\nWith the type-safety profile you can trust that every operation is applied to a valid object.\nException may be thrown to indicate errors that cannot be detected statically (at compile time).\nNote that this type-safety can be complete only if we also have Bounds safety and Lifetime safety.\nWithout those guarantees, a region of memory could be accessed independent of which object, objects, or parts of objects are stored in it.\n1.7.22.2. Pro.bounds: Bounds safety profile\nThis profile makes it easier to construct code that operates within the bounds of allocated blocks of memory.\nIt does so by focusing on removing the primary sources of bounds violations: pointer arithmetic and array indexing.\nOne of the core features of this profile is to restrict pointers to only refer to single objects, not arrays.\nWe define bounds-safety to be the property that a program does not use an object to access memory outside of the range that was allocated for it.\nBounds safety is intended to be complete only when combined with Type safety and Lifetime safety,\nwhich cover other unsafe operations that allow bounds violations.\nBounds safety profile summary:\n\nBounds.1: Don't use pointer arithmetic. Use span instead:\nPass pointers to single objects (only) and Keep pointer arithmetic simple.\nBounds.2: Only index into arrays using constant expressions:\nPass pointers to single objects (only) and Keep pointer arithmetic simple.\nBounds.3: No array-to-pointer decay:\nPass pointers to single objects (only) and Keep pointer arithmetic simple.\nBounds.4: Don't use standard-library functions and types that are not bounds-checked:\nUse the standard library in a type-safe manner.\n\nImpact\nBounds safety implies that access to an object - notably arrays - does not access beyond the object's memory allocation.\nThis eliminates a large class of insidious and hard-to-find errors, including the (in)famous \"buffer overflow\" errors.\nThis closes security loopholes as well as a prominent source of memory corruption (when writing out of bounds).\nEven an out-of-bounds access is \"just a read\", it can lead to invariant violations (when the accessed isn't of the assumed type)\nand \"mysterious values.\"\n1.7.22.3. Pro.lifetime: Lifetime safety profile\nAccessing through a pointer that doesn't point to anything is a major source of errors,\nand very hard to avoid in many traditional C or C++ styles of programming.\nFor example, a pointer may be uninitialized, the nullptr, point beyond the range of an array, or to a deleted object.\nSee /docs folder for the initial design. The detailed formal rules are in progress (as of May 2017).\nLifetime safety profile summary:\n\nLifetime.1: Don't dereference a possibly invalid pointer:\ndetect or avoid.\n\nImpact\nOnce completely enforced through a combination of style rules, static analysis, and library support, this profile\n\neliminates one of the major sources of nasty errors in C++\neliminates a major source of potential security violations\nimproves performance by eliminating redundant \"paranoia\" checks\nincreases confidence in correctness of code\navoids undefined behavior by enforcing a key C++ language rule\n\n1.7.23. GSL: Guideline support library\nThe GSL is a small library of facilities designed to support this set of guidelines.\nWithout these facilities, the guidelines would have to be far more restrictive on language details.\nThe Core Guidelines support library is defined in namespace gsl and the names may be aliases for standard library or other well-known library names. Using the (compile-time) indirection through the gsl namespace allows for experimentation and for local variants of the support facilities.\nThe GSL is header only, and can be found at GSL: Guideline support library.\nThe support library facilities are designed to be extremely lightweight (zero-overhead) so that they impose no overhead compared to using conventional alternatives.\nWhere desirable, they can be \"instrumented\" with additional functionality (e.g., checks) for tasks such as debugging.\nThese Guidelines assume a variant type, but this is not currently in GSL.\nEventually, use the one voted into C++17.\nSummary of GSL components:\n\nGSL.view: Views\nGSL.owner\nGSL.assert: Assertions\nGSL.util: Utilities\nGSL.concept: Concepts\n\nWe plan for a \"ISO C++ standard style\" semi-formal specification of the GSL.\nWe rely on the ISO C++ standard library and hope for parts of the GSL to be absorbed into the standard library.\n1.7.23.1. GSL.view: Views\nThese types allow the user to distinguish between owning and non-owning pointers and between pointers to a single object and pointers to the first element of a sequence.\nThese \"views\" are never owners.\nReferences are never owners (see R.4. Note: References have many opportunities to outlive the objects they refer to (returning a local variable by reference, holding a reference to an element of a vector and doing push_back, binding to std::max(x, y + 1), etc. The Lifetime safety profile aims to address those things, but even so owner does not make sense and is discouraged.\nThe names are mostly ISO standard-library style (lower case and underscore):\n\nT*      // The T* is not an owner, may be null; assumed to be pointing to a single element.\nT&      // The T& is not an owner and can never be a \"null reference\"; references are always bound to objects.\n\nThe \"raw-pointer\" notation (e.g. int*) is assumed to have its most common meaning; that is, a pointer points to an object, but does not own it.\nOwners should be converted to resource handles (e.g., unique_ptr or vector) or marked owner.\n\nowner   // a T* that owns the object pointed/referred to; may be nullptr.\n\nowner is used to mark owning pointers in code that cannot be upgraded to use proper resource handles.\nReasons for that include:\n\nCost of conversion.\nThe pointer is used with an ABI.\nThe pointer is part of the implementation of a resource handle.\n\nAn owner differs from a resource handle for a T by still requiring an explicit delete.\nAn owner is assumed to refer to an object on the free store (heap).\nIf something is not supposed to be nullptr, say so:\n\nnot_null   // T is usually a pointer type (e.g., not_null and not_null>) that may not be nullptr.\nT can be any type for which ==nullptr is meaningful.\n\nspan       // [p:p+n), constructor from {p, q} and {p, n}; T is the pointer type\n\nspan_p     // {p, predicate} [p:q) where q is the first element for which predicate(*p) is true\nstring_span   // span\ncstring_span  // span\n\nA span refers to zero or more mutable Ts unless T is a const type.\n\"Pointer arithmetic\" is best done within spans.\nA char* that points to more than one char but is not a C-style string (e.g., a pointer into an input buffer) should be represented by a span.\n\nzstring    // a char* supposed to be a C-style string; that is, a zero-terminated sequence of char or nullptr\nczstring   // a const char* supposed to be a C-style string; that is, a zero-terminated sequence of const char or nullptr\n\nLogically, those last two aliases are not needed, but we are not always logical, and they make the distinction between a pointer to one char and a pointer to a C-style string explicit.\nA sequence of characters that is not assumed to be zero-terminated should be a char*, rather than a zstring.\nFrench accent optional.\nUse not_null for C-style strings that cannot be nullptr. ??? Do we need a name for not_null? or is its ugliness a feature?\n1.7.23.2. GSL.owner: Ownership pointers\n\nunique_ptr     // unique ownership: std::unique_ptr\nshared_ptr     // shared ownership: std::shared_ptr (a counted pointer)\nstack_array    // A stack-allocated array. The number of elements are determined at construction and fixed thereafter. The elements are mutable unless T is a const type.\ndyn_array      // ??? needed ??? A heap-allocated array. The number of elements are determined at construction and fixed thereafter.\nThe elements are mutable unless T is a const type. Basically a span that allocates and owns its elements.\n\n1.7.23.3. GSL.assert: Assertions\n\nExpects     // precondition assertion. Currently placed in function bodies. Later, should be moved to declarations.          // `Expects(p)` terminates the program unless `p == true`\n          // `Expect` in under control of some options (enforcement, error message, alternatives to terminate)\n\nEnsures     // postcondition assertion. Currently placed in function bodies. Later, should be moved to declarations.\n\nThese assertions are currently macros (yuck!) and must appear in function definitions (only)\npending standard committee decisions on contracts and assertion syntax.\nSee the contract proposal; using the attribute syntax,\nfor example, Expects(p != nullptr) will become [[expects: p != nullptr]].\n1.7.23.4. GSL.util: Utilities\n\nfinally       // finally(f) makes a final_action{f} with a destructor that invokes f\nnarrow_cast   // narrow_cast(x) is static_cast(x)\nnarrow        // narrow(x) is static_cast(x) if static_cast(x) == x or it throws narrowing_error\n[[implicit]]  // \"Marker\" to put on single-argument constructors to explicitly make them non-explicit.\nmove_owner    // p = move_owner(q) means p = q but ???\njoining_thread // a RAII style version of std::thread that joins.\n\n1.7.23.5. GSL.concept: Concepts\nThese concepts (type predicates) are borrowed from\nAndrew Sutton's Origin library,\nthe Range proposal,\nand the ISO WG21 Palo Alto TR.\nThey are likely to be very similar to what will become part of the ISO C++ standard.\nThe notation is that of the ISO WG21 Concepts TS.\nMost of the concepts below are defined in the Ranges TS.\n\nRange\nString   // ???\nNumber   // ???\nSortable\nPointer  // A type with *, ->, ==, and default construction (default construction is assumed to set the singular \"null\" value); see smart pointers\nUnique_ptr  // A type that matches Pointer, has move (not copy), and matches the Lifetime profile criteria for a unique owner type; see smart pointers\nShared_ptr   // A type that matches Pointer, has copy, and matches the Lifetime profile criteria for a shared owner type; see smart pointers\nEqualityComparable   // ???Must we suffer CaMelcAse???\nConvertible\nCommon\nBoolean\nIntegral\nSignedIntegral\nSemiRegular // ??? Copyable?\nRegular\nTotallyOrdered\nFunction\nRegularFunction\nPredicate\nRelation\n...\n\n1.7.23.5.1. GSL.ptr: Smart pointer concepts\nSee Lifetimes paper.\n1.7.24. NL: Naming and layout rules\nConsistent naming and layout are helpful.\nIf for no other reason because it minimizes \"my style is better than your style\" arguments.\nHowever, there are many, many, different styles around and people are passionate about them (pro and con).\nAlso, most real-world projects includes code from many sources, so standardizing on a single style for all code is often impossible.\nWe present a set of rules that you might use if you have no better ideas, but the real aim is consistency, rather than any particular rule set.\nIDEs and tools can help (as well as hinder).\nNaming and layout rules:\n\nNL.1: Don't say in comments what can be clearly stated in code\nNL.2: State intent in comments\nNL.3: Keep comments crisp\nNL.4: Maintain a consistent indentation style\nNL.5: Don't encode type information in names\nNL.7: Make the length of a name roughly proportional to the length of its scope\nNL.8: Use a consistent naming style\nNL.9: Use ALL_CAPS for macro names only\nNL.10: Avoid CamelCase\nNL.11: Make literals readable\nNL.15: Use spaces sparingly\nNL.16: Use a conventional class member declaration order\nNL.17: Use K&R-derived layout\nNL.18: Use C++-style declarator layout\nNL.19: Avoid names that are easily misread\nNL.20: Don't place two statements on the same line\nNL.21: Declare one name (only) per declaration\nNL.25: Don't use void as an argument type\nNL.26: Use conventional const notation\n\nMost of these rules are aesthetic and programmers hold strong opinions.\nIDEs also tend to have defaults and a range of alternatives.\nThese rules are suggested defaults to follow unless you have reasons not to.\nWe have had comments to the effect that naming and layout are so personal and/or arbitrary that we should not try to \"legislate\" them.\nWe are not \"legislating\" (see the previous paragraph).\nHowever, we have had many requests for a set of naming and layout conventions to use when there are no external constraints.\nMore specific and detailed rules are easier to enforce.\nThese rules bear a strong resemblance to the recommendations in the PPP Style Guide\nwritten in support of Stroustrup's Programming: Principles and Practice using C++.\nNL.1: Don't say in comments what can be clearly stated in code\nReason\nCompilers do not read comments.\nComments are less precise than code.\nComments are not updated as consistently as code.\nExample, bad\nauto x = m * v1 + vv;   // multiply m with v1 and add the result to vv\nEnforcement\nBuild an AI program that interprets colloquial English text and see if what is said could be better expressed in C++.\nNL.2: State intent in comments\nReason\nCode says what is done, not what is supposed to be done. Often intent can be stated more clearly and concisely than the implementation.\nExample\nvoid stable_sort(Sortable& c)\n    // sort c in the order determined by Note\nIf the comment and the code disagrees, both are likely to be wrong.\nNL.3: Keep comments crisp\nReason\nVerbosity slows down understanding and makes the code harder to read by spreading it around in the source file.\nNote\nUse intelligible English.\nI may be fluent in Danish, but most programmers are not; the maintainers of my code may not be.\nAvoid SMS lingo and watch your grammar, punctuation, and capitalization.\nAim for professionalism, not \"cool.\"\nEnforcement\nnot possible.\nNL.4: Maintain a consistent indentation style\nReason\nReadability. Avoidance of \"silly mistakes.\"\nExample, bad\nint i;\nfor (i = 0; i Note\nAlways indenting the statement after if (...), for (...), and while (...) is usually a good idea:\nif (i Enforcement\nUse a tool.\nNL.5: Don't encode type information in names\nRationale\nIf names reflect types rather than functionality, it becomes hard to change the types used to provide that functionality.\nAlso, if the type of a variable is changed, code using it will have to be modified.\nMinimize unintentional conversions.\nExample, bad\nvoid print_int(int i);\nvoid print_string(const char*);\n\nprint_int(1);   // OK\nprint_int(x);   // conversion to int if x is a double\nNote\nNames with types encoded are either verbose or cryptic.\nprintS  // print a std::string\nprints  // print a C-style string\nprinti  // print an int\nPS. Hungarian notation is evil (at least in a strongly statically-typed language).\nNote\nSome styles distinguishes members from local variable, and/or from global variable.\nstruct S {\n    int m_;\n    S(int m) :m_{abs(m)} { }\n};\nThis is not evil.\nNote\nLike C++, some styles distinguishes types from non-types.\nFor example, by capitalizing type names, but not the names of functions and variables.\ntypename\nclass Hash_tbl {   // maps string to T\n    // ...\n};\n\nHash_tbl index;\nThis is not evil.\nNL.7: Make the length of a name roughly proportional to the length of its scope\nRationale: The larger the scope the greater the chance of confusion and of an unintended name clash.\nExample\ndouble sqrt(double x);   // return the square root of x; x must be non-negative\n\nint length(const char* p);  // return the number of characters in a zero-terminated C-style string\n\nint length_of_string(const char zero_terminated_array_of_char[])    // bad: verbose\n\nint g;      // bad: global variable with a cryptic name\n\nint open;   // bad: global variable with a short, popular name\nThe use of p for pointer and x for a floating-point variable is conventional and non-confusing in a restricted scope.\nEnforcement\n???\nNL.8: Use a consistent naming style\nRationale: Consistence in naming and naming style increases readability.\nNote\nThere are many styles and when you use multiple libraries, you can't follow all their different conventions.\nChoose a \"house style\", but leave \"imported\" libraries with their original style.\nExample\nISO Standard, use lower case only and digits, separate words with underscores:\n\nint\nvector\nmy_map\n\nAvoid double underscores __.\nExample\nStroustrup:\nISO Standard, but with upper case used for your own types and concepts:\n\nint\nvector\nMy_map\n\nExample\nCamelCase: capitalize each word in a multi-word identifier:\n\nint\nvector\nMyMap\nmyMap\n\nSome conventions capitalize the first letter, some don't.\nNote\nTry to be consistent in your use of acronyms and lengths of identifiers:\nint mtbf {12};\nint mean_time_between_failures {12}; // make up your mind\nEnforcement\nWould be possible except for the use of libraries with varying conventions.\nNL.9: Use ALL_CAPS for macro names only\nReason\nTo avoid confusing macros with names that obey scope and type rules.\nExample\nvoid f()\n{\n    const int SIZE{1000};  // Bad, use 'size' instead\n    int v[SIZE];\n}\nNote\nThis rule applies to non-macro symbolic constants:\nenum bad { BAD, WORSE, HORRIBLE }; // BAD\nEnforcement\n\nFlag macros with lower-case letters\nFlag ALL_CAPS non-macro names\n\nNL.10: Avoid CamelCase\nReason\nThe use of underscores to separate parts of a name is the original C and C++ style and used in the C++ standard library.\nIf you prefer CamelCase, you have to choose among different flavors of camelCase.\nNote\nThis rule is a default to use only if you have a choice.\nOften, you don't have a choice and must follow an established style for consistency.\nThe need for consistency beats personal taste.\nExample\nStroustrup:\nISO Standard, but with upper case used for your own types and concepts:\n\nint\nvector\nMy_map\n\nEnforcement\nImpossible.\nNL.15: Use spaces sparingly\nReason\nToo much space makes the text larger and distracts.\nExample, bad\n#include \n\nint main(int argc, char * argv [ ])\n{\n    // ...\n}\nExample\n#include \n\nint main(int argc, char* argv[])\n{\n    // ...\n}\nNote\nSome IDEs have their own opinions and add distracting space.\nNote\nWe value well-placed whitespace as a significant help for readability. Just don't overdo it.\nNL.11: Make literals readable\nReason\nReadability.\nExample\nUse digit separators to avoid long strings of digits\nauto c = 299'792'458; // m/s2\nauto q2 = 0b0000'1111'0000'0000;\nauto ss_number = 123'456'7890;\nExample\nUse literal suffixes where clarification is needed\nauto hello = \"Hello!\"s; // a std::string\nauto world = \"world\";   // a C-style string\nauto interval = 100ms;  // using \nNote\nLiterals should not be sprinkled all over the code as \"magic constants\",\nbut it is still a good idea to make them readable where they are defined.\nIt is easy to make a typo in a long string of integers.\nEnforcement\nFlag long digit sequences. The trouble is to define \"long\"; maybe 7.\nNL.16: Use a conventional class member declaration order\nReason\nA conventional order of members improves readability.\nWhen declaring a class use the following order\n\ntypes: classes, enums, and aliases (using)\nconstructors, assignments, destructor\nfunctions\ndata\n\nUse the public before protected before private order.\nPrivate types and functions can be placed with private data.\nAvoid multiple blocks of declarations of one access (e.g., public) dispersed among blocks of declarations with different access (e.g. private).\nExample\nclass X {\npublic:\n    // interface\nprotected:\n    // unchecked function for use by derived class implementations\nprivate:\n    // implementation details\n};\nNote\nThe use of macros to declare groups of members often violates any ordering rules.\nHowever, macros obscures what is being expressed anyway.\nEnforcement\nFlag departures from the suggested order. There will be a lot of old code that doesn't follow this rule.\nNL.17: Use K&R-derived layout\nReason\nThis is the original C and C++ layout. It preserves vertical space well. It distinguishes different language constructs (such as functions and classes) well.\nNote\nIn the context of C++, this style is often called \"Stroustrup\".\nExample\nstruct Cable {\n    int x;\n    // ...\n};\n\ndouble foo(int x)\n{\n    if (0 Note the space between if and (\nNote\nUse separate lines for each statement, the branches of an if, and the body of a for.\nNote\nThe { for a class and a struct is not on a separate line, but the { for a function is.\nNote\nCapitalize the names of your user-defined types to distinguish them from standards-library types.\nNote\nDo not capitalize function names.\nEnforcement\nIf you want enforcement, use an IDE to reformat.\nNL.18: Use C++-style declarator layout\nReason\nThe C-style layout emphasizes use in expressions and grammar, whereas the C++-style emphasizes types.\nThe use in expressions argument doesn't hold for references.\nExample\nT& operator[](size_t);   // OK\nT &operator[](size_t);   // just strange\nT & operator[](size_t);   // undecided\nEnforcement\nImpossible in the face of history.\nNL.19: Avoid names that are easily misread\nReason\nReadability.\nNot everyone has screens and printers that make it easy to distinguish all characters.\nWe easily confuse similarly spelled and slightly misspelled words.\nExample\nint oO01lL = 6; // bad\n\nint splunk = 7;\nint splonk = 8; // bad: splunk and splonk are easily confused\nEnforcement\n???\nNL.20: Don't place two statements on the same line\nReason\nReadability.\nIt is really easy to overlook a statement when there is more on a line.\nExample\nint x = 7; char* p = 29;    // don't\nint x = 7; f(x);  ++x;      // don't\nEnforcement\nEasy.\nNL.21: Declare one name (only) per declaration\nReason\nReadability.\nMinimizing confusion with the declarator syntax.\nNote\nFor details, see ES.10.\nNL.25: Don't use void as an argument type\nReason\nIt's verbose and only needed where C compatibility matters.\nExample\nvoid f(void);   // bad\n\nvoid g();       // better\nNote\nEven Dennis Ritchie deemed void f(void) an abomination.\nYou can make an argument for that abomination in C when function prototypes were rare so that banning:\nint f();\nf(1, 2, \"weird but valid C89\");   // hope that f() is defined int f(a, b, c) char* c; { /* ... */ }\nwould have caused major problems, but not in the 21st century and in C++.\nNL.26: Use conventional const notation\nReason\nConventional notation is more familiar to more programmers.\nConsistency in large code bases.\nExample\nconst int x = 7;    // OK\nint const y = 9;    // bad\n\nconst int *const p = nullptr;   // OK, constant pointer to constant int\nint const *const p = nullptr;   // bad, constant pointer to constant int\nNote\nWe are well aware that you could claim the \"bad\" examples more logical than the ones marked \"OK\",\nbut they also confuse more people, especially novices relying on teaching material using the far more common, conventional OK style.\nAs ever, remember that the aim of these naming and layout rules is consistency and that aesthetics vary immensely.\nEnforcement\nFlag const used as a suffix for a type.\n1.7.25. FAQ: Answers to frequently asked questions\nThis section covers answers to frequently asked questions about these guidelines.\nFAQ.1: What do these guidelines aim to achieve?\nSee the top of this page. This is an open-source project to maintain modern authoritative guidelines for writing C++ code using the current C++ Standard (as of this writing, C++14). The guidelines are designed to be modern, machine-enforceable wherever possible, and open to contributions and forking so that organizations can easily incorporate them into their own corporate coding guidelines.\nFAQ.2: When and where was this work first announced?\nIt was announced by Bjarne Stroustrup in his CppCon 2015 opening keynote, \"Writing Good C++14\". See also the accompanying isocpp.org blog post, and for the rationale of the type and memory safety guidelines see Herb Sutter's follow-up CppCon 2015 talk, \"Writing Good C++14 ... By Default\".\nFAQ.3: Who are the authors and maintainers of these guidelines?\nThe initial primary authors and maintainers are Bjarne Stroustrup and Herb Sutter, and the guidelines so far were developed with contributions from experts at CERN, Microsoft, Morgan Stanley, and several other organizations. At the time of their release, the guidelines are in a \"0.6\" state, and contributions are welcome. As Stroustrup said in his announcement: \"We need help!\"\nFAQ.4: How can I contribute?\nSee CONTRIBUTING.md. We appreciate volunteer help!\nFAQ.5: How can I become an editor/maintainer?\nBy contributing a lot first and having the consistent quality of your contributions recognized. See CONTRIBUTING.md. We appreciate volunteer help!\nFAQ.6: Have these guidelines been approved by the ISO C++ standards committee? Do they represent the consensus of the committee?\nNo. These guidelines are outside the standard. They are intended to serve the standard, and be maintained as current guidelines about how to use the current Standard C++ effectively. We aim to keep them in sync with the standard as that is evolved by the committee.\nFAQ.7: If these guidelines are not approved by the committee, why are they under github.com/isocpp?\nBecause isocpp is the Standard C++ Foundation; the committee's repositories are under github.com/cplusplus. Some neutral organization has to own the copyright and license to make it clear this is not being dominated by any one person or vendor. The natural entity is the Foundation, which exists to promote the use and up-to-date understanding of modern Standard C++ and the work of the committee. This follows the same pattern that isocpp.org did for the C++ FAQ, which was initially the work of Bjarne Stroustrup, Marshall Cline, and Herb Sutter and contributed to the open project in the same way.\nFAQ.8: Will there be a C++98 version of these Guidelines? a C++11 version?\nNo. These guidelines are about how to best use Standard C++14 (and, if you have an implementation available, the Concepts Technical Specification) and write code assuming you have a modern conforming compiler.\nFAQ.9: Do these guidelines propose new language features?\nNo. These guidelines are about how to best use Standard C++14 + the Concepts Technical Specification, and they limit themselves to recommending only those features.\nFAQ.10: What version of Markdown do these guidelines use?\nThese coding standards are written using CommonMark, and  HTML anchors.\nWe are considering the following extensions from GitHub Flavored Markdown (GFM):\n\nfenced code blocks (consistently using indented vs. fenced is under discussion)\ntables (none yet but we'll likely need them, and this is a GFM extension)\n\nAvoid other HTML tags and other extensions.\nNote: We are not yet consistent with this style.\nFAQ.50: What is the GSL (guideline support library)?\nThe GSL is the small set of types and aliases specified in these guidelines. As of this writing, their specification herein is too sparse; we plan to add a WG21-style interface specification to ensure that different implementations agree, and to propose as a contribution for possible standardization, subject as usual to whatever the committee decides to accept/improve/alter/reject.\nFAQ.51: Is github.com/Microsoft/GSL the GSL?\nNo. That is just a first implementation contributed by Microsoft. Other implementations by other vendors are encouraged, as are forks of and contributions to that implementation. As of this writing one week into the public project, at least one GPLv3 open-source implementation already exists. We plan to produce a WG21-style interface specification to ensure that different implementations agree.\nFAQ.52: Why not supply an actual GSL implementation in/with these guidelines?\nWe are reluctant to bless one particular implementation because we do not want to make people think there is only one, and inadvertently stifle parallel implementations. And if these guidelines included an actual implementation, then whoever contributed it could be mistakenly seen as too influential. We prefer to follow the long-standing approach of the committee, namely to specify interfaces, not implementations. But at the same time we want at least one implementation available; we hope for many.\nFAQ.53: Why weren't the GSL types proposed through Boost?\nBecause we want to use them immediately, and because they are temporary in that we want to retire them as soon as types that fill the same needs exist in the standard library.\nFAQ.54: Has the GSL (guideline support library) been approved by the ISO C++ standards committee?\nNo. The GSL exists only to supply a few types and aliases that are not currently in the standard library. If the committee decides on standardized versions (of these or other types that fill the same need) then they can be removed from the GSL.\nFAQ.55: If you're using the standard types where available, why is the GSL string_span different from the string_view in the Library Fundamentals 1 Technical Specification and C++17 Working Paper? Why not just use the committee-approved string_view?\nThe consensus on the taxonomy of views for the C++ standard library was that \"view\" means \"read-only\", and \"span\" means \"read/write\". The read-only string_view was the first such component to complete the standardization process, while span and string_span are currently being considered for standardization.\nFAQ.56: Is owner the same as the proposed observer_ptr?\nNo. owner owns, is an alias, and can be applied to any indirection type. The main intent of observer_ptr is to signify a non-owning pointer.\nFAQ.57: Is stack_array the same as the standard array?\nNo. stack_array is guaranteed to be allocated on the stack. Although a std::array contains its storage directly inside itself, the array object can be put anywhere, including the heap.\nFAQ.58: Is dyn_array the same as vector or the proposed dynarray?\nNo. dyn_array is not resizable, and is a safe way to refer to a heap-allocated fixed-size array. Unlike vector, it is intended to replace array-new[]. Unlike the dynarray that has been proposed in the committee, this does not anticipate compiler/language magic to somehow allocate it on the stack when it is a member of an object that is allocated on the stack; it simply refers to a \"dynamic\" or heap-based array.\nFAQ.59: Is Expects the same as assert?\nNo. It is a placeholder for language support for contract preconditions.\nFAQ.60: Is Ensures the same as assert?\nNo. It is a placeholder for language support for contract postconditions.\n1.7.26. Appendix A: Libraries\nThis section lists recommended libraries, and explicitly recommends a few.\n??? Suitable for the general guide? I think not ???\n1.7.27. Appendix B: Modernizing code\nIdeally, we follow all rules in all code.\nRealistically, we have to deal with a lot of old code:\n\napplication code written before the guidelines were formulated or known\nlibraries written to older/different standards\ncode written under \"unusual\" constraints\ncode that we just haven't gotten around to modernizing\n\nIf we have a million lines of new code, the idea of \"just changing it all at once\" is typically unrealistic.\nThus, we need a way of gradually modernizing a code base.\nUpgrading older code to modern style can be a daunting task.\nOften, the old code is both a mess (hard to understand) and working correctly (for the current range of uses).\nTypically, the original programmer is not around and the test cases incomplete.\nThe fact that the code is a mess dramatically increases the effort needed to make any change and the risk of introducing errors.\nOften, messy old code runs unnecessarily slowly because it requires outdated compilers and cannot take advantage of modern hardware.\nIn many cases, automated \"modernizer\"-style tool support would be required for major upgrade efforts.\nThe purpose of modernizing code is to simplify adding new functionality, to ease maintenance, and to increase performance (throughput or latency), and to better utilize modern hardware.\nMaking code \"look pretty\" or \"follow modern style\" are not by themselves reasons for change.\nThere are risks implied by every change and costs (including the cost of lost opportunities) implied by having an outdated code base.\nThe cost reductions must outweigh the risks.\nBut how?\nThere is no one approach to modernizing code.\nHow best to do it depends on the code, the pressure for updates, the backgrounds of the developers, and the available tool.\nHere are some (very general) ideas:\n\nThe ideal is \"just upgrade everything.\" That gives the most benefits for the shortest total time.\nIn most circumstances, it is also impossible.\nWe could convert a code base module for module, but any rules that affects interfaces (especially ABIs), such as use span, cannot be done on a per-module basis.\nWe could convert code \"bottom up\" starting with the rules we estimate will give the greatest benefits and/or the least trouble in a given code base.\nWe could start by focusing on the interfaces, e.g., make sure that no resources are lost and no pointer is misused.\nThis would be a set of changes across the whole code base, but would most likely have huge benefits.\nAfterwards, code hidden behind those interfaces can be gradually modernized without affecting other code.\n\nWhichever way you choose, please note that the most advantages come with the highest conformance to the guidelines.\nThe guidelines are not a random set of unrelated rules where you can randomly pick and choose with an expectation of success.\nWe would dearly love to hear about experience and about tools used.\nModernization can be much faster, simpler, and safer when supported with analysis tools and even code transformation tools.\n1.7.28. Appendix C: Discussion\nThis section contains follow-up material on rules and sets of rules.\nIn particular, here we present further rationale, longer examples, and discussions of alternatives.\nDiscussion: Define and initialize member variables in the order of member declaration\nMember variables are always initialized in the order they are declared in the class definition, so write them in that order in the constructor initialization list. Writing them in a different order just makes the code confusing because it won't run in the order you see, and that can make it hard to see order-dependent bugs.\nclass Employee {\n    string email, first, last;\npublic:\n    Employee(const char* firstName, const char* lastName);\n    // ...\n};\n\nEmployee::Employee(const char* firstName, const char* lastName)\n  : first(firstName),\n    last(lastName),\n    // BAD: first and last not yet constructed\n    email(first + \".\" + last + \"@acme.com\")\n{}\nIn this example, email will be constructed before first and last because it is declared first. That means its constructor will attempt to use first and last too soon -- not just before they are set to the desired values, but before they are constructed at all.\nIf the class definition and the constructor body are in separate files, the long-distance influence that the order of member variable declarations has over the constructor's correctness will be even harder to spot.\nReferences:\n[Cline99] §22.03-11, [Dewhurst03] §52-53, [Koenig97] §4, [Lakos96] §10.3.5, [Meyers97] §13, [Murray93] §2.1.3, [Sutter00] §47\nDiscussion: Use of =, {}, and () as initializers\n???\nDiscussion: Use a factory function if you need \"virtual behavior\" during initialization\nIf your design wants virtual dispatch into a derived class from a base class constructor or destructor for functions like f and g, you need other techniques, such as a post-constructor -- a separate member function the caller must invoke to complete initialization, which can safely call f and g because in member functions virtual calls behave normally. Some techniques for this are shown in the References. Here's a non-exhaustive list of options:\n\nPass the buck: Just document that user code must call the post-initialization function right after constructing an object.\nPost-initialize lazily: Do it during the first call of a member function. A Boolean flag in the base class tells whether or not post-construction has taken place yet.\nUse virtual base class semantics: Language rules dictate that the constructor most-derived class decides which base constructor will be invoked; you can use that to your advantage. (See [Taligent94].)\nUse a factory function: This way, you can easily force a mandatory invocation of a post-constructor function.\n\nHere is an example of the last option:\nclass B {\npublic:\n    B() { /* ... */ f(); /* ... */ }   // BAD: see Item 49.1\n\n    virtual void f() = 0;\n\n    // ...\n};\n\nclass B {\nprotected:\n    B() { /* ... */ }\n    virtual void post_initialize()    // called right after construction\n        { /* ... */ f(); /* ... */ }   // GOOD: virtual dispatch is safe\npublic:\n    virtual void f() = 0;\n\n    template\n    static shared_ptr create()    // interface for creating objects\n    {\n        auto p = make_shared();\n        p->post_initialize();\n        return p;\n    }\n};\n\n\nclass D : public B {                 // some derived class\npublic:\n    void f() override { /* ...  */ };\n\nprotected:\n    D() {}\n\n    template\n    friend shared_ptr B::Create();\n};\n\nshared_ptr p = D::Create();    // creating a D object\nThis design requires the following discipline:\n\nDerived classes such as D must not expose a public constructor. Otherwise, D's users could create D objects that don't invoke PostInitialize.\nAllocation is limited to operator new. B can, however, override new (see Items 45 and 46).\nD must define a constructor with the same parameters that B selected. Defining several overloads of Create can assuage this problem, however; and the overloads can even be templated on the argument types.\n\nIf the requirements above are met, the design guarantees that PostInitialize has been called for any fully constructed B-derived object. PostInitialize doesn't need to be virtual; it can, however, invoke virtual functions freely.\nIn summary, no post-construction technique is perfect. The worst techniques dodge the whole issue by simply asking the caller to invoke the post-constructor manually. Even the best require a different syntax for constructing objects (easy to check at compile time) and/or cooperation from derived class authors (impossible to check at compile time).\nReferences: [Alexandrescu01] §3, [Boost], [Dewhurst03] §75, [Meyers97] §46, [Stroustrup00] §15.4.3, [Taligent94]\nDiscussion: Make base class destructors public and virtual, or protected and nonvirtual\nShould destruction behave virtually? That is, should destruction through a pointer to a base class be allowed? If yes, then base's destructor must be public in order to be callable, and virtual otherwise calling it results in undefined behavior. Otherwise, it should be protected so that only derived classes can invoke it in their own destructors, and nonvirtual since it doesn't need to behave virtually virtual.\nExample\nThe common case for a base class is that it's intended to have publicly derived classes, and so calling code is just about sure to use something like a shared_ptr:\nclass Base {\npublic:\n    ~Base();                   // BAD, not virtual\n    virtual ~Base();           // GOOD\n    // ...\n};\n\nclass Derived : public Base { /* ... */ };\n\n{\n    unique_ptr pb = make_unique();\n    // ...\n} // ~pb invokes correct destructor only when ~Base is virtual\nIn rarer cases, such as policy classes, the class is used as a base class for convenience, not for polymorphic behavior. It is recommended to make those destructors protected and nonvirtual:\nclass My_policy {\npublic:\n    virtual ~My_policy();      // BAD, public and virtual\nprotected:\n    ~My_policy();              // GOOD\n    // ...\n};\n\ntemplate\nclass customizable : Policy { /* ... */ }; // note: private inheritance\nNote\nThis simple guideline illustrates a subtle issue and reflects modern uses of inheritance and object-oriented design principles.\nFor a base class Base, calling code might try to destroy derived objects through pointers to Base, such as when using a unique_ptr. If Base's destructor is public and nonvirtual (the default), it can be accidentally called on a pointer that actually points to a derived object, in which case the behavior of the attempted deletion is undefined. This state of affairs has led older coding standards to impose a blanket requirement that all base class destructors must be virtual. This is overkill (even if it is the common case); instead, the rule should be to make base class destructors virtual if and only if they are public.\nTo write a base class is to define an abstraction (see Items 35 through 37). Recall that for each member function participating in that abstraction, you need to decide:\n\nWhether it should behave virtually or not.\nWhether it should be publicly available to all callers using a pointer to Base or else be a hidden internal implementation detail.\n\nAs described in Item 39, for a normal member function, the choice is between allowing it to be called via a pointer to Base nonvirtually (but possibly with virtual behavior if it invokes virtual functions, such as in the NVI or Template Method patterns), virtually, or not at all. The NVI pattern is a technique to avoid public virtual functions.\nDestruction can be viewed as just another operation, albeit with special semantics that make nonvirtual calls dangerous or wrong. For a base class destructor, therefore, the choice is between allowing it to be called via a pointer to Base virtually or not at all; \"nonvirtually\" is not an option. Hence, a base class destructor is virtual if it can be called (i.e., is public), and nonvirtual otherwise.\nNote that the NVI pattern cannot be applied to the destructor because constructors and destructors cannot make deep virtual calls. (See Items 39 and 55.)\nCorollary: When writing a base class, always write a destructor explicitly, because the implicitly generated one is public and nonvirtual. You can always =default the implementation if the default body is fine and you're just writing the function to give it the proper visibility and virtuality.\nException\nSome component architectures (e.g., COM and CORBA) don't use a standard deletion mechanism, and foster different protocols for object disposal. Follow the local patterns and idioms, and adapt this guideline as appropriate.\nConsider also this rare case:\n\nB is both a base class and a concrete class that can be instantiated by itself, and so the destructor must be public for B objects to be created and destroyed.\nYet B also has no virtual functions and is not meant to be used polymorphically, and so although the destructor is public it does not need to be virtual.\n\nThen, even though the destructor has to be public, there can be great pressure to not make it virtual because as the first virtual function it would incur all the run-time type overhead when the added functionality should never be needed.\nIn this rare case, you could make the destructor public and nonvirtual but clearly document that further-derived objects must not be used polymorphically as B's. This is what was done with std::unary_function.\nIn general, however, avoid concrete base classes (see Item 35). For example, unary_function is a bundle-of-typedefs that was never intended to be instantiated standalone. It really makes no sense to give it a public destructor; a better design would be to follow this Item's advice and give it a protected nonvirtual destructor.\nReferences: [C++CS] Item 50, [Cargill92] pp. 77-79, 207, [Cline99] §21.06, 21.12-13, [Henricson97] pp. 110-114, [Koenig97] Chapters 4, 11, [Meyers97] §14, [Stroustrup00] §12.4.2, [Sutter02] §27, [Sutter04] §18\nDiscussion: Usage of noexcept\n???\nDiscussion: Destructors, deallocation, and swap must never fail\nNever allow an error to be reported from a destructor, a resource deallocation function (e.g., operator delete), or a swap function using throw. It is nearly impossible to write useful code if these operations can fail, and even if something does go wrong it nearly never makes any sense to retry. Specifically, types whose destructors may throw an exception are flatly forbidden from use with the C++ standard library. Most destructors are now implicitly noexcept by default.\nExample\nclass Nefarious {\npublic:\n    Nefarious()  { /* code that could throw */ }   // ok\n    ~Nefarious() { /* code that could throw */ }   // BAD, should not throw\n    // ...\n};\n\nNefarious objects are hard to use safely even as local variables:\n\n    void test(string& s)\n    {\n        Nefarious n;          // trouble brewing\n        string copy = s;      // copy the string\n    } // destroy copy and then n\n\nHere, copying `s` could throw, and if that throws and if `n`'s destructor then also throws, the program will exit via `std::terminate` because two exceptions can't be propagated simultaneously.\n\nClasses with Nefarious members or bases are also hard to use safely, because their destructors must invoke Nefarious' destructor, and are similarly poisoned by its poor behavior:\n\n    class Innocent_bystander {\n        Nefarious member;     // oops, poisons the enclosing class's destructor\n        // ...\n    };\n\n    void test(string& s)\n    {\n        Innocent_bystander i; // more trouble brewing\n        string copy2 = s;      // copy the string\n    } // destroy copy and then i\n\nHere, if constructing `copy2` throws, we have the same problem because `i`'s destructor now also can throw, and if so we'll invoke `std::terminate`.\n\nYou can't reliably create global or static Nefarious objects either:\n\n    static Nefarious n;       // oops, any destructor exception can't be caught\n\nYou can't reliably create arrays of Nefarious:\n\n    void test()\n    {\n        std::array arr; // this line can std::terminate(!)\n    }\n\nThe behavior of arrays is undefined in the presence of destructors that throw because there is no reasonable rollback behavior that could ever be devised. Just think: What code can the compiler generate for constructing an `arr` where, if the fourth object's constructor throws, the code has to give up and in its cleanup mode tries to call the destructors of the already-constructed objects ... and one or more of those destructors throws? There is no satisfactory answer.\n\nYou can't use Nefarious objects in standard containers:\n\n    std::vector vec(10);   // this line can std::terminate()\n\nThe standard library forbids all destructors used with it from throwing. You can't store `Nefarious` objects in standard containers or use them with any other part of the standard library.\nNote\nThese are key functions that must not fail because they are necessary for the two key operations in transactional programming: to back out work if problems are encountered during processing, and to commit work if no problems occur. If there's no way to safely back out using no-fail operations, then no-fail rollback is impossible to implement. If there's no way to safely commit state changes using a no-fail operation (notably, but not limited to, swap), then no-fail commit is impossible to implement.\nConsider the following advice and requirements found in the C++ Standard:\n\nIf a destructor called during stack unwinding exits with an exception, terminate is called (15.5.1). So destructors should generally catch exceptions and not let them propagate out of the destructor. --[C++03] §15.2(3)\nNo destructor operation defined in the C++ Standard Library (including the destructor of any type that is used to instantiate a standard-library template) will throw an exception. --[C++03] §17.4.4.8(3)\n\nDeallocation functions, including specifically overloaded operator delete and operator delete[], fall into the same category, because they too are used during cleanup in general, and during exception handling in particular, to back out of partial work that needs to be undone.\nBesides destructors and deallocation functions, common error-safety techniques rely also on swap operations never failing -- in this case, not because they are used to implement a guaranteed rollback, but because they are used to implement a guaranteed commit. For example, here is an idiomatic implementation of operator= for a type T that performs copy construction followed by a call to a no-fail swap:\nT& T::operator=(const T& other) {\n    auto temp = other;\n    swap(temp);\n}\n(See also Item 56. ???)\nFortunately, when releasing a resource, the scope for failure is definitely smaller. If using exceptions as the error reporting mechanism, make sure such functions handle all exceptions and other errors that their internal processing might generate. (For exceptions, simply wrap everything sensitive that your destructor does in a try/catch(...) block.) This is particularly important because a destructor might be called in a crisis situation, such as failure to allocate a system resource (e.g., memory, files, locks, ports, windows, or other system objects).\nWhen using exceptions as your error handling mechanism, always document this behavior by declaring these functions noexcept. (See Item 75.)\nReferences: [C++CS] Item 51; [C++03] §15.2(3), §17.4.4.8(3), [Meyers96] §11, [Stroustrup00] §14.4.7, §E.2-4, [Sutter00] §8, §16, [Sutter02] §18-19\n1.7.28.1. Define Copy, move, and destroy consistently\nReason\n ???\nNote\nIf you define a copy constructor, you must also define a copy assignment operator.\nNote\nIf you define a move constructor, you must also define a move assignment operator.\nExample\nclass X {\n    // ...\npublic:\n    X(const X&) { /* stuff */ }\n\n    // BAD: failed to also define a copy assignment operator\n\n    X(x&&) noexcept { /* stuff */ }\n\n    // BAD: failed to also define a move assignment operator\n};\n\nX x1;\nX x2 = x1; // ok\nx2 = x1;   // pitfall: either fails to compile, or does something suspicious\nIf you define a destructor, you should not use the compiler-generated copy or move operation; you probably need to define or suppress copy and/or move.\nclass X {\n    HANDLE hnd;\n    // ...\npublic:\n    ~X() { /* custom stuff, such as closing hnd */ }\n    // suspicious: no mention of copying or moving -- what happens to hnd?\n};\n\nX x1;\nX x2 = x1; // pitfall: either fails to compile, or does something suspicious\nx2 = x1;   // pitfall: either fails to compile, or does something suspicious\nIf you define copying, and any base or member has a type that defines a move operation, you should also define a move operation.\nclass X {\n    string s; // defines more efficient move operations\n    // ... other data members ...\npublic:\n    X(const X&) { /* stuff */ }\n    X& operator=(const X&) { /* stuff */ }\n\n    // BAD: failed to also define a move construction and move assignment\n    // (why wasn't the custom \"stuff\" repeated here?)\n};\n\nX test()\n{\n    X local;\n    // ...\n    return local;  // pitfall: will be inefficient and/or do the wrong thing\n}\nIf you define any of the copy constructor, copy assignment operator, or destructor, you probably should define the others.\nNote\nIf you need to define any of these five functions, it means you need it to do more than its default behavior -- and the five are asymmetrically interrelated. Here's how:\n\nIf you write/disable either of the copy constructor or the copy assignment operator, you probably need to do the same for the other: If one does \"special\" work, probably so should the other because the two functions should have similar effects. (See Item 53, which expands on this point in isolation.)\nIf you explicitly write the copying functions, you probably need to write the destructor: If the \"special\" work in the copy constructor is to allocate or duplicate some resource (e.g., memory, file, socket), you need to deallocate it in the destructor.\nIf you explicitly write the destructor, you probably need to explicitly write or disable copying: If you have to write a non-trivial destructor, it's often because you need to manually release a resource that the object held. If so, it is likely that those resources require careful duplication, and then you need to pay attention to the way objects are copied and assigned, or disable copying completely.\n\nIn many cases, holding properly encapsulated resources using RAII \"owning\" objects can eliminate the need to write these operations yourself. (See Item 13.)\nPrefer compiler-generated (including =default) special members; only these can be classified as \"trivial\", and at least one major standard library vendor heavily optimizes for classes having trivial special members. This is likely to become common practice.\nExceptions: When any of the special functions are declared only to make them nonpublic or virtual, but without special semantics, it doesn't imply that the others are needed.\nIn rare cases, classes that have members of strange types (such as reference members) are an exception because they have peculiar copy semantics.\nIn a class holding a reference, you likely need to write the copy constructor and the assignment operator, but the default destructor already does the right thing. (Note that using a reference member is almost always wrong.)\nReferences: [C++CS] Item 52; [Cline99] §30.01-14, [Koenig97] §4, [Stroustrup00] §5.5, §10.4, [SuttHysl04b]\nResource management rule summary:\n\nProvide strong resource safety; that is, never leak anything that you think of as a resource\nNever throw while holding a resource not owned by a handle\nA \"raw\" pointer or reference is never a resource handle\nNever let a pointer outlive the object it points to\nUse templates to express containers (and other resource handles)\nReturn containers by value (relying on move or copy elision for efficiency)\nIf a class is a resource handle, it needs a constructor, a destructor, and copy and/or move operations\nIf a class is a container, give it an initializer-list constructor\n\n1.7.28.1.1. Discussion: Provide strong resource safety; that is, never leak anything that you think of as a resource\nReason\nPrevent leaks. Leaks can lead to performance degradation, mysterious error, system crashes, and security violations.\nAlternative formulation: Have every resource represented as an object of some class managing its lifetime.\nExample\ntemplate\nclass Vector {\n// ...\nprivate:\n    T* elem;   // sz elements on the free store, owned by the class object\n    int sz;\n};\nThis class is a resource handle. It manages the lifetime of the Ts. To do so, Vector must define or delete the set of special operations (constructors, a destructor, etc.).\nExample\n??? \"odd\" non-memory resource ???\nEnforcement\nThe basic technique for preventing leaks is to have every resource owned by a resource handle with a suitable destructor. A checker can find \"naked news\". Given a list of C-style allocation functions (e.g., fopen()), a checker can also find uses that are not managed by a resource handle. In general, \"naked pointers\" can be viewed with suspicion, flagged, and/or analyzed. A complete list of resources cannot be generated without human input (the definition of \"a resource\" is necessarily too general), but a tool can be \"parameterized\" with a resource list.\n1.7.28.1.2. Discussion: Never throw while holding a resource not owned by a handle\nReason\nThat would be a leak.\nExample\nvoid f(int i)\n{\n    FILE* f = fopen(\"a file\", \"r\");\n    ifstream is { \"another file\" };\n    // ...\n    if (i == 0) return;\n    // ...\n    fclose(f);\n}\nIf i == 0 the file handle for a file is leaked. On the other hand, the ifstream for another file will correctly close its file (upon destruction). If you must use an explicit pointer, rather than a resource handle with specific semantics, use a unique_ptr or a shared_ptr with a custom deleter:\nvoid f(int i)\n{\n    unique_ptr f(fopen(\"a file\", \"r\"), fclose);\n    // ...\n    if (i == 0) return;\n    // ...\n}\nBetter:\nvoid f(int i)\n{\n    ifstream input {\"a file\"};\n    // ...\n    if (i == 0) return;\n    // ...\n}\nEnforcement\nA checker must consider all \"naked pointers\" suspicious.\nA checker probably must rely on a human-provided list of resources.\nFor starters, we know about the standard-library containers, string, and smart pointers.\nThe use of span and string_span should help a lot (they are not resource handles).\n1.7.28.1.3. Discussion: A \"raw\" pointer or reference is never a resource handle\nReason\nTo be able to distinguish owners from views.\nNote\nThis is independent of how you \"spell\" pointer: T*, T&, Ptr and Range are not owners.\n1.7.28.1.4. Discussion: Never let a pointer outlive the object it points to\nReason\nTo avoid extremely hard-to-find errors. Dereferencing such a pointer is undefined behavior and could lead to violations of the type system.\nExample\nstring* bad()   // really bad\n{\n    vector v = { \"This\", \"will\", \"cause\", \"trouble\", \"!\" };\n    // leaking a pointer into a destroyed member of a destroyed object (v)\n    return &v[0];\n}\n\nvoid use()\n{\n    string* p = bad();\n    vector xx = {7, 8, 9};\n    // undefined behavior: x may not be the string \"This\"\n    string x = *p;\n    // undefined behavior: we don't know what (if anything) is allocated a location p\n    *p = \"Evil!\";\n}\nThe strings of v are destroyed upon exit from bad() and so is v itself. The returned pointer points to unallocated memory on the free store. This memory (pointed into by p) may have been reallocated by the time *p is executed. There may be no string to read and a write through p could easily corrupt objects of unrelated types.\nEnforcement\nMost compilers already warn about simple cases and has the information to do more. Consider any pointer returned from a function suspect. Use containers, resource handles, and views (e.g., span known not to be resource handles) to lower the number of cases to be examined. For starters, consider every class with a destructor as resource handle.\n1.7.28.1.5. Discussion: Use templates to express containers (and other resource handles)\nReason\nTo provide statically type-safe manipulation of elements.\nExample\ntemplate class Vector {\n    // ...\n    T* elem;   // point to sz elements of type T\n    int sz;\n};\n1.7.28.1.6. Discussion: Return containers by value (relying on move or copy elision for efficiency)\nReason\nTo simplify code and eliminate a need for explicit memory management. To bring an object into a surrounding scope, thereby extending its lifetime. See also F.20, the general item about \"out\" output values.\nExample\nvector get_large_vector()\n{\n    return ...;\n}\n\nauto v = get_large_vector(); //  return by value is ok, most modern compilers will do copy elision\nException\nSee the Exceptions in F.20.\nEnforcement\nCheck for pointers and references returned from functions and see if they are assigned to resource handles (e.g., to a unique_ptr).\n1.7.28.1.7. Discussion: If a class is a resource handle, it needs a constructor, a destructor, and copy and/or move operations\nReason\nTo provide complete control of the lifetime of the resource. To provide a coherent set of operations on the resource.\nExample\n??? Messing with pointers\nNote\nIf all members are resource handles, rely on the default special operations where possible.\ntemplate struct Named {\n    string name;\n    T value;\n};\nNow Named has a default constructor, a destructor, and efficient copy and move operations, provided T has.\nEnforcement\nIn general, a tool cannot know if a class is a resource handle. However, if a class has some of the default operations, it should have all, and if a class has a member that is a resource handle, it should be considered as resource handle.\n1.7.28.1.8. Discussion: If a class is a container, give it an initializer-list constructor\nReason\nIt is common to need an initial set of elements.\nExample\ntemplate class Vector {\npublic:\n    Vector(std::initializer_list);\n    // ...\n};\n\nVector vs { \"Nygaard\", \"Ritchie\" };\nEnforcement\nWhen is a class a container? ???\n1.7.29. Appendix D: Supporting tools\nThis section contains a list of tools that directly support adoption of the C++ Core Guidelines. This list is not intended to be an exhaustive list of tools\nthat are helpful in writing good C++ code. If a tool is designed specifically to support and links to the C++ Core Guidelines it is a candidate for inclusion.\nTools: Clang-tidy\nClang-tidy has a set of rules that specifically enforce the C++ Core Guidelines. These rules are named in the pattern cppcoreguidelines-*.\nTools: CppCoreCheck\nThe Microsoft compiler's C++ code analysis contains a set of rules specifically aimed at enforcement of the C++ Core Guidelines. \n1.7.30. Glossary\nA relatively informal definition of terms used in the guidelines\n(based of the glossary in Programming: Principles and Practice using C++)\nMore information on many topics about C++ can be found on the Standard C++ Foundation's site.\n\nABI: Application Binary Interface, a specification for a specific hardware platform combined with the operating system. Contrast with API.\nabstract class: a class that cannot be directly used to create objects; often used to define an interface to derived classes.\nA class is made abstract by having a pure virtual function or only protected constructors.\nabstraction: a description of something that selectively and deliberately ignores (hides) details (e.g., implementation details); selective ignorance.\naddress: a value that allows us to find an object in a computer's memory.\nalgorithm: a procedure or formula for solving a problem; a finite series of computational steps to produce a result.\nalias: an alternative way of referring to an object; often a name, pointer, or reference.\nAPI: Application Programming Interface, a set of methods that form the communication between various software components. Contrast with ABI.\napplication: a program or a collection of programs that is considered an entity by its users.\napproximation: something (e.g., a value or a design) that is close to the perfect or ideal (value or design).\nOften an approximation is a result of trade-offs among ideals.\nargument: a value passed to a function or a template, in which it is accessed through a parameter.\narray: a homogeneous sequence of elements, usually numbered, e.g., [0:max).\nassertion: a statement inserted into a program to state (assert) that something must always be true at this point in the program.\nbase class: a class used as the base of a class hierarchy. Typically a base class has one or more virtual functions.\nbit: the basic unit of information in a computer. A bit can have the value 0 or the value 1.\nbug: an error in a program.\nbyte: the basic unit of addressing in most computers. Typically, a byte holds 8 bits.\nclass: a user-defined type that may contain data members, function members, and member types.\ncode: a program or a part of a program; ambiguously used for both source code and object code.\ncompiler: a program that turns source code into object code.\ncomplexity: a hard-to-precisely-define notion or measure of the difficulty of constructing a solution to a problem or of the solution itself.\nSometimes complexity is used to (simply) mean an estimate of the number of operations needed to execute an algorithm.\ncomputation: the execution of some code, usually taking some input and producing some output.\nconcept: (1) a notion, and idea; (2) a set of requirements, usually for a template argument.\nconcrete class: class for which objects can be created.\nconstant: a value that cannot be changed (in a given scope); not mutable.\nconstructor: an operation that initializes (\"constructs\") an object.\nTypically a constructor establishes an invariant and often acquires resources needed for an object to be used (which are then typically released by a destructor).\ncontainer: an object that holds elements (other objects).\ncopy: an operation that makes two object have values that compare equal. See also move.\ncorrectness: a program or a piece of a program is correct if it meets its specification.\nUnfortunately, a specification can be incomplete or inconsistent, or can fail to meet users' reasonable expectations.\nThus, to produce acceptable code, we sometimes have to do more than just follow the formal specification.\ncost: the expense (e.g., in programmer time, run time, or space) of producing a program or of executing it.\nIdeally, cost should be a function of complexity.\ncustomization point: ???\ndata: values used in a computation.\ndebugging: the act of searching for and removing errors from a program; usually far less systematic than testing.\ndeclaration: the specification of a name with its type in a program.\ndefinition: a declaration of an entity that supplies all information necessary to complete a program using the entity.\nSimplified definition: a declaration that allocates memory.\nderived class: a class derived from one or more base classes.\ndesign: an overall description of how a piece of software should operate to meet its specification.\ndestructor: an operation that is implicitly invoked (called) when an object is destroyed (e.g., at the end of a scope). Often, it releases resources.\nencapsulation: protecting something meant to be private (e.g., implementation details) from unauthorized access.\nerror: a mismatch between reasonable expectations of program behavior (often expressed as a requirement or a users' guide) and what a program actually does.\nexecutable: a program ready to be run (executed) on a computer.\nfeature creep: a tendency to add excess functionality to a program \"just in case.\"\nfile: a container of permanent information in a computer.\nfloating-point number: a computer's approximation of a real number, such as 7.93 and 10.78e-3.\nfunction: a named unit of code that can be invoked (called) from different parts of a program; a logical unit of computation.\ngeneric programming: a style of programming focused on the design and efficient implementation of algorithms.\nA generic algorithm will work for all argument types that meet its requirements. In C++, generic programming typically uses templates.\nglobal variable: technically, a named object in namespace scope.\nhandle: a class that allows access to another through a member pointer or reference. See also resource, copy, move.\nheader: a file containing declarations used to share interfaces between parts of a program.\nhiding: the act of preventing a piece of information from being directly seen or accessed.\nFor example, a name from a nested (inner) scope can prevent that same name from an outer (enclosing) scope from being directly used.\nideal: the perfect version of something we are striving for. Usually we have to make trade-offs and settle for an approximation.\nimplementation: (1) the act of writing and testing code; (2) the code that implements a program.\ninfinite loop: a loop where the termination condition never becomes true. See iteration.\ninfinite recursion: a recursion that doesn't end until the machine runs out of memory to hold the calls.\nIn reality, such recursion is never infinite but is terminated by some hardware error.\ninformation hiding: the act of separating interface and implementation, thus hiding implementation details not meant for the user's attention and providing an abstraction.\ninitialize: giving an object its first (initial) value.\ninput: values used by a computation (e.g., function arguments and characters typed on a keyboard).\ninteger: a whole number, such as 42 and -99.\ninterface: a declaration or a set of declarations specifying how a piece of code (such as a function or a class) can be called.\ninvariant: something that must be always true at a given point (or points) of a program; typically used to describe the state (set of values) of an object or the state of a loop before entry into the repeated statement.\niteration: the act of repeatedly executing a piece of code; see recursion.\niterator: an object that identifies an element of a sequence.\nISO: International Organization for Standardization. The C++ language is an ISO standard, ISO/IEC 14882. More information at iso.org.\nlibrary: a collection of types, functions, classes, etc. implementing a set of facilities (abstractions) meant to be potentially used as part of more that one program.\nlifetime: the time from the initialization of an object until it becomes unusable (goes out of scope, is deleted, or the program terminates).\nlinker: a program that combines object code files and libraries into an executable program.\nliteral: a notation that directly specifies a value, such as 12 specifying the integer value \"twelve.\"\nloop: a piece of code executed repeatedly; in C++, typically a for-statement or a while-statement.\nmove: an operation that transfers a value from one object to another leaving behind a value representing \"empty.\" See also copy.\nmutable: changeable; the opposite of immutable, constant, and invariable.\nobject: (1) an initialized region of memory of a known type which holds a value of that type; (2) a region of memory.\nobject code: output from a compiler intended as input for a linker (for the linker to produce executable code).\nobject file: a file containing object code.\nobject-oriented programming: (OOP) a style of programming focused on the design and use of classes and class hierarchies.\noperation: something that can perform some action, such as a function and an operator.\noutput: values produced by a computation (e.g., a function result or lines of characters written on a screen).\noverflow: producing a value that cannot be stored in its intended target.\noverload: defining two functions or operators with the same name but different argument (operand) types.\noverride: defining a function in a derived class with the same name and argument types as a virtual function in the base class, thus making the function callable through the interface defined by the base class.\nowner: an object responsible for releasing a resource.\nparadigm: a somewhat pretentious term for design or programming style; often used with the (erroneous) implication that there exists a paradigm that is superior to all others.\nparameter: a declaration of an explicit input to a function or a template. When called, a function can access the arguments passed through the names of its parameters.\npointer: (1) a value used to identify a typed object in memory; (2) a variable holding such a value.\npost-condition: a condition that must hold upon exit from a piece of code, such as a function or a loop.\npre-condition: a condition that must hold upon entry into a piece of code, such as a function or a loop.\nprogram: code (possibly with associated data) that is sufficiently complete to be executed by a computer.\nprogramming: the art of expressing solutions to problems as code.\nprogramming language: a language for expressing programs.\npseudo code: a description of a computation written in an informal notation rather than a programming language.\npure virtual function: a virtual function that must be overridden in a derived class.\nRAII: (\"Resource Acquisition Is Initialization\") a basic technique for resource management based on scopes.\nrange: a sequence of values that can be described by a start point and an end point. For example, [0:5) means the values 0, 1, 2, 3, and 4.\nrecursion: the act of a function calling itself; see also iteration.\nreference: (1) a value describing the location of a typed value in memory; (2) a variable holding such a value.\nregular expression: a notation for patterns in character strings.\nregular: a type that behaves similarly to built-in types like int and can be compared with ==.\nIn particular, an object of a regular type can be copied and the result of a copy is a separate object that compares equal to the original. See also semiregular type.\nrequirement: (1) a description of the desired behavior of a program or part of a program; (2) a description of the assumptions a function or template makes of its arguments.\nresource: something that is acquired and must later be released, such as a file handle, a lock, or memory. See also handle, owner.\nrounding: conversion of a value to the mathematically nearest value of a less precise type.\nRTTI: Run-Time Type Information. ???\nscope: the region of program text (source code) in which a name can be referred to.\nsemiregular: a type that behaves roughly like an built-in type like int, but possibly without a == operator. See also regular type.\nsequence: elements that can be visited in a linear order.\nsoftware: a collection of pieces of code and associated data; often used interchangeably with program.\nsource code: code as produced by a programmer and (in principle) readable by other programmers.\nsource file: a file containing source code.\nspecification: a description of what a piece of code should do.\nstandard: an officially agreed upon definition of something, such as a programming language.\nstate: a set of values.\nSTL: the containers, iterators, and algorithms part of the standard library.\nstring: a sequence of characters.\nstyle: a set of techniques for programming leading to a consistent use of language features; sometimes used in a very restricted sense to refer just to low-level rules for naming and appearance of code.\nsubtype: derived type; a type that has all the properties of a type and possibly more.\nsupertype: base type; a type that has a subset of the properties of a type.\nsystem: (1) a program or a set of programs for performing a task on a computer; (2) a shorthand for \"operating system\", that is, the fundamental execution environment and tools for a computer.\nTS: Technical Specification, A Technical Specification addresses work still under technical development, or where it is believed that there will be a future, but not immediate, possibility of agreement on an International Standard. A Technical Specification is published for immediate use, but it also provides a means to obtain feedback. The aim is that it will eventually be transformed and republished as an International Standard.\ntemplate: a class or a function parameterized by one or more types or (compile-time) values; the basic C++ language construct supporting generic programming.\ntesting: a systematic search for errors in a program.\ntrade-off: the result of balancing several design and implementation criteria.\ntruncation: loss of information in a conversion from a type into another that cannot exactly represent the value to be converted.\ntype: something that defines a set of possible values and a set of operations for an object.\nuninitialized: the (undefined) state of an object before it is initialized.\nunit: (1) a standard measure that gives meaning to a value (e.g., km for a distance); (2) a distinguished (e.g., named) part of a larger whole.\nuse case: a specific (typically simple) use of a program meant to test its functionality and demonstrate its purpose.\nvalue: a set of bits in memory interpreted according to a type.\nvariable: a named object of a given type; contains a value unless uninitialized.\nvirtual function: a member function that can be overridden in a derived class.\nword: a basic unit of memory in a computer, often the unit used to hold an integer.\n\n1.7.31. To-do: Unclassified proto-rules\nThis is our to-do list.\nEventually, the entries will become rules or parts of rules.\nAlternatively, we will decide that no change is needed and delete the entry.\n\nNo long-distance friendship\nShould physical design (what's in a file) and large-scale design (libraries, groups of libraries) be addressed?\nNamespaces\nAvoid using directives in the global scope (except for std, and other \"fundamental\" namespaces (e.g. experimental))\nHow granular should namespaces be? All classes/functions designed to work together and released together (as defined in Sutter/Alexandrescu) or something narrower or wider?\nShould there be inline namespaces (à la std::literals::*_literals)?\nAvoid implicit conversions\nConst member functions should be thread safe ... aka, but I don't really change the variable, just assign it a value the first time it's called ... argh\nAlways initialize variables, use initialization lists for member variables.\nAnyone writing a public interface which takes or returns void* should have their toes set on fire. That one has been a personal favorite of mine for a number of years. :)\nUse const-ness wherever possible: member functions, variables and (yippee) const_iterators\nUse auto\n(size) vs. {initializers} vs. {Extent{size}}\nDon't overabstract\nNever pass a pointer down the call stack\nfalling through a function bottom\nShould there be guidelines to choose between polymorphisms? YES. classic (virtual functions, reference semantics) vs. Sean Parent style (value semantics, type-erased, kind of like std::function)  vs. CRTP/static? YES Perhaps even vs. tag dispatch?\nshould virtual calls be banned from ctors/dtors in your guidelines? YES. A lot of people ban them, even though I think it's a big strength of C++ that they are ??? -preserving (D disappointed me so much when it went the Java way). WHAT WOULD BE A GOOD EXAMPLE?\nSpeaking of lambdas, what would weigh in on the decision between lambdas and (local?) classes in algorithm calls and other callback scenarios?\nAnd speaking of std::bind, Stephen T. Lavavej criticizes it so much I'm starting to wonder if it is indeed going to fade away in future. Should lambdas be recommended instead?\nWhat to do with leaks out of temporaries? : p = (s1 + s2).c_str();\npointer/iterator invalidation leading to dangling pointers:\n  void bad()\n  {\n      int* p = new int[700];\n      int* q = &p[7];\n      delete p;\n\n      vector v(700);\n      int* q2 = &v[7];\n      v.resize(900);\n\n      // ... use q and q2 ...\n  }\n\nLSP\n\nprivate inheritance vs/and membership\navoid static class members variables (race conditions, almost-global variables)\n\nUse RAII lock guards (lock_guard, unique_lock, shared_lock), never call mutex.lock and mutex.unlock directly (RAII)\n\nPrefer non-recursive locks (often used to work around bad reasoning, overhead)\nJoin your threads! (because of std::terminate in destructor if not joined or detached ... is there a good reason to detach threads?) -- ??? could support library provide a RAII wrapper for std::thread?\nIf two or more mutexes must be acquired at the same time, use std::lock (or another deadlock avoidance algorithm?)\nWhen using a condition_variable, always protect the condition by a mutex (atomic bool whose value is set outside of the mutex is wrong!), and use the same mutex for the condition variable itself.\nNever use atomic_compare_exchange_strong with std::atomic (differences in padding matter, while compare_exchange_weak in a loop converges to stable padding)\nindividual shared_future objects are not thread-safe: two threads cannot wait on the same shared_future object (they can wait on copies of a shared_future that refer to the same shared state)\nindividual shared_ptr objects are not thread-safe: different threads can call non-const member functions on different shared_ptrs that refer to the same shared object, but one thread cannot call a non-const member function of a shared_ptr object while another thread accesses that same shared_ptr object (if you need that, consider atomic_shared_ptr instead)\n\nrules for arithmetic\n\n\n1.7.32. Bibliography\n\n\n[Abrahams01]:  D. Abrahams. Exception-Safety in Generic Components.\n\n[Alexandrescu01]:  A. Alexandrescu. Modern C++ Design (Addison-Wesley, 2001).\n\n[C++03]:           ISO/IEC 14882:2003(E), Programming Languages — C++ (updated ISO and ANSI C++ Standard including the contents of (C++98) plus errata corrections).\n\n[C++CS]:           ???\n\n[Cargill92]:       T. Cargill. C++ Programming Style (Addison-Wesley, 1992).\n\n[Cline99]:         M. Cline, G. Lomow, and M. Girou. C++ FAQs (2ndEdition) (Addison-Wesley, 1999).\n\n[Dewhurst03]:      S. Dewhurst. C++ Gotchas (Addison-Wesley, 2003).\n\n[Henricson97]:     M. Henricson and E. Nyquist. Industrial Strength C++ (Prentice Hall, 1997).\n\n[Koenig97]:        A. Koenig and B. Moo. Ruminations on C++ (Addison-Wesley, 1997).\n\n[Lakos96]:         J. Lakos. Large-Scale C++ Software Design (Addison-Wesley, 1996).\n\n[Meyers96]:        S. Meyers. More Effective C++ (Addison-Wesley, 1996).\n\n[Meyers97]:        S. Meyers. Effective C++ (2nd Edition) (Addison-Wesley, 1997).\n\n[Meyers15]:        S. Meyers. Effective Modern C++ (O'Reilly, 2015).\n\n[Murray93]:        R. Murray. C++ Strategies and Tactics (Addison-Wesley, 1993).\n\n[Stroustrup94]:    B. Stroustrup. The Design and Evolution of C++ (Addison-Wesley, 1994).\n\n[Stroustrup00]:    B. Stroustrup. The C++ Programming Language (Special 3rdEdition) (Addison-Wesley, 2000).\n\n[Stroustrup05]:    B. Stroustrup. A rationale for semantically enhanced library languages.\n\n[Stroustrup13]:    B. Stroustrup. The C++ Programming Language (4th Edition). Addison Wesley 2013.\n\n[Stroustrup14]:    B. Stroustrup. A Tour of C++.\nAddison Wesley 2014.\n\n[Stroustrup15]:    B. Stroustrup, Herb Sutter, and G. Dos Reis: A brief introduction to C++'s model for type- and resource-safety.\n\n[SuttHysl04b]:     H. Sutter and J. Hyslop. \"Collecting Shared Objects\" (C/C++ Users Journal, 22(8), August 2004).\n\n[SuttAlex05]:      H. Sutter and  A. Alexandrescu. C++ Coding Standards. Addison-Wesley 2005.\n\n[Sutter00]:        H. Sutter. Exceptional C++ (Addison-Wesley, 2000).\n\n[Sutter02]:        H. Sutter. More Exceptional C++ (Addison-Wesley, 2002).\n\n[Sutter04]:        H. Sutter. Exceptional C++ Style (Addison-Wesley, 2004).\n\n[Taligent94]: Taligent's Guide to Designing Programs (Addison-Wesley, 1994).\n\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 17:18:19\n"},"faq.html":{"url":"faq.html","title":"faq","keywords":"","body":"1.8.1. c++/cli1.8.1.1. 1. String^ 与 char*1.8.1.2. 2. native回调转托管1.8.1.3. 3. 编码转换1.8.1.4. 4. 打开文件1.8.1.5. 5. 绑定数据显示1.8.2. c++ socket1.8.2.1. 1. 广播搜索1.8.1. c++/cli\n1.8.1.1. 1. String^ 与 char*\n//将char*转换为System::String^\nString^ str1= System::Runtime::InteropServices::Marshal::PtrToStringAnsi((IntPtr)ch1);\n//System::String^转换为char*\nchar* ch2 = (char*)(void*)System::Runtime::InteropServices::Marshal::StringToHGlobalAnsi(str1);\n1.8.1.2. 2. native回调转托管\n#pragma unmanaged\ntypedef int (__stdcall *pMK_Notify_CB)(char *ipAddr, NET_MSG_NOTETYPE_E MsgType, NET_MSG_NOTEINFO *UploadMsg, void *pUserdata);\n#pragma managed\npublic delegate int GetNofiyDelegate(char *ipAddr, NET_MSG_NOTETYPE_E MsgType, NET_MSG_NOTEINFO *UploadMsg, void *pUserdata);\n// decl\npMK_Notify_CB m_cb;\nstatic GCHandle gch;\nstatic GetNofiyDelegate^ fp;\n// init\nCheckForIllegalCrossThreadCalls = false;\nfp = gcnew GetNofiyDelegate(GetNotifyMSG);\ngch = GCHandle::Alloc(fp);\nIntPtr ip = Marshal::GetFunctionPointerForDelegate(fp);\nm_cb = static_cast(ip.ToPointer());\nfp_up = gcnew GetUpgradeDelegate(GetUpgradeMSG);\n1.8.1.3. 3. 编码转换\n\nSystem::Text::Encoding::Default->GetBytes(sFullPath)\n\n1.8.1.4. 4. 打开文件\nOpenFileDialog^ openFileDialog1 = gcnew OpenFileDialog;\nopenFileDialog1->InitialDirectory = \"c:\\\\\";\nopenFileDialog1->Filter = \"upf files (*.upf)|*.upf|All files (*.*)|*.*\";\nopenFileDialog1->FilterIndex = 1;\nopenFileDialog1->RestoreDirectory = true;\nif ( openFileDialog1->ShowDialog() == \n    System::Windows::Forms::DialogResult::OK )\n{\n    String ^ sFullPath = openFileDialog1->FileName;\n    if (sFullPath->Substring(sFullPath->LastIndexOf(\".\"))->Equals(\".upf\"))\n    {\n    size_t pos =0;\n    sFullPath = sFullPath->Replace(L\"\\\\\", L\"\\\\\\\\\");\n    }\n}\n1.8.1.5. 5. 绑定数据显示\nprivate: System::Windows::Forms::DataGridView^  dataGridView2;\nSystem::Collections::Generic::List^ >^ listDevSearched;\nSystem::Collections::Generic::List^ >^ listDevAdded;\nSystem::Data::DataTable ^ dataTable1;\nSystem::Data::DataTable ^ dataTable2;\n\nthis->dataGridView2->DataSource = nullptr;\nthis->listDevAdded->Clear();\nthis->dataTable2->Rows->Clear();\nthis->dataTable2->Columns->Clear();\nthis->dataTable2->Columns->Add(\"*addr\");\nthis->dataTable2->Columns->Add(\"*IP\");\n\narray^ strTmpDev = gcnew array(2);\nstrTmpDev[0] = gcnew String(\"\" + cfgDevCheck[i].base.addr);\nstrTmpDev[1] = gcnew String((char *)cfgDevCheck[i].ex.linkIP);\nthis->listDevAdded->Add(strTmpDev);\nfor  each(array^ devInfo in this->listDevAdded)\n{\n    DataRow^ newRow = this->dataTable2->NewRow();\n    newRow[0] = devInfo[0];\n    newRow[1] = devInfo[1];\n    this->dataTable2->Rows->Add(newRow);\n}\nthis->dataGridView2->DataSource = this->dataTable2;\n// 获取\nthis->dataGridView1->CurrentRow->Cells[0]->Value->ToString();\n1.8.2. c++ socket\n1.8.2.1. 1. 广播搜索\nSOCKADDR_IN   servAddr;\nservAddr.sin_family           = AF_INET;\nservAddr.sin_addr.S_un.S_addr = htonl(INADDR_BROADCAST);\nservAddr.sin_port             = htons(5555);\nint addrLen = sizeof(servAddr);\nm_cSocket_DevSearch.socket_open();\nm_cSocket_DevSearch.socket_create(AF_INET,SOCK_DGRAM,IPPROTO_UDP);\nm_cSocket_DevSearch.socket_setblocking();\nm_cSocket_DevSearch.socket_setsockopt(SOL_SOCKET,SO_BROADCAST,(char*)&optval,sizeof(bool));\nint iConnectRet = m_cSocket_DevSearch.socket_bind((SOCKADDR*)&servAddr,sizeof(servAddr));\nm_cSocket_DevSearch.socket_sendto(&SearchDeviceMsg[0], iHeaderLen, &iSendSize, (SOCKADDR*)&servAddr, addrLen);\nwhile()\n{        \n    m_cSocket_DevSearch.socket_recvfrom(recvBuf, sizeof(recvBuf), &iSendSize, (SOCKADDR*)&servAddr, &addrLen);\n}\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-10 16:05:16\n"},"Gif图.html":{"url":"Gif图.html","title":"Gif图","keywords":"","body":"1.9.1. Gif 测试1.9.1. Gif 测试\n\n\n\n\n\n\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-10 16:05:16\n"},"git-tips.html":{"url":"git-tips.html","title":"git-tips","keywords":"","body":"1.10.1. Git的奇技淫巧:see_no_evil:1.10.1.1. 开卷必读1.10.1.2. 目录1.10.1.3. 展示帮助信息1.10.1.4. 回到远程仓库的状态1.10.1.5. 重设第一个commit1.10.1.6. 展示工作区和暂存区的不同1.10.1.7. 展示暂存区和最近版本的不同1.10.1.8. 展示暂存区、工作区和最近版本的不同1.10.1.9. 快速切换分支1.10.1.10. 删除已经合并到master的分支1.10.1.11. 展示本地分支关联远程仓库的情况1.10.1.12. 关联远程分支1.10.1.13. 列出所有远程分支1.10.1.14. 列出本地和远程分支1.10.1.15. 创建并切换到本地分支1.10.1.16. 创建并切换到远程分支1.10.1.17. 删除本地分支1.10.1.18. 删除远程分支1.10.1.19. 重命名本地分支1.10.1.20. 查看标签1.10.1.21. 本地创建标签1.10.1.22. 推送标签到远程仓库1.10.1.23. 删除本地标签1.10.1.24. 删除远程标签1.10.1.25. 切回到某个标签1.10.1.26. 放弃工作区的修改1.10.1.27. 恢复删除的文件1.10.1.28. 回到某一个commit的状态，并重新增添一个commit1.10.1.29. 回到某个commit的状态，并删除后面的commit1.10.1.30. 修改上一个commit的描述1.10.1.31. 查看commit历史1.10.1.32. 查看某段代码是谁写的1.10.1.33. 显示本地执行过git命令1.10.1.34. 修改作者名1.10.1.35. 修改远程仓库的url1.10.1.36. 增加远程仓库1.10.1.37. 列出所有远程仓库1.10.1.38. 查看两个星期内的改动1.10.1.39. 把A分支的某一个commit，放到B分支上1.10.1.40. 给git命令起别名1.10.1.41. 存储当前的修改，但不用提交commit1.10.1.42. 保存当前状态，包括untracked的文件1.10.1.43. 展示所有stashes1.10.1.44. 回到某个stash的状态1.10.1.45. 回到最后一个stash的状态，并删除这个stash1.10.1.46. 删除所有的stash1.10.1.47. 从stash中拿出某个文件的修改1.10.1.48. 展示所有tracked的文件1.10.1.49. 展示所有untracked的文件1.10.1.50. 展示所有忽略的文件1.10.1.51. 强制删除untracked的文件1.10.1.52. 强制删除untracked的目录1.10.1.53. 展示简化的commit历史1.10.1.54. 把某一个分支到导出成一个文件1.10.1.55. 从包中导入分支1.10.1.56. 执行rebase之前自动stash1.10.1.57. 从远程仓库根据ID，拉下某一状态，到本地分支1.10.1.58. 详细展示一行中的修改1.10.1.59. 清除gitignore文件中记录的文件1.10.1.60. 展示所有alias和configs1.10.1.61. 展示忽略的文件1.10.1.62. commit历史中显示Branch1有的，但是Branch2没有commit1.10.1.63. 在commit log中显示GPG签名1.10.1.64. 删除全局设置1.10.1.65. 新建并切换到新分支上，同时这个分支没有任何commit1.10.1.66. 展示任意分支某一文件的内容1.10.1.67. clone下来指定的单一分支1.10.1.68. 忽略某个文件的改动1.10.1.69. 忽略文件的权限变化1.10.1.70. 以最后提交的顺序列出所有Git分支1.10.1.71. 在commit log中查找相关内容1.10.1.72. 把暂存区的指定file放到工作区中1.10.1.73. 强制推送1.10.1.74. 联系我1.10.1. Git的奇技淫巧:see_no_evil:\n\nGit常用命令集合，Fork于tips项目\n\nGit是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。\n下面的内容就是列举了常用的Git命令和一些小技巧，可以通过\"页面内查找\"的方式进行快速查询：Ctrl/Command+f。\n1.10.1.1. 开卷必读\n如果之前未使用过Git，可以学习Git小白教程入门\n\n一定要先测试命令的效果后，再用于工作环境中，以防造成不能弥补的后果！到时候别拿着砍刀来找我\n所有的命令都在git version 2.7.4 (Apple Git-66)下测试通过\n统一概念：\n工作区：改动（增删文件和内容）\n暂存区：输入命令：git add 改动的文件名，此次改动就放到了‘暂存区’\n本地仓库(简称：本地)：输入命令：git commit 此次修改的描述，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。\n远程仓库(简称：远程)：输入命令：git push 远程仓库，此次改动就放到了‘远程仓库’（GitHub等)\ncommit-id：输出命令：git log，最上面那行commit xxxxxx，后面的字符串就是commit-id\n\n\n如果喜欢这个项目，欢迎Star、提交Pr、反馈问题&#x1F60A;\n\n1.10.1.2. 目录\n\n展示帮助信息\n回到远程仓库的状态\n重设第一个commit\n展示工作区和暂存区的不同\n展示暂存区和最近版本的不同\n展示暂存区、工作区和最近版本的不同\n快速切换分支\n删除已经合并到master的分支\n展示本地分支关联远程仓库的情况\n关联远程分支\n列出所有远程分支\n列出本地和远程分支\n创建并切换到本地分支\n创建并切换到远程分支\n删除本地分支\n删除远程分支\n重命名本地分支\n查看标签\n本地创建标签\n推送标签到远程仓库\n删除本地标签\n删除远程标签\n切回到某个标签\n放弃工作区的修改\n恢复删除的文件\n回到某一个commit的状态，并重新增添一个commit\n回到某个commit的状态，并删除后面的commit\n修改上一个commit的描述\n查看commit历史\n显示本地执行过git命令\n修改作者名\n修改远程仓库的url\n增加远程仓库\n列出所有远程仓库\n查看两个星期内的改动\n把A分支的某一个commit，放到B分支上\n给git命令起别名\n存储当前的修改，但不用提交commit\n保存当前状态，包括untracked的文件\n展示所有stashes\n回到某个stash的状态\n回到最后一个stash的状态，并删除这个stash\n删除所有的stash\n从stash中拿出某个文件的修改\n展示所有tracked的文件\n展示所有untracked的文件\n展示所有忽略的文件\n强制删除untracked的文件\n强制删除untracked的目录\n展示简化的commit历史\n查看某段代码是谁写的\n把某一个分支到导出成一个文件\n从包中导入分支\n执行rebase之前自动stash\n从远程仓库根据ID，拉下某一状态，到本地分支\n详细展示一行中的修改\n清除.gitignore文件中记录的文件\n展示所有alias和configs\n展示忽略的文件\ncommit历史中显示Branch1有的，但是Branch2没有commit\n在commit log中显示GPG签名\n删除全局设置\n新建并切换到新分支上，同时这个分支没有任何commit\n展示任意分支某一文件的内容\nclone下来指定的单一分支\n忽略某个文件的改动\n忽略文件的权限变化\n以最后提交的顺序列出所有Git分支\n在commit log中查找相关内容\n把暂存区的指定file放到工作区中\n强制推送\n联系我\n\n1.10.1.3. 展示帮助信息\ngit help -g\n\n1.10.1.4. 回到远程仓库的状态\n抛弃本地所有的修改，回到远程仓库的状态。  \ngit fetch --all && git reset --hard origin/master\n\n1.10.1.5. 重设第一个commit\n也就是把所有的改动都重新放回工作区，并清空所有的commit，这样就可以重新提交第一个commit了\ngit update-ref -d HEAD\n\n1.10.1.6. 展示工作区和暂存区的不同\n输出工作区和暂存区的different(不同)。\ngit diff\n\n还可以展示本地仓库中任意两个commit之间的文件变动：\ngit diff  \n\n1.10.1.7. 展示暂存区和最近版本的不同\n输出暂存区和本地最近的版本(commit)的different(不同)。\ngit diff --cached\n\n1.10.1.8. 展示暂存区、工作区和最近版本的不同\n输出工作区、暂存区 和本地最近的版本(commit)的different(不同)。\ngit diff HEAD\n\n1.10.1.9. 快速切换分支\ngit checkout -\n\n1.10.1.10. 删除已经合并到master的分支\ngit branch --merged master | grep -v '^\\*\\|  master' | xargs -n 1 git branch -d\n\n1.10.1.11. 展示本地分支关联远程仓库的情况\ngit branch -vv\n\n1.10.1.12. 关联远程分支\n关联之后，git branch -vv就可以展示关联的远程分支名了，同时推送到远程仓库直接：git push，不需要指定远程仓库了。\ngit branch -u origin/mybranch\n\n或者在push时加上-u参数\ngit push origin/mybranch -u\n\n1.10.1.13. 列出所有远程分支\n-r参数相当于：remote\ngit branch -r\n\n1.10.1.14. 列出本地和远程分支\n-a参数相当于：all\ngit branch -a\n\n1.10.1.15. 创建并切换到本地分支\ngit checkout -b \n\n1.10.1.16. 创建并切换到远程分支\ngit checkout -b  origin/\n\n1.10.1.17. 删除本地分支\ngit branch -d \n\n1.10.1.18. 删除远程分支\ngit push origin --delete \n\n或者  \ngit push origin :\n\n1.10.1.19. 重命名本地分支\ngit branch -m \n\n1.10.1.20. 查看标签\ngit tag\n展示当前分支的最近的tag\ngit describe --tags --abbrev=0\n\n1.10.1.21. 本地创建标签\ngit tag \n\n默认tag是打在最近的一次commit上，如果需要指定commit打tag：\n$ git tag -a  -m \"v1.0 发布(描述)\" \n\n1.10.1.22. 推送标签到远程仓库\n首先要保证本地创建好了标签才可以推送标签到远程仓库：\ngit push origin \n\n一次性推送所有标签，同步到远程仓库：\ngit push origin --tags\n1.10.1.23. 删除本地标签\ngit tag -d \n\n1.10.1.24. 删除远程标签\n删除远程标签需要先删除本地标签，再执行下面的命令：\ngit push origin :refs/tags/\n\n1.10.1.25. 切回到某个标签\n一般上线之前都会打tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：\ngit checkout -b branch_name tag_name\n\n1.10.1.26. 放弃工作区的修改\ngit checkout \n\n放弃所有修改：  \ngit checkout .\n\n1.10.1.27. 恢复删除的文件\ngit rev-list -n 1 HEAD --  #得到 deleting_commit\n\ngit checkout ^ --  #回到删除文件 deleting_commit 之前的状态\n\n1.10.1.28. 回到某一个commit的状态，并重新增添一个commit\ngit revert \n\n1.10.1.29. 回到某个commit的状态，并删除后面的commit\n和revert的区别：reset命令会抹去某个commit id之后的所有commit\ngit reset   #默认就是-mixed参数。\n\ngit reset –mixed HEAD^  #回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。\n\ngit reset –soft HEAD~3  #回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可   \n\ngit reset –hard   #彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容\n\n1.10.1.30. 修改上一个commit的描述\ngit commit --amend\n\n1.10.1.31. 查看commit历史\ngit log\n\n1.10.1.32. 查看某段代码是谁写的\nblame的意思为‘责怪’，你懂的。\ngit blame \n\n1.10.1.33. 显示本地执行过git命令\n就像shell的history一样\ngit reflog\n1.10.1.34. 修改作者名\ngit commit --amend --author='Author Name '\n\n1.10.1.35. 修改远程仓库的url\ngit remote set-url origin \n\n1.10.1.36. 增加远程仓库\ngit remote add origin \n\n1.10.1.37. 列出所有远程仓库\ngit remote\n\n1.10.1.38. 查看两个星期内的改动\ngit whatchanged --since='2 weeks ago'\n\n1.10.1.39. 把A分支的某一个commit，放到B分支上\n这个过程需要cherry-pick命令，参考\ngit checkout  && git cherry-pick \n\n1.10.1.40. 给git命令起别名\n简化命令\ngit config --global alias. \n\n比如：git status 改成 git st，这样可以简化命令\n\ngit config --global alias.st status\n\n1.10.1.41. 存储当前的修改，但不用提交commit\n详解可以参考廖雪峰老师的git教程\ngit stash\n\n1.10.1.42. 保存当前状态，包括untracked的文件\nuntracked文件：新建的文件\ngit stash -u\n\n1.10.1.43. 展示所有stashes\ngit stash list\n\n1.10.1.44. 回到某个stash的状态\ngit stash apply \n\n1.10.1.45. 回到最后一个stash的状态，并删除这个stash\ngit stash pop\n\n1.10.1.46. 删除所有的stash\ngit stash clear\n\n1.10.1.47. 从stash中拿出某个文件的修改\ngit checkout  -- \n\n1.10.1.48. 展示所有tracked的文件\ngit ls-files -t\n\n1.10.1.49. 展示所有untracked的文件\ngit ls-files --others\n\n1.10.1.50. 展示所有忽略的文件\ngit ls-files --others -i --exclude-standard\n\n1.10.1.51. 强制删除untracked的文件\n可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的untracked文件。clean命令，注意两点：  \n\nclean后，删除的文件无法找回\n不会影响tracked的文件的改动，只会删除untracked的文件\n\ngit clean  -f\n\n1.10.1.52. 强制删除untracked的目录\n可以用来删除新建的目录，注意:这个命令也可以用来删除untracked的文件。详情见上一条\ngit clean  -df\n\n1.10.1.53. 展示简化的commit历史\ngit log --pretty=oneline --graph --decorate --all\n\n1.10.1.54. 把某一个分支到导出成一个文件\ngit bundle create  \n\n1.10.1.55. 从包中导入分支\n新建一个分支，分支内容就是上面git bundle create命令导出的内容\ngit clone repo.bundle  -b \n\n1.10.1.56. 执行rebase之前自动stash\ngit rebase --autostash\n\n1.10.1.57. 从远程仓库根据ID，拉下某一状态，到本地分支\ngit fetch origin pull//head:\n\n1.10.1.58. 详细展示一行中的修改\ngit diff --word-diff\n\n1.10.1.59. 清除gitignore文件中记录的文件\ngit clean -X -f\n\n1.10.1.60. 展示所有alias和configs\n注意： config分为：当前目录（local）和全局（golbal）的config，默认为当前目录的config\ngit config --local --list (当前目录)\ngit config --global --list (全局)\n\n1.10.1.61. 展示忽略的文件\ngit status --ignored\n\n1.10.1.62. commit历史中显示Branch1有的，但是Branch2没有commit\ngit log Branch1 ^Branch2\n\n1.10.1.63. 在commit log中显示GPG签名\ngit log --show-signature\n\n1.10.1.64. 删除全局设置\ngit config --global --unset \n\n1.10.1.65. 新建并切换到新分支上，同时这个分支没有任何commit\n相当于保存修改，但是重写commit历史  \ngit checkout --orphan \n\n1.10.1.66. 展示任意分支某一文件的内容\ngit show :\n\n1.10.1.67. clone下来指定的单一分支\ngit clone -b  --single-branch https://github.com/user/repo.git\n\n1.10.1.68. 忽略某个文件的改动\n关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动\ngit update-index --assume-unchanged path/to/file\n恢复 track 指定文件的改动\ngit update-index --no-assume-unchanged path/to/file\n1.10.1.69. 忽略文件的权限变化\n不再将文件的权限变化视作改动\ngit config core.fileMode false\n\n1.10.1.70. 以最后提交的顺序列出所有Git分支\n最新的放在最上面   \ngit for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/\n\n1.10.1.71. 在commit log中查找相关内容\n通过grep查找，given-text：所需要查找的字段\ngit log --all --grep=''\n\n1.10.1.72. 把暂存区的指定file放到工作区中\n不添加参数，默认是-mixed\ngit reset \n\n1.10.1.73. 强制推送\ngit push -f  \n\n1.10.1.74. 联系我\n\n博客园：削微寒\n或者直接提Pr，Issues\n\n⬆ 返回顶部\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 16:14:55\n"},"git.html":{"url":"git.html","title":"git","keywords":"","body":"1.11.1. git子树合并和拆分1.11.2. subtree目录拆分1.11.3. patch 补丁1.11.3.1. diff标准补丁1.11.3.2. git补丁Git & gitflow 命令\n1.11.1. git子树合并和拆分\n\n引入外部版本库\n# 准备库\ngit --git-dir=/path/to/util.git init --bare\ngit --git-dir=/path/to/main.git init --bare\n# 本地检出\ngit clone /path/to/util.git\ngit clone /path/to/main.git\n# 注册远程版本库，&fetch\ngit remote add util /path/to/util.git\ngit remote -v\ngit fetch util\n# 检出为分支\ngit checkout -b util-branch util/master\n\n\n子目录方式合并外部版本库\n# 合并为子目录\ngit cat-file -p util-branch\ngit checkout master\n# 更新index，检出到子目录(工作区)，保存index(暂存区)\ngit read-tree --prefix=lib util-branch\ngit checkout -- lib\ngit write-tree      # 2153518409d218609af40babededec6e8ef51616 (tree-id)\ngit cat-file -p 2153518409d218609af40babededec6e8ef51616 #\n# 以revid为parents，对树 2153518409d218609af40babededec6e8ef51616 执行提交\ngit rev-parse HEAD  # 911b1af2e0c95a2fc1306b8dea707064d5386c2e\ngit rev-parse util-branch   # 12408a149bfa78a4c2d4011f884aa2adb04f0934\necho \"subtree merge\" | \\\ngit commit-tree 2153518409d218609af40babededec6e8ef51616 \\\n-p 911b1af2e0c95a2fc1306b8dea707064d5386c2e \\\n-p 12408a149bfa78a4c2d4011f884aa2adb04f0934\n# 62ae6cc3f9280418bdb0fcf6c1e678905b1fe690 (commitid)\ngit reset 62ae6cc3f9280418bdb0fcf6c1e678905b1fe690 # 重置为master\ngit cat-file -p HEAD        # 显示parent tree\n\n利用子树合并跟踪上游改动\n# 获取远程版本库改动\ngit checkout util-branch\ngit pull\ngit checkout master\n# 使用subtree合并策略\ngit merge -s subtree util-branch\ngit merge -Xsubtree=lib util-branch     # git 1.7+\ngit log --graph --pretty=oneline\n\n子树拆分\n\n反向过程异常复杂,子树拆分的大致过程是：\n找到要导出的目录的提交历史，并反向排序。\n依次对每个提交执行下面的操作：\n找出提交中导出目录对应的 tree id。\n对该 tree id 执行 git commit-tree 。\n执行 git commit-tree 要保持提交信息还要重新设置提交的 parents。\n\n\n\n\n\n1.11.2. subtree目录拆分\n# 1. Prepare the old repo\npushd \ngit subtree split -P  -b \npopd\n#Note:  must NOT contain leading or trailing characters btoa != ./btoa/\n# 2. Create the new repo\nmkdir \npushd \ngit init\ngit pull  \n# 3. Link the new repo to Github or wherever\ngit remote add origin \ngit push origin -u master\n# 4. Cleanup, if desired\npopd # get out of \npushd \ngit rm -rf \n1.11.3. patch 补丁\n1.11.3.1. diff标准补丁\ngit diff master > patch\ngit apply patch\ngit apply --check       #查看补丁是否能够干净顺利地应用到当前分支中\n1.11.3.2. git补丁\n#   不仅有diff的信息，还有提交者，时间等等，直接可以发送的E-mail文件\nskull@walker:boost_test(master) $ git format-patch -M fbb71ef\n0001-add-boost_test-split-log-to-wiki-repo.patch\n0002-clean-mod-for-apue.2e-repo.patch\n#   -M选项表示这个patch要和那个分支比对，每次提交生成一个patch。\ngit am 0001-Fix1.patch      #git am会给出提示，git am -3进行三方合并\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-10 16:05:16\n"},"google_C++_Sytle_Guide.html":{"url":"google_C++_Sytle_Guide.html","title":"google_C++_Sytle_Guide","keywords":"","body":"1.12.1. Google C++ Style Guide1.12.2. Google-Specific_Magic)1.12.2.1. Background1.12.2.1.1. Goals of the Style Guide1.12.2.2. Header Files1.12.2.2.1. Self-contained Headers1.12.2.2.2. The #define Guard1.12.2.2.3. Forward Declarations1.12.2.2.4. Inline Functions1.12.2.2.5. Names and Order of Includes1.12.2.3. Scoping1.12.2.3.1. Namespaces1.12.2.3.2. Unnamed Namespaces and Static Variables![](./Google C++ Style1.12.2.3.3. Nonmember, Static Member, and Global Functions![](./Google C++ Style1.12.2.3.4. Local Variables1.12.2.3.5. Static and Global Variables1.12.2.4. Classes1.12.2.4.1. Doing Work in Constructors1.12.2.4.2. Implicit Conversions1.12.2.4.3. Copyable and Movable Types1.12.2.4.4. Structs vs. Classes1.12.2.4.5. Inheritance1.12.2.4.6. Multiple Inheritance1.12.2.4.7. Interfaces1.12.2.4.8. Operator Overloading1.12.2.4.9. Access Control1.12.2.4.10. Declaration Order1.12.2.5. Functions1.12.2.5.1. Parameter Ordering1.12.2.5.2. Write Short Functions1.12.2.5.3. Reference Arguments1.12.2.5.4. Function Overloading1.12.2.5.5. Default Arguments1.12.2.5.6. Trailing Return Type Syntax1.12.2.6. Google-Specific Magic1.12.2.6.1. Ownership and Smart Pointers1.12.2.6.2. cpplint1.12.2.7. Other C++ Features1.12.2.7.1. Rvalue References1.12.2.7.2. Friends1.12.2.7.3. Exceptions1.12.2.7.4. Run-Time Type Information (RTTI)![](./Google C++ Style1.12.2.7.5. Casting1.12.2.7.6. Streams1.12.2.7.7. Preincrement and Predecrement1.12.2.7.8. Use of const1.12.2.7.9. Use of constexpr1.12.2.7.10. Integer Types1.12.2.7.11. 64-bit Portability1.12.3. ifdef _LP641.12.4. define __PRIS_PREFIX \"z\"1.12.5. else1.12.6. define __PRIS_PREFIX1.12.7. endif1.12.8. define PRIdS __PRIS_PREFIX \"d\"1.12.9. define PRIxS __PRIS_PREFIX \"x\"1.12.10. define PRIuS __PRIS_PREFIX \"u\"1.12.11. define PRIXS __PRIS_PREFIX \"X\"1.12.12. define PRIoS __PRIS_PREFIX \"o\"1.12.12.1. Naming1.12.12.1.1. General Naming Rules1.12.12.1.2. File Names1.12.12.1.3. Type Names1.12.12.1.4. Variable Names1.12.12.1.5. Constant Names1.12.13. Storage_duration) for details) should be named this way. This convention is1.12.13.1. Comments1.12.13.1.1. Comment Style1.12.13.1.2. File Comments1.12.13.1.3. Class Comments1.12.13.1.4. Function Comments1.12.13.1.5. Variable Comments1.12.13.1.6. Implementation Comments1.12.13.1.7. Punctuation, Spelling and Grammar![](./Google C++ Style1.12.13.1.8. TODO Comments1.12.13.1.9. Deprecation Comments1.12.13.2. Formatting1.12.13.2.1. Line Length1.12.13.2.2. Non-ASCII Characters1.12.13.2.3. Spaces vs. Tabs1.12.13.2.4. Function Declarations and Definitions![](./Google C++ Style1.12.13.2.5. Lambda Expressions1.12.13.2.6. Function Calls1.12.13.2.7. Braced Initializer List Format1.12.13.2.8. Conditionals1.12.13.2.9. Loops and Switch Statements1.12.13.2.10. Pointer and Reference Expressions![](./Google C++ Style1.12.13.2.11. Boolean Expressions1.12.13.2.12. Return Values1.12.13.2.13. Variable and Array Initialization![](./Google C++ Style1.12.13.2.14. Preprocessor Directives1.12.13.2.15. Class Format1.12.13.2.16. Constructor Initializer Lists1.12.13.2.17. Namespace Formatting1.12.13.2.18. Horizontal Whitespace1.12.13.2.19. Vertical Whitespace1.12.13.3. Exceptions to the Rules1.12.13.3.1. Existing Non-conformant Code1.12.13.3.2. Windows Code1.12.13.4. Parting Words1.12.1. Google C++ Style Guide\nTable of Contents\nHeader Files\n\nSelf-contained Headers\nThe #define Guard\nForward Declarations\nInline Functions\nNames and Order of Includes\n\nScoping\n\nNamespaces\nUnnamed Namespaces and Static Variables\nNonmember, Static Member, and Global Functions\nLocal Variables\nStatic and Global Variables\n\nClasses\n\nDoing Work in Constructors\nImplicit Conversions\nCopyable and Movable Types\nStructs vs. Classes\nInheritance\nMultiple Inheritance\nInterfaces\nOperator Overloading\nAccess Control\nDeclaration Order\n\nFunctions\n\nParameter Ordering\nWrite Short Functions\nReference Arguments\nFunction Overloading\nDefault Arguments\nTrailing Return Type Syntax\n\n[Google-Specific Magic](https://google.github.io/styleguide/cppguide.html\n1.12.2. Google-Specific_Magic)\n\nOwnership and Smart Pointers\ncpplint\n\nOther C++ Features\n\nRvalue References\nFriends\nExceptions\nRun-Time Type Information (RTTI)\nCasting\nStreams\nPreincrement and Predecrement\nUse of const\nUse of constexpr\nInteger Types\n64-bit Portability\nPreprocessor Macros\n0 and nullptr/NULL\nsizeof\nauto\nBraced Initializer List\nLambda expressions\nTemplate metaprogramming\nBoost\nstd::hash\nC++11\nNonstandard Extensions\nAliases\n\nNaming\n\nGeneral Naming Rules\nFile Names\nType Names\nVariable Names\nConstant Names\nFunction Names\nNamespace Names\nEnumerator Names\nMacro Names\nExceptions to Naming Rules\n\nComments\n\nComment Style\nFile Comments\nClass Comments\nFunction Comments\nVariable Comments\nImplementation Comments\nPunctuation, Spelling and Grammar\nTODO Comments\nDeprecation Comments\n\nFormatting\n\nLine Length\nNon-ASCII Characters\nSpaces vs. Tabs\nFunction Declarations and Definitions\nLambda Expressions\nFunction Calls\nBraced Initializer List Format\nConditionals\nLoops and Switch Statements\nPointer and Reference Expressions\nBoolean Expressions\nReturn Values\nVariable and Array Initialization\nPreprocessor Directives\nClass Format\nConstructor Initializer Lists\nNamespace Formatting\nHorizontal Whitespace\nVertical Whitespace\n\nExceptions to the Rules\n\nExisting Non-conformant Code\nWindows Code\n\n1.12.2.1. Background\nC++ is one of the main development languages used by many of Google's open-\nsource projects. As every C++ programmer knows, the language has many powerful\nfeatures, but this power brings with it complexity, which in turn can make\ncode more bug-prone and harder to read and maintain.\nThe goal of this guide is to manage this complexity by describing in detail\nthe dos and don'ts of writing C++ code. These rules exist to keep the code\nbase manageable while still allowing coders to use C++ language features\nproductively.\nStyle, also known as readability, is what we call the conventions that\ngovern our C++ code. The term Style is a bit of a misnomer, since these\nconventions cover far more than just source file formatting.\nMost open-source projects developed by Google conform to the requirements in\nthis guide.\nNote that this guide is not a C++ tutorial: we assume that the reader is\nfamiliar with the language.\n1.12.2.1.1. Goals of the Style Guide\nWhy do we have this document?\nThere are a few core goals that we believe this guide should serve. These are\nthe fundamental whys that underlie all of the individual rules. By\nbringing these ideas to the fore, we hope to ground discussions and make it\nclearer to our broader community why the rules are in place and why particular\ndecisions have been made. If you understand what goals each rule is serving,\nit should be clearer to everyone when a rule may be waived (some can be), and\nwhat sort of argument or alternative would be necessary to change a rule in\nthe guide.\nThe goals of the style guide as we currently see them are as follows:\nStyle rules should pull their weight\nThe benefit of a style rule must be large enough to justify asking all of our engineers to remember it. The benefit is measured relative to the codebase we would get without the rule, so a rule against a very harmful practice may still have a small benefit if people are unlikely to do it anyway. This principle mostly explains the rules we don’t have, rather than the rules we do: for example, `goto` contravenes many of the following principles, but is already vanishingly rare, so the Style Guide doesn’t discuss it.\nOptimize for the reader, not the writer\nOur codebase (and most individual components submitted to it) is expected to continue for quite some time. As a result, more time will be spent reading most of our code than writing it. We explicitly choose to optimize for the experience of our average software engineer reading, maintaining, and debugging code in our codebase rather than ease when writing said code. \"Leave a trace for the reader\" is a particularly common sub-point of this principle: When something surprising or unusual is happening in a snippet of code (for example, transfer of pointer ownership), leaving textual hints for the reader at the point of use is valuable (`std::unique_ptr` demonstrates the ownership transfer unambiguously at the call site). \nBe consistent with existing code\nUsing one style consistently through our codebase lets us focus on other (more important) issues. Consistency also allows for automation: tools that format your code or adjust your `#include`s only work properly when your code is consistent with the expectations of the tooling. In many cases, rules that are attributed to \"Be Consistent\" boil down to \"Just pick one and stop worrying about it\"; the potential value of allowing flexibility on these points is outweighed by the cost of having people argue over them. \nBe consistent with the broader C++ community when appropriate\nConsistency with the way other organizations use C++ has value for the same reasons as consistency within our code base. If a feature in the C++ standard solves a problem, or if some idiom is widely known and accepted, that's an argument for using it. However, sometimes standard features and idioms are flawed, or were just designed without our codebase's needs in mind. In those cases (as described below) it's appropriate to constrain or ban standard features. In some cases we prefer a homegrown or third-party library over a library defined in the C++ Standard, either out of perceived superiority or insufficient value to transition the codebase to the standard interface.\nAvoid surprising or dangerous constructs\nC++ has features that are more surprising or dangerous than one might think at a glance. Some style guide restrictions are in place to prevent falling into these pitfalls. There is a high bar for style guide waivers on such restrictions, because waiving such rules often directly risks compromising program correctness. \nAvoid constructs that our average C++ programmer would find tricky or hard to\nmaintain\nC++ has features that may not be generally appropriate because of the complexity they introduce to the code. In widely used code, it may be more acceptable to use trickier language constructs, because any benefits of more complex implementation are multiplied widely by usage, and the cost in understanding the complexity does not need to be paid again when working with new portions of the codebase. When in doubt, waivers to rules of this type can be sought by asking your project leads. This is specifically important for our codebase because code ownership and team membership changes over time: even if everyone that works with some piece of code currently understands it, such understanding is not guaranteed to hold a few years from now.\nBe mindful of our scale\nWith a codebase of 100+ million lines and thousands of engineers, some mistakes and simplifications for one engineer can become costly for many. For instance it's particularly important to avoid polluting the global namespace: name collisions across a codebase of hundreds of millions of lines are difficult to work with and hard to avoid if everyone puts things into the global namespace.\nConcede to optimization when necessary\nPerformance optimizations can sometimes be necessary and appropriate, even when they conflict with the other principles of this document.\nThe intent of this document is to provide maximal guidance with reasonable\nrestriction. As always, common sense and good taste should prevail. By this we\nspecifically refer to the established conventions of the entire Google C++\ncommunity, not just your personal preferences or those of your team. Be\nskeptical about and reluctant to use clever or unusual constructs: the absence\nof a prohibition is not the same as a license to proceed. Use your judgment,\nand if you are unsure, please don't hesitate to ask your project leads to get\nadditional input.\n1.12.2.2. Header Files\nIn general, every .cc file should have an associated .h file. There are\nsome common exceptions, such as unittests and small .cc files containing\njust a main() function.\nCorrect use of header files can make a huge difference to the readability,\nsize and performance of your code.\nThe following rules will guide you through the various pitfalls of using\nheader files.\n1.12.2.2.1. Self-contained Headers\nHeader files should be self-contained (compile on their own) and end in .h.\nNon-header files that are meant for inclusion should end in .inc and be used\nsparingly.\nAll header files should be self-contained. Users and refactoring tools should\nnot have to adhere to special conditions to include the header. Specifically,\na header should have header\nguards\nand include all other headers it needs.\nPrefer placing the definitions for template and inline functions in the same\nfile as their declarations. The definitions of these constructs must be\nincluded into every .cc file that uses them, or the program may fail to link\nin some build configurations. If declarations and definitions are in different\nfiles, including the former should transitively include the latter. Do not\nmove these definitions to separately included header files (-inl.h); this\npractice was common in the past, but is no longer allowed.\nAs an exception, a template that is explicitly instantiated for all relevant\nsets of template arguments, or that is a private implementation detail of a\nclass, is allowed to be defined in the one and only .cc file that\ninstantiates the template.\nThere are rare cases where a file designed to be included is not self-\ncontained. These are typically intended to be included at unusual locations,\nsuch as the middle of another file. They might not use header\nguards,\nand might not include their prerequisites. Name such files with the .inc\nextension. Use sparingly, and prefer self-contained headers when possible.\n1.12.2.2.2. The #define Guard\nAll header files should have #define guards to prevent multiple inclusion.\nThe format of the symbol name should be _________H_.\nTo guarantee uniqueness, they should be based on the full path in a project's\nsource tree. For example, the file foo/src/bar/baz.h in project foo should\nhave the following guard:\n#ifndef FOO_BAR_BAZ_H_\n#define FOO_BAR_BAZ_H_\n\n...\n\n#endif  // FOO_BAR_BAZ_H_\n1.12.2.2.3. Forward Declarations\nAvoid using forward declarations where possible. Just #include the headers\nyou need.\nA \"forward declaration\" is a declaration of a class, function, or template\nwithout an associated definition.\n\nForward declarations can save compile time, as #includes force the compiler to open more files and process more input.\nForward declarations can save on unnecessary recompilation. #includes can force your code to be recompiled more often, due to unrelated changes in the header.\n\nForward declarations can hide a dependency, allowing user code to skip necessary recompilation when headers change.\n\nA forward declaration may be broken by subsequent changes to the library. Forward declarations of functions and templates can prevent the header owners from making otherwise-compatible changes to their APIs, such as widening a parameter type, adding a template parameter with a default value, or migrating to a new namespace.\nForward declaring symbols from namespace std:: yields undefined behavior.\nIt can be difficult to determine whether a forward declaration or a full #include is needed. Replacing an #include with a forward declaration can silently change the meaning of code: \n      // b.h:\n  struct B {};\n  struct D : B {};\n\n  // good_user.cc:\n  #include \"b.h\"\n  void f(B*);\n  void f(void*);\n  void test(D* x) { f(x); }  // calls f(B*)\n\n\nIf the #include was replaced with forward decls for B and D, test()\nwould call f(void*).\n\nForward declaring multiple symbols from a header can be more verbose than simply #includeing the header.\nStructuring code to enable forward declarations (e.g. using pointer members instead of object members) can make the code slower and more complex.\n\nTry to avoid forward declarations of entities defined in another project.\n\nWhen using a function declared in a header file, always #include that header.\nWhen using a class template, prefer to #include its header file.\n\nPlease see Names and Order of Includes for rules about when to #include a\nheader.\n1.12.2.2.4. Inline Functions\nDefine functions inline only when they are small, say, 10 lines or fewer.\nYou can declare functions in a way that allows the compiler to expand them\ninline rather than calling them through the usual function call mechanism.\nInlining a function can generate more efficient object code, as long as the\ninlined function is small. Feel free to inline accessors and mutators, and\nother short, performance-critical functions.\nOveruse of inlining can actually make programs slower. Depending on a\nfunction's size, inlining it can cause the code size to increase or decrease.\nInlining a very small accessor function will usually decrease code size while\ninlining a very large function can dramatically increase code size. On modern\nprocessors smaller code usually runs faster due to better use of the\ninstruction cache.\nA decent rule of thumb is to not inline a function if it is more than 10 lines\nlong. Beware of destructors, which are often longer than they appear because\nof implicit member- and base-destructor calls!\nAnother useful rule of thumb: it's typically not cost effective to inline\nfunctions with loops or switch statements (unless, in the common case, the\nloop or switch statement is never executed).\nIt is important to know that functions are not always inlined even if they are\ndeclared as such; for example, virtual and recursive functions are not\nnormally inlined. Usually recursive functions should not be inline. The main\nreason for making a virtual function inline is to place its definition in the\nclass, either for convenience or to document its behavior, e.g., for accessors\nand mutators.\n1.12.2.2.5. Names and Order of Includes\nUse standard order for readability and to avoid hidden dependencies: Related\nheader, C library, C++ library, other libraries' .h, your project's .h.\nAll of a project's header files should be listed as descendants of the\nproject's source directory without use of UNIX directory shortcuts . (the\ncurrent directory) or .. (the parent directory). For example, google-\nawesome-project/src/base/logging.h should be included as:\n#include \"base/logging.h\"\nIn dir/foo.cc or dir/foo_test.cc, whose main purpose is to implement or\ntest the stuff in dir2/foo2.h, order your includes as follows:\n\ndir2/foo2.h.\nC system files.\nC++ system files.\nOther libraries' .h files.\nYour project's .h files.\n\nWith the preferred ordering, if dir2/foo2.h omits any necessary includes,\nthe build of dir/foo.cc or dir/foo_test.cc will break. Thus, this rule\nensures that build breaks show up first for the people working on these files,\nnot for innocent people in other packages.\ndir/foo.cc and dir2/foo2.h are usually in the same directory (e.g.\nbase/basictypes_test.cc and base/basictypes.h), but may sometimes be in\ndifferent directories too.\nWithin each section the includes should be ordered alphabetically. Note that\nolder code might not conform to this rule and should be fixed when convenient.\nYou should include all the headers that define the symbols you rely upon,\nexcept in the unusual case of forward declaration. If you rely on symbols from\nbar.h, don't count on the fact that you included foo.h which (currently)\nincludes bar.h: include bar.h yourself, unless foo.h explicitly\ndemonstrates its intent to provide you the symbols of bar.h. However, any\nincludes present in the related header do not need to be included again in the\nrelated cc (i.e., foo.cc can rely on foo.h's includes).\nFor example, the includes in google-awesome-\nproject/src/foo/internal/fooserver.cc might look like this:\n#include \"foo/server/fooserver.h\"\n\n#include \n#include \n\n#include \n#include \n\n#include \"base/basictypes.h\"\n#include \"base/commandlineflags.h\"\n#include \"foo/server/bar.h\"\nSometimes, system-specific code needs conditional includes. Such code can put\nconditional includes after other includes. Of course, keep your system-\nspecific code small and localized. Example:\n#include \"foo/public/fooserver.h\"\n\n#include \"base/port.h\"  // For LANG_CXX11.\n\n#ifdef LANG_CXX11\n#include \n#endif  // LANG_CXX11\n1.12.2.3. Scoping\n1.12.2.3.1. Namespaces\nWith few exceptions, place code in a namespace. Namespaces should have unique\nnames based on the project name, and possibly its path. Do not use using-\ndirectives (e.g. using namespace foo). Do not use inline namespaces. For\nunnamed namespaces, see Unnamed Namespaces and Static Variables\n.\nNamespaces subdivide the global scope into distinct, named scopes, and so are\nuseful for preventing name collisions in the global scope.\nNamespaces provide a method for preventing name conflicts in large programs\nwhile allowing most code to use reasonably short names.\nFor example, if two different projects have a class Foo in the global scope,\nthese symbols may collide at compile time or at runtime. If each project\nplaces their code in a namespace, project1::Foo and project2::Foo are now\ndistinct symbols that do not collide, and code within each project's namespace\ncan continue to refer to Foo without the prefix.\nInline namespaces automatically place their names in the enclosing scope.\nConsider the following snippet, for example:\nnamespace X {\ninline namespace Y {\n  void foo();\n}  // namespace Y\n}  // namespace X\nThe expressions X::Y::foo() and X::foo() are interchangeable. Inline\nnamespaces are primarily intended for ABI compatibility across versions.\nNamespaces can be confusing, because they complicate the mechanics of figuring\nout what definition a name refers to.\nInline namespaces, in particular, can be confusing because names aren't\nactually restricted to the namespace where they are declared. They are only\nuseful as part of some larger versioning policy.\nIn some contexts, it's necessary to repeatedly refer to symbols by their\nfully-qualified names. For deeply-nested namespaces, this can add a lot of\nclutter.\nNamespaces should be used as follows:\n\nFollow the rules on Namespace Names. \nTerminate namespaces with comments as shown in the given examples. \nNamespaces wrap the entire source file after includes,  gflags definitions/declarations and forward declarations of classes from other namespaces.\n// In the .h file\nnamespace mynamespace {\n// All declarations are within the namespace scope.\n// Notice the lack of indentation.\nclass MyClass {\n public:\n  ...\n  void Foo();\n};\n}  // namespace mynamespace\n\n\n    // In the .cc file\nnamespace mynamespace {\n\n// Definition of functions is within scope of the namespace.\nvoid MyClass::Foo() {\n  ...\n}\n\n}  // namespace mynamespace\nMore complex .cc files might have additional details, like flags or using-\ndeclarations.\n    #include \"a.h\"\n\nDEFINE_FLAG(bool, someflag, false, \"dummy flag\");\n\nnamespace a {\n\nusing ::foo::bar;\n\n...code for a...         // Code goes against the left margin.\n\n}  // namespace a\n\nDo not declare anything in namespace std, including forward declarations of standard library classes. Declaring entities in namespace std is undefined behavior, i.e., not portable. To declare entities from the standard library, include the appropriate header file.\nYou may not use a using-directive to make all names from a namespace available.\n// Forbidden -- This pollutes the namespace.\nusing namespace foo;\n\n\n\nDo not use Namespace aliases at namespace scope in header files except in explicitly marked internal-only namespaces, because anything imported into a namespace in a header file becomes part of the public API exported by that file.\n// Shorten access to some commonly used names in .cc files.\nnamespace baz = ::foo::bar::baz;\n\n\n    // Shorten access to some commonly used names (in a .h file).\nnamespace librarian {\nnamespace impl {  // Internal, not part of the API.\nnamespace sidetable = ::pipeline_diagnostics::sidetable;\n}  // namespace impl\n\ninline void my_inline_function() {\n  // namespace alias local to a function (or method).\n  namespace baz = ::foo::bar::baz;\n  ...\n}\n}  // namespace librarian\n\nDo not use inline namespaces.\n\n1.12.2.3.2. Unnamed Namespaces and Static Variables![](./Google C++ Style\nGuide_files/link.png)\nWhen definitions in a .cc file do not need to be referenced outside that\nfile, place them in an unnamed namespace or declare them static. Do not use\neither of these constructs in .h files.\nAll declarations can be given internal linkage by placing them in unnamed\nnamespaces, and functions and variables can be given internal linkage by\ndeclaring them static. This means that anything you're declaring can't be\naccessed from another file. If a different file declares something with the\nsame name, then the two entities are completely independent.\nUse of internal linkage in .cc files is encouraged for all code that does\nnot need to be referenced elsewhere. Do not use internal linkage in .h\nfiles.\nFormat unnamed namespaces like named namespaces. In the terminating comment,\nleave the namespace name empty:\nnamespace {\n...\n}  // namespace\n1.12.2.3.3. Nonmember, Static Member, and Global Functions![](./Google C++ Style\nGuide_files/link.png)\nPrefer placing nonmember functions in a namespace; use completely global\nfunctions rarely. Prefer grouping functions with a namespace instead of using\na class as if it were a namespace. Static methods of a class should generally\nbe closely related to instances of the class or the class's static data.\nNonmember and static member functions can be useful in some situations.\nPutting nonmember functions in a namespace avoids polluting the global\nnamespace.\nNonmember and static member functions may make more sense as members of a new\nclass, especially if they access external resources or have significant\ndependencies.\nSometimes it is useful to define a function not bound to a class instance.\nSuch a function can be either a static member or a nonmember function.\nNonmember functions should not depend on external variables, and should nearly\nalways exist in a namespace. Rather than creating classes only to group static\nmember functions which do not share static data, use\nnamespaces\ninstead. For a header myproject/foo_bar.h, for example, write\nnamespace myproject {\nnamespace foo_bar {\nvoid Function1();\nvoid Function2();\n}  // namespace foo_bar\n}  // namespace myproject\ninstead of\nnamespace myproject {\nclass FooBar {\n public:\n  static void Function1();\n  static void Function2();\n};\n}  // namespace myproject\nIf you define a nonmember function and it is only needed in its .cc file,\nuse internal linkage to limit its scope.\n1.12.2.3.4. Local Variables\nPlace a function's variables in the narrowest scope possible, and initialize\nvariables in the declaration.\nC++ allows you to declare variables anywhere in a function. We encourage you\nto declare them in as local a scope as possible, and as close to the first use\nas possible. This makes it easier for the reader to find the declaration and\nsee what type the variable is and what it was initialized to. In particular,\ninitialization should be used instead of declaration and assignment, e.g.:\nint i;\ni = f();      // Bad -- initialization separate from declaration.\n\n\n\nint j = g();  // Good -- declaration has initialization.\n\n\n\nstd::vector v;\nv.push_back(1);  // Prefer initializing using brace initialization.\nv.push_back(2);\n\n\n\nstd::vector v = {1, 2};  // Good -- v starts initialized.\nVariables needed for if, while and for statements should normally be\ndeclared within those statements, so that such variables are confined to those\nscopes. E.g.:\nwhile (const char* p = strchr(str, '/')) str = p + 1;\nThere is one caveat: if the variable is an object, its constructor is invoked\nevery time it enters scope and is created, and its destructor is invoked every\ntime it goes out of scope.\n// Inefficient implementation:\nfor (int i = 0; i It may be more efficient to declare such a variable used in a loop outside\nthat loop:\nFoo f;  // My ctor and dtor get called once each.\nfor (int i = 0; i 1.12.2.3.5. Static and Global Variables\nVariables of class type with  static storage duration are forbidden: they\ncause hard-to-find bugs due to indeterminate order of construction and\ndestruction. However, such variables are allowed if they are constexpr: they\nhave no dynamic initialization or destruction.\nObjects with static storage duration, including global variables, static\nvariables, static class member variables, and function static variables, must\nbe Plain Old Data (POD): only ints, chars, floats, or pointers, or\narrays/structs of POD.\nThe order in which class constructors and initializers for static variables\nare called is only partially specified in C++ and can even change from build\nto build, which can cause bugs that are difficult to find. Therefore in\naddition to banning globals of class type, we do not allow non-local static\nvariables to be initialized with the result of a function, unless that\nfunction (such as getenv(), or getpid()) does not itself depend on any other\nglobals. However, a static POD variable within function scope may be\ninitialized with the result of a function, since its initialization order is\nwell-defined and does not occur until control passes through its declaration.\nLikewise, global and static variables are destroyed when the program\nterminates, regardless of whether the termination is by returning from\nmain() or by calling exit(). The order in which destructors are called is\ndefined to be the reverse of the order in which the constructors were called.\nSince constructor order is indeterminate, so is destructor order. For example,\nat program-end time a static variable might have been destroyed, but code\nstill running — perhaps in another thread — tries to access it and fails. Or\nthe destructor for a static string variable might be run prior to the\ndestructor for another variable that contains a reference to that string.\nOne way to alleviate the destructor problem is to terminate the program by\ncalling quick_exit() instead of exit(). The difference is that\nquick_exit() does not invoke destructors and does not invoke any handlers\nthat were registered by calling atexit(). If you have a handler that needs\nto run when a program terminates via quick_exit() (flushing logs, for\nexample), you can register it using at_quick_exit(). (If you have a handler\nthat needs to run at both exit() and quick_exit(), you need to register it\nin both places.)\nAs a result we only allow static variables to contain POD data. This rule\ncompletely disallows std::vector (use C arrays instead), or string (use\nconst char []).\nIf you need a static or global variable of a class type, consider initializing\na pointer (which will never be freed), from either your main() function or\nfrom pthread_once(). Note that this must be a raw pointer, not a \"smart\"\npointer, since the smart pointer's destructor will have the order-of-\ndestructor issue that we are trying to avoid.\n1.12.2.4. Classes\nClasses are the fundamental unit of code in C++. Naturally, we use them\nextensively. This section lists the main dos and don'ts you should follow when\nwriting a class.\n1.12.2.4.1. Doing Work in Constructors\nAvoid virtual method calls in constructors, and avoid initialization that can\nfail if you can't signal an error.\nIt is possible to perform arbitrary initialization in the body of the\nconstructor.\n\nNo need to worry about whether the class has been initialized or not.\nObjects that are fully initialized by constructor call can be const and may also be easier to use with standard containers or algorithms.\n\nIf the work calls virtual functions, these calls will not get dispatched to the subclass implementations. Future modification to your class can quietly introduce this problem even if your class is not currently subclassed, causing much confusion.\n\nThere is no easy way for constructors to signal errors, short of crashing the program (not always appropriate) or using exceptions (which are forbidden).\nIf the work fails, we now have an object whose initialization code failed, so it may be an unusual state requiring a bool IsValid() state checking mechanism (or similar) which is easy to forget to call.\nYou cannot take the address of a constructor, so whatever work is done in the constructor cannot easily be handed off to, for example, another thread.\n\nConstructors should never call virtual functions. If appropriate for your code\n, terminating the program may be an appropriate error handling response.\nOtherwise, consider a factory function or Init() method. Avoid Init()\nmethods on objects with no other states that affect which public methods may\nbe called (semi-constructed objects of this form are particularly hard to work\nwith correctly).\n1.12.2.4.2. Implicit Conversions\nDo not define implicit conversions. Use the explicit keyword for conversion\noperators and single-argument constructors.\nImplicit conversions allow an object of one type (called the source type) to\nbe used where a different type (called the destination type) is expected, such\nas when passing an int argument to a function that takes a double\nparameter.\nIn addition to the implicit conversions defined by the language, users can\ndefine their own, by adding appropriate members to the class definition of the\nsource or destination type. An implicit conversion in the source type is\ndefined by a type conversion operator named after the destination type (e.g.\noperator bool()). An implicit conversion in the destination type is defined\nby a constructor that can take the source type as its only argument (or only\nargument with no default value).\nThe explicit keyword can be applied to a constructor or (since C++11) a\nconversion operator, to ensure that it can only be used when the destination\ntype is explicit at the point of use, e.g. with a cast. This applies not only\nto implicit conversions, but to C++11's list initialization syntax:\nclass Foo {\n  explicit Foo(int x, double y);\n  ...\n};\n\nvoid Func(Foo f);\n\n\n\nFunc({42, 3.14});  // Error\nThis kind of code isn't technically an implicit conversion, but the language\ntreats it as one as far as explicit is concerned.\n\nImplicit conversions can make a type more usable and expressive by eliminating the need to explicitly name a type when it's obvious.\nImplicit conversions can be a simpler alternative to overloading.\nList initialization syntax is a concise and expressive way of initializing objects.\n\nImplicit conversions can hide type-mismatch bugs, where the destination type does not match the user's expectation, or the user is unaware that any conversion will take place.\n\nImplicit conversions can make code harder to read, particularly in the presence of overloading, by making it less obvious what code is actually getting called.\nConstructors that take a single argument may accidentally be usable as implicit type conversions, even if they are not intended to do so.\nWhen a single-argument constructor is not marked explicit, there's no reliable way to tell whether it's intended to define an implicit conversion, or the author simply forgot to mark it.\nIt's not always clear which type should provide the conversion, and if they both do, the code becomes ambiguous.\nList initialization can suffer from the same problems if the destination type is implicit, particularly if the list has only a single element.\n\nType conversion operators, and constructors that are callable with a single\nargument, must be marked explicit in the class definition. As an exception,\ncopy and move constructors should not be explicit, since they do not perform\ntype conversion. Implicit conversions can sometimes be necessary and\nappropriate for types that are designed to transparently wrap other types. In\nthat case, contact your project leads to request a waiver of this rule.\nConstructors that cannot be called with a single argument should usually omit\nexplicit. Constructors that take a single std::initializer_list parameter\nshould also omit explicit, in order to support copy-initialization (e.g.\nMyType m = {1, 2};).\n1.12.2.4.3. Copyable and Movable Types\nSupport copying and/or moving if these operations are clear and meaningful for\nyour type. Otherwise, disable the implicitly generated special functions that\nperform copies and moves.\nA copyable type allows its objects to be initialized or assigned from any\nother object of the same type, without changing the value of the source. For\nuser-defined types, the copy behavior is defined by the copy constructor and\nthe copy-assignment operator. string is an example of a copyable type.\nA movable type is one that can be initialized and assigned from temporaries\n(all copyable types are therefore movable). std::unique_ptr is an\nexample of a movable but not copyable type. For user-defined types, the move\nbehavior is defined by the move constructor and the move-assignment operator.\nThe copy/move constructors can be implicitly invoked by the compiler in some\nsituations, e.g. when passing objects by value.\nObjects of copyable and movable types can be passed and returned by value,\nwhich makes APIs simpler, safer, and more general. Unlike when passing objects\nby pointer or reference, there's no risk of confusion over ownership,\nlifetime, mutability, and similar issues, and no need to specify them in the\ncontract. It also prevents non-local interactions between the client and the\nimplementation, which makes them easier to understand, maintain, and optimize\nby the compiler. Further, such objects can be used with generic APIs that\nrequire pass-by-value, such as most containers, and they allow for additional\nflexibility in e.g., type composition.\nCopy/move constructors and assignment operators are usually easier to define\ncorrectly than alternatives like Clone(), CopyFrom() or Swap(), because\nthey can be generated by the compiler, either implicitly or with = default.\nThey are concise, and ensure that all data members are copied. Copy and move\nconstructors are also generally more efficient, because they don't require\nheap allocation or separate initialization and assignment steps, and they're\neligible for optimizations such as  copy\nelision.\nMove operations allow the implicit and efficient transfer of resources out of\nrvalue objects. This allows a plainer coding style in some cases.\nSome types do not need to be copyable, and providing copy operations for such\ntypes can be confusing, nonsensical, or outright incorrect. Types representing\nsingleton objects (Registerer), objects tied to a specific scope\n(Cleanup), or closely coupled to object identity (Mutex) cannot be copied\nmeaningfully. Copy operations for base class types that are to be used\npolymorphically are hazardous, because use of them can lead to object\nslicing. Defaulted or\ncarelessly-implemented copy operations can be incorrect, and the resulting\nbugs can be confusing and difficult to diagnose.\nCopy constructors are invoked implicitly, which makes the invocation easy to\nmiss. This may cause confusion for programmers used to languages where pass-\nby-reference is conventional or mandatory. It may also encourage excessive\ncopying, which can cause performance problems.\nProvide the copy and move operations if their meaning is clear to a casual\nuser and the copying/moving does not incur unexpected costs. If you define a\ncopy or move constructor, define the corresponding assignment operator, and\nvice-versa. If your type is copyable, do not define move operations unless\nthey are significantly more efficient than the corresponding copy operations.\nIf your type is not copyable, but the correctness of a move is obvious to\nusers of the type, you may make the type move-only by defining both of the\nmove operations.\nIf your type provides copy operations, it is recommended that you design your\nclass so that the default implementation of those operations is correct.\nRemember to review the correctness of any defaulted operations as you would\nany other code, and to document that your class is copyable and/or cheaply\nmovable if that's an API guarantee.\nclass Foo {\n public:\n  Foo(Foo&& other) : field_(other.field) {}\n  // Bad, defines only move constructor, but not operator=.\n\n private:\n  Field field_;\n};\nDue to the risk of slicing, avoid providing an assignment operator or public\ncopy/move constructor for a class that's intended to be derived from (and\navoid deriving from a class with such members). If your base class needs to be\ncopyable, provide a public virtual Clone() method, and a protected copy\nconstructor that derived classes can use to implement it.\nIf you do not want to support copy/move operations on your type, explicitly\ndisable them using = delete in the public: section:\n// MyClass is neither copyable nor movable.\nMyClass(const MyClass&) = delete;\nMyClass& operator=(const MyClass&) = delete;\n1.12.2.4.4. Structs vs. Classes\nUse a struct only for passive objects that carry data; everything else is a\nclass.\nThe struct and class keywords behave almost identically in C++. We add our\nown semantic meanings to each keyword, so you should use the appropriate\nkeyword for the data-type you're defining.\nstructs should be used for passive objects that carry data, and may have\nassociated constants, but lack any functionality other than access/setting the\ndata members. The accessing/setting of fields is done by directly accessing\nthe fields rather than through method invocations. Methods should not provide\nbehavior but should only be used to set up the data members, e.g.,\nconstructor, destructor, Initialize(), Reset(), Validate().\nIf more functionality is required, a class is more appropriate. If in doubt,\nmake it a class.\nFor consistency with STL, you can use struct instead of class for functors\nand traits.\nNote that member variables in structs and classes have different naming\nrules.\n1.12.2.4.5. Inheritance\nComposition is often more appropriate than inheritance. When using\ninheritance, make it public.\nWhen a sub-class inherits from a base class, it includes the definitions of\nall the data and operations that the parent base class defines. In practice,\ninheritance is used in two major ways in C++: implementation inheritance, in\nwhich actual code is inherited by the child, and interface\ninheritance, in\nwhich only method names are inherited.\nImplementation inheritance reduces code size by re-using the base class code\nas it specializes an existing type. Because inheritance is a compile-time\ndeclaration, you and the compiler can understand the operation and detect\nerrors. Interface inheritance can be used to programmatically enforce that a\nclass expose a particular API. Again, the compiler can detect errors, in this\ncase, when a class does not define a necessary method of the API.\nFor implementation inheritance, because the code implementing a sub-class is\nspread between the base and the sub-class, it can be more difficult to\nunderstand an implementation. The sub-class cannot override functions that are\nnot virtual, so the sub-class cannot change implementation. The base class may\nalso define some data members, so that specifies physical layout of the base\nclass.\nAll inheritance should be public. If you want to do private inheritance, you\nshould be including an instance of the base class as a member instead.\nDo not overuse implementation inheritance. Composition is often more\nappropriate. Try to restrict use of inheritance to the \"is-a\" case: Bar\nsubclasses Foo if it can reasonably be said that Bar \"is a kind of\" Foo.\nMake your destructor virtual if necessary. If your class has virtual\nmethods, its destructor should be virtual.\nLimit the use of protected to those member functions that might need to be\naccessed from subclasses. Note that data members should be\nprivate.\nExplicitly annotate overrides of virtual functions or virtual destructors with\nan override or (less frequently) final specifier. Older (pre-C++11) code\nwill use the virtual keyword as an inferior alternative annotation. For\nclarity, use exactly one of override, final, or virtual when declaring\nan override. Rationale: A function or destructor marked override or final\nthat is not an override of a base class virtual function will not compile, and\nthis helps catch common errors. The specifiers serve as documentation; if no\nspecifier is present, the reader has to check all ancestors of the class in\nquestion to determine if the function or destructor is virtual or not.\n1.12.2.4.6. Multiple Inheritance\nOnly very rarely is multiple implementation inheritance actually useful. We\nallow multiple inheritance only when at most one of the base classes has an\nimplementation; all other base classes must be pure\ninterface\nclasses tagged with the Interface suffix.\nMultiple inheritance allows a sub-class to have more than one base class. We\ndistinguish between base classes that are pure interfaces and those that\nhave an implementation.\nMultiple implementation inheritance may let you re-use even more code than\nsingle inheritance (see\nInheritance).\nOnly very rarely is multiple implementation inheritance actually useful.\nWhen multiple implementation inheritance seems like the solution, you can\nusually find a different, more explicit, and cleaner solution.\nMultiple inheritance is allowed only when all superclasses, with the possible\nexception of the first one, are pure\ninterfaces. In\norder to ensure that they remain pure interfaces, they must end with the\nInterface suffix.\nThere is an\nexception to\nthis rule on Windows.\n1.12.2.4.7. Interfaces\nClasses that satisfy certain conditions are allowed, but not required, to end\nwith an Interface suffix.\nA class is a pure interface if it meets the following requirements:\n\nIt has only public pure virtual (\"= 0\") methods and static methods (but see below for destructor).\nIt may not have non-static data members.\nIt need not have any constructors defined. If a constructor is provided, it must take no arguments and it must be protected.\nIf it is a subclass, it may only be derived from classes that satisfy these conditions and are tagged with the Interface suffix.\n\nAn interface class can never be directly instantiated because of the pure\nvirtual method(s) it declares. To make sure all implementations of the\ninterface can be destroyed correctly, the interface must also declare a\nvirtual destructor (in an exception to the first rule, this should not be\npure). See Stroustrup, The C++ Programming Language, 3rd edition, section 12.4\nfor details.\nTagging a class with the Interface suffix lets others know that they must\nnot add implemented methods or non static data members. This is particularly\nimportant in the case of multiple inheritance. Additionally, the interface concept\nis already well-understood by Java programmers.\nThe Interface suffix lengthens the class name, which can make it harder to\nread and understand. Also, the interface property may be considered an\nimplementation detail that shouldn't be exposed to clients.\nA class may end with Interface only if it meets the above requirements. We\ndo not require the converse, however: classes that meet the above requirements\nare not required to end with Interface.\n1.12.2.4.8. Operator Overloading\nOverload operators judiciously. Do not create user-defined literals.\nC++ permits user code to declare overloaded versions of the built-in\noperators using the\noperator keyword, so long as one of the parameters is a user-defined type.\nThe operator keyword also permits user code to define new kinds of literals\nusing operator\"\", and to define type-conversion functions such as operator\nbool().\nOperator overloading can make code more concise and intuitive by enabling\nuser-defined types to behave the same as built-in types. Overloaded operators\nare the idiomatic names for certain operations (e.g. ==, , =, and\n), and adhering to those conventions can make user-defined types more\nreadable and enable them to interoperate with libraries that expect those\nnames.\nUser-defined literals are a very concise notation for creating objects of\nuser-defined types.\n\nProviding a correct, consistent, and unsurprising set of operator overloads requires some care, and failure to do so can lead to confusion and bugs.\nOveruse of operators can lead to obfuscated code, particularly if the overloaded operator's semantics don't follow convention.\nThe hazards of function overloading apply just as much to operator overloading, if not more so.\nOperator overloads can fool our intuition into thinking that expensive operations are cheap, built-in operations.\nFinding the call sites for overloaded operators may require a search tool that's aware of C++ syntax, rather than e.g. grep.\nIf you get the argument type of an overloaded operator wrong, you may get a different overload rather than a compiler error. For example, foo  may do one thing, while &foo  does something totally different.\nCertain operator overloads are inherently hazardous. Overloading unary & can cause the same code to have different meanings depending on whether the overload declaration is visible. Overloads of &&, ||, and , (comma) cannot match the evaluation-order semantics of the built-in operators.\nOperators are often defined outside the class, so there's a risk of different files introducing different definitions of the same operator. If both definitions are linked into the same binary, this results in undefined behavior, which can manifest as subtle run-time bugs.\nUser-defined literals allow the creation of new syntactic forms that are unfamiliar even to experienced C++ programmers.\n\nDefine overloaded operators only if their meaning is obvious, unsurprising,\nand consistent with the corresponding built-in operators. For example, use |\nas a bitwise- or logical-or, not as a shell-style pipe.\nDefine operators only on your own types. More precisely, define them in the\nsame headers, .cc files, and namespaces as the types they operate on. That\nway, the operators are available wherever the type is, minimizing the risk of\nmultiple definitions. If possible, avoid defining operators as templates,\nbecause they must satisfy this rule for any possible template arguments. If\nyou define an operator, also define any related operators that make sense, and\nmake sure they are defined consistently. For example, if you overload ,\noverload all the comparison operators, and make sure  and > never return\ntrue for the same arguments.\nPrefer to define non-modifying binary operators as non-member functions. If a\nbinary operator is defined as a class member, implicit conversions will apply\nto the right-hand argument, but not the left-hand one. It will confuse your\nusers if a  compiles but b  doesn't.\nDon't go out of your way to avoid defining operator overloads. For example,\nprefer to define ==, =, and , rather than Equals(), CopyFrom(),\nand PrintTo(). Conversely, don't define operator overloads just because\nother libraries expect them. For example, if your type doesn't have a natural\nordering, but you want to store it in a std::set, use a custom comparator\nrather than overloading .\nDo not overload &&, ||, , (comma), or unary &. Do not overload\noperator\"\", i.e. do not introduce user-defined literals.\nType conversion operators are covered in the section on [implicit conversions]\n(https://google.github.io/styleguide/cppguide.html#Implicit_Conversions). The\n= operator is covered in the section on copy constructors. Overloading  for use\nwith streams is covered in the section on\nstreams. See also\nthe rules on function overloading, which apply to operator overloading as well.\n1.12.2.4.9. Access Control\nMake data members private, unless they are static const (and follow the \nnaming convention for\nconstants).\nFor technical reasons, we allow data members of a test fixture class to be\nprotected when using Google Test).\n1.12.2.4.10. Declaration Order\nGroup similar declarations together, placing public parts earlier.\nA class definition should usually start with a public: section, followed by\nprotected:, then private:. Omit sections that would be empty.\nWithin each section, generally prefer grouping similar kinds of declarations\ntogether, and generally prefer the following order: types (including\ntypedef, using, and nested structs and classes), constants, factory\nfunctions, constructors, assignment operators, destructor, all other methods,\ndata members.\nDo not put large method definitions inline in the class definition. Usually,\nonly trivial or performance-critical, and very short, methods may be defined\ninline. See Inline\nFunctions\nfor more details.\n1.12.2.5. Functions\n1.12.2.5.1. Parameter Ordering\nWhen defining a function, parameter order is: inputs, then outputs.\nParameters to C/C++ functions are either input to the function, output from\nthe function, or both. Input parameters are usually values or const\nreferences, while output and input/output parameters will be pointers to\nnon-const. When ordering function parameters, put all input-only parameters\nbefore any output parameters. In particular, do not add new parameters to the\nend of the function just because they are new; place new input-only parameters\nbefore the output parameters.\nThis is not a hard-and-fast rule. Parameters that are both input and output\n(often classes/structs) muddy the waters, and, as always, consistency with\nrelated functions may require you to bend the rule.\n1.12.2.5.2. Write Short Functions\nPrefer small and focused functions.\nWe recognize that long functions are sometimes appropriate, so no hard limit\nis placed on functions length. If a function exceeds about 40 lines, think\nabout whether it can be broken up without harming the structure of the\nprogram.\nEven if your long function works perfectly now, someone modifying it in a few\nmonths may add new behavior. This could result in bugs that are hard to find.\nKeeping your functions short and simple makes it easier for other people to\nread and modify your code.\nYou could find long and complicated functions when working with some code. Do\nnot be intimidated by modifying existing code: if working with such a function\nproves to be difficult, you find that errors are hard to debug, or you want to\nuse a piece of it in several different contexts, consider breaking up the\nfunction into smaller and more manageable pieces.\n1.12.2.5.3. Reference Arguments\nAll parameters passed by reference must be labeled const.\nIn C, if a function needs to modify a variable, the parameter must use a\npointer, eg int foo(int *pval). In C++, the function can alternatively\ndeclare a reference parameter: int foo(int &val).\nDefining a parameter as reference avoids ugly code like (*pval)++. Necessary\nfor some applications like copy constructors. Makes it clear, unlike with\npointers, that a null pointer is not a possible value.\nReferences can be confusing, as they have value syntax but pointer semantics.\nWithin function parameter lists all references must be const:\nvoid Foo(const string &in, string *out);\nIn fact it is a very strong convention in Google code that input arguments are\nvalues or const references while output arguments are pointers. Input\nparameters may be const pointers, but we never allow non-const reference\nparameters except when required by convention, e.g., swap().\nHowever, there are some instances where using const T* is preferable to\nconst T& for input parameters. For example:\n\nYou want to pass in a null pointer.\nThe function saves a pointer or reference to the input.\n\nRemember that most of the time input parameters are going to be specified as\nconst T&. Using const T* instead communicates to the reader that the input\nis somehow treated differently. So if you choose const T* rather than const\nT&, do so for a concrete reason; otherwise it will likely confuse readers by\nmaking them look for an explanation that doesn't exist.\n1.12.2.5.4. Function Overloading\nUse overloaded functions (including constructors) only if a reader looking at\na call site can get a good idea of what is happening without having to first\nfigure out exactly which overload is being called.\nYou may write a function that takes a const string& and overload it with\nanother that takes const char*.\nclass MyClass {\n public:\n  void Analyze(const string &text);\n  void Analyze(const char *text, size_t textlen);\n};\nOverloading can make code more intuitive by allowing an identically-named\nfunction to take different arguments. It may be necessary for templatized\ncode, and it can be convenient for Visitors.\nIf a function is overloaded by the argument types alone, a reader may have to\nunderstand C++'s complex matching rules in order to tell what's going on. Also\nmany people are confused by the semantics of inheritance if a derived class\noverrides only some of the variants of a function.\nIf you want to overload a function, consider qualifying the name with some\ninformation about the arguments, e.g., AppendString(), AppendInt() rather\nthan just Append(). If you are overloading a function to support variable\nnumber of arguments of the same type, consider making it take a std::vector\nso that the user can use an initializer list\n\nto specify the arguments.\n1.12.2.5.5. Default Arguments\nDefault arguments are allowed on non-virtual functions when the default is\nguaranteed to always have the same value. Follow the same restrictions as for\nfunction overloading, and prefer overloaded functions if the readability gained\nwith default arguments doesn't outweigh the downsides below.\nOften you have a function that uses default values, but occasionally you want\nto override the defaults. Default parameters allow an easy way to do this\nwithout having to define many functions for the rare exceptions. Compared to\noverloading the function, default arguments have a cleaner syntax, with less\nboilerplate and a clearer distinction between 'required' and 'optional'\narguments.\nDefaulted arguments are another way to achieve the semantics of overloaded\nfunctions, so all the reasons not to overload functions apply.\nThe defaults for arguments in a virtual function call are determined by the\nstatic type of the target object, and there's no guarantee that all overrides\nof a given function declare the same defaults.\nDefault parameters are re-evaluated at each call site, which can bloat the\ngenerated code. Readers may also expect the default's value to be fixed at the\ndeclaration instead of varying at each call.\nFunction pointers are confusing in the presence of default arguments, since\nthe function signature often doesn't match the call signature. Adding function\noverloads avoids these problems.\nDefault arguments are banned on virtual functions, where they don't work\nproperly, and in cases where the specified default might not evaluate to the\nsame value depending on when it was evaluated. (For example, don't write void\nf(int n = counter++);.)\nIn some other cases, default arguments can improve the readability of their\nfunction declarations enough to overcome the downsides above, so they are\nallowed. When in doubt, use overloads.\n1.12.2.5.6. Trailing Return Type Syntax\nUse trailing return types only where using the ordinary syntax (leading return\ntypes) is impractical or much less readable.\nC++ allows two different forms of function declarations. In the older form,\nthe return type appears before the function name. For example:\nint foo(int x);\nThe new form, introduced in C++11, uses the auto keyword before the function\nname and a trailing return type after the argument list. For example, the\ndeclaration above could equivalently be written:\nauto foo(int x) -> int;\nThe trailing return type is in the function's scope. This doesn't make a\ndifference for a simple case like int but it matters for more complicated\ncases, like types declared in class scope or types written in terms of the\nfunction parameters.\nTrailing return types are the only way to explicitly specify the return type\nof a lambda expression. In some cases the compiler is able to deduce a lambda's\nreturn type, but not in all cases. Even when the compiler can deduce it\nautomatically, sometimes specifying it explicitly would be clearer for\nreaders.\nSometimes it's easier and more readable to specify a return type after the\nfunction's parameter list has already appeared. This is particularly true when\nthe return type depends on template parameters. For example:\ntemplate  auto add(T t, U u) -> decltype(t + u);\nversus\ntemplate  decltype(declval() + declval()) add(T t, U u);\nTrailing return type syntax is relatively new and it has no analogue in\nC++-like languages like C and Java, so some readers may find it unfamiliar.\nExisting code bases have an enormous number of function declarations that\naren't going to get changed to use the new syntax, so the realistic choices\nare using the old syntax only or using a mixture of the two. Using a single\nversion is better for uniformity of style.\nIn most cases, continue to use the older style of function declaration where\nthe return type goes before the function name. Use the new trailing-return-\ntype form only in cases where it's required (such as lambdas) or where, by\nputting the type after the function's parameter list, it allows you to write\nthe type in a much more readable way. The latter case should be rare; it's\nmostly an issue in fairly complicated template code, which is discouraged in\nmost cases.\n1.12.2.6. Google-Specific Magic\nThere are various tricks and utilities that we use to make C++ code more\nrobust, and various ways we use C++ that may differ from what you see\nelsewhere.\n1.12.2.6.1. Ownership and Smart Pointers\nPrefer to have single, fixed owners for dynamically allocated objects. Prefer\nto transfer ownership with smart pointers.\n\"Ownership\" is a bookkeeping technique for managing dynamically allocated\nmemory (and other resources). The owner of a dynamically allocated object is\nan object or function that is responsible for ensuring that it is deleted when\nno longer needed. Ownership can sometimes be shared, in which case the last\nowner is typically responsible for deleting it. Even when ownership is not\nshared, it can be transferred from one piece of code to another.\n\"Smart\" pointers are classes that act like pointers, e.g. by overloading the\n* and -> operators. Some smart pointer types can be used to automate\nownership bookkeeping, to ensure these responsibilities are met. \nstd::unique_ptr is a\nsmart pointer type introduced in C++11, which expresses exclusive ownership of\na dynamically allocated object; the object is deleted when the\nstd::unique_ptr goes out of scope. It cannot be copied, but can be moved\nto represent ownership transfer. \nstd::shared_ptr is a\nsmart pointer type that expresses shared ownership of a dynamically allocated\nobject. std::shared_ptrs can be copied; ownership of the object is shared\namong all copies, and the object is deleted when the last std::shared_ptr is\ndestroyed.\n\nIt's virtually impossible to manage dynamically allocated memory without some sort of ownership logic.\nTransferring ownership of an object can be cheaper than copying it (if copying it is even possible).\nTransferring ownership can be simpler than 'borrowing' a pointer or reference, because it reduces the need to coordinate the lifetime of the object between the two users.\nSmart pointers can improve readability by making ownership logic explicit, self-documenting, and unambiguous.\nSmart pointers can eliminate manual ownership bookkeeping, simplifying the code and ruling out large classes of errors.\nFor const objects, shared ownership can be a simple and efficient alternative to deep copying.\n\nOwnership must be represented and transferred via pointers (whether smart or plain). Pointer semantics are more complicated than value semantics, especially in APIs: you have to worry not just about ownership, but also aliasing, lifetime, and mutability, among other issues.\n\nThe performance costs of value semantics are often overestimated, so the performance benefits of ownership transfer might not justify the readability and complexity costs.\nAPIs that transfer ownership force their clients into a single memory management model.\nCode using smart pointers is less explicit about where the resource releases take place.\nstd::unique_ptr expresses ownership transfer using C++11's move semantics, which are relatively new and may confuse some programmers.\nShared ownership can be a tempting alternative to careful ownership design, obfuscating the design of a system.\nShared ownership requires explicit bookkeeping at run-time, which can be costly.\nIn some cases (e.g. cyclic references), objects with shared ownership may never be deleted.\nSmart pointers are not perfect substitutes for plain pointers.\n\nIf dynamic allocation is necessary, prefer to keep ownership with the code\nthat allocated it. If other code needs access to the object, consider passing\nit a copy, or passing a pointer or reference without transferring ownership.\nPrefer to use std::unique_ptr to make ownership transfer explicit. For\nexample:\nstd::unique_ptr FooFactory();\nvoid FooConsumer(std::unique_ptr ptr);\nDo not design your code to use shared ownership without a very good reason.\nOne such reason is to avoid expensive copy operations, but you should only do\nthis if the performance benefits are significant, and the underlying object is\nimmutable (i.e. std::shared_ptr). If you do use shared ownership,\nprefer to use std::shared_ptr.\nNever use std::auto_ptr. Instead, use std::unique_ptr.\n1.12.2.6.2. cpplint\nUse cpplint.py to detect style errors.\ncpplint.py is a tool that reads a source file and identifies many style\nerrors. It is not perfect, and has both false positives and false negatives,\nbut it is still a valuable tool. False positives can be ignored by putting //\nNOLINT at the end of the line or // NOLINTNEXTLINE in the previous line.\nSome projects have instructions on how to run cpplint.py from their project\ntools. If the project you are contributing to does not, you can download \ncpplint.py separately.\n1.12.2.7. Other C++ Features\n1.12.2.7.1. Rvalue References\nUse rvalue references only to define move constructors and move assignment\noperators, or for perfect forwarding.\nRvalue references are a type of reference that can only bind to temporary\nobjects. The syntax is similar to traditional reference syntax. For example,\nvoid f(string&& s); declares a function whose argument is an rvalue\nreference to a string.\n\nDefining a move constructor (a constructor taking an rvalue reference to the class type) makes it possible to move a value instead of copying it. If v1 is a std::vector, for example, then auto v2(std::move(v1)) will probably just result in some simple pointer manipulation instead of copying a large amount of data. In some cases this can result in a major performance improvement.\nRvalue references make it possible to write a generic function wrapper that forwards its arguments to another function, and works whether or not its arguments are temporary objects. (This is sometimes called \"perfect forwarding\".)\nRvalue references make it possible to implement types that are movable but not copyable, which can be useful for types that have no sensible definition of copying but where you might still want to pass them as function arguments, put them in containers, etc.\nstd::move is necessary to make effective use of some standard-library types, such as std::unique_ptr.\n\nRvalue references are a relatively new feature (introduced as part of C++11), and not yet widely understood. Rules like reference collapsing, and automatic synthesis of move constructors, are complicated.\n\n\nUse rvalue references only to define move constructors and move assignment\noperators (as described in Copyable and Movable Types) and, in conjunction with\n[std::forward](http://en.cppreference.com/w/cpp/utility/forward), to support\nperfect forwarding. You may use std::move to express moving a value from one\nobject to another rather than copying it.\n1.12.2.7.2. Friends\nWe allow use of friend classes and functions, within reason.\nFriends should usually be defined in the same file so that the reader does not\nhave to look in another file to find uses of the private members of a class. A\ncommon use of friend is to have a FooBuilder class be a friend of Foo so\nthat it can construct the inner state of Foo correctly, without exposing\nthis state to the world. In some cases it may be useful to make a unittest\nclass a friend of the class it tests.\nFriends extend, but do not break, the encapsulation boundary of a class. In\nsome cases this is better than making a member public when you want to give\nonly one other class access to it. However, most classes should interact with\nother classes solely through their public members.\n1.12.2.7.3. Exceptions\nWe do not use C++ exceptions.\n\nExceptions allow higher levels of an application to decide how to handle \"can't happen\" failures in deeply nested functions, without the obscuring and error-prone bookkeeping of error codes.\nExceptions are used by most other modern languages. Using them in C++ would make it more consistent with Python, Java, and the C++ that others are familiar with.\nSome third-party C++ libraries use exceptions, and turning them off internally makes it harder to integrate with those libraries.\nExceptions are the only way for a constructor to fail. We can simulate this with a factory function or an Init() method, but these require heap allocation or a new \"invalid\" state, respectively.\nExceptions are really handy in testing frameworks.\n\nWhen you add a throw statement to an existing function, you must examine all of its transitive callers. Either they must make at least the basic exception safety guarantee, or they must never catch the exception and be happy with the program terminating as a result. For instance, if f() calls g() calls h(), and h throws an exception that f catches, g has to be careful or it may not clean up properly.\n\nMore generally, exceptions make the control flow of programs difficult to evaluate by looking at code: functions may return in places you don't expect. This causes maintainability and debugging difficulties. You can minimize this cost via some rules on how and where exceptions can be used, but at the cost of more that a developer needs to know and understand.\nException safety requires both RAII and different coding practices. Lots of supporting machinery is needed to make writing correct exception-safe code easy. Further, to avoid requiring readers to understand the entire call graph, exception-safe code must isolate logic that writes to persistent state into a \"commit\" phase. This will have both benefits and costs (perhaps where you're forced to obfuscate code to isolate the commit). Allowing exceptions would force us to always pay those costs even when they're not worth it.\nTurning on exceptions adds data to each binary produced, increasing compile time (probably slightly) and possibly increasing address space pressure. \nThe availability of exceptions may encourage developers to throw them when they are not appropriate or recover from them when it's not safe to do so. For example, invalid user input should not cause exceptions to be thrown. We would need to make the style guide even longer to document these restrictions!\n\nOn their face, the benefits of using exceptions outweigh the costs, especially\nin new projects. However, for existing code, the introduction of exceptions\nhas implications on all dependent code. If exceptions can be propagated beyond\na new project, it also becomes problematic to integrate the new project into\nexisting exception-free code. Because most existing C++ code at Google is not\nprepared to deal with exceptions, it is comparatively difficult to adopt new\ncode that generates exceptions.\nGiven that Google's existing code is not exception-tolerant, the costs of\nusing exceptions are somewhat greater than the costs in a new project. The\nconversion process would be slow and error-prone. We don't believe that the\navailable alternatives to exceptions, such as error codes and assertions,\nintroduce a significant burden.\nOur advice against using exceptions is not predicated on philosophical or\nmoral grounds, but practical ones. Because we'd like to use our open-source\nprojects at Google and it's difficult to do so if those projects use\nexceptions, we need to advise against exceptions in Google open-source\nprojects as well. Things would probably be different if we had to do it all\nover again from scratch.\nThis prohibition also applies to the exception-related features added in\nC++11, such as noexcept, std::exception_ptr, and std::nested_exception.\nThere is an\nexception to\nthis rule (no pun intended) for Windows code.\n1.12.2.7.4. Run-Time Type Information (RTTI)![](./Google C++ Style\nGuide_files/link.png)\nAvoid using Run Time Type Information (RTTI).\nRTTI allows a programmer to query the C++ class of an object at run time. This\nis done by use of typeid or dynamic_cast.\nQuerying the type of an object at run-time frequently means a design problem.\nNeeding to know the type of an object at runtime is often an indication that\nthe design of your class hierarchy is flawed.\nUndisciplined use of RTTI makes code hard to maintain. It can lead to type-\nbased decision trees or switch statements scattered throughout the code, all\nof which must be examined when making further changes.\nThe standard alternatives to RTTI (described below) require modification or\nredesign of the class hierarchy in question. Sometimes such modifications are\ninfeasible or undesirable, particularly in widely-used or mature code.\nRTTI can be useful in some unit tests. For example, it is useful in tests of\nfactory classes where the test has to verify that a newly created object has\nthe expected dynamic type. It is also useful in managing the relationship\nbetween objects and their mocks.\nRTTI is useful when considering multiple abstract objects. Consider\nbool Base::Equal(Base* other) = 0;\nbool Derived::Equal(Base* other) {\n  Derived* that = dynamic_cast(other);\n  if (that == NULL)\n    return false;\n  ...\n}\nRTTI has legitimate uses but is prone to abuse, so you must be careful when\nusing it. You may use it freely in unittests, but avoid it when possible in\nother code. In particular, think twice before using RTTI in new code. If you\nfind yourself needing to write code that behaves differently based on the\nclass of an object, consider one of the following alternatives to querying the\ntype:\n\nVirtual methods are the preferred way of executing different code paths depending on a specific subclass type. This puts the work within the object itself.\nIf the work belongs outside the object and instead in some processing code, consider a double-dispatch solution, such as the Visitor design pattern. This allows a facility outside the object itself to determine the type of class using the built-in type system.\n\nWhen the logic of a program guarantees that a given instance of a base class\nis in fact an instance of a particular derived class, then a dynamic_cast\nmay be used freely on the object. Usually one can use a static_cast as an\nalternative in such situations.\nDecision trees based on type are a strong indication that your code is on the\nwrong track.\nif (typeid(*data) == typeid(D1)) {\n  ...\n} else if (typeid(*data) == typeid(D2)) {\n  ...\n} else if (typeid(*data) == typeid(D3)) {\n...\nCode such as this usually breaks when additional subclasses are added to the\nclass hierarchy. Moreover, when properties of a subclass change, it is\ndifficult to find and modify all the affected code segments.\nDo not hand-implement an RTTI-like workaround. The arguments against RTTI\napply just as much to workarounds like class hierarchies with type tags.\nMoreover, workarounds disguise your true intent.\n1.12.2.7.5. Casting\nUse C++-style casts like static_cast(double_value), or brace\ninitialization for conversion of arithmetic types like int64 y = int64{1} . Do not use cast formats like int y = (int)x or int y = int(x) (but\nthe latter is okay when invoking a constructor of a class type).\nC++ introduced a different cast system from C that distinguishes the types of\ncast operations.\nThe problem with C casts is the ambiguity of the operation; sometimes you are\ndoing a conversion (e.g., (int)3.5) and sometimes you are doing a cast\n(e.g., (int)\"hello\"). Brace initialization and C++ casts can often help\navoid this ambiguity. Additionally, C++ casts are more visible when searching\nfor them.\nThe C++-style cast syntax is verbose and cumbersome.\nDo not use C-style casts. Instead, use these C++-style casts when explicit\ntype conversion is necessary.\n\nUse brace initialization to convert arithmetic types (e.g. int64{x}). This is the safest approach because code will not compile if conversion can result in information loss. The syntax is also concise.\nUse static_cast as the equivalent of a C-style cast that does value conversion, when you need to explicitly up-cast a pointer from a class to its superclass, or when you need to explicitly cast a pointer from a superclass to a subclass. In this last case, you must be sure your object is actually an instance of the subclass.\nUse const_cast to remove the const qualifier (see const).\nUse reinterpret_cast to do unsafe conversions of pointer types to and from integer and other pointer types. Use this only if you know what you are doing and you understand the aliasing issues. \n\nSee the  RTTI section for guidance on the use of dynamic_cast.\n1.12.2.7.6. Streams\nUse streams where appropriate, and stick to \"simple\" usages.\nStreams are the standard I/O abstraction in C++, as exemplified by the\nstandard header . They are widely used in Google code, but only\nfor debug logging and test diagnostics.\nThe  and >> stream operators provide an API for formatted I/O that is\neasily learned, portable, reusable, and extensible. printf, by contrast,\ndoesn't even support string, to say nothing of user-defined types, and is\nvery difficult to use portably. printf also obliges you to choose among the\nnumerous slightly different versions of that function, and navigate the dozens\nof conversion specifiers.\nStreams provide first-class support for console I/O via std::cin,\nstd::cout, std::cerr, and std::clog. The C APIs do as well, but are\nhampered by the need to manually buffer the input.\n\nStream formatting can be configured by mutating the state of the stream. Such mutations are persistent, so the behavior of your code can be affected by the entire previous history of the stream, unless you go out of your way to restore it to a known state every time other code might have touched it. User code can not only modify the built-in state, it can add new state variables and behaviors through a registration system.\nIt is difficult to precisely control stream output, due to the above issues, the way code and data are mixed in streaming code, and the use of operator overloading (which may select a different overload than you expect).\nThe practice of building up output through chains of  operators interferes with internationalization, because it bakes word order into the code, and streams' support for localization is  flawed.\nThe streams API is subtle and complex, so programmers must develop experience with it in order to use it effectively. However, streams were historically banned in Google code (except for logging and diagnostics), so Google engineers tend not to have that experience. Consequently, streams-based code is likely to be less readable and maintainable by Googlers than code based on more familiar abstractions.\nResolving the many overloads of  is extremely costly for the compiler. When used pervasively in a large code base, it can consume as much as 20% of the parsing and semantic analysis time.\n\nUse streams only when they are the best tool for the job. This is typically\nthe case when the I/O is ad-hoc, local, human-readable, and targeted at other\ndevelopers rather than end-users. Be consistent with the code around you, and\nwith the codebase as a whole; if there's an established tool for your problem,\nuse that tool instead.\nAvoid using streams for I/O that faces external users or handles untrusted\ndata. Instead, find and use the appropriate templating libraries to handle\nissues like internationalization, localization, and security hardening.\nIf you do use streams, avoid the stateful parts of the streams API (other than\nerror state), such as imbue(), xalloc(), and register_callback(). Use\nexplicit formatting functions rather than stream manipulators or formatting\nflags to control formatting details such as number base, precision, or\npadding.\nOverload  as a streaming operator for your type only if your type\nrepresents a value, and  writes out a human-readable string representation\nof that value. Avoid exposing implementation details in the output of ; if\nyou need to print object internals for debugging, use named functions instead\n(a method named DebugString() is the most common convention).\n1.12.2.7.7. Preincrement and Predecrement\nUse prefix form (++i) of the increment and decrement operators with\niterators and other template objects.\nWhen a variable is incremented (++i or i++) or decremented (\\--i or\ni--) and the value of the expression is not used, one must decide whether to\npreincrement (decrement) or postincrement (decrement).\nWhen the return value is ignored, the \"pre\" form (++i) is never less\nefficient than the \"post\" form (i++), and is often more efficient. This is\nbecause post-increment (or decrement) requires a copy of i to be made, which\nis the value of the expression. If i is an iterator or other non-scalar\ntype, copying i could be expensive. Since the two types of increment behave\nthe same when the value is ignored, why not just always pre-increment?\nThe tradition developed, in C, of using post-increment when the expression\nvalue is not used, especially in for loops. Some find post-increment easier\nto read, since the \"subject\" (i) precedes the \"verb\" (++), just like in\nEnglish.\nFor simple scalar (non-object) values there is no reason to prefer one form\nand we allow either. For iterators and other template types, use pre-\nincrement.\n1.12.2.7.8. Use of const\nUse const whenever it makes sense. With C++11, constexpr is a better\nchoice for some uses of const.\nDeclared variables and parameters can be preceded by the keyword const to\nindicate the variables are not changed (e.g., const int foo). Class\nfunctions can have the const qualifier to indicate the function does not\nchange the state of the class member variables (e.g., class Foo { int\nBar(char c) const; };).\nEasier for people to understand how variables are being used. Allows the\ncompiler to do better type checking, and, conceivably, generate better code.\nHelps people convince themselves of program correctness because they know the\nfunctions they call are limited in how they can modify your variables. Helps\npeople know what functions are safe to use without locks in multi-threaded\nprograms.\nconst is viral: if you pass a const variable to a function, that function\nmust have const in its prototype (or the variable will need a const_cast).\nThis can be a particular problem when calling library functions.\nconst variables, data members, methods and arguments add a level of compile-\ntime type checking; it is better to detect errors as soon as possible.\nTherefore we strongly recommend that you use const whenever it makes sense\nto do so:\n\nIf a function guarantees that it will not modify an argument passed by reference or by pointer, the corresponding function parameter should be a reference-to-const (const T&) or pointer-to-const (const T*), respectively.\nDeclare methods to be const whenever possible. Accessors should almost always be const. Other methods should be const if they do not modify any data members, do not call any non-const methods, and do not return a non-const pointer or non-const reference to a data member.\nConsider making data members const whenever they do not need to be modified after construction.\n\nThe mutable keyword is allowed but is unsafe when used with threads, so\nthread safety should be carefully considered first.\nWhere to put the const\nSome people favor the form int const *foo to const int* foo. They argue\nthat this is more readable because it's more consistent: it keeps the rule\nthat const always follows the object it's describing. However, this\nconsistency argument doesn't apply in codebases with few deeply-nested pointer\nexpressions since most const expressions have only one const, and it\napplies to the underlying value. In such cases, there's no consistency to\nmaintain. Putting the const first is arguably more readable, since it\nfollows English in putting the \"adjective\" (const) before the \"noun\"\n(int).\nThat said, while we encourage putting const first, we do not require it. But\nbe consistent with the code around you!\n1.12.2.7.9. Use of constexpr\nIn C++11, use constexpr to define true constants or to ensure constant\ninitialization.\nSome variables can be declared constexpr to indicate the variables are true\nconstants, i.e. fixed at compilation/link time. Some functions and\nconstructors can be declared constexpr which enables them to be used in\ndefining a constexpr variable.\nUse of constexpr enables definition of constants with floating-point\nexpressions rather than just literals; definition of constants of user-defined\ntypes; and definition of constants with function calls.\nPrematurely marking something as constexpr may cause migration problems if\nlater on it has to be downgraded. Current restrictions on what is allowed in\nconstexpr functions and constructors may invite obscure workarounds in these\ndefinitions.\nconstexpr definitions enable a more robust specification of the constant\nparts of an interface. Use constexpr to specify true constants and the\nfunctions that support their definitions. Avoid complexifying function\ndefinitions to enable their use with constexpr. Do not use constexpr to\nforce inlining.\n1.12.2.7.10. Integer Types\nOf the built-in C++ integer types, the only one used is int. If a program\nneeds a variable of a different size, use a precise-width integer type from\n, such as int16_t. If your variable represents a value that\ncould ever be greater than or equal to 2^31 (2GiB), use a 64-bit type such as\nint64_t. Keep in mind that even if your value won't ever be too large for an\nint, it may be used in intermediate calculations which may require a larger\ntype. When in doubt, choose a larger type.\nC++ does not specify the sizes of its integer types. Typically people assume\nthat short is 16 bits, int is 32 bits, long is 32 bits and long long\nis 64 bits.\nUniformity of declaration.\nThe sizes of integral types in C++ can vary based on compiler and\narchitecture.\n defines types like int16_t, uint32_t, int64_t, etc. You\nshould always use those in preference to short, unsigned long long and the\nlike, when you need a guarantee on the size of an integer. Of the C integer\ntypes, only int should be used. When appropriate, you are welcome to use\nstandard types like size_t and ptrdiff_t.\nWe use int very often, for integers we know are not going to be too big,\ne.g., loop counters. Use plain old int for such things. You should assume\nthat an int is at least 32 bits, but don't assume that it has more than 32\nbits. If you need a 64-bit integer type, use int64_t or uint64_t.\nFor integers we know can be \"big\", use int64_t.\nYou should not use the unsigned integer types such as uint32_t, unless there\nis a valid reason such as representing a bit pattern rather than a number, or\nyou need defined overflow modulo 2^N. In particular, do not use unsigned types\nto say a number will never be negative. Instead, use assertions for this.\nIf your code is a container that returns a size, be sure to use a type that\nwill accommodate any possible usage of your container. When in doubt, use a\nlarger type rather than a smaller type.\nUse care when converting integer types. Integer conversions and promotions can\ncause non-intuitive behavior.\nOn Unsigned Integers\nSome people, including some textbook authors, recommend using unsigned types\nto represent numbers that are never negative. This is intended as a form of\nself-documentation. However, in C, the advantages of such documentation are\noutweighed by the real bugs it can introduce. Consider:\nfor (unsigned int i = foo.Length()-1; i >= 0; --i) ...\nThis code will never terminate! Sometimes gcc will notice this bug and warn\nyou, but often it will not. Equally bad bugs can occur when comparing signed\nand unsigned variables. Basically, C's type-promotion scheme causes unsigned\ntypes to behave differently than one might expect.\nSo, document that a variable is non-negative using assertions. Don't use an\nunsigned type.\n1.12.2.7.11. 64-bit Portability\nCode should be 64-bit and 32-bit friendly. Bear in mind problems of printing,\ncomparisons, and structure alignment.\n\nprintf() specifiers for some types are not cleanly portable between 32-bit and 64-bit systems. C99 defines some portable format specifiers. Unfortunately, MSVC 7.1 does not understand some of these specifiers and the standard is missing a few, so we have to define our own ugly versions in some cases (in the style of the standard include file inttypes.h):\n// printf macros for size_t, in the style of inttypes.h\n1.12.3. ifdef _LP64\n1.12.4. define __PRIS_PREFIX \"z\"\n1.12.5. else\n1.12.6. define __PRIS_PREFIX\n1.12.7. endif\n// Use these macros after a % in a printf format string\n// to get correct 32/64 bit behavior, like this:\n// size_t size = records.size();\n// printf(\"%\" PRIuS \"\\n\", size);\n1.12.8. define PRIdS __PRIS_PREFIX \"d\"\n1.12.9. define PRIxS __PRIS_PREFIX \"x\"\n1.12.10. define PRIuS __PRIS_PREFIX \"u\"\n1.12.11. define PRIXS __PRIS_PREFIX \"X\"\n1.12.12. define PRIoS __PRIS_PREFIX \"o\"\n\n\nType DO NOT use DO use Notes\nvoid * (or any pointer)\n%lx\n%p\nint64_t\n%qd, %lld\n%\" PRId64 \"\nuint64_t\n%qu, %llu, %llx\n%\" PRIu64 \", %\" PRIx64 \"\nsize_t\n%u\n%\" PRIuS \", %\" PRIxS \"\nC99 specifies %zu\nptrdiff_t\n%d\n%\" PRIdS \"\nC99 specifies %td\nNote that the PRI* macros expand to independent strings which are\nconcatenated by the compiler. Hence if you are using a non-constant format\nstring, you need to insert the value of the macro into the format, rather than\nthe name. Note also that spaces are required around the macro identifier to\nseparate it from the string literal. It is still possible, as usual, to\ninclude length specifiers, etc., after the % when using the PRI* macros.\nSo, e.g. printf(\"x = %30\" PRIuS \"\\n\", x) would expand on 32-bit Linux to\nprintf(\"x = %30\" \"u\" \"\\n\", x), which the compiler will treat as printf(\"x =\n%30u\\n\", x).\n\nRemember that sizeof(void *) != sizeof(int). Use intptr_t if you want a pointer-sized integer.\nYou may need to be careful with structure alignments, particularly for structures being stored on disk. Any class/structure with a int64_t/uint64_t member will by default end up being 8-byte aligned on a 64-bit system. If you have such structures being shared on disk between 32-bit and 64-bit code, you will need to ensure that they are packed the same on both architectures. Most compilers offer a way to alter structure alignment. For gcc, you can use __attribute__((packed)). MSVC offers #pragma pack() and __declspec(align()).\nUse the LL or ULL suffixes as needed to create 64-bit constants. For example:\nint64_t my_value = 0x123456789LL;\nuint64_t my_mask = 3ULL \n\n\nPreprocessor Macros\nAvoid defining macros, especially in headers; prefer inline functions, enums,\nand const variables. Name macros with a project-specific prefix. Do not use\nmacros to define pieces of a C++ API.\nMacros mean that the code you see is not the same as the code the compiler\nsees. This can introduce unexpected behavior, especially since macros have\nglobal scope.\nThe problems introduced by macros are especially severe when they are used to\ndefine pieces of a C++ API, and still more so for public APIs. Every error\nmessage from the compiler when developers incorrectly use that interface now\nmust explain how the macros formed the interface. Refactoring and analysis\ntools have a dramatically harder time updating the interface. As a\nconsequence, we specifically disallow using macros in this way. For example,\navoid patterns like:\nclass WOMBAT_TYPE(Foo) {\n  // ...\n\n public:\n  EXPAND_PUBLIC_WOMBAT_API(Foo)\n\n  EXPAND_WOMBAT_COMPARISONS(Foo, ==, Luckily, macros are not nearly as necessary in C++ as they are in C. Instead\nof using a macro to inline performance-critical code, use an inline function.\nInstead of using a macro to store a constant, use a const variable. Instead\nof using a macro to \"abbreviate\" a long variable name, use a reference.\nInstead of using a macro to conditionally compile code ... well, don't do that\nat all (except, of course, for the #define guards to prevent double\ninclusion of header files). It makes testing much more difficult.\nMacros can do things these other techniques cannot, and you do see them in the\ncodebase, especially in the lower-level libraries. And some of their special\nfeatures (like stringifying, concatenation, and so forth) are not available\nthrough the language proper. But before using a macro, consider carefully\nwhether there's a non-macro way to achieve the same result. If you need to use\na macro to define an interface, contact your project leads to request a waiver\nof this rule.\nThe following usage pattern will avoid many problems with macros; if you use\nmacros, follow it whenever possible:\n\nDon't define macros in a .h file.\n#define macros right before you use them, and #undef them right after.\nDo not just #undef an existing macro before replacing it with your own; instead, pick a name that's likely to be unique.\nTry not to use macros that expand to unbalanced C++ constructs, or at least document that behavior well.\nPrefer not using ## to generate function/class/variable names.\n\nExporting macros from headers (i.e. defining them in a header without\n#undefing them before the end of the header) is extremely strongly\ndiscouraged. If you do export a macro from a header, it must have a globally\nunique name. To achieve this, it must be named with a prefix consisting of\nyour project's namespace name (but upper case).\n0 and nullptr/NULL\nUse 0 for integers, 0.0 for reals, nullptr (or NULL) for pointers, and\n'\\0' for chars.\nUse 0 for integers and 0.0 for reals. This is not controversial.\nFor pointers (address values), there is a choice between 0, NULL, and\nnullptr. For projects that allow C++11 features, use nullptr. For C++03\nprojects, we prefer NULL because it looks like a pointer. In fact, some C++\ncompilers provide special definitions of NULL which enable them to give\nuseful warnings, particularly in situations where sizeof(NULL) is not equal\nto sizeof(0).\nUse '\\0' for chars. This is the correct type and also makes code more\nreadable.\nsizeof\nPrefer sizeof(varname) to sizeof(type).\nUse sizeof(varname) when you take the size of a particular variable.\nsizeof(varname) will update appropriately if someone changes the variable\ntype either now or later. You may use sizeof(type) for code unrelated to any\nparticular variable, such as code that manages an external or internal data\nformat where a variable of an appropriate C++ type is not convenient.\nStruct data;\nmemset(&data, 0, sizeof(data));\n\n\n\nmemset(&data, 0, sizeof(Struct));\n\n\n\nif (raw_size auto\nUse auto to avoid type names that are noisy, obvious, or unimportant - cases\nwhere the type doesn't aid in clarity for the reader. Continue to use manifest\ntype declarations when it helps readability.\n\nC++ type names can be long and cumbersome, especially when they involve templates or namespaces.\nWhen a C++ type name is repeated within a single declaration or a small code region, the repetition may not be aiding readability.\nIt is sometimes safer to let the type be specified by the type of the initialization expression, since that avoids the possibility of unintended copies or type conversions.\n\nSometimes code is clearer when types are manifest, especially when a\nvariable's initialization depends on things that were declared far away. In\nexpressions like:\nauto foo = x.add_foo();\nauto i = y.Find(key);\nit may not be obvious what the resulting types are if the type of y isn't\nvery well known, or if y was declared many lines earlier.\nProgrammers have to understand the difference between auto and const auto&\nor they'll get copies when they didn't mean to.\nIf an auto variable is used as part of an interface, e.g. as a constant in a\nheader, then a programmer might change its type while only intending to change\nits value, leading to a more radical API change than intended.\nauto is permitted when it increases readability, particularly as described\nbelow. Never initialize an auto-typed variable with a braced initializer\nlist.\nSpecific cases where auto is allowed or encouraged:\n\n(Encouraged) For iterators and other long/cluttery type names, particularly when the type is clear from context (calls to find, begin, or end for instance).\n(Allowed) When the type is clear from local context (in the same expression or within a few lines). Initialization of a pointer or smart pointer with calls to new commonly falls into this category, as does use of auto in a range-based loop over a container whose type is spelled out nearby.\n(Allowed) When the type doesn't matter because it isn't being used for anything other than equality comparison.\n(Encouraged) When iterating over a map with a range-based loop (because it is often assumed that the correct type is std::pair whereas it is actually std::pair). This is particularly well paired with local key and value aliases for .first and .second (often const-ref). \nfor (const auto& item : some_map) {\n  const KeyType& key = item.first;\n  const ValType& value = item.second;\n  // The rest of the loop can now just refer to key and value,\n  // a reader can see the types in question, and we've avoided\n  // the too-common case of extra copies in this iteration.\n}\n\n\nBraced Initializer List\nYou may use braced initializer lists.\nIn C++03, aggregate types (arrays and structs with no constructor) could be\ninitialized with braced initializer lists.\nstruct Point { int x; int y; };\nPoint p = {1, 2};\nIn C++11, this syntax was generalized, and any object type can now be created\nwith a braced initializer list, known as a braced-init-list in the C++\ngrammar. Here are a few examples of its use.\n// Vector takes a braced-init-list of elements.\nstd::vector v{\"foo\", \"bar\"};\n\n// Basically the same, ignoring some small technicalities.\n// You may choose to use either form.\nstd::vector v = {\"foo\", \"bar\"};\n\n// Usable with 'new' expressions.\nauto p = new vector{\"foo\", \"bar\"};\n\n// A map can take a list of pairs. Nested braced-init-lists work.\nstd::map m = {{1, \"one\"}, {2, \"2\"}};\n\n// A braced-init-list can be implicitly converted to a return type.\nstd::vector test_function() { return {1, 2, 3}; }\n\n// Iterate over a braced-init-list.\nfor (int i : {-1, -2, -3}) {}\n\n// Call a function using a braced-init-list.\nvoid TestFunction2(std::vector v) {}\nTestFunction2({1, 2, 3});\nA user-defined type can also define a constructor and/or assignment operator\nthat take std::initializer_list, which is automatically created from\nbraced-init-list:\nclass MyType {\n public:\n  // std::initializer_list references the underlying init list.\n  // It should be passed by value.\n  MyType(std::initializer_list init_list) {\n    for (int i : init_list) append(i);\n  }\n  MyType& operator=(std::initializer_list init_list) {\n    clear();\n    for (int i : init_list) append(i);\n  }\n};\nMyType m{2, 3, 5, 7};\nFinally, brace initialization can also call ordinary constructors of data\ntypes, even if they do not have std::initializer_list constructors.\ndouble d{1.23};\n// Calls ordinary constructor as long as MyOtherType has no\n// std::initializer_list constructor.\nclass MyOtherType {\n public:\n  explicit MyOtherType(string);\n  MyOtherType(int, string);\n};\nMyOtherType m = {1, \"b\"};\n// If the constructor is explicit, you can't use the \"= {}\" form.\nMyOtherType m{\"b\"};\nNever assign a braced-init-list to an auto local variable. In the single\nelement case, what this means can be confusing.\nauto d = {1.23};        // d is a std::initializer_list\n\n\n\nauto d = double{1.23};  // Good -- d is a double, not a std::initializer_list.\nSee Braced_Initializer_List_Format for formatting.\nLambda expressions\nUse lambda expressions where appropriate. Prefer explicit captures when the\nlambda will escape the current scope.\nLambda expressions are a concise way of creating anonymous function objects.\nThey're often useful when passing functions as arguments. For example:\nstd::sort(v.begin(), v.end(), [](int x, int y) {\n  return Weight(x) They further allow capturing variables from the enclosing scope either\nexplicitly by name, or implicitly using a default capture. Explicit captures\nrequire each variable to be listed, as either a value or reference capture:\nint weight = 3;\nint sum = 0;\n// Captures `weight` by value and `sum` by reference.\nstd::for_each(v.begin(), v.end(), [weight, &sum](int x) {\n  sum += weight * x;\n});\nDefault captures implicitly capture any variable referenced in the lambda\nbody, including this if any members are used:\nconst std::vector lookup_table = ...;\nstd::vector indices = ...;\n// Captures `lookup_table` by reference, sorts `indices` by the value\n// of the associated element in `lookup_table`.\nstd::sort(indices.begin(), indices.end(), [&](int a, int b) {\n  return lookup_table[a] Lambdas were introduced in C++11 along with a set of utilities for working\nwith function objects, such as the polymorphic wrapper std::function.\n\nLambdas are much more concise than other ways of defining function objects to be passed to STL algorithms, which can be a readability improvement.\nAppropriate use of default captures can remove redundancy and highlight important exceptions from the default.\nLambdas, std::function, and std::bind can be used in combination as a general purpose callback mechanism; they make it easy to write functions that take bound functions as arguments.\n\nVariable capture in lambdas can be a source of dangling-pointer bugs, particularly if a lambda escapes the current scope.\n\nDefault captures by value can be misleading because they do not prevent dangling-pointer bugs. Capturing a pointer by value doesn't cause a deep copy, so it often has the same lifetime issues as capture by reference. This is especially confusing when capturing 'this' by value, since the use of 'this' is often implicit.\nIt's possible for use of lambdas to get out of hand; very long nested anonymous functions can make code harder to understand.\n\nUse lambda expressions where appropriate, with formatting as described below.\n\nPrefer explicit captures if the lambda may escape the current scope. For example, instead of: \n{\n  Foo foo;\n  ...\n  executor->Schedule([&] { Frobnicate(foo); })\n  ...\n}\n// BAD! The fact that the lambda makes use of a reference to foo and\n// possibly this (if Frobnicate is a member function) may not be\n// apparent on a cursory inspection. If the lambda is invoked after\n// the function returns, that would be bad, because both foo\n// and the enclosing object could have been destroyed.\n\n\nprefer to write:\n    {\n  Foo foo;\n  ...\n  executor->Schedule([&foo] { Frobnicate(foo); })\n  ...\n}\n// BETTER - The compile will fail if `Frobnicate` is a member\n// function, and it's clearer that `foo` is dangerously captured by\n// reference.\n\nUse default capture by reference ([&]) only when the lifetime of the lambda is obviously shorter than any potential captures. \nUse default capture by value ([=]) only as a means of binding a few variables for a short lambda, where the set of captured variables is obvious at a glance. Prefer not to write long or complex lambdas with default capture by value. \nKeep unnamed lambdas short. If a lambda body is more than maybe five lines long, prefer to give the lambda a name, or to use a named function instead of a lambda.\nSpecify the return type of the lambda explicitly if that will make it more obvious to readers, as with [auto](https://google.github.io/styleguide/cppguide.html#auto).\n\nTemplate metaprogramming\nAvoid complicated template programming.\nTemplate metaprogramming refers to a family of techniques that exploit the\nfact that the C++ template instantiation mechanism is Turing complete and can\nbe used to perform arbitrary compile-time computation in the type domain.\nTemplate metaprogramming allows extremely flexible interfaces that are type\nsafe and high performance. Facilities like Google\nTest, std::tuple, std::function,\nand Boost.Spirit would be impossible without it.\nThe techniques used in template metaprogramming are often obscure to anyone\nbut language experts. Code that uses templates in complicated ways is often\nunreadable, and is hard to debug or maintain.\nTemplate metaprogramming often leads to extremely poor compiler time error\nmessages: even if an interface is simple, the complicated implementation\ndetails become visible when the user does something wrong.\nTemplate metaprogramming interferes with large scale refactoring by making the\njob of refactoring tools harder. First, the template code is expanded in\nmultiple contexts, and it's hard to verify that the transformation makes sense\nin all of them. Second, some refactoring tools work with an AST that only\nrepresents the structure of the code after template expansion. It can be\ndifficult to automatically work back to the original source construct that\nneeds to be rewritten.\nTemplate metaprogramming sometimes allows cleaner and easier-to-use interfaces\nthan would be possible without it, but it's also often a temptation to be\noverly clever. It's best used in a small number of low level components where\nthe extra maintenance burden is spread out over a large number of uses.\nThink twice before using template metaprogramming or other complicated\ntemplate techniques; think about whether the average member of your team will\nbe able to understand your code well enough to maintain it after you switch to\nanother project, or whether a non-C++ programmer or someone casually browsing\nthe code base will be able to understand the error messages or trace the flow\nof a function they want to call. If you're using recursive template\ninstantiations or type lists or metafunctions or expression templates, or\nrelying on SFINAE or on the sizeof trick for detecting function overload\nresolution, then there's a good chance you've gone too far.\nIf you use template metaprogramming, you should expect to put considerable\neffort into minimizing and isolating the complexity. You should hide\nmetaprogramming as an implementation detail whenever possible, so that user-\nfacing headers are readable, and you should make sure that tricky code is\nespecially well commented. You should carefully document how the code is used,\nand you should say something about what the \"generated\" code looks like. Pay\nextra attention to the error messages that the compiler emits when users make\nmistakes. The error messages are part of your user interface, and your code\nshould be tweaked as necessary so that the error messages are understandable\nand actionable from a user point of view.\nBoost\nUse only approved libraries from the Boost library collection.\nThe  Boost library collection is a popular\ncollection of peer-reviewed, free, open-source C++ libraries.\nBoost code is generally very high-quality, is widely portable, and fills many\nimportant gaps in the C++ standard library, such as type traits and better\nbinders.\nSome Boost libraries encourage coding practices which can hamper readability,\nsuch as metaprogramming and other advanced template techniques, and an\nexcessively \"functional\" style of programming.\nIn order to maintain a high level of readability for all contributors who\nmight read and maintain code, we only allow an approved subset of Boost\nfeatures. Currently, the following libraries are permitted:\n\n Call Traits from boost/call_traits.hpp\n Compressed Pair from boost/compressed_pair.hpp\n The Boost Graph Library (BGL) from boost/graph, except serialization (adj_list_serialize.hpp) and parallel/distributed algorithms and data structures (boost/graph/parallel/* and boost/graph/distributed/*).\n Property Map from boost/property_map, except parallel/distributed property maps (boost/property_map/parallel/*).\n Iterator from boost/iterator\nThe part of  Polygon that deals with Voronoi diagram construction and doesn't depend on the rest of Polygon: boost/polygon/voronoi_builder.hpp, boost/polygon/voronoi_diagram.hpp, and boost/polygon/voronoi_geometry_type.hpp\n Bimap from boost/bimap\n Statistical Distributions and Functions from boost/math/distributions\n Special Functions from boost/math/special_functions\n Multi-index from boost/multi_index\n Heap from boost/heap\nThe flat containers from Container: boost/container/flat_map, and boost/container/flat_set\nIntrusive from boost/intrusive.\nThe boost/sort library.\nPreprocessor from boost/preprocessor.\n\nWe are actively considering adding other Boost features to the list, so this\nlist may be expanded in the future.\nThe following libraries are permitted, but their use is discouraged because\nthey've been superseded by standard libraries in C++11:\n\n Array from boost/array.hpp: use  std::array instead.\n Pointer Container from boost/ptr_container: use containers of  std::unique_ptr instead.\n\nstd::hash\nDo not define specializations of std::hash.\nstd::hash is the function object that the C++11 hash containers use to\nhash keys of type T, unless the user explicitly specifies a different hash\nfunction. For example, std::unordered_map is a hash map that\nuses std::hash to hash its keys, whereas std::unordered_map uses MyIntHash.\nstd::hash is defined for all integral, floating-point, pointer, and enum\ntypes, as well as some standard library types such as string and\nunique_ptr. Users can enable it to work for their own types by defining\nspecializations of it for those types.\nstd::hash is easy to use, and simplifies the code since you don't have to\nname it explicitly. Specializing std::hash is the standard way of specifying\nhow to hash a type, so it's what outside resources will teach, and what new\nengineers will expect.\nstd::hash is hard to specialize. It requires a lot of boilerplate code, and\nmore importantly, it combines responsibility for identifying the hash inputs\nwith responsibility for executing the hashing algorithm itself. The type\nauthor has to be responsible for the former, but the latter requires expertise\nthat a type author usually doesn't have, and shouldn't need. The stakes here\nare high because low-quality hash functions can be security vulnerabilities,\ndue to the emergence of  hash flooding\nattacks.\nEven for experts, std::hash specializations are inordinately difficult to\nimplement correctly for compound types, because the implementation cannot\nrecursively call std::hash on data members. High-quality hash algorithms\nmaintain large amounts of internal state, and reducing that state to the\nsize_t bytes that std::hash returns is usually the slowest part of the\ncomputation, so it should not be done more than once.\nDue to exactly that issue, std::hash does not work with std::pair or\nstd::tuple, and the language does not allow us to extend it to support them.\nYou can use std::hash with the types that it supports \"out of the box\", but\ndo not specialize it to support additional types. If you need a hash table\nwith a key type that std::hash does not support, consider using legacy hash\ncontainers (e.g. hash_map) for now; they use a different default hasher,\nwhich is unaffected by this prohibition.\nIf you want to use the standard hash containers anyway, you will need to\nspecify a custom hasher for the key type, e.g.\nstd::unordered_map my_map;\nConsult with the type's owners to see if there is an existing hasher that you\ncan use; otherwise work with them to provide one, or roll your own.\nWe are planning to provide a hash function that can work with any type, using\na new customization mechanism that doesn't have the drawbacks of std::hash.\nC++11\nUse libraries and language extensions from C++11 when appropriate. Consider\nportability to other environments before using C++11 features in your project.\nC++11 contains  significant changes\nboth to the language and libraries.\nC++11 was the official standard until august 2014, and is supported by most\nC++ compilers. It standardizes some common C++ extensions that we use already,\nallows shorthands for some operations, and has some performance and safety\nimprovements.\nThe C++11 standard is substantially more complex than its predecessor (1,300\npages versus 800 pages), and is unfamiliar to many developers. The long-term\neffects of some features on code readability and maintenance are unknown. We\ncannot predict when its various features will be implemented uniformly by\ntools that may be of interest, particularly in the case of projects that are\nforced to use older versions of tools.\nAs with Boost, some\nC++11 extensions encourage coding practices that hamper readability—for\nexample by removing checked redundancy (such as type names) that may be\nhelpful to readers, or by encouraging template metaprogramming. Other\nextensions duplicate functionality available through existing mechanisms,\nwhich may lead to confusion and conversion costs.\nC++11 features may be used unless specified otherwise. In addition to what's\ndescribed in the rest of the style guide, the following C++11 features may not\nbe used:\n\nCompile-time rational numbers (), because of concerns that it's tied to a more template-heavy interface style.\nThe  and  headers, because many compilers do not support those features reliably.\nRef-qualifiers on member functions, such as void X::Foo() & or void X::Foo() &&, because of concerns that they're an overly obscure feature.\n\nNonstandard Extensions\nNonstandard extensions to C++ may not be used unless otherwise specified.\nCompilers support various extensions that are not part of standard C++. Such\nextensions include GCC's __attribute__, intrinsic functions such as\n__builtin_prefetch, designated initializers (e.g. Foo f = {.field = 3}),\ninline assembly, __COUNTER__, __PRETTY_FUNCTION__, compound statement\nexpressions (e.g. foo = ({ int x; Bar(&x); x }), variable-length arrays and\nalloca(), and the a?:b syntax.\n\nNonstandard extensions may provide useful features that do not exist in standard C++. For example, some people think that designated initializers are more readable than standard C++ features like constructors.\nImportant performance guidance to the compiler can only be specified using extensions.\n\nNonstandard extensions do not work in all compilers. Use of nonstandard extensions reduces portability of code.\n\nEven if they are supported in all targeted compilers, the extensions are often not well-specified, and there may be subtle behavior differences between compilers.\nNonstandard extensions add to the language features that a reader must know to understand the code.\n\nDo not use nonstandard extensions. You may use portability wrappers that are\nimplemented using nonstandard extensions, so long as those wrappers are\nprovided by a designated project-wide portability header.\nAliases\nPublic aliases are for the benefit of an API's user, and should be clearly\ndocumented.\nThere are several ways to create names that are aliases of other entities:\ntypedef Foo Bar;\nusing Bar = Foo;\nusing other_namespace::Foo;\nLike other declarations, aliases declared in a header file are part of that\nheader's public API unless they're in a function definition, in the private\nportion of a class, or in an explicitly-marked internal namespace. Aliases in\nsuch areas or in .cc files are implementation details (because client code\ncan't refer to them), and are not restricted by this rule.\n\nAliases can improve readability by simplifying a long or complicated name.\nAliases can reduce duplication by naming in one place a type used repeatedly in an API, which might make it easier to change the type later. \n\nWhen placed in a header where client code can refer to them, aliases increase the number of entities in that header's API, increasing its complexity.\n\nClients can easily rely on unintended details of public aliases, making changes difficult.\nIt can be tempting to create a public alias that is only intended for use in the implementation, without considering its impact on the API, or on maintainability.\nAliases can create risk of name collisions\nAliases can reduce readability by giving a familiar construct an unfamiliar name\nType aliases can create an unclear API contract: it is unclear whether the alias is guaranteed to be identical to the type it aliases, to have the same API, or only to be usable in specified narrow ways\n\nDon't put an alias in your public API just to save typing in the\nimplementation; do so only if you intend it to be used by your clients.\nWhen defining a public alias, document the intent of the new name, including\nwhether it is guaranteed to always be the same as the type it's currently\naliased to, or whether a more limited compatibility is intended. This lets the\nuser know whether they can treat the types as substitutable or whether more\nspecific rules must be followed, and can help the implementation retain some\ndegree of freedom to change the alias.\nDon't put namespace aliases in your public API. (See also\nNamespaces).\nFor example, these aliases document how they are intended to be used in client\ncode:\nnamespace a {\n// Used to store field measurements. DataPoint may change from Bar* to some internal type.\n// Client code should treat it as an opaque pointer.\nusing DataPoint = foo::bar::Bar*;\n\n// A set of measurements. Just an alias for user convenience.\nusing TimeSeries = std::unordered_set, DataPointComparator>;\n}  // namespace a\nThese aliases don't document intended use, and half of them aren't meant for\nclient use:\nnamespace a {\n// Bad: none of these say how they should be used.\nusing DataPoint = foo::bar::Bar*;\nusing std::unordered_set;  // Bad: just for local convenience\nusing std::hash;           // Bad: just for local convenience\ntypedef unordered_set, DataPointComparator> TimeSeries;\n}  // namespace a\nHowever, local convenience aliases are fine in function definitions, private\nsections of classes, explicitly marked internal namespaces, and in .cc files:\n// In a .cc file\nusing std::unordered_set;\n1.12.12.1. Naming\nThe most important consistency rules are those that govern naming. The style\nof a name immediately informs us what sort of thing the named entity is: a\ntype, a variable, a function, a constant, a macro, etc., without requiring us\nto search for the declaration of that entity. The pattern-matching engine in\nour brains relies a great deal on these naming rules.\nNaming rules are pretty arbitrary, but we feel that consistency is more\nimportant than individual preferences in this area, so regardless of whether\nyou find them sensible or not, the rules are the rules.\n1.12.12.1.1. General Naming Rules\nNames should be descriptive; avoid abbreviation.\nGive as descriptive a name as possible, within reason. Do not worry about\nsaving horizontal space as it is far more important to make your code\nimmediately understandable by a new reader. Do not use abbreviations that are\nambiguous or unfamiliar to readers outside your project, and do not abbreviate\nby deleting letters within a word.\nint price_count_reader;    // No abbreviation.\nint num_errors;            // \"num\" is a widespread convention.\nint num_dns_connections;   // Most people know what \"DNS\" stands for.\n\n\n\nint n;                     // Meaningless.\nint nerr;                  // Ambiguous abbreviation.\nint n_comp_conns;          // Ambiguous abbreviation.\nint wgc_connections;       // Only your group knows what this stands for.\nint pc_reader;             // Lots of things can be abbreviated \"pc\".\nint cstmr_id;              // Deletes internal letters.\nNote that certain universally-known abbreviations are OK, such as i for an\niteration variable and T for a template parameter.\nTemplate parameters should follow the naming style for their category: type\ntemplate parameters should follow the rules for type\nnames, and non-\ntype template parameters should follow the rules for  variable\nnames.\n1.12.12.1.2. File Names\nFilenames should be all lowercase and can include underscores (_) or dashes\n(-). Follow the convention that your project uses. If there is no consistent\nlocal pattern to follow, prefer \"_\".\nExamples of acceptable file names:\n\nmy_useful_class.cc\nmy-useful-class.cc\nmyusefulclass.cc\nmyusefulclass_test.cc // _unittest and _regtest are deprecated.\n\nC++ files should end in .cc and header files should end in .h. Files that\nrely on being textually included at specific points should end in .inc (see\nalso the section on self-contained headers).\nDo not use filenames that already exist in /usr/include, such as db.h.\nIn general, make your filenames very specific. For example, use\nhttp_server_logs.h rather than logs.h. A very common case is to have a\npair of files called, e.g., foo_bar.h and foo_bar.cc, defining a class\ncalled FooBar.\nInline functions must be in a .h file. If your inline functions are very\nshort, they should go directly into your .h file.\n1.12.12.1.3. Type Names\nType names start with a capital letter and have a capital letter for each new\nword, with no underscores: MyExcitingClass, MyExcitingEnum.\nThe names of all types — classes, structs, type aliases, enums, and type\ntemplate parameters — have the same naming convention. Type names should start\nwith a capital letter and have a capital letter for each new word. No\nunderscores. For example:\n// classes and structs\nclass UrlTable { ...\nclass UrlTableTester { ...\nstruct UrlTableProperties { ...\n\n// typedefs\ntypedef hash_map PropertiesMap;\n\n// using aliases\nusing PropertiesMap = hash_map;\n\n// enums\nenum UrlTableErrors { ...\n1.12.12.1.4. Variable Names\nThe names of variables (including function parameters) and data members are\nall lowercase, with underscores between words. Data members of classes (but\nnot structs) additionally have trailing underscores. For instance:\na_local_variable, a_struct_data_member, a_class_data_member_.\nCommon Variable names\nFor example:\nstring table_name;  // OK - uses underscore.\nstring tablename;   // OK - all lowercase.\n\n\n\nstring tableName;   // Bad - mixed case.\nClass Data Members\nData members of classes, both static and non-static, are named like ordinary\nnonmember variables, but with a trailing underscore.\nclass TableInfo {\n  ...\n private:\n  string table_name_;  // OK - underscore at end.\n  string tablename_;   // OK.\n  static Pool* pool_;  // OK.\n};\nStruct Data Members\nData members of structs, both static and non-static, are named like ordinary\nnonmember variables. They do not have the trailing underscores that data\nmembers in classes have.\nstruct UrlTableProperties {\n  string name;\n  int num_entries;\n  static Pool* pool;\n};\nSee Structs vs. Classes for a discussion of when to use a struct versus a class.\n1.12.12.1.5. Constant Names\nVariables declared constexpr or const, and whose value is fixed for the\nduration of the program, are named with a leading \"k\" followed by mixed case.\nFor example:\nconst int kDaysInAWeek = 7;\nAll such variables with static storage duration (i.e. statics and globals, see\n[ Storage Duration](http://en.cppreference.com/w/cpp/language/storage_duration\n1.12.13. Storage_duration) for details) should be named this way. This convention is\noptional for variables of other storage classes, e.g. automatic variables,\notherwise the usual variable naming rules apply.\nFunction Names\nRegular functions have mixed case; accessors and mutators may be named like\nvariables.\nOrdinarily, functions should start with a capital letter and have a capital\nletter for each new word (a.k.a. \"Camel\nCase\" or \"Pascal case\"). Such names\nshould not have underscores. Prefer to capitalize acronyms as single words\n(i.e. StartRpc(), not StartRPC()).\nAddTableEntry()\nDeleteUrl()\nOpenFileOrDie()\n(The same naming rule applies to class- and namespace-scope constants that are\nexposed as part of an API and that are intended to look like functions,\nbecause the fact that they're objects rather than functions is an unimportant\nimplementation detail.)\nAccessors and mutators (get and set functions) may be named like variables.\nThese often correspond to actual member variables, but this is not required.\nFor example, int count() and void set_count(int count).\nNamespace Names\nNamespace names are all lower-case. Top-level namespace names are based on the\nproject name . Avoid collisions between nested namespaces and well-known top-\nlevel namespaces.\nThe name of a top-level namespace should usually be the name of the project or\nteam whose code is contained in that namespace. The code in that namespace\nshould usually be in a directory whose basename matches the namespace name (or\nsubdirectories thereof).\nKeep in mind that the rule against abbreviated\nnames\napplies to namespaces just as much as variable names. Code inside the\nnamespace seldom needs to mention the namespace name, so there's usually no\nparticular need for abbreviation anyway.\nAvoid nested namespaces that match well-known top-level namespaces. Collisions\nbetween namespace names can lead to surprising build breaks because of name\nlookup rules. In particular, do not create any nested std namespaces. Prefer\nunique project identifiers (websearch::index, websearch::index_util) over\ncollision-prone names like websearch::util.\nFor internal namespaces, be wary of other code being added to the same\ninternal namespace causing a collision (internal helpers within a team tend\nto be related and may lead to collisions). In such a situation, using the\nfilename to make a unique internal name is helpful\n(websearch::index::frobber_internal for use in frobber.h)\nEnumerator Names\nEnumerators (for both scoped and unscoped enums) should be named either like\nconstants\nor like\nmacros:\neither kEnumName or ENUM_NAME.\nPreferably, the individual enumerators should be named like\nconstants.\nHowever, it is also acceptable to name them like\nmacros. The\nenumeration name, UrlTableErrors (and AlternateUrlTableErrors), is a type,\nand therefore mixed case.\nenum UrlTableErrors {\n  kOK = 0,\n  kErrorOutOfMemory,\n  kErrorMalformedInput,\n};\nenum AlternateUrlTableErrors {\n  OK = 0,\n  OUT_OF_MEMORY = 1,\n  MALFORMED_INPUT = 2,\n};\nUntil January 2009, the style was to name enum values like\nmacros. This\ncaused problems with name collisions between enum values and macros. Hence,\nthe change to prefer constant-style naming was put in place. New code should\nprefer constant-style naming if possible. However, there is no reason to\nchange old code to use constant-style names, unless the old names are actually\ncausing a compile-time problem.\nMacro Names\nYou're not really going to  define a\nmacro,\nare you? If you do, they're like this: MY_MACRO_THAT_SCARES_SMALL_CHILDREN.\nPlease see the description of macros; in general macros should not be used.\nHowever, if they are absolutely needed, then they should be named with all\ncapitals and underscores.\n#define ROUND(x) ...\n#define PI_ROUNDED 3.0\nExceptions to Naming Rules\nIf you are naming something that is analogous to an existing C or C++ entity\nthen you can follow the existing naming convention scheme.\nbigopen()\nfunction name, follows form of `open()`\nuint\n`typedef`\nbigpos\n`struct` or `class`, follows form of `pos`\nsparse_hash_map\nSTL-like entity; follows STL naming conventions\nLONGLONG_MAX\na constant, as in `INT_MAX`\n1.12.13.1. Comments\nThough a pain to write, comments are absolutely vital to keeping our code\nreadable. The following rules describe what you should comment and where. But\nremember: while comments are very important, the best code is self-\ndocumenting. Giving sensible names to types and variables is much better than\nusing obscure names that you must then explain through comments.\nWhen writing your comments, write for your audience: the next contributor who\nwill need to understand your code. Be generous — the next one may be you!\n1.12.13.1.1. Comment Style\nUse either the // or /* */ syntax, as long as you are consistent.\nYou can use either the // or the /* */ syntax; however, // is much\nmore common. Be consistent with how you comment and what style you use where.\n1.12.13.1.2. File Comments\nStart each file with license boilerplate.\nFile comments describe the contents of a file. If a file declares, implements,\nor tests exactly one abstraction that is documented by a comment at the point\nof declaration, file comments are not required. All other files must have file\ncomments.\nLegal Notice and Author Line\nEvery file should contain license boilerplate. Choose the appropriate\nboilerplate for the license used by the project (for example, Apache 2.0, BSD,\nLGPL, GPL).\nIf you make significant changes to a file with an author line, consider\ndeleting the author line.\nFile Contents\nIf a .h declares multiple abstractions, the file-level comment should\nbroadly describe the contents of the file, and how the abstractions are\nrelated. A 1 or 2 sentence file-level comment may be sufficient. The detailed\ndocumentation about individual abstractions belongs with those abstractions,\nnot at the file level.\nDo not duplicate comments in both the .h and the .cc. Duplicated comments\ndiverge.\n1.12.13.1.3. Class Comments\nEvery non-obvious class declaration should have an accompanying comment that\ndescribes what it is for and how it should be used.\n// Iterates over the contents of a GargantuanTable.\n// Example:\n//    GargantuanTableIterator* iter = table->NewIterator();\n//    for (iter->Seek(\"foo\"); !iter->done(); iter->Next()) {\n//      process(iter->key(), iter->value());\n//    }\n//    delete iter;\nclass GargantuanTableIterator {\n  ...\n};\nThe class comment should provide the reader with enough information to know\nhow and when to use the class, as well as any additional considerations\nnecessary to correctly use the class. Document the synchronization assumptions\nthe class makes, if any. If an instance of the class can be accessed by\nmultiple threads, take extra care to document the rules and invariants\nsurrounding multithreaded use.\nThe class comment is often a good place for a small example code snippet\ndemonstrating a simple and focused usage of the class.\nWhen sufficiently separated (e.g. .h and .cc files), comments describing\nthe use of the class should go together with its interface definition;\ncomments about the class operation and implementation should accompany the\nimplementation of the class's methods.\n1.12.13.1.4. Function Comments\nDeclaration comments describe use of the function (when it is non-obvious);\ncomments at the definition of a function describe operation.\nFunction Declarations\nAlmost every function declaration should have comments immediately preceding\nit that describe what the function does and how to use it. These comments may\nbe omitted only if the function is simple and obvious (e.g. simple accessors\nfor obvious properties of the class). These comments should be descriptive\n(\"Opens the file\") rather than imperative (\"Open the file\"); the comment\ndescribes the function, it does not tell the function what to do. In general,\nthese comments do not describe how the function performs its task. Instead,\nthat should be left to comments in the function definition.\nTypes of things to mention in comments at the function declaration:\n\nWhat the inputs and outputs are.\nFor class member functions: whether the object remembers reference arguments beyond the duration of the method call, and whether it will free them or not.\nIf the function allocates memory that the caller must free.\nWhether any of the arguments can be a null pointer.\nIf there are any performance implications of how a function is used.\nIf the function is re-entrant. What are its synchronization assumptions?\n\nHere is an example:\n// Returns an iterator for this table.  It is the client's\n// responsibility to delete the iterator when it is done with it,\n// and it must not use the iterator once the GargantuanTable object\n// on which the iterator was created has been deleted.\n//\n// The iterator is initially positioned at the beginning of the table.\n//\n// This method is equivalent to:\n//    Iterator* iter = table->NewIterator();\n//    iter->Seek(\"\");\n//    return iter;\n// If you are going to immediately seek to another place in the\n// returned iterator, it will be faster to use NewIterator()\n// and avoid the extra seek.\nIterator* GetIterator() const;\nHowever, do not be unnecessarily verbose or state the completely obvious.\nNotice below that it is not necessary to say \"returns false otherwise\" because\nthis is implied.\n// Returns true if the table cannot hold any more entries.\nbool IsTableFull();\nWhen documenting function overrides, focus on the specifics of the override\nitself, rather than repeating the comment from the overridden function. In\nmany of these cases, the override needs no additional documentation and thus\nno comment is required.\nWhen commenting constructors and destructors, remember that the person reading\nyour code knows what constructors and destructors are for, so comments that\njust say something like \"destroys this object\" are not useful. Document what\nconstructors do with their arguments (for example, if they take ownership of\npointers), and what cleanup the destructor does. If this is trivial, just skip\nthe comment. It is quite common for destructors not to have a header comment.\nFunction Definitions\nIf there is anything tricky about how a function does its job, the function\ndefinition should have an explanatory comment. For example, in the definition\ncomment you might describe any coding tricks you use, give an overview of the\nsteps you go through, or explain why you chose to implement the function in\nthe way you did rather than using a viable alternative. For instance, you\nmight mention why it must acquire a lock for the first half of the function\nbut why it is not needed for the second half.\nNote you should not just repeat the comments given with the function\ndeclaration, in the .h file or wherever. It's okay to recapitulate briefly\nwhat the function does, but the focus of the comments should be on how it does\nit.\n1.12.13.1.5. Variable Comments\nIn general the actual name of the variable should be descriptive enough to\ngive a good idea of what the variable is used for. In certain cases, more\ncomments are required.\nClass Data Members\nThe purpose of each class data member (also called an instance variable or\nmember variable) must be clear. If there are any invariants (special values,\nrelationships between members, lifetime requirements) not clearly expressed by\nthe type and name, they must be commented. However, if the type and name\nsuffice (int num_events_;), no comment is needed.\nIn particular, add comments to describe the existence and meaning of sentinel\nvalues, such as nullptr or -1, when they are not obvious. For example:\nprivate:\n // Used to bounds-check table accesses. -1 means\n // that we don't yet know how many entries the table has.\n int num_total_entries_;\nGlobal Variables\nAll global variables should have a comment describing what they are, what they\nare used for, and (if unclear) why it needs to be global. For example:\n// The total number of tests cases that we run through in this regression test.\nconst int kNumTestCases = 6;\n1.12.13.1.6. Implementation Comments\nIn your implementation you should have comments in tricky, non-obvious,\ninteresting, or important parts of your code.\nExplanatory Comments\nTricky or complicated code blocks should have comments before them. Example:\n// Divide result by two, taking into account that x\n// contains the carry from the add.\nfor (int i = 0; i size(); i++) {\n  x = (x > 1;\n  x &= 1;\n}\nLine Comments\nAlso, lines that are non-obvious should get a comment at the end of the line.\nThese end-of-line comments should be separated from the code by 2 spaces.\nExample:\n// If we have enough memory, mmap the data portion too.\nmmap_budget = max(0, mmap_budget - index_->length());\nif (mmap_budget >= data_size_ && !MmapData(mmap_chunk_bytes, mlock))\n  return;  // Error already logged.\nNote that there are both comments that describe what the code is doing, and\ncomments that mention that an error has already been logged when the function\nreturns.\nIf you have several comments on subsequent lines, it can often be more\nreadable to line them up:\nDoSomething();                  // Comment here so the comments line up.\nDoSomethingElseThatIsLonger();  // Two spaces between the code and the comment.\n{ // One space before comment when opening a new scope is allowed,\n  // thus the comment lines up with the following comments and code.\n  DoSomethingElse();  // Two spaces before line comments normally.\n}\nstd::vector list{\n                    // Comments in braced lists describe the next element...\n                    \"First item\",\n                    // .. and should be aligned appropriately.\n                    \"Second item\"};\nDoSomething(); /* For trailing block comments, one space is fine. */\nFunction Argument Comments\nWhen the meaning of a function argument is nonobvious, consider one of the\nfollowing remedies:\n\nIf the argument is a literal constant, and the same constant is used in multiple function calls in a way that tacitly assumes they're the same, you should use a named constant to make that constraint explicit, and to guarantee that it holds.\nConsider changing the function signature to replace a bool argument with an enum argument. This will make the argument values self-describing.\nFor functions that have several configuration options, consider defining a single class or struct to hold all the options , and pass an instance of that. This approach has several advantages. Options are referenced by name at the call site, which clarifies their meaning. It also reduces function argument count, which makes function calls easier to read and write. As an added benefit, you don't have to change call sites when you add another option. \nReplace large or complex nested expressions with named variables.\nAs a last resort, use comments to clarify argument meanings at the call site.\nConsider the following example:\n\n// What are these arguments?\nconst DecimalNumber product = CalculateProduct(values, 7, false, nullptr);\nversus:\nProductOptions options;\noptions.set_precision_decimals(7);\noptions.set_use_cache(ProductOptions::kDontUseCache);\nconst DecimalNumber product =\n    CalculateProduct(values, options, /*completion_callback=*/nullptr);\nDon'ts\nDo not state the obvious. In particular, don't literally describe what code\ndoes, unless the behavior is nonobvious to a reader who understands C++ well.\nInstead, provide higher level comments that describe why the code does what\nit does, or make the code self describing.\nCompare this:\n// Find the element in the vector.  To this:\n// Process \"element\" unless it was already processed.\nauto iter = std::find(v.begin(), v.end(), element);\nif (iter != v.end()) {\n  Process(element);\n}\nSelf-describing code doesn't need a comment. The comment from the example\nabove would be obvious:\nif (!IsAlreadyProcessed(element)) {\n  Process(element);\n}\n1.12.13.1.7. Punctuation, Spelling and Grammar![](./Google C++ Style\nGuide_files/link.png)\nPay attention to punctuation, spelling, and grammar; it is easier to read\nwell-written comments than badly written ones.\nComments should be as readable as narrative text, with proper capitalization\nand punctuation. In many cases, complete sentences are more readable than\nsentence fragments. Shorter comments, such as comments at the end of a line of\ncode, can sometimes be less formal, but you should be consistent with your\nstyle.\nAlthough it can be frustrating to have a code reviewer point out that you are\nusing a comma when you should be using a semicolon, it is very important that\nsource code maintain a high level of clarity and readability. Proper\npunctuation, spelling, and grammar help with that goal.\n1.12.13.1.8. TODO Comments\nUse TODO comments for code that is temporary, a short-term solution, or\ngood-enough but not perfect.\nTODOs should include the string TODO in all caps, followed by the name,\ne-mail address, bug ID, or other identifier of the person or issue with the\nbest context about the problem referenced by the TODO. The main purpose is\nto have a consistent TODO that can be searched to find out how to get more\ndetails upon request. A TODO is not a commitment that the person referenced\nwill fix the problem. Thus when you create a TODO with a name, it is almost\nalways your name that is given.\n// TODO(kl@gmail.com): Use a \"*\" here for concatenation operator.\n// TODO(Zeke) change this to use relations.\n// TODO(bug 12345): remove the \"Last visitors\" feature\nIf your TODO is of the form \"At a future date do something\" make sure that\nyou either include a very specific date (\"Fix by November 2005\") or a very\nspecific event (\"Remove this code when all clients can handle XML\nresponses.\").\n1.12.13.1.9. Deprecation Comments\nMark deprecated interface points with DEPRECATED comments.\nYou can mark an interface as deprecated by writing a comment containing the\nword DEPRECATED in all caps. The comment goes either before the declaration\nof the interface or on the same line as the declaration.\nAfter the word DEPRECATED, write your name, e-mail address, or other\nidentifier in parentheses.\nA deprecation comment must include simple, clear directions for people to fix\ntheir callsites. In C++, you can implement a deprecated function as an inline\nfunction that calls the new interface point.\nMarking an interface point DEPRECATED will not magically cause any callsites\nto change. If you want people to actually stop using the deprecated facility,\nyou will have to fix the callsites yourself or recruit a crew to help you.\nNew code should not contain calls to deprecated interface points. Use the new\ninterface point instead. If you cannot understand the directions, find the\nperson who created the deprecation and ask them for help using the new\ninterface point.\n1.12.13.2. Formatting\nCoding style and formatting are pretty arbitrary, but a project is much easier\nto follow if everyone uses the same style. Individuals may not agree with\nevery aspect of the formatting rules, and some of the rules may take some\ngetting used to, but it is important that all project contributors follow the\nstyle rules so that they can all read and understand everyone's code easily.\nTo help you format code correctly, we've created a  settings file for\nemacs.\n1.12.13.2.1. Line Length\nEach line of text in your code should be at most 80 characters long.\nWe recognize that this rule is controversial, but so much existing code\nalready adheres to it, and we feel that consistency is important.\nThose who favor this rule argue that it is rude to force them to resize their\nwindows and there is no need for anything longer. Some folks are used to\nhaving several code windows side-by-side, and thus don't have room to widen\ntheir windows in any case. People set up their work environment assuming a\nparticular maximum window width, and 80 columns has been the traditional\nstandard. Why change it?\nProponents of change argue that a wider line can make code more readable. The\n80-column limit is an hidebound throwback to 1960s mainframes; modern\nequipment has wide screens that can easily show longer lines.\n80 characters is the maximum.\nComment lines can be longer than 80 characters if it is not feasible to split\nthem without harming readability, ease of cut and paste or auto-linking --\ne.g. if a line contains an example command or a literal URL longer than 80\ncharacters.\nA raw-string literal may have content that exceeds 80 characters. Except for\ntest code, such literals should appear near the top of a file.\nAn #include statement with a long path may exceed 80 columns.\nYou needn't be concerned about header\nguards\nthat exceed the maximum length.\n1.12.13.2.2. Non-ASCII Characters\nNon-ASCII characters should be rare, and must use UTF-8 formatting.\nYou shouldn't hard-code user-facing text in source, even English, so use of\nnon-ASCII characters should be rare. However, in certain cases it is\nappropriate to include such words in your code. For example, if your code\nparses data files from foreign sources, it may be appropriate to hard-code the\nnon-ASCII string(s) used in those data files as delimiters. More commonly,\nunittest code (which does not need to be localized) might contain non-ASCII\nstrings. In such cases, you should use UTF-8, since that is an encoding\nunderstood by most tools able to handle more than just ASCII.\nHex encoding is also OK, and encouraged where it enhances readability — for\nexample, \"\\xEF\\xBB\\xBF\", or, even more simply, u8\"\\uFEFF\", is the Unicode\nzero-width no-break space character, which would be invisible if included in\nthe source as straight UTF-8.\nUse the u8 prefix to guarantee that a string literal containing \\uXXXX\nescape sequences is encoded as UTF-8. Do not use it for strings containing\nnon-ASCII characters encoded as UTF-8, because that will produce incorrect\noutput if the compiler does not interpret the source file as UTF-8.\nYou shouldn't use the C++11 char16_t and char32_t character types, since\nthey're for non-UTF-8 text. For similar reasons you also shouldn't use\nwchar_t (unless you're writing code that interacts with the Windows API,\nwhich uses wchar_t extensively).\n1.12.13.2.3. Spaces vs. Tabs\nUse only spaces, and indent 2 spaces at a time.\nWe use spaces for indentation. Do not use tabs in your code. You should set\nyour editor to emit spaces when you hit the tab key.\n1.12.13.2.4. Function Declarations and Definitions![](./Google C++ Style\nGuide_files/link.png)\nReturn type on the same line as function name, parameters on the same line if\nthey fit. Wrap parameter lists which do not fit on a single line as you would\nwrap arguments in a function\ncall.\nFunctions look like this:\nReturnType ClassName::FunctionName(Type par_name1, Type par_name2) {\n  DoSomething();\n  ...\n}\nIf you have too much text to fit on one line:\nReturnType ClassName::ReallyLongFunctionName(Type par_name1, Type par_name2,\n                                             Type par_name3) {\n  DoSomething();\n  ...\n}\nor if you cannot fit even the first parameter:\nReturnType LongClassName::ReallyReallyReallyLongFunctionName(\n    Type par_name1,  // 4 space indent\n    Type par_name2,\n    Type par_name3) {\n  DoSomething();  // 2 space indent\n  ...\n}\nSome points to note:\n\nChoose good parameter names.\nParameter names may be omitted only if the parameter is unused and its purpose is obvious.\nIf you cannot fit the return type and the function name on a single line, break between them.\nIf you break after the return type of a function declaration or definition, do not indent.\nThe open parenthesis is always on the same line as the function name.\nThere is never a space between the function name and the open parenthesis.\nThere is never a space between the parentheses and the parameters.\nThe open curly brace is always on the end of the last line of the function declaration, not the start of the next line.\nThe close curly brace is either on the last line by itself or on the same line as the open curly brace.\nThere should be a space between the close parenthesis and the open curly brace.\nAll parameters should be aligned if possible.\nDefault indentation is 2 spaces.\nWrapped parameters have a 4 space indent.\n\nUnused parameters that are obvious from context may be omitted:\nclass Foo {\n public:\n  Foo(Foo&&);\n  Foo(const Foo&);\n  Foo& operator=(Foo&&);\n  Foo& operator=(const Foo&);\n};\nUnused parameters that might not be obvious should comment out the variable\nname in the function definition:\nclass Shape {\n public:\n  virtual void Rotate(double radians) = 0;\n};\n\nclass Circle : public Shape {\n public:\n  void Rotate(double radians) override;\n};\n\nvoid Circle::Rotate(double /*radians*/) {}\n\n\n\n// Bad - if someone wants to implement later, it's not clear what the\n// variable means.\nvoid Circle::Rotate(double) {}\nAttributes, and macros that expand to attributes, appear at the very beginning\nof the function declaration or definition, before the return type:\nMUST_USE_RESULT bool IsOK();\n1.12.13.2.5. Lambda Expressions\nFormat parameters and bodies as for any other function, and capture lists like\nother comma-separated lists.\nFor by-reference captures, do not leave a space between the ampersand (&) and\nthe variable name.\nint x = 0;\nauto x_plus_n = [&x](int n) -> int { return x + n; }\nShort lambdas may be written inline as function arguments.\nstd::set blacklist = {7, 8, 9};\nstd::vector digits = {3, 9, 1, 8, 4, 7, 1};\ndigits.erase(std::remove_if(digits.begin(), digits.end(), [&blacklist](int i) {\n               return blacklist.find(i) != blacklist.end();\n             }),\n             digits.end());\n1.12.13.2.6. Function Calls\nEither write the call all on a single line, wrap the arguments at the\nparenthesis, or start the arguments on a new line indented by four spaces and\ncontinue at that 4 space indent. In the absence of other considerations, use\nthe minimum number of lines, including placing multiple arguments on each line\nwhere appropriate.\nFunction calls have the following format:\nbool result = DoSomething(argument1, argument2, argument3);\nIf the arguments do not all fit on one line, they should be broken up onto\nmultiple lines, with each subsequent line aligned with the first argument. Do\nnot add spaces after the open paren or before the close paren:\nbool result = DoSomething(averyveryveryverylongargument1,\n                          argument2, argument3);\nArguments may optionally all be placed on subsequent lines with a four space\nindent:\nif (...) {\n  ...\n  ...\n  if (...) {\n    bool result = DoSomething(\n        argument1, argument2,  // 4 space indent\n        argument3, argument4);\n    ...\n  }\nPut multiple arguments on a single line to reduce the number of lines\nnecessary for calling a function unless there is a specific readability\nproblem. Some find that formatting with strictly one argument on each line is\nmore readable and simplifies editing of the arguments. However, we prioritize\nfor the reader over the ease of editing arguments, and most readability\nproblems are better addressed with the following techniques.\nIf having multiple arguments in a single line decreases readability due to the\ncomplexity or confusing nature of the expressions that make up some arguments,\ntry creating variables that capture those arguments in a descriptive name:\nint my_heuristic = scores[x] * y + bases[x];\nbool result = DoSomething(my_heuristic, x, y, z);\nOr put the confusing argument on its own line with an explanatory comment:\nbool result = DoSomething(scores[x] * y + bases[x],  // Score heuristic.\n                          x, y, z);\nIf there is still a case where one argument is significantly more readable on\nits own line, then put it on its own line. The decision should be specific to\nthe argument which is made more readable rather than a general policy.\nSometimes arguments form a structure that is important for readability. In\nthose cases, feel free to format the arguments according to that structure:\n// Transform the widget by a 3x3 matrix.\nmy_widget.Transform(x1, x2, x3,\n                    y1, y2, y3,\n                    z1, z2, z3);\n1.12.13.2.7. Braced Initializer List Format\nFormat a braced initializer list exactly like you would format a function call\nin its place.\nIf the braced list follows a name (e.g. a type or variable name), format as if\nthe {} were the parentheses of a function call with that name. If there is\nno name, assume a zero-length name.\n// Examples of braced init list on a single line.\nreturn {foo, bar};\nfunctioncall({foo, bar});\nstd::pair p{foo, bar};\n\n// When you have to wrap.\nSomeFunction(\n    {\"assume a zero-length name before {\"},\n    some_other_function_parameter);\nSomeType variable{\n    some, other, values,\n    {\"assume a zero-length name before {\"},\n    SomeOtherType{\n        \"Very long string requiring the surrounding breaks.\",\n        some, other values},\n    SomeOtherType{\"Slightly shorter string\",\n                  some, other, values}};\nSomeType variable{\n    \"This is too long to fit all in one line\"};\nMyType m = {  // Here, you could also break before {.\n    superlongvariablename1,\n    superlongvariablename2,\n    {short, interior, list},\n    {interiorwrappinglist,\n     interiorwrappinglist2}};\n1.12.13.2.8. Conditionals\nPrefer no spaces inside parentheses. The if and else keywords belong on\nseparate lines.\nThere are two acceptable formats for a basic conditional statement. One\nincludes spaces between the parentheses and the condition, and one does not.\nThe most common form is without spaces. Either is fine, but be consistent.\nIf you are modifying a file, use the format that is already present. If you\nare writing new code, use the format that the other files in that directory or\nproject use. If in doubt and you have no personal preference, do not add the\nspaces.\nif (condition) {  // no spaces inside parentheses\n  ...  // 2 space indent.\n} else if (...) {  // The else goes on the same line as the closing brace.\n  ...\n} else {\n  ...\n}\nIf you prefer you may add spaces inside the parentheses:\nif ( condition ) {  // spaces inside parentheses - rare\n  ...  // 2 space indent.\n} else {  // The else goes on the same line as the closing brace.\n  ...\n}\nNote that in all cases you must have a space between the if and the open\nparenthesis. You must also have a space between the close parenthesis and the\ncurly brace, if you're using one.\nif(condition) {   // Bad - space missing after IF.\nif (condition){   // Bad - space missing before {.\nif(condition){    // Doubly bad.\n\n\n\nif (condition) {  // Good - proper space after IF and before {.\nShort conditional statements may be written on one line if this enhances\nreadability. You may use this only when the line is brief and the statement\ndoes not use the else clause.\nif (x == kFoo) return new Foo();\nif (x == kBar) return new Bar();\nThis is not allowed when the if statement has an else:\n// Not allowed - IF statement on one line when there is an ELSE clause\nif (x) DoThis();\nelse DoThat();\nIn general, curly braces are not required for single-line statements, but they\nare allowed if you like them; conditional or loop statements with complex\nconditions or statements may be more readable with curly braces. Some projects\nrequire that an if must always always have an accompanying brace.\nif (condition)\n  DoSomething();  // 2 space indent.\n\nif (condition) {\n  DoSomething();  // 2 space indent.\n}\nHowever, if one part of an if-else statement uses curly braces, the other\npart must too:\n// Not allowed - curly on IF but not ELSE\nif (condition) {\n  foo;\n} else\n  bar;\n\n// Not allowed - curly on ELSE but not IF\nif (condition)\n  foo;\nelse {\n  bar;\n}\n\n\n\n// Curly braces around both IF and ELSE required because\n// one of the clauses used braces.\nif (condition) {\n  foo;\n} else {\n  bar;\n}\n1.12.13.2.9. Loops and Switch Statements\nSwitch statements may use braces for blocks. Annotate non-trivial fall-through\nbetween cases. Braces are optional for single-statement loops. Empty loop\nbodies should use empty braces or continue.\ncase blocks in switch statements can have curly braces or not, depending\non your preference. If you do include curly braces they should be placed as\nshown below.\nIf not conditional on an enumerated value, switch statements should always\nhave a default case (in the case of an enumerated value, the compiler will\nwarn you if any values are not handled). If the default case should never\nexecute, simply assert:\nswitch (var) {\n  case 0: {  // 2 space indent\n    ...      // 4 space indent\n    break;\n  }\n  case 1: {\n    ...\n    break;\n  }\n  default: {\n    assert(false);\n  }\n}\nBraces are optional for single-statement loops.\nfor (int i = 0; i Empty loop bodies should use an empty pair of braces or continue, but not a\nsingle semicolon.\nwhile (condition) {\n  // Repeat test until it returns false.\n}\nfor (int i = 0; i 1.12.13.2.10. Pointer and Reference Expressions![](./Google C++ Style\nGuide_files/link.png)\nNo spaces around period or arrow. Pointer operators do not have trailing\nspaces.\nThe following are examples of correctly-formatted pointer and reference\nexpressions:\nx = *p;\np = &x;\nx = r.y;\nx = r->y;\nNote that:\n\nThere are no spaces around the period or arrow when accessing a member.\nPointer operators have no space after the * or &.\n\nWhen declaring a pointer variable or argument, you may place the asterisk\nadjacent to either the type or to the variable name:\n// These are fine, space preceding.\nchar *c;\nconst string &str;\n\n// These are fine, space following.\nchar* c;\nconst string& str;\nIt is allowed (if unusual) to declare multiple variables in the same\ndeclaration, but it is disallowed if any of those have pointer or reference\ndecorations. Such declarations are easily misread.\n// Fine if helpful for readability.\nint x, y;\n\n\n\nint x, *y;  // Disallowed - no & or * in multiple declaration\nchar * c;  // Bad - spaces on both sides of *\nconst string & str;  // Bad - spaces on both sides of &\nYou should do this consistently within a single file, so, when modifying an\nexisting file, use the style in that file.\n1.12.13.2.11. Boolean Expressions\nWhen you have a boolean expression that is longer than the standard line\nlength, be\nconsistent in how you break up the lines.\nIn this example, the logical AND operator is always at the end of the lines:\nif (this_one_thing > this_other_thing &&\n    a_third_thing == a_fourth_thing &&\n    yet_another && last_one) {\n  ...\n}\nNote that when the code wraps in this example, both of the && logical AND\noperators are at the end of the line. This is more common in Google code,\nthough wrapping all operators at the beginning of the line is also allowed.\nFeel free to insert extra parentheses judiciously because they can be very\nhelpful in increasing readability when used appropriately. Also note that you\nshould always use the punctuation operators, such as && and ~, rather than\nthe word operators, such as and and compl.\n1.12.13.2.12. Return Values\nDo not needlessly surround the return expression with parentheses.\nUse parentheses in return expr; only where you would use them in x =\nexpr;.\nreturn result;                  // No parentheses in the simple case.\n// Parentheses OK to make a complex expression more readable.\nreturn (some_long_condition &&\n        another_condition);\n\n\n\nreturn (value);                // You wouldn't write var = (value);\nreturn(result);                // return is not a function!\n1.12.13.2.13. Variable and Array Initialization![](./Google C++ Style\nGuide_files/link.png)\nYour choice of =, (), or {}.\nYou may choose between =, (), and {}; the following are all correct:\nint x = 3;\nint x(3);\nint x{3};\nstring name = \"Some Name\";\nstring name(\"Some Name\");\nstring name{\"Some Name\"};\nBe careful when using a braced initialization list {...} on a type with an\nstd::initializer_list constructor. A nonempty braced-init-list prefers the\nstd::initializer_list constructor whenever possible. Note that empty braces\n{} are special, and will call a default constructor if available. To force\nthe non-std::initializer_list constructor, use parentheses instead of\nbraces.\nstd::vector v(100, 1);  // A vector of 100 1s.\nstd::vector v{100, 1};  // A vector of 100, 1.\nAlso, the brace form prevents narrowing of integral types. This can prevent\nsome types of programming errors.\nint pi(3.14);  // OK -- pi == 3.\nint pi{3.14};  // Compile error: narrowing conversion.\n1.12.13.2.14. Preprocessor Directives\nThe hash mark that starts a preprocessor directive should always be at the\nbeginning of the line.\nEven when preprocessor directives are within the body of indented code, the\ndirectives should start at the beginning of the line.\n// Good - directives at beginning of line\n  if (lopsided_score) {\n#if DISASTER_PENDING      // Correct -- Starts at beginning of line\n    DropEverything();\n# if NOTIFY               // OK but not required -- Spaces after #\n    NotifyClient();\n# endif\n#endif\n    BackToNormal();\n  }\n\n\n\n// Bad - indented directives\n  if (lopsided_score) {\n    #if DISASTER_PENDING  // Wrong!  The \"#if\" should be at beginning of line\n    DropEverything();\n    #endif                // Wrong!  Do not indent \"#endif\"\n    BackToNormal();\n  }\n1.12.13.2.15. Class Format\nSections in public, protected and private order, each indented one\nspace.\nThe basic format for a class definition (lacking the comments, see Class\nComments\nfor a discussion of what comments are needed) is:\nclass MyClass : public OtherClass {\n public:      // Note the 1 space indent!\n  MyClass();  // Regular 2 space indent.\n  explicit MyClass(int var);\n  ~MyClass() {}\n\n  void SomeFunction();\n  void SomeFunctionThatDoesNothing() {\n  }\n\n  void set_some_var(int var) { some_var_ = var; }\n  int some_var() const { return some_var_; }\n\n private:\n  bool SomeInternalFunction();\n\n  int some_var_;\n  int some_other_var_;\n};\nThings to note:\n\nAny base class name should be on the same line as the subclass name, subject to the 80-column limit.\nThe public:, protected:, and private: keywords should be indented one space.\nExcept for the first instance, these keywords should be preceded by a blank line. This rule is optional in small classes.\nDo not leave a blank line after these keywords.\nThe public section should be first, followed by the protected and finally the private section.\nSee Declaration Order for rules on ordering declarations within each of these sections.\n\n1.12.13.2.16. Constructor Initializer Lists\nConstructor initializer lists can be all on one line or with subsequent lines\nindented four spaces.\nThe acceptable formats for initializer lists are:\n// When everything fits on one line:\nMyClass::MyClass(int var) : some_var_(var) {\n  DoSomething();\n}\n\n// If the signature and initializer list are not all on one line,\n// you must wrap before the colon and indent 4 spaces:\nMyClass::MyClass(int var)\n    : some_var_(var), some_other_var_(var + 1) {\n  DoSomething();\n}\n\n// When the list spans multiple lines, put each member on its own line\n// and align them:\nMyClass::MyClass(int var)\n    : some_var_(var),             // 4 space indent\n      some_other_var_(var + 1) {  // lined up\n  DoSomething();\n}\n\n// As with any other code block, the close curly can be on the same\n// line as the open curly, if it fits.\nMyClass::MyClass(int var)\n    : some_var_(var) {}\n1.12.13.2.17. Namespace Formatting\nThe contents of namespaces are not indented.\nNamespaces do\nnot add an extra level of indentation. For example, use:\nnamespace {\n\nvoid foo() {  // Correct.  No extra indentation within namespace.\n  ...\n}\n\n}  // namespace\nDo not indent within a namespace:\nnamespace {\n\n  // Wrong.  Indented when it should not be.\n  void foo() {\n    ...\n  }\n\n}  // namespace\nWhen declaring nested namespaces, put each namespace on its own line.\nnamespace foo {\nnamespace bar {\n1.12.13.2.18. Horizontal Whitespace\nUse of horizontal whitespace depends on location. Never put trailing\nwhitespace at the end of a line.\nGeneral\nvoid f(bool b) {  // Open braces should always have a space before them.\n  ...\nint i = 0;  // Semicolons usually have no space before them.\n// Spaces inside braces for braced-init-list are optional.  If you use them,\n// put them on both sides!\nint x[] = { 0 };\nint x[] = {0};\n\n// Spaces around the colon in inheritance and initializer lists.\nclass Foo : public Bar {\n public:\n  // For inline function implementations, put spaces between the braces\n  // and the implementation itself.\n  Foo(int b) : Bar(), baz_(b) {}  // No spaces inside empty braces.\n  void Reset() { baz_ = 0; }  // Spaces separating braces from implementation.\n  ...\nAdding trailing whitespace can cause extra work for others editing the same\nfile, when they merge, as can removing existing trailing whitespace. So: Don't\nintroduce trailing whitespace. Remove it if you're already changing that line,\nor do it in a separate clean-up operation (preferably when no-one else is\nworking on the file).\nLoops and Conditionals\nif (b) {          // Space after the keyword in conditions and loops.\n} else {          // Spaces around else.\n}\nwhile (test) {}   // There is usually no space inside parentheses.\nswitch (i) {\nfor (int i = 0; i Operators\n// Assignment operators always have spaces around them.\nx = 0;\n\n// Other binary operators usually have spaces around them, but it's\n// OK to remove spaces around factors.  Parentheses should have no\n// internal padding.\nv = w * x + y / z;\nv = w*x + y/z;\nv = w * (x + z);\n\n// No spaces separating unary operators and their arguments.\nx = -5;\n++x;\nif (x && !y)\n  ...\nTemplates and Casts\n// No spaces inside the angle brackets (), before\n// ( in a cast\nstd::vector x;\ny = static_cast(x);\n\n// Spaces between type and pointer are OK, but be consistent.\nstd::vector x;\n1.12.13.2.19. Vertical Whitespace\nMinimize use of vertical whitespace.\nThis is more a principle than a rule: don't use blank lines when you don't\nhave to. In particular, don't put more than one or two blank lines between\nfunctions, resist starting functions with a blank line, don't end functions\nwith a blank line, and be discriminating with your use of blank lines inside\nfunctions.\nThe basic principle is: The more code that fits on one screen, the easier it\nis to follow and understand the control flow of the program. Of course,\nreadability can suffer from code being too dense as well as too spread out, so\nuse your judgement. But in general, minimize use of vertical whitespace.\nSome rules of thumb to help when blank lines may be useful:\n\nBlank lines at the beginning or end of a function very rarely help readability.\nBlank lines inside a chain of if-else blocks may well help readability.\n\n1.12.13.3. Exceptions to the Rules\nThe coding conventions described above are mandatory. However, like all good\nrules, these sometimes have exceptions, which we discuss here.\n1.12.13.3.1. Existing Non-conformant Code\nYou may diverge from the rules when dealing with code that does not conform to\nthis style guide.\nIf you find yourself modifying code that was written to specifications other\nthan those presented by this guide, you may have to diverge from these rules\nin order to stay consistent with the local conventions in that code. If you\nare in doubt about how to do this, ask the original author or the person\ncurrently responsible for the code. Remember that consistency includes local\nconsistency, too.\n1.12.13.3.2. Windows Code\nWindows programmers have developed their own set of coding conventions, mainly\nderived from the conventions in Windows headers and other Microsoft code. We\nwant to make it easy for anyone to understand your code, so we have a single\nset of guidelines for everyone writing C++ on any platform.\nIt is worth reiterating a few of the guidelines that you might forget if you\nare used to the prevalent Windows style:\n\nDo not use Hungarian notation (for example, naming an integer iNum). Use the Google naming conventions, including the .cc extension for source files.\nWindows defines many of its own synonyms for primitive types, such as DWORD, HANDLE, etc. It is perfectly acceptable, and encouraged, that you use these types when calling Windows API functions. Even so, keep as close as you can to the underlying C++ types. For example, use const TCHAR * instead of LPCTSTR.\nWhen compiling with Microsoft Visual C++, set the compiler to warning level 3 or higher, and treat all warnings as errors.\nDo not use #pragma once; instead use the standard Google include guards. The path in the include guards should be relative to the top of your project tree.\nIn fact, do not use any nonstandard extensions, like #pragma and __declspec, unless you absolutely must. Using __declspec(dllimport) and __declspec(dllexport) is allowed; however, you must use them through macros such as DLLIMPORT and DLLEXPORT, so that someone can easily disable the extensions if they share the code.\n\nHowever, there are just a few rules that we occasionally need to break on\nWindows:\n\nNormally we forbid the use of multiple implementation inheritance; however, it is required when using COM and some ATL/WTL classes. You may use multiple implementation inheritance to implement COM or ATL/WTL classes and interfaces.\nAlthough you should not use exceptions in your own code, they are used extensively in the ATL and some STLs, including the one that comes with Visual C++. When using the ATL, you should define _ATL_NO_EXCEPTIONS to disable exceptions. You should investigate whether you can also disable exceptions in your STL, but if not, it is OK to turn on exceptions in the compiler. (Note that this is only to get the STL to compile. You should still not write exception handling code yourself.)\nThe usual way of working with precompiled headers is to include a header file at the top of each source file, typically with a name like StdAfx.h or precompile.h. To make your code easier to share with other projects, avoid including this file explicitly (except in precompile.cc), and use the /FI compiler option to include the file automatically.\nResource headers, which are usually named resource.h and contain only macros, do not need to conform to these style guidelines.\n\n1.12.13.4. Parting Words\nUse common sense and BE CONSISTENT.\nIf you are editing code, take a few minutes to look at the code around you and\ndetermine its style. If they use spaces around their if clauses, you should,\ntoo. If their comments have little boxes of stars around them, make your\ncomments have little boxes of stars around them too.\nThe point of having style guidelines is to have a common vocabulary of coding\nso people can concentrate on what you are saying, rather than on how you are\nsaying it. We present global style rules here so people know the vocabulary.\nBut local style is also important. If code you add to a file looks drastically\ndifferent from the existing code around it, the discontinuity throws readers\nout of their rhythm when they go to read it. Try to avoid this.\nOK, enough writing about writing code; the code itself is much more\ninteresting. Have fun!\n\nCopyright © walker.zheng 2017 all right reserved，powered by Gitbook最近修改:\n2017-10-16 17:19:50\n"}}}